on:
  push:

name: Build, test, lint
jobs:
  check:
    runs-on: [self-hosted, dind-actions-runner]
    timeout-minutes: 25
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
      NGROK_TOKEN: 26mWhh6GLy8MKLfzKimJtZQa9zH_BzqkD8GYcFu3CvFrTStK
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false
      - name: Check, install and build
        run: |
          \. "$NVM_DIR/nvm.sh" && nvm use

          # Install dependencies
          echo "::group::Install"
          node common/scripts/install-run-rush.js install
          echo "::endgroup::"

          # Build with tests
          # TODO(burdon): Move to separate action (run once per evening).
          node common/scripts/github-actions-folding.js node common/scripts/install-run-rush.js build:test --verbose
      - name: Prepare summary comment
        if: failure()
        run: |
          SUMMARY_COMMENT=$(cat ./failure-summary.log)
          SUMMARY_COMMENT="${SUMMARY_COMMENT//'%'/'%25'}"
          SUMMARY_COMMENT="${SUMMARY_COMMENT//$'\n'/'%0A'}"
          SUMMARY_COMMENT="${SUMMARY_COMMENT//$'\r'/'%0D'}"
          echo "::set-output name=summary_comment::$(echo "$SUMMARY_COMMENT")"
        id: summary_comment
      - name: Add summary comment
        if: failure()
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            <details>
            <summary>Here's the summary of the build failures for ${{ github.sha }}:</summary>
            <p>

            ```
            ${{ steps.summary_comment.outputs.summary_comment }}
            ```

            </p>
            </details>
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default

  check-storybooks:
    runs-on: [self-hosted, dind-actions-runner]
    timeout-minutes: 25
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false
      - name: Check, install and build
        run: |
          \. "$NVM_DIR/nvm.sh" && nvm use

          # Install dependencies
          echo "::group::Install"
          node common/scripts/install-run-rush.js install
          echo "::endgroup::"

          # Quick build
          node common/scripts/github-actions-folding.js node common/scripts/install-run-rush.js build --verbose

          # Test the demos storybooks
          cd packages/demos/kitchen-sink
          pnpm book &
          pnpm test:playwright
          echo "::endgroup::"
      - name: Cleanup
        if: always()
        run: |
          kill $(lsof -t -i:9001) || true
          kill $(lsof -t -i:8080) || true

  # TODO(burdon): Run nightly.
  check-sdk-health:
    runs-on: [self-hosted, dind-actions-runner]
    timeout-minutes: 25
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false
      - name: Check, Install and Test
        run: |
          \. "$NVM_DIR/nvm.sh" && nvm use

          echo "::group::Install"
          node common/scripts/install-run-rush.js install
          echo "::endgroup::"

          # Quick build
          node common/scripts/github-actions-folding.js node common/scripts/install-run-rush.js build --verbose --to @dxos/tutorials-tasks-app

          # Test the Tasks App
          echo "::group::tutorials-tasks-app"
          cd packages/demos/tutorials-tasks-app
          ./scripts/start-and-wait.sh
          pnpm test:playwright
          echo "::endgroup::"
      - name: Cleanup
        if: always()
        run: |
          sudo apt-get install -y lsof
          kill $(lsof -t -i:3000) || true
          kill $(lsof -t -i:8080) || true
