on:
  push:
    branches-ignore:
      - main

name: check
jobs:
  check:
    runs-on: [self-hosted, dind-actions-runner]
    timeout-minutes: 25
    strategy:
      matrix:
        node-version: [16.0, 12.17]
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
    steps:
      - name: Install dependencies for playwright
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-0\
            libx11-xcb1\
            libxcomposite1\
            libxcursor1\
            libxdamage1\
            libxfixes3\
            libxi6\
            libxrender1\
            libfreetype6\
            libfontconfig1\
            libdbus-glib-1-2\
            libdbus-1-3\
            libglib2.0-0\
            libpangocairo-1.0-0\
            libpango-1.0-0\
            libharfbuzz0b\
            libatk1.0-0\
            libcairo-gobject2\
            libcairo2\
            libgdk-pixbuf2.0-0\
            libxcb-shm0\
            libpangoft2-1.0-0\
            libxt6
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check, install and build
        run: |
          \. "$NVM_DIR/nvm.sh" && nvm use ${{ matrix.node-version }}
          npm install -g @microsoft/rush pnpm
          
          # Install dependencies
          echo "::group::Install"
          node common/scripts/install-run-rush.js install
          echo "::endgroup::"
          
          # Build
          node common/scripts/github-actions-folding.js node common/scripts/install-run-rush.js build:test --verbose

          # Build storybooks
          echo "::group::Storybooks"
          cd packages/sdk/demos && pnpm build-storybook --quiet && cd -
          cd packages/sdk/react-ux && pnpm build-storybook --quiet && cd -
          cd packages/sdk/react-client && pnpm build-storybook --quiet && cd -

          # Test the demos storybooks
          cd packages/sdk/demos
          ./scripts/start-and-wait.sh
          pnpm test:playwright
          echo "::endgroup::"
      - name: Cleanup
        run: pkill -f "storybook"
        if: always()
