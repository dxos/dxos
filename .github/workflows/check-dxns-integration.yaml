on:
  push:

name: Integration tests with DXNS
jobs:
  check-integration-dxns:
    runs-on: [self-hosted, dind-actions-runner]
    timeout-minutes: 25
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false
      - name: Check integration with DXNS
        run: |
          \. "$NVM_DIR/nvm.sh" && nvm use 16.0

          # Install dependencies
          echo "::group::Install"
          node common/scripts/install-run-rush.js install
          echo "::endgroup::"

          node common/scripts/github-actions-folding.js node common/scripts/install-run-rush.js build --verbose --to @dxos/registry-client

          docker pull ghcr.io/dxos/substrate-node:dev
          docker run --name dxns-integration-tests -p 9944:9944 ghcr.io/dxos/substrate-node:dev \
            dxns --dev --tmp --rpc-cors all -lsync=warn -lconsole-debug \
            --port 30333 --ws-port 9944 --rpc-port 9933 --rpc-methods Unsafe --ws-external --rpc-external

          cd packages/sdk/registry-client
          rushx test:integration
      - name: Cleanup
        if: always()
        run: |
          docker kill dxns-integration-tests || true
          docker rm dxns-integration-tests || true

  check-storybooks:
    runs-on: [self-hosted, dind-actions-runner]
    timeout-minutes: 25
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false
      - name: Check, install and build
        run: |
          \. "$NVM_DIR/nvm.sh" && nvm use 16.0

          # Install dependencies
          echo "::group::Install"
          node common/scripts/install-run-rush.js install
          echo "::endgroup::"

          # Quick build
          node common/scripts/github-actions-folding.js node common/scripts/install-run-rush.js build --verbose

          # Test the demos storybooks
          cd packages/demos
          pnpm book &
          pnpm test:playwright
          echo "::endgroup::"
      - name: Cleanup
        if: always()
        run: |
          kill $(lsof -t -i:9001) || true
          kill $(lsof -t -i:8080) || true

  # TODO(burdon): Run nightly.
  check-sdk-health:
    runs-on: [self-hosted, dind-actions-runner]
    timeout-minutes: 25
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false
      - name: Check, Install and Test
        run: |
          \. "$NVM_DIR/nvm.sh" && nvm use 16.0

          echo "::group::Install"
          node common/scripts/install-run-rush.js install
          echo "::endgroup::"

          # Quick build
          node common/scripts/github-actions-folding.js node common/scripts/install-run-rush.js build --verbose --to @dxos/tutorials-tasks-app

          # Test the Tasks App
          echo "::group::tutorials-tasks-app"
          cd packages/tutorials/tutorials-tasks-app
          ./scripts/start-and-wait.sh
          pnpm test:playwright
          echo "::endgroup::"
      - name: Cleanup
        if: always()
        run: |
          sudo apt-get install -y lsof
          kill $(lsof -t -i:3000) || true
          kill $(lsof -t -i:8080) || true
