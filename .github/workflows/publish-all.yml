name: Publish
on:
  workflow_dispatch:
    inputs:
      publish_npm:
        description: 'Publish a non-production branch to NPM'
        default: 'false'
  push:
    branches:
      - labs
      - main
      - production
      - staging
      - dev
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: depot-ubuntu-24.04-4
    container:
      image: ghcr.io/dxos/gh-actions:20.19.5
      credentials:
        username: dxos-bot
        password: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: true
      # TODO: read secrets directly from 1p?
      - name: Set environment variables from secrets, env files. Also set DX_ENVIRONMENT and BRANCH
        run: .github/workflows/scripts/populate-env.sh ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} >> $GITHUB_ENV
        env:
          IPDATA_API_KEY: ${{ secrets.IPDATA_API_KEY }}
          IPFS_API_SECRET: ${{ secrets.IPFS_API_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          SENTRY_RELEASE_AUTH_TOKEN: ${{ secrets.SENTRY_RELEASE_AUTH_TOKEN }}
          CLI_SENTRY_DESTINATION: ${{ secrets.CLI_SENTRY_DESTINATION }}
          CLI_SEGMENT_API_KEY: ${{ secrets.CLI_SEGMENT_API_KEY }}
          COMPOSER_APP_SENTRY_DESTINATION: ${{ secrets.COMPOSER_APP_SENTRY_DESTINATION }}
          COMPOSER_APP_SEGMENT_API_KEY: ${{ secrets.COMPOSER_APP_SEGMENT_API_KEY }}
          DX_DISCORD_WEBHOOK_URL: ${{ secrets.DX_DISCORD_WEBHOOK_URL }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          DX_OTEL_ENDPOINT: ${{ secrets.DX_OTEL_ENDPOINT }}
          DX_OTEL_AUTHORIZATION: ${{ secrets.DX_OTEL_AUTHORIZATION }}
          DX_LOKI_ENDPOINT: ${{ secrets.DX_LOKI_ENDPOINT }}
          DX_LOKI_AUTHORIZATION: ${{ secrets.DX_LOKI_AUTHORIZATION }}

      - name: Setup
        uses: ./.github/actions/setup

      - name: Bump Versions
        run: node .github/workflows/scripts/bump-version.js ${{ env.DX_ENVIRONMENT }}
        if: env.BRANCH != 'production'

      - name: Build
        run: moon run :build
        env:
          # NOTE: @dxos/cli is the only thing consuming these at build time, the apps all consume them at bundle.
          DX_SENTRY_DESTINATION: ${{ env.CLI_SENTRY_DESTINATION }}
          DX_TELEMETRY_API_KEY: ${{ env.CLI_SEGMENT_API_KEY }}
          NODE_ENV: production

      # NOTE: Shell must be bundled before npm publish.
      - name: Bundle Shell
        run: moon run shell:bundle
        env:
          NODE_ENV: production

      - name: Publish to NPM
        id: npm-publish
        run: .github/workflows/scripts/publish.sh
        if: env.BRANCH == 'production' || env.BRANCH == 'staging' || github.event.inputs.publish_npm == 'true'

      - name: Publish Apps
        run: .github/workflows/scripts/publish-apps.sh
        env:
          NODE_ENV: production
          NODE_OPTIONS: '--max_old_space_size=12288'

      - name: Bundle Devtools
        run: moon run devtools-extension:bundle
        env:
          NODE_ENV: production
          NODE_OPTIONS: '--max_old_space_size=12288'

      - name: Gather Artifacts for Devtools extension
        run: |
          ROOT_CWD="$(pwd)"
          mkdir artifacts
          pushd packages/devtools/devtools-extension/out/devtools-extension && zip -r $ROOT_CWD/artifacts/devtools.zip . && popd
        if: github.event_name == 'release' && github.event.action == 'published'

      - name: Upload Devtools extension
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: artifacts/
          GITHUB_TOKEN: ${{ secrets.CREATE_PR_TOKEN }}
        if: github.event_name == 'release' && github.event.action == 'published'
