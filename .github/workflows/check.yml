name: Check

on:
  # TODO(wittjosiah): Flaky.
  # push:

  # schedule:
  #   - cron: '0 4 * * 1-5'

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

      e2e:
        type: boolean
        description: 'Run the e2e tests'
        required: false
        default: false

# Needed for nx-set-shas when run on the main branch
permissions:
  actions: read
  contents: read

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  DISCORD_TEST_REPORT_WEBHOOK: ${{ secrets.DISCORD_TEST_REPORT_WEBHOOK }}

# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# https://nx.dev/ci/intro/tutorials/github-actions
jobs:
  test:
    strategy:
      matrix:
        node-version: ['20.12.1']
    runs-on: ghcr.io/dxos/gh-actions:${{ matrix.node-version }}
    steps:
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          detached: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Extract branch
        id: extract_branch
        uses: ./.github/actions/branch

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - uses: nrwl/nx-set-shas@v4
        if: ${{ !env.ACT }}

      # TODO(wittjosiah): Coverage is causing CI failures.
      - name: Test Affected
        if: ${{ steps.extract_branch.outputs.branch != 'main' }}
        run: pnpm exec nx affected -t test

      - name: Test All
        if: ${{ steps.extract_branch.outputs.branch == 'main' }}
        run: pnpm exec nx run-many -t test

      - uses: codecov/codecov-action@v4
        if: ${{ matrix.node-version == '20.12.1' }}
        with:
          directory: ./coverage
          fail_ci_if_error: true
          handle_no_reports_found: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Send test report
        if: ${{ (success() || failure()) && github.event_name == 'schedule' }}
        uses: ./.github/actions/test-report
        with:
          name: '${{ github.job }}-${{ matrix.node-version }}'
          result: ${{ job.status }}

  check:
    runs-on: ghcr.io/dxos/gh-actions:20.12.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Extract branch
        id: extract_branch
        uses: ./.github/actions/branch

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - uses: nrwl/nx-set-shas@v4
        if: ${{ !env.ACT }}

      - name: Check Affected
        if: ${{ steps.extract_branch.outputs.branch != 'main' && !env.ACT }}
        run: pnpm exec nx affected -t lint build

      - name: Check All
        if: ${{ steps.extract_branch.outputs.branch == 'main' || env.ACT }}
        run: pnpm exec nx run-many -t lint build

  e2e:
    runs-on: ghcr.io/dxos/gh-actions:20.12.1
    if: ${{ startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/rc-') || startsWith(github.ref, 'refs/heads/hotfix-') || startsWith(github.ref, 'refs/heads/release-please-') || inputs.e2e }}
    env:
      DX_ENVIRONMENT: ci
      DX_PWA: false
      NODE_OPTIONS: --max-old-space-size=8192
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Extract branch
        id: extract_branch
        uses: ./.github/actions/branch

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - uses: nrwl/nx-set-shas@v4
        if: ${{ !env.ACT }}

      - name: Test Affected
        if: ${{ steps.extract_branch.outputs.branch != 'main' && !env.ACT }}
        run: pnpm exec nx affected -t e2e --browser=all --parallel=1

      - name: Test All
        if: ${{ steps.extract_branch.outputs.branch == 'main' || env.ACT }}
        run: pnpm exec nx run-many -t e2e --browser=all --parallel=1

      - name: Send test report
        if: ${{ (success() || failure()) && github.event_name == 'schedule' }}
        uses: ./.github/actions/test-report
        with:
          name: ${{ github.job }}
          result: ${{ job.status }}

  check-cycles:
    runs-on: ghcr.io/dxos/gh-actions:20.12.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Check for import cycles
        run: pnpm run check-cycles
