name: Check

on:
  push:

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

      e2e:
        type: boolean
        description: 'Run the e2e tests'
        required: false
        default: false

# Needed for nx-set-shas when run on the main branch
permissions:
  actions: read
  contents: read

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# https://nx.dev/ci/intro/tutorials/github-actions
jobs:
  check:
    strategy:
      matrix:
        node-version: ["18.20.1", "20.12.1", "21.7.2"]
        target: ["lint", "build", "test"]
    runs-on: ubuntu-latest
    steps:
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          detached: true

      - name: Continue?
        id: continue
        run: |
          if [[ "${{ matrix.node-version }}" == "20.12.1" || "${{ matrix.target }}" == "test" ]]; then
            echo "proceed=true" >> "$GITHUB_OUTPUT"
          else
            echo "proceed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Install system dependencies
        if: ${{ steps.continue.outputs.proceed == 'true' }}
        run: sudo apt-get install libxtst-dev libpng++-dev

      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ steps.continue.outputs.proceed == 'true' }}
        with:
          lfs: true

      - uses: pnpm/action-setup@v4
        if: ${{ steps.continue.outputs.proceed == 'true' }}

      - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-extra-large-js" --stop-agents-after="test"
        if: ${{ steps.continue.outputs.proceed == 'true' }}

      - uses: actions/setup-node@v3
        if: ${{ steps.continue.outputs.proceed == 'true' }}
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        if: ${{ steps.continue.outputs.proceed == 'true' }}

      - uses: nrwl/nx-set-shas@v4
        if: ${{ steps.continue.outputs.proceed == 'true' }}

      - name: Check
        run: pnpm exec nx affected -t ${{ matrix.target }}
        if: ${{ matrix.node-version == '20.12.1' && matrix.target != 'test' && matrix.target != 'e2e' }}

      - name: Test
        run: pnpm exec nx affected -t test --coverage
        if: ${{ matrix.target == 'test' }}

      - uses: codecov/codecov-action@v4
        if: ${{ matrix.target == 'test' }}
        with:
          directory: ./coverage
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  e2e:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/rc-') || startsWith(github.ref, 'refs/heads/hotfix-') || startsWith(github.ref, 'refs/heads/release-please-') || startsWith(github.ref, 'refs/heads/jdw') }}
    env:
      DX_ENVIRONMENT: ci
      DX_PWA: false
      NODE_OPTIONS: --max-old-space-size=8192
    steps:
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          detached: true

      - name: Install system dependencies
        run: sudo apt-get install libxtst-dev libpng++-dev

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - uses: pnpm/action-setup@v4

      # TODO(wittjosiah): Distribution fails because of bundling memeory usage.
      # - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-extra-large-js" --stop-agents-after="e2e"

      - uses: actions/setup-node@v3
        with:
          node-version: 20.12.1
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4
      
      - name: Bundle
        run: pnpm exec nx affected -t bundle --parallel=2

      - name: Test
        run: pnpm exec nx affected -t e2e --browser=all --parallel=1

  dead-links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Link Checker
        uses: lycheeverse/lychee-action@v1
        with:
          args: --offline ./docs/content/composer ./docs/content/guide
