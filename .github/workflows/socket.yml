name: Socket Publish

on:
  workflow_dispatch:
  push:
    branches:
      - jdw/build-socket

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: macos-latest
    steps:
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          detached: true

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          security find-identity -v -p codesigning

      # - name: Homebrew
      #   run: |
      #     /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      #     brew install automake libtool
      #     brew install cairo giflib git-lfs jpeg libpng librsvg pango pkg-config python-setuptools

      # - name: Checkout
      #   uses: actions/checkout@v4

      # - uses: pnpm/action-setup@v4

      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 20.12.1
      #     cache: 'pnpm'

      # - name: Install dependencies
      #   run: pnpm install --frozen-lockfile

      # - name: Bundle Composer
      #   run: pnpm exec nx bundle composer-app
      #   env:
      #     DX_ENVIRONMENT: production
      #     DX_HOST: true
      #     NODE_OPTIONS: --max-old-space-size=8192

      # - name: Checkout Socket
      #   uses: actions/checkout@v4
      #   with:
      #     repository: socketsupply/socket
      #     ref: master
      #     path: socket

      # - name: Setup Socket
      #   run: npm run relink
      #   working-directory: socket
      #   env:
      #     NO_ANDROID: 1

      # - name: macOS Build
      #   run: ssc build
      #   working-directory: packages/apps/composer-app

      # - uses: actions/upload-artifact@v4
      #   with:
      #     path: packages/apps/composer-app/build
      #     include-hidden-files: true
