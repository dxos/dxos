name: EDGE tests

on:
  # push:
  #   branches:
  #     - main

  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# https://nx.dev/ci/intro/tutorials/github-actions
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
        with:
          detached: true

      - name: Checkout DXOS
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          path: dxos

      - name: Checkout EDGE
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          token: ${{ secrets.CREATE_PR_TOKEN }}
          repository: dxos/edge
          path: edge

      - name: Install system dependencies
        run: sudo apt-get install libxtst-dev libpng++-dev
        shell: bash

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install DXOS dependencies
        working-directory: ./dxos
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Build
        working-directory: ./dxos
        run: pnpm nx run-many --target=build

      - name: Install EDGE dependencies
        working-directory: ./edge
        run: pnpm install --frozen-lockfile
        shell: bash

      - uses: nrwl/nx-set-shas@v4

      - name: Link DXOS packages inside EDGE repo
        working-directory: ./edge
        run: node ./scripts/link-packages.mjs ../dxos --deps --transitive

      - name: Install linked dependencies
        working-directory: ./edge
        # NOTE: --no-frozen-lockfile is required to accept overrides from "Link" step.
        run: pnpm install --no-frozen-lockfile
        shell: bash

      - name: Run tests from EDGE repo
        working-directory: ./edge
        run: pnpm exec nx run-many -t test
