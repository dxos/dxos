//
// Copyright 2021 DXOS.org
//

syntax = "proto3";

import "../halo/keys.proto";
import "./feed.proto";
import "./snapshot.proto";

package dxos.echo.service;

message SubscribeEntitySetRequest {
  PubKey partyKey = 1;
}

message SubscribeEntitySetResponse {
  // TODO(dmaretskyi): This is wrong, the first one should use item snapshot, and deleted should be just list of ids.
  repeated EchoEnvelope added = 1;
  repeated EchoEnvelope deleted = 2;
}

message SubscribeEntityStreamRequest {
  PubKey partyKey = 1;
  string itemId = 2;
}

message SubscribeEntityStreamResponse {
  message Mutation {
    message Metadata {
      PubKey feedKey = 1;
      PubKey memberKey = 2;
      int32 seq = 3;
      TimeframeVector timeframe = 4;
    }

    EchoEnvelope data = 1;
    Metadata meta = 2;
  }

  oneof kind {
    // TODO(dmaretskyi): Move spanshot into EchoEnvelope?
    ItemSnapshot snapshot = 1;
    Mutation mutation = 2;
  }
}

message WriteRequest {
  PubKey partyKey = 1;
  EchoEnvelope mutation = 2;
}

message MutationReceipt {
  PubKey feedKey = 1;
  int32 seq = 2;
}

service DataService {
  rpc SubscribeEntitySet(SubscribeEntitySetRequest) returns (stream SubscribeEntitySetResponse);

  rpc SubscribeEntityStream(SubscribeEntityStreamRequest) returns (stream SubscribeEntityStreamResponse);

  rpc Write(WriteRequest) returns (MutationReceipt);
}
