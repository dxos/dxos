//
// Copyright 2020 DXOS.org
//

syntax = "proto3";

// TODO(burdon): Move Item specific to echo.item?
package dxos.echo.feed;

import "google/protobuf/any.proto";
import "./snapshot.proto";
import "./timeframe.proto";

/**
 * Outer message type decoded by Codec.
 * This is what is written to the feeds.
 */
message FeedMessage {
  TimeframeVector timeframe = 1;

  oneof payload {
    CredentialsMessage halo = 10;
    EchoEnvelope echo = 11;
  }
}

/**
 * A container for dxos.credentials.Message
 */
message CredentialsMessage {
  // TODO(marik-d): Use a protobuf type from credentials.
  bytes data = 1;
}

/**
 * Wrapper for all ECHO messages.
 */
message EchoEnvelope {
  string itemId = 1;

  // Create item.
  ItemGenesis genesis = 10;

  // Item system mutations.
  ItemMutation itemMutation = 11;

  // Model-specific mutations.
  bytes mutation = 12;

  /// Set the model to the provided snapshot.
  ModelSnapshot snapshot = 13;
}

// TODO(burdon): Document (different from parent/child).?
// TODO(dmaretskyi): Refactor so that entity mutation message is oneof between item mutation and link mutation: items have parents, and links have from/to.
message LinkData {
  string source = 1;
  string target = 2;
}

/**
 * Item creation.
 */
// TODO(burdon): EntityGenesis?
message ItemGenesis {
  string itemType = 1;
  string modelType = 2;
  string modelVersion = 3;
  LinkData link = 4;
}

/**
 * Item mutation.
 */
message ItemMutation {
  enum Action {
    NOOP = 0;
    DELETE = 1;
    RESTORE = 2;
  }

  string parentId = 1;  // TODO(burdon): Define Action type?
  Action action = 2;
}
