{"numTotalTestSuites":43,"numPassedTestSuites":43,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":60,"numPassedTests":59,"numFailedTests":0,"numPendingTests":1,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751593784411,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["diff"],"fullName":"diff returns the difference between two sets","status":"passed","title":"returns the difference between two sets","duration":1.4021250000000123,"failureMessages":[],"meta":{}},{"ancestorTitles":["diff"],"fullName":"diff intersection","status":"passed","title":"intersection","duration":0.163833000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy filters distinct elements by a given key","status":"passed","title":"filters distinct elements by a given key","duration":0.2916670000000181,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy handles empty arrays","status":"passed","title":"handles empty arrays","duration":0.07904200000001538,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy works with complex objects","status":"passed","title":"works with complex objects","duration":0.16466600000001108,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy case sensitivity","status":"passed","title":"case sensitivity","duration":0.05820899999997664,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy null and undefined values","status":"passed","title":"null and undefined values","duration":0.13645800000000463,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.30579099999999926,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should partition numbers by sign","status":"passed","title":"should partition numbers by sign","duration":0.22900000000004184,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should maintain the original order within partitions","status":"passed","title":"should maintain the original order within partitions","duration":0.412166999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should handle nullable types","status":"passed","title":"should handle nullable types","duration":0.212333000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should work with complex type guards","status":"passed","title":"should work with complex type guards","duration":0.5628340000000094,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should handle instance checks","status":"passed","title":"should handle instance checks","duration":0.9457080000000246,"failureMessages":[],"meta":{}}],"startTime":1751593784771,"endTime":1751593784776.9458,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/array.test.ts"},{"assertionResults":[{"ancestorTitles":["bitfield"],"fullName":"bitfield set/get","status":"passed","title":"set/get","duration":0.7150420000000395,"failureMessages":[],"meta":{}},{"ancestorTitles":["bitfield"],"fullName":"bitfield count","status":"passed","title":"count","duration":0.11054200000000947,"failureMessages":[],"meta":{}}],"startTime":1751593785066,"endTime":1751593785067.1106,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/bitfield.test.ts"},{"assertionResults":[{"ancestorTitles":["callbacks"],"fullName":"callbacks calls array of callbacks","status":"passed","title":"calls array of callbacks","duration":0.7636669999999981,"failureMessages":[],"meta":{}}],"startTime":1751593785066,"endTime":1751593785066.7637,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/callback.test.ts"},{"assertionResults":[{"ancestorTitles":["util"],"fullName":"util decamelize","status":"passed","title":"decamelize","duration":1.3940000000000055,"failureMessages":[],"meta":{}}],"startTime":1751593784793,"endTime":1751593784794.394,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/case.test.ts"},{"assertionResults":[{"ancestorTitles":["CircularBuffer"],"fullName":"CircularBuffer single element","status":"passed","title":"single element","duration":1.510417000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["CircularBuffer"],"fullName":"CircularBuffer full cycle","status":"passed","title":"full cycle","duration":1.760832999999991,"failureMessages":[],"meta":{}}],"startTime":1751593784794,"endTime":1751593784797.7607,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/circular-buffer.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"ComplexSet","status":"passed","title":"ComplexSet","duration":2.1448330000000624,"failureMessages":[],"meta":{}},{"ancestorTitles":[],"fullName":"ComplexMap","status":"passed","title":"ComplexMap","duration":1.4688750000000255,"failureMessages":[],"meta":{}}],"startTime":1751593785192,"endTime":1751593785196.469,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/complex.test.ts"},{"assertionResults":[{"ancestorTitles":["defer"],"fullName":"defer defer","status":"passed","title":"defer","duration":0.9227089999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["defer"],"fullName":"defer deferAsync","status":"passed","title":"deferAsync","duration":6.180459000000042,"failureMessages":[],"meta":{}}],"startTime":1751593784817,"endTime":1751593784824.1804,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/defer.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"DiContainer","status":"passed","title":"DiContainer","duration":1.6685420000000022,"failureMessages":[],"meta":{}}],"startTime":1751593784813,"endTime":1751593784814.6685,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/di-container.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"DiKey","status":"passed","title":"DiKey","duration":1.852708000000007,"failureMessages":[],"meta":{}}],"startTime":1751593784813,"endTime":1751593784814.8528,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/di-key.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"Hashing","status":"passed","title":"Hashing","duration":1.3445420000000468,"failureMessages":[],"meta":{}}],"startTime":1751593785335,"endTime":1751593785336.3445,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/human-hash.test.ts"},{"assertionResults":[{"ancestorTitles":["joinTables"],"fullName":"joinTables smoke","status":"passed","title":"smoke","duration":1.023458000000005,"failureMessages":[],"meta":{}}],"startTime":1751593784779,"endTime":1751593784780.0234,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/join-tables.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"deepMapValues","status":"passed","title":"deepMapValues","duration":1.0941659999999729,"failureMessages":[],"meta":{}},{"ancestorTitles":[],"fullName":"deepMapValuesAsync","status":"passed","title":"deepMapValuesAsync","duration":0.23791699999998173,"failureMessages":[],"meta":{}}],"startTime":1751593784774,"endTime":1751593784775.238,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/map-values.test.ts"},{"assertionResults":[{"ancestorTitles":["Object order"],"fullName":"Object order infers correct order for nonempty record & order","status":"passed","title":"infers correct order for nonempty record & order","duration":0.9692080000000374,"failureMessages":[],"meta":{}},{"ancestorTitles":["Object order"],"fullName":"Object order infers correct order for nonempty record & empty order","status":"passed","title":"infers correct order for nonempty record & empty order","duration":0.18937499999998408,"failureMessages":[],"meta":{}},{"ancestorTitles":["Object order"],"fullName":"Object order infers correct order for empty record & nonempty order","status":"passed","title":"infers correct order for empty record & nonempty order","duration":0.12950000000000728,"failureMessages":[],"meta":{}},{"ancestorTitles":["Object order"],"fullName":"Object order infers correct record order","status":"passed","title":"infers correct record order","duration":0.10662500000000819,"failureMessages":[],"meta":{}}],"startTime":1751593784781,"endTime":1751593784783.1294,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/order.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"pick","status":"passed","title":"pick","duration":0.960125000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":[],"fullName":"pickBy","status":"passed","title":"pickBy","duration":0.12416600000000244,"failureMessages":[],"meta":{}}],"startTime":1751593784762,"endTime":1751593784763.1243,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/pick.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"knows when running in node","status":"passed","title":"knows when running in node","duration":0.6172920000000204,"failureMessages":[],"meta":{}}],"startTime":1751593785096,"endTime":1751593785096.6172,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/platform.node.test.ts"},{"assertionResults":[{"ancestorTitles":["byPosition"],"fullName":"byPosition should keep items with same position in their original order","status":"passed","title":"should keep items with same position in their original order","duration":0.893792000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should place \"hoist\" items before \"static\" items","status":"passed","title":"should place \"hoist\" items before \"static\" items","duration":0.2849170000000072,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should place \"fallback\" items after \"static\" items","status":"passed","title":"should place \"fallback\" items after \"static\" items","duration":0.0877079999999637,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should treat items without position as \"static\"","status":"passed","title":"should treat items without position as \"static\"","duration":0.1381659999999556,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should correctly sort mixed positions","status":"passed","title":"should correctly sort mixed positions","duration":0.17229199999997036,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.3603750000000332,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should handle single item arrays","status":"passed","title":"should handle single item arrays","duration":0.07779099999999062,"failureMessages":[],"meta":{}}],"startTime":1751593784772,"endTime":1751593784774.3604,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/position.test.ts"},{"assertionResults":[{"ancestorTitles":["Reducers"],"fullName":"Reducers median","status":"passed","title":"median","duration":0.7740830000000187,"failureMessages":[],"meta":{}},{"ancestorTitles":["Reducers"],"fullName":"Reducers numerical values","status":"passed","title":"numerical values","duration":0.4942079999999578,"failureMessages":[],"meta":{}}],"startTime":1751593784812,"endTime":1751593784813.4941,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/reducers.test.ts"},{"assertionResults":[{"ancestorTitles":["safeInstanceOf"],"fullName":"safeInstanceOf different classes with the same tag are compatible","status":"passed","title":"different classes with the same tag are compatible","duration":0.92837499999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["safeInstanceOf"],"fullName":"safeInstanceOf works with undefined","status":"passed","title":"works with undefined","duration":0.14108299999998053,"failureMessages":[],"meta":{}}],"startTime":1751593784779,"endTime":1751593784780.141,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/safe-instanceof.test.ts"},{"assertionResults":[{"ancestorTitles":["Sort"],"fullName":"Sort sortString","status":"passed","title":"sortString","duration":0.9507080000000201,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sort"],"fullName":"Sort sortScalar","status":"passed","title":"sortScalar","duration":0.16650000000004184,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sort"],"fullName":"Sort sortObject","status":"passed","title":"sortObject","duration":0.11087499999996453,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sort"],"fullName":"Sort sortMany","status":"passed","title":"sortMany","duration":0.17400000000003502,"failureMessages":[],"meta":{}}],"startTime":1751593784774,"endTime":1751593784775.174,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/sort.test.ts"},{"assertionResults":[{"ancestorTitles":["Tracer"],"fullName":"Tracer simple time-series","status":"passed","title":"simple time-series","duration":204.93112499999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tracer"],"fullName":"Tracer filter and group","status":"passed","title":"filter and group","duration":0.5530830000000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tracer"],"fullName":"Tracer numerical values","status":"passed","title":"numerical values","duration":110.84620799999993,"failureMessages":[],"meta":{}}],"startTime":1751593784845,"endTime":1751593785160.8462,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/tracer.test.ts"},{"assertionResults":[{"ancestorTitles":["Tree logging"],"fullName":"Tree logging simple","status":"passed","title":"simple","duration":4.158958999999982,"failureMessages":[],"meta":{}}],"startTime":1751593785192,"endTime":1751593785196.159,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/tree.test.ts"},{"assertionResults":[{"ancestorTitles":["types"],"fullName":"types filter","status":"passed","title":"filter","duration":0.947749999999985,"failureMessages":[],"meta":{}}],"startTime":1751593784797,"endTime":1751593784797.9478,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/types.test.ts"},{"assertionResults":[{"ancestorTitles":["uint8array"],"fullName":"uint8array arrayToBuffer","status":"passed","title":"arrayToBuffer","duration":0.6948749999999677,"failureMessages":[],"meta":{}},{"ancestorTitles":["uint8array"],"fullName":"uint8array bufferToArray","status":"passed","title":"bufferToArray","duration":0.2105420000000322,"failureMessages":[],"meta":{}},{"ancestorTitles":["uint8array"],"fullName":"uint8array arrayToString <> stringToArray","status":"passed","title":"arrayToString <> stringToArray","duration":0.3283749999999941,"failureMessages":[],"meta":{}}],"startTime":1751593784766,"endTime":1751593784766.6948,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/uint8array.test.ts"},{"assertionResults":[{"ancestorTitles":["WeakDictionary"],"fullName":"WeakDictionary unref item gets garbage collected","status":"skipped","title":"unref item gets garbage collected","failureMessages":[],"meta":{}}],"startTime":1751593784411,"endTime":1751593784411,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/weak.test.ts"}]}