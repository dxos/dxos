{"numTotalTestSuites":43,"numPassedTestSuites":43,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":60,"numPassedTests":59,"numFailedTests":0,"numPendingTests":1,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751593518494,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["diff"],"fullName":"diff returns the difference between two sets","status":"passed","title":"returns the difference between two sets","duration":1.4021250000000123,"failureMessages":[],"meta":{}},{"ancestorTitles":["diff"],"fullName":"diff intersection","status":"passed","title":"intersection","duration":0.17208399999998392,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy filters distinct elements by a given key","status":"passed","title":"filters distinct elements by a given key","duration":0.3682920000000536,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy handles empty arrays","status":"passed","title":"handles empty arrays","duration":0.18912499999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy works with complex objects","status":"passed","title":"works with complex objects","duration":0.2124160000000188,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy case sensitivity","status":"passed","title":"case sensitivity","duration":0.06862499999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["distinctBy"],"fullName":"distinctBy null and undefined values","status":"passed","title":"null and undefined values","duration":0.06316699999996445,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.33987500000000637,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should partition numbers by sign","status":"passed","title":"should partition numbers by sign","duration":0.22000000000002728,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should maintain the original order within partitions","status":"passed","title":"should maintain the original order within partitions","duration":0.1844159999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should handle nullable types","status":"passed","title":"should handle nullable types","duration":0.18712499999998045,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should work with complex type guards","status":"passed","title":"should work with complex type guards","duration":0.5569160000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["partition"],"fullName":"partition should handle instance checks","status":"passed","title":"should handle instance checks","duration":0.41916700000001583,"failureMessages":[],"meta":{}}],"startTime":1751593519005,"endTime":1751593519009.557,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/array.test.ts"},{"assertionResults":[{"ancestorTitles":["bitfield"],"fullName":"bitfield set/get","status":"passed","title":"set/get","duration":0.9087089999999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["bitfield"],"fullName":"bitfield count","status":"passed","title":"count","duration":0.11504200000001674,"failureMessages":[],"meta":{}}],"startTime":1751593519369,"endTime":1751593519370.115,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/bitfield.test.ts"},{"assertionResults":[{"ancestorTitles":["callbacks"],"fullName":"callbacks calls array of callbacks","status":"passed","title":"calls array of callbacks","duration":0.79587499999991,"failureMessages":[],"meta":{}}],"startTime":1751593519186,"endTime":1751593519186.796,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/callback.test.ts"},{"assertionResults":[{"ancestorTitles":["util"],"fullName":"util decamelize","status":"passed","title":"decamelize","duration":1.226583000000005,"failureMessages":[],"meta":{}}],"startTime":1751593519366,"endTime":1751593519367.2266,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/case.test.ts"},{"assertionResults":[{"ancestorTitles":["CircularBuffer"],"fullName":"CircularBuffer single element","status":"passed","title":"single element","duration":1.6200420000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["CircularBuffer"],"fullName":"CircularBuffer full cycle","status":"passed","title":"full cycle","duration":2.5643329999999196,"failureMessages":[],"meta":{}}],"startTime":1751593519186,"endTime":1751593519189.5645,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/circular-buffer.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"ComplexSet","status":"passed","title":"ComplexSet","duration":2.118165999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":[],"fullName":"ComplexMap","status":"passed","title":"ComplexMap","duration":0.6784169999999676,"failureMessages":[],"meta":{}}],"startTime":1751593519436,"endTime":1751593519439.6785,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/complex.test.ts"},{"assertionResults":[{"ancestorTitles":["defer"],"fullName":"defer defer","status":"passed","title":"defer","duration":0.9698329999999942,"failureMessages":[],"meta":{}},{"ancestorTitles":["defer"],"fullName":"defer deferAsync","status":"passed","title":"deferAsync","duration":6.567457999999988,"failureMessages":[],"meta":{}}],"startTime":1751593519015,"endTime":1751593519027.5674,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/defer.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"DiContainer","status":"passed","title":"DiContainer","duration":1.094583,"failureMessages":[],"meta":{}}],"startTime":1751593519368,"endTime":1751593519369.0945,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/di-container.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"DiKey","status":"passed","title":"DiKey","duration":1.19074999999998,"failureMessages":[],"meta":{}}],"startTime":1751593518999,"endTime":1751593519000.1907,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/di-key.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"Hashing","status":"passed","title":"Hashing","duration":1.1829580000000988,"failureMessages":[],"meta":{}}],"startTime":1751593519560,"endTime":1751593519561.1829,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/human-hash.test.ts"},{"assertionResults":[{"ancestorTitles":["joinTables"],"fullName":"joinTables smoke","status":"passed","title":"smoke","duration":1.1242920000000254,"failureMessages":[],"meta":{}}],"startTime":1751593519002,"endTime":1751593519003.1243,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/join-tables.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"deepMapValues","status":"passed","title":"deepMapValues","duration":2.7717079999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":[],"fullName":"deepMapValuesAsync","status":"passed","title":"deepMapValuesAsync","duration":0.4092090000000326,"failureMessages":[],"meta":{}}],"startTime":1751593518997,"endTime":1751593519001.4092,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/map-values.test.ts"},{"assertionResults":[{"ancestorTitles":["Object order"],"fullName":"Object order infers correct order for nonempty record & order","status":"passed","title":"infers correct order for nonempty record & order","duration":1.0240830000000187,"failureMessages":[],"meta":{}},{"ancestorTitles":["Object order"],"fullName":"Object order infers correct order for nonempty record & empty order","status":"passed","title":"infers correct order for nonempty record & empty order","duration":2.817875000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["Object order"],"fullName":"Object order infers correct order for empty record & nonempty order","status":"passed","title":"infers correct order for empty record & nonempty order","duration":0.5484160000000315,"failureMessages":[],"meta":{}},{"ancestorTitles":["Object order"],"fullName":"Object order infers correct record order","status":"passed","title":"infers correct record order","duration":0.15050000000002228,"failureMessages":[],"meta":{}}],"startTime":1751593519004,"endTime":1751593519009.1504,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/order.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"pick","status":"passed","title":"pick","duration":0.9987499999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":[],"fullName":"pickBy","status":"passed","title":"pickBy","duration":0.127666999999974,"failureMessages":[],"meta":{}}],"startTime":1751593519005,"endTime":1751593519006.1277,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/pick.test.ts"},{"assertionResults":[{"ancestorTitles":[],"fullName":"knows when running in node","status":"passed","title":"knows when running in node","duration":0.8267089999999939,"failureMessages":[],"meta":{}}],"startTime":1751593519362,"endTime":1751593519362.8267,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/platform.node.test.ts"},{"assertionResults":[{"ancestorTitles":["byPosition"],"fullName":"byPosition should keep items with same position in their original order","status":"passed","title":"should keep items with same position in their original order","duration":1.0996670000000108,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should place \"hoist\" items before \"static\" items","status":"passed","title":"should place \"hoist\" items before \"static\" items","duration":0.2863749999999641,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should place \"fallback\" items after \"static\" items","status":"passed","title":"should place \"fallback\" items after \"static\" items","duration":0.09591699999998582,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should treat items without position as \"static\"","status":"passed","title":"should treat items without position as \"static\"","duration":0.16508299999998144,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should correctly sort mixed positions","status":"passed","title":"should correctly sort mixed positions","duration":0.1997920000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.40895799999998417,"failureMessages":[],"meta":{}},{"ancestorTitles":["byPosition"],"fullName":"byPosition should handle single item arrays","status":"passed","title":"should handle single item arrays","duration":0.08958300000000463,"failureMessages":[],"meta":{}}],"startTime":1751593518977,"endTime":1751593518980.0896,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/position.test.ts"},{"assertionResults":[{"ancestorTitles":["Reducers"],"fullName":"Reducers median","status":"passed","title":"median","duration":0.7640420000000177,"failureMessages":[],"meta":{}},{"ancestorTitles":["Reducers"],"fullName":"Reducers numerical values","status":"passed","title":"numerical values","duration":0.48237499999999045,"failureMessages":[],"meta":{}}],"startTime":1751593518995,"endTime":1751593518995.7642,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/reducers.test.ts"},{"assertionResults":[{"ancestorTitles":["safeInstanceOf"],"fullName":"safeInstanceOf different classes with the same tag are compatible","status":"passed","title":"different classes with the same tag are compatible","duration":0.9697910000000434,"failureMessages":[],"meta":{}},{"ancestorTitles":["safeInstanceOf"],"fullName":"safeInstanceOf works with undefined","status":"passed","title":"works with undefined","duration":0.15179200000000037,"failureMessages":[],"meta":{}}],"startTime":1751593518977,"endTime":1751593518978.1519,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/safe-instanceof.test.ts"},{"assertionResults":[{"ancestorTitles":["Sort"],"fullName":"Sort sortString","status":"passed","title":"sortString","duration":1.0003750000000196,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sort"],"fullName":"Sort sortScalar","status":"passed","title":"sortScalar","duration":0.1714579999999728,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sort"],"fullName":"Sort sortObject","status":"passed","title":"sortObject","duration":0.10683299999999463,"failureMessages":[],"meta":{}},{"ancestorTitles":["Sort"],"fullName":"Sort sortMany","status":"passed","title":"sortMany","duration":0.18479100000001836,"failureMessages":[],"meta":{}}],"startTime":1751593518993,"endTime":1751593518995.1848,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/sort.test.ts"},{"assertionResults":[{"ancestorTitles":["Tracer"],"fullName":"Tracer simple time-series","status":"passed","title":"simple time-series","duration":130.42258300000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tracer"],"fullName":"Tracer filter and group","status":"passed","title":"filter and group","duration":0.5769999999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tracer"],"fullName":"Tracer numerical values","status":"passed","title":"numerical values","duration":126.09970799999996,"failureMessages":[],"meta":{}}],"startTime":1751593519179,"endTime":1751593519436.0996,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/tracer.test.ts"},{"assertionResults":[{"ancestorTitles":["Tree logging"],"fullName":"Tree logging simple","status":"passed","title":"simple","duration":4.733624999999961,"failureMessages":[],"meta":{}}],"startTime":1751593519444,"endTime":1751593519448.7336,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/tree.test.ts"},{"assertionResults":[{"ancestorTitles":["types"],"fullName":"types filter","status":"passed","title":"filter","duration":0.9382080000000315,"failureMessages":[],"meta":{}}],"startTime":1751593519182,"endTime":1751593519182.9382,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/types.test.ts"},{"assertionResults":[{"ancestorTitles":["uint8array"],"fullName":"uint8array arrayToBuffer","status":"passed","title":"arrayToBuffer","duration":1.8899170000000254,"failureMessages":[],"meta":{}},{"ancestorTitles":["uint8array"],"fullName":"uint8array bufferToArray","status":"passed","title":"bufferToArray","duration":0.2459580000000301,"failureMessages":[],"meta":{}},{"ancestorTitles":["uint8array"],"fullName":"uint8array arrayToString <> stringToArray","status":"passed","title":"arrayToString <> stringToArray","duration":0.3365000000000009,"failureMessages":[],"meta":{}}],"startTime":1751593518980,"endTime":1751593518982.3364,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/uint8array.test.ts"},{"assertionResults":[{"ancestorTitles":["WeakDictionary"],"fullName":"WeakDictionary unref item gets garbage collected","status":"skipped","title":"unref item gets garbage collected","failureMessages":[],"meta":{}}],"startTime":1751593518494,"endTime":1751593518494,"status":"passed","message":"","name":"/Users/burdon/Code/dxos/dxos/packages/common/util/src/weak.test.ts"}]}