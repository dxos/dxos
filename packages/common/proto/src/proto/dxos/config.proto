//
// Copyright 2021 DXOS.org
//

syntax = "proto3";

package dxos.config;

import "google/protobuf/timestamp.proto";
import "google/protobuf/descriptor.proto";

message Config {
  int32 version = 1;

  //
  // Deploy configuration.
  //

  Module module = 2;

  //
  // Build configuration.
  //

  Build build = 3;

  //
  // Runtime configuration.
  //

  Runtime runtime = 4;
}

message Module {
  // Specific to record type.
  message Record {
    message App {
      repeated string content_type = 1;
    }

    App app = 1;
  }

  // Current build.
  message Build {
    string version = 1;
    string commit_hash = 2;
    google.protobuf.Timestamp timestamp = 3;
  }

  string name = 1;
  string type = 2;
  string version = 3;

  string author = 4;
  string license = 5;
  string description = 6;
  string repository = 7;
  string repository_version = 8;
  repeated string keywords = 9;
  string display_name = 10;
  string npm_url = 11;

  Build build = 101;
  Record record = 102;
}

message Build {
  string command = 1;
  string out = 2;
}

message Runtime {
  message Client {
    /// Whether the client services are local with ClientServiceHost or remote and need to be accessed via ClientServiceProxy. Defaults to AUTOMATIC.
    enum Mode {
      /// Connects to the browser wallet if avialable, otherwise runs services in the local mode.
      AUTOMATIC = 0;

      /// Run services in the local mode.
      LOCAL = 1;

      /// Connect to the browser wallet or to the remote services through the RPC port.
      REMOTE = 2;
    }

    message Storage {
      enum StorageDriver {
        RAM = 0;
        IDB = 1;
        CHROME = 2;
        FIREFOX = 3;
        NODE = 4;
        
        // Only for key storage:

        LEVELJS = 11;
        JSONDOWN = 12;
      }

      bool persistent = 1;
      StorageDriver storage_type = 2;
      StorageDriver key_storage = 3;
      string path = 4;
    }

    string debug = 1 [(env) = "DEBUG"];
    Storage storage = 2;
    bool enable_snapshots = 3;

    /// Milliseconds
    int32 snapshot_interval = 4;

    /// Milliseconds
    int32 invitation_expiration = 5;

    Mode mode = 6;
  }

  message App {
    string org = 1;
    string theme = 2;
    string website = 3;
    string publicUrl = 4 [(env) = "PUBLIC_URL"];
  }

  // CLI configuration
  message CLI {
    message AppServe {
      message Serve {
        string config = 1;
        string login_app = 2;
        string key_phrase = 3;
      }

      Serve serve = 1;
    }

    message Package {
      string package = 1;
      string channel = 2;
      string bin = 3;
      string config = 4;
    }

    string node_path = 1;
    AppServe app = 2;
    Package console = 3;
    Package mdns = 4;
    Package signal = 5;
    string npm_client = 6;
    string channel = 7;
  }

  message Props {
    string title = 1;
  }

  message System {
    string debug = 1;
  }

  //
  // DXOS Services.
  //
  message Services {
    message Kube {

      message Endpoints {
        string logs = 1;
        string services = 2;
        string cert = 3;
      }
    
      Endpoints endpoints = 1;
      string public_url = 2;
    }

    message AppServer {
      string prefix = 1;
      string server = 2;
    }

    message Dxns {
      /// DXNS endpoint.
      string server = 1;

      /**
      * Substrate account URI. This is a secret.
      * KUBEs do not serve this with the config but we store it in profile.yml.
      *
      * TODO(dmaretskyi): Deprecate this and move it to keyring.
      */
      string accountUri = 2;

      /**
       * Public Polkadot Address.
      */
      string address = 3;

      /**
       * Public address of a DXNS Account.
      */
      string account = 4;

      string faucet = 5;
    }

    message Ipfs {
      string server = 1;
      string gateway = 2;
    }

    message Signal {
      string server = 1;
      string api = 2;
      string status = 3;
    }

    message Ice {
      string urls = 1;
      string username = 2;
      string credential = 3;
    }

    message Machine {
      string do_access_token = 1;
      string github_access_token = 2;
      string github_username = 3;
      string dns_domain = 4;
      string npm_access_token = 5;
    }

    message BotFactory {
      string topic = 1;
    }

    Kube kube = 1;
    AppServer app = 2;
    Dxns dxns = 3;
    Ipfs ipfs = 4;
    Signal signal = 5;
    repeated Ice ice = 6;
    Machine machine = 7;
    BotFactory bot = 8;
  }

  Client client = 1;
  App app = 2;
  CLI cli = 3;
  Props props = 4;
  Services services = 5;
  System system = 6;
}
