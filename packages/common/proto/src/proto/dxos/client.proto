//
// Copyright 2021 DXOS.org
//

syntax = "proto3";

import "google/protobuf/empty.proto";
import "halo/keys.proto";

package dxos.client;

//
// SYSTEM
//

service SystemService {
  rpc GetConfig(google.protobuf.Empty) returns (Config);
  rpc Reset (google.protobuf.Empty) returns (google.protobuf.Empty);
}

//
// HALO
//

message Profile {
  required dxos.halo.keys.PubKey publicKey = 1; 
  string username = 2;
}

message SubscribeProfileResponse {
  Profile profile = 1;
}

message CreateProfileRequest {
  string username = 1;
  bytes publicKey = 2;
  bytes secretKey = 3;
}

message RecoverProfileRequest { 
  string seedPhrase = 1;
}

message Invitation {
  // TODO(dmaretskyi): Split into fields.
  string invitationCode = 1;
  string secret = 2;
  bool finished = 3;
  string error = 5;
}

message InvitationProcess {
  string id = 1;
}

message AuthenticateInvitationRequest {
  InvitationProcess process = 1;
  string secret = 2;
}

message AuthenticateInvitationResponse {
  Profile profile = 1;
}

message Contact {
  dxos.halo.keys.PubKey publicKey = 1;
  string displayName = 2;
}

message Contacts {
  repeated Contact contacts = 1;
}

service ProfileService {
  rpc SubscribeProfile (google.protobuf.Empty) returns (stream SubscribeProfileResponse);
  rpc CreateProfile(CreateProfileRequest) returns (Profile);
  rpc RecoverProfile(RecoverProfileRequest) returns (Profile);
    
  rpc CreateInvitation(google.protobuf.Empty) returns (stream Invitation);
  rpc AcceptInvitation(Invitation) returns (InvitationProcess);
  rpc AuthenticateInvitation(AuthenticateInvitationRequest) returns (stream AuthenticateInvitationResponse);
    
  rpc SubscribeContacts(google.protobuf.Empty) returns (stream Contacts);
}

//
// ECHO
//

message Party {
  required dxos.halo.keys.PubKey publicKey = 1;
}

message SubscribePartiesResponse {
  repeated Party parties = 1;
}

message CreateInvitationRequest {
  required dxos.halo.keys.PubKey publicKey = 1;
}

message SubscribeMembersRequest {
  required dxos.halo.keys.PubKey partyKey = 1;
}

message SubscribeMembersResponse {
  // TODO(wittjosiah): Factor out.
  message PartyMember {
    required dxos.halo.keys.PubKey publicKey = 1;
    string displayName = 2;
  }

  repeated PartyMember members = 1;
}

message SetPartyTitleRequest {
  required dxos.halo.keys.PubKey partyKey = 1;
  required string title = 2;
}

message SetPartyPropertyRequest {
  required dxos.halo.keys.PubKey partyKey = 1;
  required string key = 2;
  string value = 3;
}

message GetPartyPropertyRequest {
  required dxos.halo.keys.PubKey partyKey = 1;
  required string key = 2;
}

message GetPartyPropertyResponse {
  string value = 1;
}

service PartyService {
  rpc SubscribeParties (google.protobuf.Empty) returns (stream SubscribePartiesResponse);

  rpc CreateParty(google.protobuf.Empty) returns(Party);

  rpc CreateInvitation(CreateInvitationRequest) returns (Invitation);

  rpc AcceptInvitation(Invitation) returns (InvitationProcess);
  rpc AuthenticateInvitation(AuthenticateInvitationRequest) returns (stream AuthenticateInvitationResponse);

  rpc SubscribeMembers (SubscribeMembersRequest) returns (stream SubscribeMembersResponse);

  rpc SetPartyTitle (SetPartyTitleRequest) returns (google.protobuf.Empty);
  rpc SetPartyProperty (SetPartyPropertyRequest) returns (google.protobuf.Empty);
  rpc GetPartyProperty (GetPartyPropertyRequest) returns (GetPartyPropertyResponse);
}

