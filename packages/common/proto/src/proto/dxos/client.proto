//
// Copyright 2021 DXOS.org
//

syntax = "proto3";

import "google/protobuf/empty.proto";
import "halo/keys.proto";

package dxos.client;

//
// SYSTEM
//

service SystemService {
  rpc GetConfig(google.protobuf.Empty) returns (Config);
  rpc Reset (google.protobuf.Empty) returns (google.protobuf.Empty);
}

//
// HALO
//

message Profile {
  required dxos.halo.keys.PubKey publicKey = 1; 
  string username = 2;
}

message SubscribeProfileResponse {
  Profile profile = 1;
}

message CreateProfileRequest {
  string username = 1;
  bytes publicKey = 2;
  bytes secretKey = 3;
}

message RecoverProfileRequest { 
  string seedPhrase = 1;
}

message Invitation {
  // TODO(dmaretskyi): Split into fields.
  string invitationCode = 1;
  string secret = 2;
  bool finished = 3;
  string error = 5;
}

message InvitationProcess {
  string id = 1;
}

message AuthenticateInvitationRequest {
  InvitationProcess process = 1;
  string secret = 2;
}

message Contact {
  dxos.halo.keys.PubKey publicKey = 1;
  string displayName = 2;
}

message Contacts {
  repeated Contact contacts = 1;
}

service ProfileService {
  rpc SubscribeProfile (google.protobuf.Empty) returns (stream SubscribeProfileResponse);
  rpc CreateProfile(CreateProfileRequest) returns (Profile);
  rpc RecoverProfile(RecoverProfileRequest) returns (Profile);
    
  rpc CreateInvitation(google.protobuf.Empty) returns (stream Invitation);
  rpc AcceptInvitation(Invitation) returns (InvitationProcess);
  rpc AuthenticateInvitation(AuthenticateInvitationRequest) returns (Profile);
    
  rpc SubscribeContacts(google.protobuf.Empty) returns (stream Contacts);
}

//
// ECHO
//

message Party {
  bytes key = 1;
}

message SubscribePartiesResponse {
  repeated Party parties = 1;
}

message CreateInvitationRequest {
  bytes partyKey = 1;
}

service PartyService {
  rpc SubscribeParties (google.protobuf.Empty) returns (stream SubscribePartiesResponse);

  rpc CreateParty(google.protobuf.Empty) returns(Party);

  rpc CreateInvitation(CreateInvitationRequest) returns (Invitation);

  rpc AcceptInvitation(Invitation) returns (InvitationProcess);
  rpc AuthenticateInvitation(AuthenticateInvitationRequest) returns (Profile);
}

message ItemDescriptorSet {
  message Item {
    bytes id = 1;
    string modelDxn = 2;
    string type = 3;
  }
}

// TODO(dmaretskyi): Import those from echo-protocol.
message EchoMutation {}
message MutationReceipt {}
message ItemSnapshot {}

message SubscribeItemStreamResponse {
  oneof kind {
    ItemSnapshot snapshot = 1;
    EchoMutation mutation = 2;
  }
}

message SubscribeItemsRequest {
  bytes partyKey = 1;
}

message SubscribeItemStreamRequest {
  bytes partyKey = 1;
  bytes itemId = 2;
}

message CreateItemRequest {

}

service DataService {
  rpc SubscribeItems(SubscribeItemsRequest) returns (stream ItemDescriptorSet);

  rpc SubscribeItemStream(SubscribeItemStreamRequest) returns (stream SubscribeItemStreamResponse);
   
  rpc MakeMutation(EchoMutation) returns (MutationReceipt);

  rpc CreateItem(CreateItemRequest) returns (ItemDescriptorSet.Item);
}
