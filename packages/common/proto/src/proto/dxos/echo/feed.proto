//
// Copyright 2020 DXOS.org
//

syntax = "proto3";

package dxos.echo.feed;

import "google/protobuf/any.proto";

/**
 * Outer message type decoded by Codec.
 * This is what is written to the feeds.
 */
message FeedMessage {
  CredentialsMessage halo = 1;
  EchoEnvelope echo = 2;
}

/**
 * A container for dxos.credentials.Message
 */
message CredentialsMessage {
  // TODO(marik-d): Use a protobuf type from credentials.
  bytes data = 1;
}

/**
 * Vector timestamp used to order messages.
 */
message TimeframeVector {
  message Frame {
    // TODO(marik-d): Compress using numeric feed indexes.
    // TODO(burdon): Determine if admit DAG can be ordered. Requires party messages to be ordered (by lexical feed key).
    bytes feedKey = 1;
    int32 seq = 3;
  }

  repeated Frame frames = 1;
}

/**
 * Wrapper for all ECHO messages.
 */
message EchoEnvelope {
  string itemId = 1;
  TimeframeVector timeframe = 2;

  // Create item.
  ItemGenesis genesis = 10;

  // Item system mutations.
  ItemMutation itemMutation = 11;

  // Model-specific mutations.
  bytes mutation = 12;
}

/**
 * Item creation.
 */
message ItemGenesis {
  string itemType = 1;
  string modelType = 2;
  string modelVersion = 3;
  LinkData link = 4;
}

message LinkData {
  string source = 1;
  string target = 2;
}

/**
 * Item mutation.
 */
message ItemMutation {
  string parentId = 1;
}
