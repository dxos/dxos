//
// Copyright 2020 DXOS.org
//

syntax = "proto3";

package dxos.echo.object;

//
// Object mutation messages.
// https://developers.google.com/protocol-buffers/docs/proto#updating
// https://developers.google.com/protocol-buffers/docs/proto3#json
//

//
// Generic value.
//
message Value {
  oneof Type {
    bool      null                    = 1;    // Explicit null vs undefined.

    bool      bool                    = 2;
    int32     int                     = 3;
    float     float                   = 4;
    string    string                  = 5;

    string    timestamp               = 10;   // https://en.wikipedia.org/wiki/Unix_time
    string    datetime                = 11;   // https://en.wikipedia.org/wiki/ISO_8601 (e.g., "2019-10-25T18:48:16Z")
    bytes     bytes                   = 12;

    Object    object                  = 20;
    Array     array                   = 21;
  }
}

//
// Ordered collection of values.
//
message Array {
  repeated Value values               = 1;
}

//
// Key x Value tuple.
//
message KeyValue {
  string key                          = 1;
  Value value                         = 2;
}

//
// Object data definition.
//
message Object {
  repeated KeyValue properties        = 1;
}

//
// Query predicate.
//
message Predicate {
  enum Operation {
    OR                                = 0;
    AND                               = 1;
    NOT                               = 2;    // === NOT AND (NAND)

    IN                                = 10;
    EQUALS                            = 11;   // Exact
    GTE                               = 12;
    GT                                = 13;
    LTE                               = 14;
    LT                                = 15;

    PREFIX_MATCH                      = 20;   // String prefix (case insensitive).
    TEXT_MATCH                        = 21;   // Simple prefix word match.
  }

  Operation op                        = 1;
  string key                          = 2;
  Value value                         = 3;
  repeated Predicate predicates       = 4;
}

//
// Query.
//
message Query {
  Predicate root                      = 1;
}

//
// State snapshot.
//
message ObjectSnapshot {
  Value root                          = 1;
}

//
// Atomic mutation.
//
message ObjectMutation {
  enum Operation {
    SET                               = 0;    // Default.
    DELETE                            = 1;
    ARRAY_PUSH                        = 2;    // TODO(burdon): Is it possible to delete an array value (which one?)
//  ARRAY_DELETE                      = 3;    // TODO(burdon): Identify by value.
    SET_ADD                           = 4;    // TODO(burdon): Identify by value.
    SET_DELETE                        = 5;
  }

  Operation operation                 = 1;
  string key                          = 2;
  Value value                         = 3;
}

//
// Set of mutations.
//
message ObjectMutationSet {
  repeated ObjectMutation mutations   = 1;
}
