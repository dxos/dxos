//
// Copyright 2020 DXOS.org
//

syntax = "proto3";

package dxos.teleport;

message Command {
  oneof content {
    AdvertizeChannel advertize_channel = 1;
    OpenChannel open_channel = 2;
    OpenStream open_stream = 3;
    Data data = 4;
    Finalize finalize = 5;
    Destroy destroy = 6;
  }
}

message AdvertizeChannel {
  string tag = 2;
}

message OpenChannel {
  string tag = 1;
}

// Covers ports and streams
message OpenStream {
  int32 id = 1;
  string channel = 2;
  string tag = 3;
  
  // Optional Mime-type or URL describing the protocol that is hosted ober this stream. Used for introspection.
  optional string content_type = 4;
}

message Data {
  int32 stream_id = 1;
  bytes data = 2;
}

// Request graceful shutdown. After this peers have some time to exchange extra messages and terminate the connection
message Finalize {
}

// Terminate the connection. The other peer can expect the connection to be closed.
message Destroy {
  // Error that caused the termination.
  optional string error = 1;
}