//
// Copyright 2021 DXOS.org
//

syntax = "proto3";

import "google/protobuf/empty.proto";

import "dxos/keys.proto";

package dxos.halo.invitations;

//
// HALO device invitations.
//

// TODO(burdon): ALL invitation messages should be handled over encrypted sessions.
// TODO(burdon): Or contain some form of signed credential.
// TODO(burdon): Calls should include some request context (e.g., halo/space key).

message HaloAdmissionCredentials {
  dxos.keys.PublicKey device_key = 1;
  dxos.keys.PublicKey control_feed_key = 2;
  dxos.keys.PublicKey data_feed_key = 3;
}

message HaloAdmissionOffer {
  dxos.keys.PublicKey identity_key = 1;
  dxos.keys.PublicKey halo_space_key = 2;
  dxos.keys.PublicKey genesis_feed_key = 3;
}

service HaloHostService {
  /// Process admission request from guest.
  rpc PresentAdmissionCredentials(HaloAdmissionCredentials) returns (google.protobuf.Empty);
}

service HaloGuestService {
  /// Process admission offer from host.
  rpc PresentAdmissionOffer(HaloAdmissionOffer) returns (google.protobuf.Empty);
}

//
// Space agent invitations.
//

message SpaceAdmissionCredentials {
  dxos.keys.PublicKey identity_key = 1;
  dxos.keys.PublicKey device_key = 2;
  dxos.keys.PublicKey control_feed_key = 3;
  dxos.keys.PublicKey data_feed_key = 4;
}

message SpaceAdmissionOffer {
  dxos.keys.PublicKey space_key = 1;
  dxos.keys.PublicKey genesis_feed_key = 3;
}

service SpaceHostService {
  /// Process admission request from guest.
  rpc PresentAdmissionCredentials(SpaceAdmissionCredentials) returns (google.protobuf.Empty);
}

service SpaceGuestService {
  /// Process admission offer from host.
  rpc PresentAdmissionOffer(SpaceAdmissionOffer) returns (google.protobuf.Empty);
}
