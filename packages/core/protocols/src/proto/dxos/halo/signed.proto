//
// Copyright 2020 DXOS.org
//

syntax = "proto3";

import "google/protobuf/any.proto";

import "dxos/keys.proto";

package dxos.halo.signed;

//
// A key which includes its parent keys and SignedMessages leading back to the root of its authority.
// For example, if IdentityA signed for DeviceA, which signed for DeviceB, which signed for DeviceC the chain
// would comprised: DeviceC->DeviceB->DeviceA->IdentityA moving from tip to root.
//
message KeyChain {
  dxos.keys.PublicKey public_key = 1;
  SignedMessage message = 2;
  repeated KeyChain parents = 3;
}

/**
 * A generic container message used whenever messages are signed (e.g. SpaceCredential)
 */
message SignedMessage {
  //
  // Provides the common metadata needed for all signed objects.
  //
  message Signed {
    /// RFC-3339 datetime string.
    string created = 1;
    bytes nonce = 2;
    /// The payload to be signed.
    google.protobuf.Any payload = 10;
  }

  //
  // The signature data itself.
  //
  message Signature {
    /// The publicKey of the keypair that made this signature.
    dxos.keys.PublicKey key = 1;
    /// The bytes of the signature.
    bytes signature = 2;
    /// The certification chain of SignedMessages for this key.
    optional KeyChain key_chain = 3;
  }

  /// The signed message contents.
  Signed signed = 1;
  /// An array of Signatures, one for each key that signed the message.
  repeated Signature signatures = 2;
}
