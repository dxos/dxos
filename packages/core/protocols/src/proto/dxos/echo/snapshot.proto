//
// Copyright 2020 DXOS.org
//

syntax = "proto3";

import "dxos/echo/timeframe.proto";
import "dxos/echo/object.proto";
import "dxos/halo/signed.proto";
import "dxos/keys.proto";

package dxos.echo.snapshot;

/**
 * Snapshots define full space state at a given point in time.
 * They must have enough information to be able to recover the space state without reading the feed messages.
 *
 * Each snapshot is identified by a space key and a timeframe.
 * The timeframe defines the set of feed messages that have already been processed.
 * When loading from the snapshot, application would skip all of the feed messages up to (and including) the provided timeframe.
 */
message SpaceSnapshot {
  bytes space_key = 1;
  optional timeframe.TimeframeVector timeframe = 2;

  // Unix timestamp of the snapshot creation time. For information purposes only.
  // TODO(dmaretskyi): Convert to google.protobuf.Timestamp.
  optional int32 timestamp = 3;

  EchoSnapshot database = 11;
}

/**
 * Database Snapshot
 */
message EchoSnapshot {
  repeated object.EchoObject items = 1;
  repeated LinkSnapshot links = 2;
}

/**
 * @deprecated
 */
// TODO(mykola): Remove.
message LinkSnapshot {
  optional string link_id = 1;
  optional string link_type = 2;
  string model_type = 3;
  optional string model_version = 4;
  string source = 5;
  string target = 6;
  optional object.EchoObject model = 7;
}
