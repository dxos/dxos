//
// Copyright 2025 DXOS.org
//

export default {
  requestId: '0dc12e344fa649884456960ca1a54954',
  autopromptString: 'PKM software artificial intelligence integration open source projects',
  resolvedSearchType: 'neural',
  results: [
    {
      id: 'https://github.com/subspace-ai/subspace',
      title: 'GitHub - subspace-ai/subspace: PKM + REPL + AI',
      url: 'https://github.com/subspace-ai/subspace',
      publishedDate: '2023-03-23T16:02:40.000Z',
      author: 'subspace-ai',
      score: 0.7530648708343506,
      text: "subspace.ai - PKM + REPL + AI \n The long-term goal of subspace is to be/have three things: \n \n PKM (Personal Knowledge Management system) like Roam Research or Tana. \n REPL-like (Read Evaluate Print Loop) capabilities. Should be able to execute individual code cells in the JVM backend and rendered in the frontend with Electric. Similar behaviour can be achieved with other languages via Jupyter kernels (or GraalVM Polyglot) and JavaScript. \n AI (Artificial Intelligence) integrations. Should be integrated with LLMs - e.g. write GPT queries in subspace, and incorporate the response to your personal knowledge base as a new node. Intelligent search and LLM-based summaries and reasoning over the existing knowledge base (Retrieval Oriented Generation, RAG). \n \n The overall design should be open-ended, allowing for easy forking and providing custom node types / rendering functions. The goal is not to be just a storage of information, but a control panel for commonly used workflows. So that you can create convenient shortcuts and informative output views with Clojure + Electric. Since you persist which actions you took over time, you can search for past outputs and interleave these with your personal notes. Later query your knowledge base with RAG in natural language, or query it with GPT by exposing subspace knowledge base as an API to GPT. \n For example, additional customizations and use cases could be: \n \n Intelligent work log for day to day coding. \n Wrappers for any babashka / shell scripts you already have. \n Wrapper functions to MLOps platform (or some other task manager) to trigger jobs, query stats and logs from past train runs. Build dashboards as subspace nodes from the result of such queries with Electric+HTML. \n Wrappers for common Kubernetes / AWS / GCP commands. Build ad hoc UIs on top of your cluster that make sense to you. \n Wrappers that pull the contents of arxiv documents as subspace nodes. \n Spaced repetition learning of content (of nodes which you mark to be remembered). \n \n UI/UX \n There will be two types of UI elements: pages and nodes. Pages contain nodes, and nodes can nest other nodes. Both pages and nodes are referencable (meaning you can link to them and the page/node will get a backreference). \n Each node contains some media, and possibly subnodes. \n Media can be: \n \n Text, numeric, Markdown \n Image, video, audio \n Flexible spreadsheet tesserrae \n code block, which can be executed in a jupyter kernel (runs once) \n code block containing an e/fn (runs continuously when on the page) \n \n Executing an e/fn is the most powerful and flexible thing to do. It can pull data in from other nodes on the page or in the graph, and displays its own little UI within its boundaries. Crucially, when upstream info changes, your e/fn's output gets recomputed. Running tesserrae is also very powerful; you can think of subspace as a non-grid tesserae that can also embed tesserae. \n Subnodes can be organised either by indenting or tiling. \n \n Indente",
      image:
        'https://opengraph.githubassets.com/734547dbba15cefe41b9ad9cd97ba2ac489aeebd18945d54dbf7b1931b5ed980/subspace-ai/subspace',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/khoj-ai/khoj',
      title:
        'GitHub - khoj-ai/khoj: Your AI second brain. Self-hostable. Get answers from the web or your docs. Build custom agents, schedule automations, do deep research. Turn any online or local LLM into your personal, autonomous AI (gpt, claude, gemini, llama, qwen, mistral). Get started - free.',
      url: 'https://github.com/khoj-ai/khoj',
      publishedDate: '2021-08-16T01:48:44.000Z',
      author: 'khoj-ai',
      score: 0.33666935563087463,
      text: "\n \n \n \n \n Your AI second brain \n \n \n \n üéÅ New \n \n Start any message with /research to try out the experimental research mode with Khoj. \n Anyone can now create custom agents with tunable personality, tools and knowledge bases. \n Read about Khoj's excellent performance on modern retrieval and reasoning benchmarks. \n \n \n Overview \n Khoj is a personal AI app to extend your capabilities. It smoothly scales up from an on-device personal AI to a cloud-scale enterprise AI. \n \n Chat with any local or online LLM (e.g llama3, qwen, gemma, mistral, gpt, claude, gemini, deepseek). \n Get answers from the internet and your docs (including image, pdf, markdown, org-mode, word, notion files). \n Access it from your Browser, Obsidian, Emacs, Desktop, Phone or Whatsapp. \n Create agents with custom knowledge, persona, chat model and tools to take on any role. \n Automate away repetitive research. Get personal newsletters and smart notifications delivered to your inbox. \n Find relevant docs quickly and easily using our advanced semantic search. \n Generate images, talk out loud, play your messages. \n Khoj is open-source, self-hostable. Always. \n Run it privately on your computer or try it on our cloud app. \n \n \n See it in action \n \n Go to https://app.khoj.dev to see Khoj live. \n Full feature list \n You can see the full feature list here. \n Self-Host \n To get started with self-hosting Khoj, read the docs. \n Enterprise \n Khoj is available as a cloud service, on-premises, or as a hybrid solution. To learn more about Khoj Enterprise, visit our website. \n Frequently Asked Questions (FAQ) \n Q: Can I use Khoj without self-hosting? \n Yes! You can use Khoj right away at https://app.khoj.dev ‚Äî no setup required. \n Q: What kinds of documents can Khoj read? \n Khoj supports a wide variety: PDFs, Markdown, Notion, Word docs, org-mode files, and more. \n Q: How can I make my own agent? \n Check out this blog post for a step-by-step guide to custom agents.\nFor more questions, head over to our Discord! \n Contributors \n Cheers to our awesome contributors! üéâ \n \n \n Made with contrib.rocks. \n Interested in Contributing? \n Khoj is open source. It is sustained by the community and we‚Äôd love for you to join it! Whether you‚Äôre a coder, designer, writer, or enthusiast, there‚Äôs a place for you. \n Why Contribute? \n \n Make an Impact: Help build, test and improve a tool used by thousands to boost productivity. \n Learn &amp; Grow: Work on cutting-edge AI, LLMs, and semantic search technologies. \n \n You can help us build new features, improve the project documentation, report issues and fix bugs. If you're a developer, please see our Contributing Guidelines and check out good first issues to work on. \n",
      image: 'https://repository-images.githubusercontent.com/396569538/533a8bf7-385f-427b-a03f-76795fd938ed',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/paulbricman/conceptarium',
      title: 'GitHub - paulbricman/conceptarium: A fluid medium for storing, relating, and surfacing thoughts.',
      url: 'https://github.com/paulbricman/conceptarium',
      publishedDate: '2021-08-12T04:45:29.000Z',
      author: 'paulbricman',
      score: 0.3376504182815552,
      text: "\n üí° Conceptarium \n The conceptarium is an experimental personal knowledge base designed to weave AI capabilities into knowledge work. Its main features include: \n \n powerful multi-modal search across ideas \n sharing microverses of knowledge with peers \n ranking items by Anki-like activation, so as to promote serendipity \n \n Installation \n Docker \n After installing docker and docker-compose, run: \n # install with:\ncurl -fsS https://raw.githubusercontent.com/paulbricman/conceptarium/main/docker-compose.yml -o docker-compose.yml\nmkdir knowledge\ndocker-compose up -d\n# stop with:\ndocker-compose stop\n# update with:\ndocker-compose stop\ndocker-compose rm -f\ndocker-compose pull\ndocker-compose up -d\n \n Note that you'll have to wait a bit initially for the models to be downloaded in the docker container. Use docker logs &lt;backend container ID&gt; or watch the process's memory for feedback on that. Or just try using it until it via the API or UI until it works (see usage). \n Source \n After pulling this repo run: \n python3 -m pip install -r frontend/requirements.txt\npython3 -m pip install -r backend/requirements.txt\nstreamlit run frontend/main.py\n# in a separate session:\ncd backend\npython3 -m uvicorn main:app --reload\n# update by pulling from repo again\n \n Missing dependencies? Please have a look at frontend/Dockerfile and backend/Dockerfile. ARM architecture (e.g. Raspberry Pi)? Remove the torch entries from requirements.txt, and install a custom-built version. \n Usage \n The web app should then be available at localhost:8501, while the API at localhost:8000 (with docs at localhost:8000/docs). The backend component takes a few minutes to get the ML models at first. \n To access your local instance, enter the conceptarium URL (i.e. localhost:8000 if you ran from source, backend.docker:8000 if you used docker), and your desired token. Remember your token, as you'll have to use it to authenticate in future sessions. \n",
      image:
        'https://opengraph.githubassets.com/2b454d3e4b9d69c65d465d8ec6609b3b61f34b83f1f8eece471806be32e710bc/paulbricman/conceptarium',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/mfakih/Pomegranate-PKM',
      title:
        'GitHub - mfakih/Pomegranate-PKM: Pomegranate PKM is a new open source web-based cross-platform work and knowledge management application for productive and prolific people. PKM features text-based commands for adding, updating and searching records, thus providing powerful tools to manage information. It also allows the user to build up the navigation menu using saved searches.',
      url: 'https://github.com/mfakih/Pomegranate-PKM',
      publishedDate: '2014-03-17T06:28:12.000Z',
      author: 'mfakih',
      score: 0.7761150002479553,
      text: 'Pomegranate-PKM \n Pomegranate PKM is a new open source web-based cross-platform work and knowledge management application for productive and prolific people. \n PKM features text-based commands for adding, updating and searching records, thus providing powerful tools to manage information. It also allows the user to build up the navigation menu using saved searches. \n \n Pomegranate PKM manages: \n \n Goals, tasks, and plans \n Journal and indicators \n Writings and notes \n Resources (books, articles, news, presentations, audiobooks, documentaries, movies etc),and book excerpts, mainly book chapters. \n Documents e.g. Word documents, Excels \n People \n \n In technical terms, Pomegranate PKM is a combination of: \n \n Document management system \n Content management system \n Research index cards and reference management \n Bug tracking systems, applied for the software development and self development \n Lightweight project management \n Powerful task management \n Time tracking \n Blog (e.g. WordPress) client \n \n My in-progress book at LeanPub outlines the motivations, design principles and the features of Pomegranate PKM. \n',
      image:
        'https://opengraph.githubassets.com/d4afbe16f55b89cbdd3344472df483147de49f6a8a136bd1da7af7e568c16908/mfakih/Pomegranate-PKM',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/mfakih294/Nibras-PKM',
      title:
        'GitHub - mfakih294/Nibras-PKM: A web-based self-hosted open-source system for the long-term management of personal information. It targets the needs of advanced users with serious information management needs. It is accompanied with an Android application that syncs the bookmarked records over local Wifi network.',
      url: 'https://github.com/mfakih294/Nibras-PKM',
      publishedDate: '2019-09-14T02:05:28.000Z',
      author: 'mfakih294',
      score: 0.7633954882621765,
      text: "Nibras PKM \n Nibras PKM is a web-based self-hosted open source system for\nthe long-term management of personal information.\nIt is a combination of a web-based application\nintended for desktop use and where all the records are entered,\nand an Android mobile reader application. \n \n Local \n The user has full control over his/her data, without the need for a (fast) internet connection, and without all the distractions and information overload that the internet can cause. \n Open source \n The user has control over the system itself too, especially when using it on the long term to manage the important personal information and files. \n Comprehensize \n It manages resources (articles, books, documents), notes, writings, tasks, goals, journal, planner, payments, indicators, and (study) courses and departments. \n Powerful \n It was designed with large amounts of information in mind. In current usage, it manages dozens of thousands of records. With its commands and saved searches, it makes easy to navigate through all the information. \n Main Features \n \n Flexible text-based commands to add, update and search records, which provides powerful ways to manage information. \n Saved searches to save searches for later use. \n Ability to display records on calendars and Kanban boards. \n Full-text search of all record fields. \n Simple file system integration so to greatly reduce the need to organize files manually. \n \n Documentation \n User's guide is available online at https://mfakih294.github.io/Nibras-PKM/. \n Releases \n Nibras PKM is hosted on GitHub https://github.com/mfakih294/Nibras-PKM. \n Quick start guide \n Running Nibras requires three simple steps: \n \n Download the bundle file corresponding to your platform, e.g. nibras-bundle-windows.zip from the releases page on Github. \n Extract the zipped file to a location of your choice on your local disk. \n Launch Nibras by double clicking on ./scripts/start file. \n \n Once Nibras has finished launching, a message like the one below will appear. \n * Nibras has launched. You can access it from: * \n * https://localhost:1441/ * \n Go to https://localhost:1441/ using Firefox or Chrome. On the login page, enter nibras for username and nibras for the password. \n Notes: \n \n As it has a self-signed certificate, you need to accept and bypass the security warning that shows up at the beginning. \n On Linux, you need to make the files inside ./scripts and ./tomcat/bin folders executable (chmod +x *). \n To stop Nibras, you can close this window, or press ctrl+c in it, or run ./scripts/stop script. \n \n Technical details \n \n Nibras is developed in Grails framework 3.3.10, a dynamic framework on top of the Java platform. \n Grails applications run on any platform that can run Java 8 and later, so practically all platforms, including Windows, Linux, Mac. \n For production use, Nibras uses MySQL 5+ for its database, and the file system to store the files of the records. To testing and demonstration, it can run with h2 database, with zero ex",
      image:
        'https://opengraph.githubassets.com/5e45c614cd8441100a4acd0e48d8b9c15984b51e816d4d4683436dd3be25c813/mfakih294/Nibras-PKM',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/reorproject/reor',
      title: 'GitHub - reorproject/reor: Private & local AI personal knowledge management app for high entropy people.',
      url: 'https://github.com/reorproject/reor',
      publishedDate: '2023-11-27T01:30:44.000Z',
      author: 'reorproject',
      text: 'Reor Project \n \nPrivate &amp; local AI personal knowledge management app. \n \n \n \n \n \n \n üì¢ Announcement \n We are now on Discord! Our team is shipping very quickly right now so sharing ‚ù§Ô∏èfeedback‚ù§Ô∏è with us will really help shape the product üöÄ \n \n About \n Reor is an AI-powered desktop note-taking app: it automatically links related notes, answers questions on your notes and provides semantic search. Everything is stored locally and you can edit your notes with an Obsidian-like markdown editor. \n The hypothesis of the project is that AI tools for thought should run models locally by default. Reor stands on the shoulders of the giants Ollama, Transformers.js &amp; LanceDB to enable both LLMs and embedding models to run locally: \n \n Every note you write is chunked and embedded into an internal vector database. \n Related notes are connected automatically via vector similarity. \n LLM-powered Q&amp;A does RAG on your corpus of notes. \n Everything can be searched semantically. \n \n One way to think about Reor is as a RAG app with two generators: the LLM and the human. In Q&amp;A mode, the LLM is fed retrieved context from the corpus to help answer a query. Similarly, in editor mode, the human can toggle the sidebar to reveal related notes "retrieved" from the corpus. This is quite a powerful way of "augmenting" your thoughts by cross-referencing ideas in a current note against related ideas from your corpus. \n Getting Started \n \n Download from reorproject.org or releases. Mac, Linux &amp; Windows are all supported. \n Install like a normal App. \n \n Running local models \n Reor interacts directly with Ollama which means you can download and run models locally right from inside Reor. Head to Settings-&gt;Add New Local LLM then enter the name of the model you want Reor to download. You can find available models here. \n You can also connect to an OpenAI-compatible API like Oobabooga, Ollama or OpenAI itself! \n Importing notes from other apps \n Reor works within a single directory in the filesystem. You choose the directory on first boot.\nTo import notes/files from another app, you\'ll need to populate that directory manually with markdown files. Note that if you have frontmatter in your markdown files it may not parse correctly. Integrations with other apps are hopefully coming soon! \n Building from source \n Make sure you have nodejs installed. \n Clone repo \n git clone https://github.com/reorproject/reor.git\n \n Install dependencies \n Run for dev \n Build \n Interested in contributing? \n We are always on the lookout for contributors keen on building the future of knowledge management. Have a feature idea? Want to squash a bug? Want to improve some styling? We\'d love to hear it. Check out our issues page and the contributing guide to get started. \n License \n AGPL-3.0 license. See LICENSE for details. \n Reor means "to think" in Latin. \n',
      image:
        'https://opengraph.githubassets.com/101249afc41e6b8729eca3c619d4c08c5c67288ab4126de16c59c1ab97c5492c/reorproject/reor',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/memex-life/memex',
      title:
        'GitHub - memex-life/memex: Your second brain for the web browsing. An AI powered Chrome extension that constructs personal knowledge base for you.',
      url: 'https://github.com/memex-life/memex',
      publishedDate: '2023-03-16T23:48:35.000Z',
      author: 'memex-life',
      score: 0.34730345010757446,
      text: 'Memex \n Your second brain for web browsing. Picture possessing the ultimate ability of total recall. \n \n Overview \n This project aims to create a browser extension that acts like a personal memex machine.\nIt will keep track of everything you browse online to build your own knowledge base.\nThen it will use AI to retrieve that knowledge whenever you need it. \n What is a Memex? \n \n Consider a future device for individual use, which is a sort of mechanized private file and library. It needs a name, and, to coin one at random, ‚Äúmemex‚Äù will do. A memex is a device in which an individual stores all his books, records, and communications, and which is mechanized so that it may be consulted with exceeding speed and flexibility. It is an enlarged intimate supplement to his memory. \n--- ‚ÄúAs We May Think‚Äù Vannevar Bush (1945) \n \n Features \n \n Seamlessly captures content and metadata from your web browsing. \n Constructs your own personalized knowledge base on your local device \n Retrive knowledge with power of AI. \n \n How it works \n When you browse the web, this extension will inject a script to capture the text content on the pages you visit. It will send that content to the backend service-worker for processing\nThe service-worker will break the content into pieces and store it in a database.\nThe popup page acts as a chat interface to answer your questions using the information in the database. \n Getting Started \n Build &amp; import Extension \n Build extension files into dist/ folder \n npm install\nnpm run build # or npm run watch \n Load extension \n Start the Kownledge Base server \n Currently the LangchainJs has not yet support browser runtime. The extension still needs a backend server as Knowledge Base implementaion. \n set environments: \n export TOKENIZERS_PARALLELISM=false\nexport OPENAI_API_KEY=&lt;your-api-key&gt;\ncd server\nFLASK_APP=server flask run\n \n Start using \n Once you have completed the above steps, you can start using the Memex browser extension to enhance your web browsing experience. \n \n As you browse the web, the extension will automatically capture and store the text content from the web pages you visit, along with their metadata, in your personalized knowledge base. \n When you need to retrieve information or recall something from your browsing history, simply open the chat interface by clicking on the Memex extension icon. Type your question or query into the chat interface and press Enter or click the Send button. The Memex extension will use AI to search your knowledge base and provide you with the most relevant information based on your query. \n \n',
      image:
        'https://opengraph.githubassets.com/aa7966b46e8bb10410af6cdb5af62c9095d99c4b9d17683b246641b8a1291746/memex-life/memex',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/samkeen/knowling',
      title:
        'GitHub - samkeen/knowling: A desktop notes application leveraging AI designed for Personal Knowledge Management (PKM)',
      url: 'https://github.com/samkeen/knowling',
      publishedDate: '2024-03-08T03:28:38.000Z',
      author: 'samkeen',
      score: 0.8010122776031494,
      text: 'Knowling \n A desktop notes application designed for Personal Knowledge Management (PKM) \n \n Knowling aims to provide users with an intuitive platform for gathering and organizing knowledge from various research\nsources. By leveraging AI, Knowling assists users in categorizing their notes and highlighting connections between them,\nthereby enhancing the overall management of their personal knowledge store. \n Features \n \n Fast Performance: Knowling is developed using Rust and JavaScript, ensuring a responsive and efficient user\nexperience. \n WSIWIG Markdown Editor: A What-You-See-Is-What-You-Get (WSIWIG) Markdown editor for seamless and straightforward\nnote-taking. \n Simple, Uncluttered UI: The user interface is designed to be minimalistic and distraction-free, allowing users to\nfocus on their content. \n Export/Import Notes: Easily export and import notes to manage your knowledge base across different devices and\nformats. \n AI Integration: AI is integrated to empower users by automatically categorizing notes and identifying meaningful\nconnections between them. \n Open Source: Knowling is open source and licensed under the Apache 2.0 license, encouraging community\ncontributions\nand\ntransparency. \n \n Current Development Status \n Knowling is currently in the early stages of development, with a minimal feature set. We are actively working on\nexpanding the application\'s capabilities and enhancing its functionality. We welcome you to check out the open feature\nrequests and encourage you to open new ones if you have any suggestions or ideas. \n \n Open Issues \n Project view \n \n We hope you find Knowling valuable for managing your personal knowledge. If you have any feedback or encounter any\nissues, please don\'t hesitate to reach out or contribute to the project. \n Why the name Knowling: Knowling is a play on the words "Knowledge" and "Knolling", a process of arranging objects to\ncreate clean and organized\nspaces. This reflects our goal of helping users keep their knowledge organized and easily accessible. \n \n \n Developing Knowling \n Knowling is built atop Tauri 1.x \n Project setup \n npm install\nnpm run tauri dev\n \n Development \n Build \n https://tauri.app/v1/api/cli/ \n Development follows the common practices of developing a Tauri application. \n Debugging in RustRover \n https://tauri.app/v1/guides/debugging/rustrover/ \n',
      image:
        'https://opengraph.githubassets.com/68a818dd653e6084907d244111f983fe2b2367dcfb8eed93ebece179892ae74c/samkeen/knowling',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/whl1207/Knowledge',
      title: 'GitHub - whl1207/Knowledge: Distributed Multi-View Intelligent Knowledge Management Platform',
      url: 'https://github.com/whl1207/Knowledge',
      publishedDate: '2023-08-26T03:26:41.000Z',
      author: 'whl1207',
      score: 0.35489749908447266,
      text: 'AI-KM Intelligent Knowledge Management Platform \n Overview \n AI-KM (Artificial Intelligence Knowledge Management) is a next-generation knowledge management platform that integrates cutting-edge AI technologies. Leveraging large language models and knowledge graph technologies, it helps individuals and organizations achieve efficient knowledge organization, in-depth analysis, and intelligent application. \n \n Core Value \n \n Intelligent Knowledge Processing: Automatically parses, queries, and associates knowledge content \n Multi-dimensional Visualization: Provides 6 view modes to present knowledge relationships \n Open Model Integration: Supports seamless switching between mainstream open-source large language models via Ollama \n Enterprise-grade Security: All data processing is performed locally \n \n Key Features \n 1. Core Technical Architecture \n \n \n Multi-model Integration Engine \n \n Supports mainstream large language models deployed via the Ollama framework \n Base models: Deepseek-R1, qwen3, LLaMA3.3, QWQ \n Embedding models: nomic-embed-text, bge-m3, mxbai-embed-large \n Multimodal models: Gemma3, Mistral-Small 3.1 \n \n \n \n Enhanced Retrieval System \n \n RAG (Retrieval-Augmented Generation) architecture \n Supports knowledge base preprocessing (default segmentation by 2 line breaks) \n Supports similarity calculations for various embedding models \n Supports hidden information inference in knowledge bases (default: deducing potential user queries) and knowledge fragment keyword editing \n Supports custom retrieval thresholds (can set knowledge base retrieval thresholds based on cosine similarity, quantity, characters, etc.) \n Explainable analysis and debugging of retrieval results, displaying similarity information for each knowledge fragment \n Supports cosine similarity calculation and MDS dimensionality reduction-based similarity calculation \n \n \n \n Visual Workflow Engine \n \n Drag-and-drop AI processing pipeline construction \n Includes 3+ pre-built node templates \n Supports workflow import/export \n \n \n \n Markdown Document Editing \n \n Deep Markdown parsing and editing \n Document structure analysis (heading hierarchy recognition) \n Code block processing \n \n \n \n Multi-view Knowledge Display Module \n \n \n \n Multi-platform Packaging &amp; Deployment \n \n Electron-based packaging for Windows, Linux, macOS, and other platform clients \n \n \n \n Installation &amp; Deployment \n System Requirements \n \n OS: Windows 10+/macOS 12+/Linux (Ubuntu 20.04+) \n Hardware:\n \n Minimum: 8GB RAM, 4-core CPU, 10GB storage \n Recommended: 16GB+ RAM, dedicated GPU, 50GB+ storage \n \n \n \n Development Environment Setup \n # Install dependencies \nnpm install\n # Run in development mode \nnpm run dev\n # Build Windows client \nnpm run build\n # Generate installation package \n AI-KM Êô∫ËÉΩÁü•ËØÜÁÆ°ÁêÜÂπ≥Âè∞ \n Ê¶ÇËø∞ \n AI-KMÔºàArtificial Intelligence Knowledge ManagementÔºâÊòØ‰∏Ä‰∏™ÈõÜÊàê‰∫ÜÂâçÊ≤øAIÊäÄÊúØÁöÑ‰∏ã‰∏Ä‰ª£Áü•ËØÜÁÆ°ÁêÜÂπ≥Âè∞ÔºåÈÄöËøáÂ§ßËØ≠Ë®ÄÊ®°ÂûãÂíåÁü•ËØÜÂõæË∞±ÊäÄÊúØÔºåÂ∏ÆÂä©‰∏™‰∫∫ÂíåÁªÑÁªáÂÆûÁé∞Áü•ËØÜÁöÑÈ´òÊïàÁªÑÁªá„ÄÅÊ∑±Â∫¶ÂàÜÊûêÂíåÊô∫ËÉΩÂ∫îÁî®„ÄÇ \n Ê†∏ÂøÉ‰ª∑ÂÄº \n \n Êô∫ËÉΩÁü•ËØÜÂ§ÑÁêÜ ÔºöËá™Âä®Ëß£Êûê„ÄÅÊü•ËØ¢ÂíåÂÖ≥ËÅîÁü•ËØÜÂÜÖÂÆπ \n Â§öÁª¥Â∫¶ÂèØËßÜÂåñ ÔºöÊèê‰æõ6ÁßçËßÜÂõæÊ®°ÂºèÂëàÁé∞Áü•ËØÜÂÖ≥Á≥ª \n ÂºÄÊîæÊ®°ÂûãÈõÜÊàê ÔºöÂèØ‰ª•ÈÄöËøáollamaÊîØÊåÅ‰∏ªÊµÅÂºÄÊ∫ê',
      image:
        'https://opengraph.githubassets.com/fc9354a52086145d1cf60e2b9c3d386a3be8fa44e2e00cbb13cd2b1af09973b7/whl1207/Knowledge',
      favicon: 'https://github.com/fluidicon.png',
    },
    {
      id: 'https://github.com/putaodoudou/kmagent',
      title:
        'GitHub - putaodoudou/kmagent: KMAgent (Knowledge Management Agent)ÔºåÂü∫‰∫éËØ≠‰πâÂÖÉÁöÑÊô∫ËÉΩÁü•ËØÜÁÆ°ÁêÜGTDÂ∑•ÂÖ∑Ôºå‰∏™‰∫∫Êô∫ËÉΩÂä©ÁêÜ„ÄÇ',
      url: 'https://github.com/putaodoudou/kmagent',
      publishedDate: '2018-06-05T09:11:21.000Z',
      author: 'putaodoudou',
      score: 0.35521113872528076,
      text: 'KMAgent-‰∏™‰∫∫Êô∫ËÉΩÂä©ÁêÜ \n \n ‰∏™‰∫∫ Áü•ËØÜÊô∫ËÉΩÂä©ÁêÜÔºàKMAgent, Knowledge Management AgentÔºâ--‰∏ìÊ≥®Êô∫ËÉΩÁü•ËØÜÁÆ°ÁêÜGTD Â§öÂÖÉËûçÂêàÂàõÊñ∞ ÂèëÊâ¨‰º†ÊâøÊô∫ÊÖßÔºÅ \n KMAgent ‰ª• ‰∏™‰∫∫Áü•ËØÜÁÆ°ÁêÜ GTD Â∫îÁî®‰∏∫‰∏ªÁöÑÂ∑•ÂÖ∑ÊïàÁéáËΩØ‰ª∂„ÄÇÂü∫‰∫é‰∫§‰∫íÂå∫+ÊñáÊ°£ÁöÑÂçèÂêåÂ≠¶‰π†Â∑•‰ΩúÁ©∫Èó¥Ôºå‰∏ìÊ≥®‰∫éËØ≠‰πâËÆ°ÁÆó„ÄÅÁü•ËØÜÂ∑•Á®ãÔºåËá¥Âäõ‰∫éÈÄöËøáËá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜ„ÄÅÊú∫Âô®Â≠¶‰π†„ÄÅÁü•ËØÜÂõæË∞±Á≠â‰∫∫Â∑•Êô∫ËÉΩÊäÄÊúØÔºåÁÆÄÂåñÁü•ËØÜÂ¢ûÂº∫ËÆ§Áü•„ÄÅËûçÂêàÊîØÊåÅ‰ºòÁßÄÊñπÊ≥ïËÆ∫Ê®°ÊùøÔºåËæÖÂä©È´òÊïàÂ≠¶‰π†Â∑•‰ΩúÔºåÊâ©Â±ï‰∏™‰∫∫ËÉΩÂäõÔºåÁ±ª‰ººÈí¢ÈìÅ‰æ†ÁöÑ„ÄêË¥æÁª¥ÊñØ„Äë„ÄÇ‰ª•ÂºÄÊ∫êÈ°πÁõÆÁöÑÂΩ¢ÂºèÁªìÂêà‰∫ßÂ≠¶Á†îÔºåÊîØÊåÅÁ§æÁæ§ÂçèÂêåÁßØÁ¥ØÂàõÊñ∞ÔºåËäÇÁúÅÊó∂Èó¥Á≤æÂäõÔºå‰ªéÁü•ËØÜ‰∏≠ÊåñÊéòÊô∫ÊÖß„ÄÇÊÇ®ÁöÑÁßÅ‰∫∫Áü•ËØÜÂºïÊìé„ÄÅÁßò‰π¶„ÄÅÊô∫Âèã„ÄÅÊô∫ÂõäÂõ¢„ÄÇ \n ËØ∑Êü•ÁúãÁΩëÁ´ô http://kmagent.com Ëé∑ÂèñÁõ∏ÂÖ≥ÂÆâË£ÖÊåáÂçóÂèä‰ΩøÁî®ËØ¥Êòé„ÄÇ \n ‰∏∫‰ªÄ‰πàWhy? \n \n ÁâπÂà´ÈáçË¶ÅÁöÑ‰∏§‰∏™ËÉΩÂäõÔºö1„ÄÅÂà∂ÈÄ†Â∑•ÂÖ∑Ôºõ2„ÄÅÂØªÊ±ÇÂêà‰Ωú„ÄÇ \n \n Êô∫ËÉΩÊó∂‰ª£Ôºå‰ø°ÊÅØÁàÜÁÇ∏ÔºåÁü•ËØÜÂåÆ‰πèÔºåËæÖÂä©ÂÅöÂáèÊ≥ïÔºÅÂçèÂêåÂêà‰ΩúÔºåÈôç‰Ωé‰ø°ÊÅØÁÜµÔºåÊèêÈ´òÊô∫ÂïÜÔºåÊûÅÁÆÄÊô∫ËÉΩÁü•ËØÜÁÆ°ÁêÜÔºÅ \n \n \n Áü•ËØÜË¥¢ÂØå ÔºåÁßØÁ¥ØÁü•ËØÜËÉúËøáÁßØÁ¥ØÈáëÈí±ÔºåÁü•ËØÜÊòØ‰∫∫Á±ªËøõÊ≠•ÁöÑÈò∂Ê¢Ø„ÄÇÊòØ‰∏™‰∫∫Âèä‰ºÅ‰∏öÁöÑÊ†∏ÂøÉÁ´û‰∫âÂäõÔºÅ \n ÂåñÁπÅ‰∏∫ÁÆÄ ÔºåÂèëÁé∞Ê®°ÂºèÂåñÁπÅ‰∏∫ÁÆÄÔºåÊåñÊéòÊú¨Ë¥®ÂèäÂÖ≥ËÅîÔºåÁü•ÂÖ∂ÁÑ∂Áü•ÂÖ∂ÊâÄ‰ª•ÁÑ∂Ôºå‰øÉËøõËûçÂêàÂàõÊñ∞„ÄÇ \n ‰∫∫Á±ªÊô∫ËÉΩ ÔºåÊåñÊéòÈöêÊÄßÁü•ËØÜ„ÄÅÁêÜËß£‰∫∫Á±ªÂ§öÂÖÉÊô∫ËÉΩÔºåÂèëÊéòÂà©Áî®Â§ßËÑëÊΩúÂäõÔºåÊåëÊàòËÆ§Áü•ÊûÅÈôê„ÄÇ \n Áü•ËØÜ‰º†Êí≠ ÔºåÈùôÊÄÅÊñáÊú¨‰π¶Á±çÁöÑÁº∫Èô∑„ÄÅÊé¢Á¥¢Êñ∞ÁöÑÁü•ËØÜÂ≠òÂÇ®Â±ïÁ§∫ÂàÜ‰∫´ÊñπÂºèÔºåÂª∫Á´ãÈ´òÊïàÊ≤üÈÄöÂçèÂêå‰∏éÁßØÁ¥ØÂàÜ‰∫´ÁöÑÂü∫Á°Ä„ÄÇ \n ÂÆûÁé∞Â∫îÂØπ‰∫∫Â∑•Êô∫ËÉΩ ÔºåÁü•ËØÜ‰∏éÊô∫ËÉΩÁõ∏ËæÖÁõ∏ÊàêÔºåÁü•ËØÜÁÆ°ÁêÜ‰Ωú‰∏∫Ê†∏ÂøÉÁéØËäÇÔºåÊâø‰∏äÂêØ‰∏ãÂΩ¢ÊàêÈó≠ÁéØÔºåÁ§æÁæ§ÂçèÂêåÁßØÁ¥ØÂàõÊñ∞„ÄÇ \n ÈáçÊñ∞ÈÄ†ËΩÆÂ≠ê Ôºå‰∏∫Ëá™Â∑±ÂºÄÂèë‰∏Ä‰∏™Â∑•ÂÖ∑ÔºåËá™ÁÑ∂‰∫§‰∫íÈôç‰ΩéÂ∑•ÂÖ∑Â≠¶‰π†‰ΩøÁî®ÊàêÊú¨ÔºåÊîØÊåÅÂ≠¶‰π†Â∑•‰ΩúÁîüÊ¥ª„ÄÇ \n ‰Ωú‰∏∫‰∫ã‰∏ö ÔºåÂÄºÂæóÂ•ãÊñóÂçÅÂπ¥ÁöÑ‰∫ã‰∏ö„ÄÇ \n \n Do something diferent, make a change! \n \n „Äê‰∫ßÂìÅÁÆÄ‰ªã„Äë‰∫ßÂìÅÂéüÂûãÊ≠£ÁÅ´ÈÄüÂºÄÂèë‰∏≠ÔºÅ \n \n ÊòØ‰ª•ÊñáÊ°£+‰∫§‰∫íÂå∫‰∏∫‰∏≠ÂøÉÁöÑÂäüËÉΩÈõÜÊàêÔºåËµÑÊ∫ê‰∫ãÂä°Ë°å‰∏∫ÁöÑÂçèÂêåÊô∫ËÉΩÁÆ°ÁêÜGTD„ÄÇÈ¶ñÂÖàÁî®‰∫éÂçèÂêåÂª∫Á´ãÊ†∏ÂøÉÊ¶ÇÂøµÁêÜËÆ∫‰ΩìÁ≥ªÔºåÁü•ËØÜÁÆ°ÁêÜ‰∏öÂä°Âª∫Ê®°ÔºåÁßØÁ¥ØÂàÜ‰∫´ËµÑÊ∫êÁü•ËØÜÊäÄÊúØÔºåÂ∫îÁî®‰∫éKM„ÄÅIT„ÄÅAI„ÄÅÊï∞Â≠¶Áõ∏ÂÖ≥È¢ÜÂüüÁü•ËØÜÁöÑÂ≠¶‰π†Êï¥ÁêÜ„ÄÇ \n \n ÂäüËÉΩÂèäÁâπÊÄßÔºö \n \n Â§öÂ™í‰ΩìÊó†ÈôêÁîªÊùø„ÄÅÂÆûÊó∂ÂçèÂêåÊñáÊú¨ÂØºÂõæÁºñËæëÂô®ÔºåÂØåÊñáÊú¨Âíå Markdown Êâ©Â±ïÁºñËæë„ÄÇ \n ÊîØÊåÅÊú¨‰ΩìÂª∫Ê®°„ÄÅÈòÖËØªÁ¨îËÆ∞„ÄÅÁÅµÊÑü‰æøÁ≠æ„ÄÅÊÄùÁª¥ÂØºÂõæ„ÄÅÂêÑÁ±ªÊ®°Êùø„ÄÇ \n ÂàíËØçÁøªËØëÁü•ËØÜËß£Èáä„ÄÅÊêúÁ¥¢„ÄÅÁôæÁßëÂ≠óÂÖ∏„ÄÇ \n Áü•ËØÜÂèØËßÜÂåñÔºåÂ§öÂ±ÇÊ¨°Á≤íÂ∫¶Áª¥Â∫¶ÂéªÂÜó‰ΩôÔºåÊµìÁº©ÊëòË¶Å„ÄÅÁîüÊàêÂçöÂÆ¢„ÄÇ \n Áü•ËØÜÂØºÂÖ•ÂØºÂá∫„ÄÅWeb Áü•ËØÜÊäΩÂèñÈõÜÊàê„ÄÇ \n ËµÑÊ∫êÁÆ°ÁêÜ„ÄÅÂÖ¨ÂÖ±+‰∏™‰∫∫+È¢ÜÂüüÁü•ËØÜÂõæË∞±„ÄÇ \n Êî∂ËóèËÆ¢ÈòÖËØÑËÆ∫ÂàÜ‰∫´„ÄÅËØùÈ¢òËØæÁ®ãÂ∞èÁªÑÁè≠Á∫ßÂúàÂ≠ê„ÄÇ \n È°πÁõÆ‰∫ãÂä°ÁöÑPDCA„ÄÅGTDÔºåÊó•ÂéÜÊó•Á®ãÂÆâÊéíÊèêÈÜí„ÄÇ \n Âç≥Êó∂ÈÄö‰ø°„ÄÅÂÆûÊó∂ÂçèÂêå„ÄÅÈ°πÁõÆÂêà‰Ωú„ÄÅÁßØÂàÜÁ≥ªÁªü„ÄÇ \n ‰∏™ÊÄßÂåñËá™Â≠¶‰π†ËÅäÂ§©Êú∫Âô®‰∫∫„ÄÅËôöÊãüÂΩ¢Ë±°„ÄÅËØ≠Èü≥ËØÜÂà´ÁîüÊàê„ÄÅ‰∫ãÂä°‰ª£ÁêÜ„ÄÅ‰∏ªÂä®Êé®ËçêÊèêÈÜíÂºïÂØºËæÖÂä©„ÄÇ \n Ëá™ÁÑ∂ËØ≠Ë®Ä‰∫§‰∫í„ÄÅËØ≠‰πâÂåñ„ÄÅÂìçÂ∫îÂºèÁîüÊàêÂºè„ÄÅÊñáÊú¨Âåñ„ÄÅÂèØËßÜÂåñ„ÄÅÊûÅËá¥Ê≤âÊµ∏‰ΩìÈ™å„ÄÇ \n È´òÁ∫ßÂäüËÉΩÔºöËá™ÂÆö‰πâÈÖçÁΩÆ„ÄÅÊèí‰ª∂„ÄÅÂëΩ‰ª§Ë°å„ÄÅÈ¢ÜÂüüËØ≠Ë®Ä„ÄÇ \n \n ËæÖÂä©ÊÇ®ËøõË°åÊûÅÁÆÄÊô∫ËÉΩÁü•ËØÜÁÆ°ÁêÜÔºöÁü•ËØÜÂèØËßÜÂåñÂàõ‰ΩúÂ±ïÁ§∫ÔºåÁÆÄÂåñÁªìÊûÑÂåñÂ∑≤ÊúâÁü•ËØÜËµÑÊ∫êÔºåÂª∫Á´ãÁü•ËØÜ‰ΩìÁ≥ª„ÄÇÊ∑±ÂÖ•Êú¨Ë¥®ÁêÜËß£Áü•ËØÜ„ÄÅÊï¥‰ΩìÈ´òÊïàÂêà‰ΩúÂ≠¶‰π†„ÄÇ‰∏™‰∫∫‰∫ãÂä°ÁöÑÁÆ°ÁêÜ„ÄÅÂéüÂàôÊñπÊ≥ïËÆ∫‰π†ÊÉØÁöÑÂÖªÊàê„ÄÇËØ≠‰πâËÆ°ÁÆóÔºåËæÖÂä©Êé®ÁêÜ„ÄÅ‰ªøÁúü„ÄÅÈ¢ÑÊµã„ÄÅÂÜ≥Á≠ñ„ÄÇËÅäÂ§©Ëß£Èó∑ÂêØÂèë„ÄÇ \n ÂæàÈ´òÂÖ¥ÊÇ® ‰∏ãËΩΩËØïÁî® Âπ∂ ÂõûÈ¶à‰ΩøÁî®ÊÉÖÂÜµ „ÄÇ \n \n ÈöèÁùÄÂºÄÂèëËøõÂ±ïÔºå‰ºöÂèäÊó∂ÂàóÂá∫ÊúÄÊñ∞ÁâπÊÄß„ÄÅÊñ∞ÂäüËÉΩÂèäÊîπËøõÊÉÖÂÜµ„ÄÇÊü•Áúã v0.1 -&gt; v1.0 ÂçáÁ∫ß‰ø°ÊÅØ ÔºåËé∑ÂèñÊõ¥Â§ö‰∫ßÂìÅÂçáÁ∫ß‰ø°ÊÅØ „ÄÇ \n „ÄêÂèÇ‰∏éË¥°ÁåÆ„Äë \n \n Êàë‰ª¨ÊòØ‰∏Ä‰∏™ÂçèÂêåÂ≠¶‰π†ÂûãÁªÑÁªáÔºå‰ª•ÂºÄÊ∫êÈ°πÁõÆ‰∏∫‰∏≠ÂøÉÔºåÁªìÂêà‰∫ßÂ≠¶Á†îÔºåÁêÜËÆ∫ÊäÄÊúØÁü•ËØÜËÉΩÂäõÂÆûË∑µÈó≠ÁéØÊ≠£ÂèçÈ¶àËø≠‰ª£ÁßØÁ¥ØÁöÑËøáÁ®ãÔºå‰∫∫‰∏é‰∫∫‰∏éÊú∫Âô®Êú∫Âô®ÁöÑÂêà‰ΩúÂ≠¶‰π†ÔºÅÈ°πÁõÆÂ§Ñ‰∫éÂàùÊúüËßÑÂàíÈò∂ÊÆµÔºå Ê¨¢ËøéÂêÑ‰ΩçÊúâÂøó‰πãÂ£´ÁöÑÂä†ÂÖ•ÔºÅ \n \n Âü∫‰∫éÂÖ±Âêå‰ø°Âøµ„ÄÅÁªü‰∏ÄÂü∫Á°Ä„ÄÅÂçèÂêåÊú∫Âà∂ÔºåËá™Áî±ÂàÜÂ∑•Âêà‰ΩúÁöÑÂ∑•‰ΩúÁªÑÔºåÂèØÈÄâÊã©‰∏Ä‰∏™ÊàñÂ§ö‰∏™Ê®°ÂùóÂèÇ‰∏éÂêà‰ΩúÂ≠¶‰π†ÂèäÂºÄÂèëÔºåÊ†πÊçÆ ËßÑÂàô ËÆ∞ÂΩïË¥°ÁåÆÁßØÂàÜÔºåÊåâË¥°ÁåÆÂàÜÈÖçÂ•ñÂä±ÔºåÊú™Êù•Ëã•ÁõàÂà©ÂèØÂàÜÁ∫¢ÔºåÊ∂åÁé∞ÈõÜ‰ΩìÊô∫ÊÖßÔºÅÊ¨¢ËøéÊØè‰∏™‰∫∫Ë¥°ÁåÆÂäõÈáè„ÄÅÊî∂Ëé∑ÁßØÂàÜÊúãÂèãÁü•ËØÜÂ∑•ÂÖ∑ÊäÄÊúØ„ÄÇ \n „ÄêÂÄºÂæóÂä†ÂÖ•„ÄëÁü•ËØÜÊîπÂèòÂëΩËøêÔºåÂàõÊñ∞ÊîπÂèò‰∏ñÁïåÔºÅÊîπÂèòËá™Â∑±‰ªéÂøÉËÄå‰∏∫Ôºå‰∏çÂøòÂàùÂøÉÊñπÂæóÂßãÁªàÔºÅ \n Â§öÁßçË¥°ÁåÆÊñπÂºè \n \n ÂèØÂèÇ‰∏éÁêÜËÆ∫Á†îÁ©∂„ÄÅ‰∏öÂä°Âª∫Ê®°„ÄÅÊäÄÊúØÂºÄÂèë„ÄÅÈ°πÁõÆÁÆ°ÁêÜ„ÄÅËøêËê•„ÄÅÊäïËµÑ„ÄÅËØïÁî®ÂàÜ‰∫´Êé®Âπø„ÄÇ \n Êèê‰∫§ÊàñÊäïÁ•®Êñ∞ÂäüËÉΩÁâπÊÄßÈúÄÊ±Ç ProductPains \n Â∑•ÂÖ∑‰ΩøÁî® ÊÉÖÂÜµÂèçÈ¶à \n \n Ê¨¢ËøéÊèê‰∫§ pull requests Âèä issue „ÄÇ \n Ëã•Ë¥°ÁåÆÊ∫êÁ†ÅËØ∑ÈòÖËØªÈÅµÂæ™ ÁºñÁ®ãÈ£éÊ†º Âèä Ë¥°ÁåÆËØ¥ÊòéÊñáÊ°£ „ÄÇ \n Ëá¥Ë∞¢ \n „ÄêÊ∫êËÆ°Âàí„ÄëKMAgent ÂΩìÂâçÊòØ‰∏Ä‰∏™ÂÖ¨ÂºÄÁ§æÁæ§ÂíåÂÖçË¥πËΩØ‰ª∂ÔºåÊÑüË∞¢ÊâÄÊúâ‰øÉËøõÂÖ∂ÂèëÂ±ïÁöÑ Ë¥°ÁåÆËÄÖ Âíå [Ê∑±Â∫¶Áî®Êà∑]( https://github.com/kmagent/ kmagent/fans.md)„ÄÇ„ÄêÊçêËµ†„ÄëÂ¶ÇÊûúÊÇ®ËÆ§ÂêåÊàë‰ª¨ËØ∑ÊîØÊåÅÊàë‰ª¨Âø´ÈÄüÊåÅÁª≠ÂèëÂ±ï„ÄÇ \n ‰∏ªË¶ÅÊ®°Âùó \n „ÄêÊ†∏ÂøÉÈáçÁÇπ„ÄëÊô∫ËÉΩ‰ΩìËØ≠‰πâÂÖÉÊ†∏ÂøÉÊäΩË±°„ÄÅËÆ§Áü•Âª∫Ê®°„ÄÅÁü•ËØÜÂõæË∞±„ÄÅÊô∫ËÉΩÁü•ËØÜÁÆ°ÁêÜGTDËß£ÂÜ≥ÊñπÊ°à„ÄÅ‰∫ßÂìÅËÆæËÆ°ÂºÄÂèëÔºåÁ§æÁæ§ËøêËê•ÂçèÂêåÁßØÁ¥ØÂàõÊñ∞„ÄÇÔºàÊô∫ËÉΩÂü∫Á°Ä-&gt;Êô∫ËÉΩÊ†∏-&gt;Êô∫ËÉΩÂùó-&gt;Êô∫ËÉΩ‰ΩìÔºâÁæ§‰ΩìÊô∫ËÉΩ-&gt;ÈÄöÁî®Êô∫ËÉΩÔºåÊ®°Êãü-&gt;Ë∂ÖË∂ä„ÄÇÊ®°ÂùóÔºökm-thory km-engine km-onto km-agents km-sys km-ui„ÄÅkm-graph„ÄÇ \n „ÄêÈ¢ÜÂüüÂèäÊäÄÊúØ„ÄëÊô∫ËÉΩÁü•ËØÜÁÆ°ÁêÜÔºàÈ¢ÜÂüüÂª∫Ê®°Ôºâ„ÄÅÊú∫Âô®Â≠¶‰π†ÔºàtensorflowÔºâ„ÄÅËá™ÁÑ∂ËØ≠Ë®ÄÂ§ÑÁêÜÔºàNLTK„ÄÅhanlpÔºâ„ÄÅÁü•ËØÜÂõæË∞±ÔºàÂõæÊï∞ÊçÆÂ∫ìneo4jÂàÜÂ∏ÉÂºèÂ≠òÂÇ®cephÔºâ„ÄÅÈ¢ÜÂüüËØ≠Ë®ÄÔºàDSLÔºâ„ÄÅËØ≠‰πâÁΩëÔºàOWLÔºâ„ÄÅwebÁü•ËØÜÂèëÁé∞ÔºàÁà¨Ëô´Ôºâ„ÄÅÊ£ÄÁ¥¢ÔºàluceneÔºâÊé®ÁêÜÊé®Ëçê„ÄÅÂ§öagentÈõÜÁæ§Êô∫ËÉΩÔºàÊû∂ÊûÑÔºâ„ÄÅ‰∫∫Êú∫‰∫§‰∫íUIÔºàvue.js„ÄÅbootstrap„ÄÅÊï∞ÊçÆÂèØËßÜÂåñÔºâ„ÄÅWebÁΩëÁ´ôÔºàkeystoneÔºâ„ÄÅÊ°åÈù¢Ôºàwebkit„ÄÅelectronÔºâ„ÄÅÁßªÂä®ÔºàweexÔºâ„ÄÅÂ§ßÊï∞ÊçÆÔºàsparkÔºâ„ÄÅËôöÊãüÂåñ‰∫ëËÆ°ÁÆóÔºàMesos„ÄÅdocker„ÄÅKubernetesÔºâ„ÄÅÂÆâÂÖ®ÁΩëÁªúÈÄö‰ø°Âä†ÂØÜÊùÉÈôêËÆ§ËØÅÔºàopenSSLÔºâ„ÄÅËΩØ‰ª∂Â∑•Á®ãÔºàÈ°πÁõÆÂºÄÂèëÁÆ°ÁêÜÔºâ„ÄÅÂå∫ÂùóÈìæ„ÄÅVR„ÄÅ‰ª£Á†ÅÁîüÊàê„ÄÅËÆ§Áü•ÂøÉÁêÜ„ÄÅÂ§çÊùÇÁ≥ªÁªü„ÄÅÁü•ËØÜÂÖ±‰∫´ÂçèËÆÆ‰∫ßÊùÉ„ÄÅÁ§æÁæ§‰ΩìÈ™åÁªèÊµé„ÄÇ \n „ÄêÂ∑•‰ΩúÂàÜËß£„Äë ÂÖ≥ÈîÆÂú®‰∫é ÔºöÁªü‰∏ÄËÆ§ËØÜ„ÄÅÂ∑•ÂÖ∑ÊîØÊåÅ„ÄÅÊúâÊïàÁßØÁ¥ØÂèØÊåÅÁª≠ÂèëÂ±ï„ÄÇ \n \n ‰∏öÂä°Âª∫Ê®°ÔºàÊô∫ËÉΩÁü•ËØÜÁÆ°ÁêÜGTDÁêÜËÆ∫‰ΩìÁ≥ªÔºâÔºöÊ†∏ÂøÉÊäΩË±°Ê®°ÂûãÔºå‰∫∫ÊÄßÂª∫Ê®°„ÄÇ \n ‰∫ßÂìÅËÆæËÆ°Ôºà‰∏™‰∫∫Êô∫ËÉΩÂä©ÁêÜÔºâÔºö‰∫ßÂìÅËßÑÂàí„ÄÅËôöÊãüÂΩ¢Ë±°UIËÆæËÆ°„ÄÅÁ´ûÂìÅÂàÜÊûê„ÄÇ ÂèÇËÄÉ‰∫ßÂìÅ Ôºöprotege„ÄÅvscode„ÄÅquip„ÄÅknowledgebuilder„ÄÅmetacademy„ÄÅwiki„ÄÅCSDNÁü•ËØÜÂ∫ì„ÄÅsketchboard„ÄÅfeedly„ÄÅonenoteÁîªÊùø„ÄÅfoxmail„ÄÅ‰∫¨‰∏úÈòÖËØª„ÄÅqqÈü≥‰πê„ÄÅNetLogo„ÄÅflyinglogic„ÄÅsourceinsight„ÄÅÂπïÂ∏É„ÄÅAnki„ÄÅwolframalpha„ÄÇ \n ÊäÄÊúØÊû∂ÊûÑÔºàÈÄöÁî®Êô∫ËÉΩÁ≥ªÁªüÔºâÔºöÂàÜÂ∏ÉÂºèËÆ°ÁÆóÂ≠òÂÇ®Â§öÊô∫ËÉΩ‰ΩìÂçèÂêåÁ≥ªÁªüÔºöÊôÆÈÄÇÁΩëÊ†ºËØ≠‰πâ‰∫∫Á±ªËÆ°ÁÆó„ÄÇÂÖ®Âπ≥Âè∞„ÄÅÂæÆÊúçÂä°„ÄÅÊ†∏ÂøÉÁÆóÊ≥ï„ÄÅÊäÄÊúØÈÄâÂûã„ÄÅÊµãËØïÈÉ®ÁΩ≤„ÄÇC++„ÄÅPython„ÄÅjs„ÄÅHTML„ÄÇ \n ÂïÜ‰∏öËÆ°ÂàíÔºàSaaS ËΩØ‰ª∂Âç≥ÊúçÂä°ÔºâÔºö‰ª•ËΩØ‰ª∂‰∫ßÂìÅ‰∏∫‰∏≠ÂøÉÁöÑÂ¢ûÂÄºÊúçÂä°„ÄÅÂìÅÁâåËøêËê•Êé®ÂπøËê•ÈîÄ„ÄÇ \n È°πÁõÆÁÆ°ÁêÜÔºàÂ∞è‰ª£‰ª∑ËææÂà∞ÁõÆÁöÑÔºâÔºöÊïèÊç∑Ëø≠‰ª£„ÄÅËøáÁ®ãÊîπËøõ„ÄÅÈÖçÁΩÆÁÆ°ÁêÜ„ÄÇ \n Á§æÁæ§Âª∫ËÆæÔºàÂà©ÁõäÂÖ±Âêå‰ΩìËÅîÁõüÔºâÔºöÊñáÂåñÁêÜÂøµÈõÜ‰ΩìÊô∫ÊÖß„ÄÅÊâ©Â§ßÂΩ±Âìç„ÄÇ \n Áü•ËØÜÂàõ‰ΩúÔºàÁü•ËØÜÁÆ°ÁêÜÁ≠âÈ¢ÜÂüüÁü•ËØÜÔºâÔºöÁü•ËØÜÁÆ°',
      image:
        'https://opengraph.githubassets.com/935c4954d4a340aff679b550e201df566a4f53b442922a997e8a83570a564195/putaodoudou/kmagent',
      favicon: 'https://github.com/fluidicon.png',
    },
  ],
  costDollars: {
    total: 0.015,
    search: {
      neural: 0.005,
    },
    contents: {
      text: 0.01,
    },
  },
};
