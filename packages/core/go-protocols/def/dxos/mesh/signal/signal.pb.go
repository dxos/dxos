//
// Copyright 2022 DXOS.org
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: dxos/mesh/signal.proto

package signal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalState int32

const (
	// / Connection is being established.
	SignalState_CONNECTING SignalState = 0
	// / Connection is being re-established.
	SignalState_RECONNECTING SignalState = 1
	// / Connected.
	SignalState_CONNECTED SignalState = 2
	// / Server terminated the connection. Socket will be reconnected.
	SignalState_DISCONNECTED SignalState = 3
	// / Server terminated the connection with an ERROR. Socket will be reconnected.
	SignalState_ERROR SignalState = 4
	// / Socket was closed.
	SignalState_CLOSED SignalState = 5
)

// Enum value maps for SignalState.
var (
	SignalState_name = map[int32]string{
		0: "CONNECTING",
		1: "RECONNECTING",
		2: "CONNECTED",
		3: "DISCONNECTED",
		4: "ERROR",
		5: "CLOSED",
	}
	SignalState_value = map[string]int32{
		"CONNECTING":   0,
		"RECONNECTING": 1,
		"CONNECTED":    2,
		"DISCONNECTED": 3,
		"ERROR":        4,
		"CLOSED":       5,
	}
)

func (x SignalState) Enum() *SignalState {
	p := new(SignalState)
	*p = x
	return p
}

func (x SignalState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalState) Descriptor() protoreflect.EnumDescriptor {
	return file_dxos_mesh_signal_proto_enumTypes[0].Descriptor()
}

func (SignalState) Type() protoreflect.EnumType {
	return &file_dxos_mesh_signal_proto_enumTypes[0]
}

func (x SignalState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalState.Descriptor instead.
func (SignalState) EnumDescriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{0}
}

type JoinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swarm    []byte           `protobuf:"bytes,1,opt,name=swarm,proto3" json:"swarm,omitempty"`
	Peer     []byte           `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`
	Metadata *structpb.Struct `protobuf:"bytes,3,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{0}
}

func (x *JoinRequest) GetSwarm() []byte {
	if x != nil {
		return x.Swarm
	}
	return nil
}

func (x *JoinRequest) GetPeer() []byte {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *JoinRequest) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(egor): Rename to `sender`.
	Author    []byte           `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Recipient []byte           `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Payload   *anypb.Any       `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Metadata  *structpb.Struct `protobuf:"bytes,4,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetAuthor() []byte {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *Message) GetRecipient() []byte {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Message) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Message) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ReceptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer []byte `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *ReceptionRequest) Reset() {
	*x = ReceptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceptionRequest) ProtoMessage() {}

func (x *ReceptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceptionRequest.ProtoReflect.Descriptor instead.
func (*ReceptionRequest) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{2}
}

func (x *ReceptionRequest) GetPeer() []byte {
	if x != nil {
		return x.Peer
	}
	return nil
}

// / Goes on Pub/Sub swarm topic and as a Join stream in RPC.
type SwarmEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*SwarmEvent_PeerAvailable_
	//	*SwarmEvent_PeerLeft_
	Event isSwarmEvent_Event `protobuf_oneof:"event"`
}

func (x *SwarmEvent) Reset() {
	*x = SwarmEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwarmEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwarmEvent) ProtoMessage() {}

func (x *SwarmEvent) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwarmEvent.ProtoReflect.Descriptor instead.
func (*SwarmEvent) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{3}
}

func (m *SwarmEvent) GetEvent() isSwarmEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *SwarmEvent) GetPeerAvailable() *SwarmEvent_PeerAvailable {
	if x, ok := x.GetEvent().(*SwarmEvent_PeerAvailable_); ok {
		return x.PeerAvailable
	}
	return nil
}

func (x *SwarmEvent) GetPeerLeft() *SwarmEvent_PeerLeft {
	if x, ok := x.GetEvent().(*SwarmEvent_PeerLeft_); ok {
		return x.PeerLeft
	}
	return nil
}

type isSwarmEvent_Event interface {
	isSwarmEvent_Event()
}

type SwarmEvent_PeerAvailable_ struct {
	// / The peer was announced as available on the swarm.
	PeerAvailable *SwarmEvent_PeerAvailable `protobuf:"bytes,1,opt,name=peer_available,json=peerAvailable,proto3,oneof"`
}

type SwarmEvent_PeerLeft_ struct {
	// / The peer left, or their announcement timed out.
	PeerLeft *SwarmEvent_PeerLeft `protobuf:"bytes,2,opt,name=peer_left,json=peerLeft,proto3,oneof"`
}

func (*SwarmEvent_PeerAvailable_) isSwarmEvent_Event() {}

func (*SwarmEvent_PeerLeft_) isSwarmEvent_Event() {}

// / Goes on a Pub/Sub host topic.
type HostEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*HostEvent_AnnounceBack_
	Event isHostEvent_Event `protobuf_oneof:"event"`
}

func (x *HostEvent) Reset() {
	*x = HostEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostEvent) ProtoMessage() {}

func (x *HostEvent) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostEvent.ProtoReflect.Descriptor instead.
func (*HostEvent) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{4}
}

func (m *HostEvent) GetEvent() isHostEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *HostEvent) GetAnnounceBack() *HostEvent_AnnounceBack {
	if x, ok := x.GetEvent().(*HostEvent_AnnounceBack_); ok {
		return x.AnnounceBack
	}
	return nil
}

type isHostEvent_Event interface {
	isHostEvent_Event()
}

type HostEvent_AnnounceBack_ struct {
	AnnounceBack *HostEvent_AnnounceBack `protobuf:"bytes,1,opt,name=announce_back,json=announceBack,proto3,oneof"`
}

func (*HostEvent_AnnounceBack_) isHostEvent_Event() {}

// / Goes on Pub/Sub peer topic.
type PeerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*PeerEvent_Message
	Event isPeerEvent_Event `protobuf_oneof:"event"`
}

func (x *PeerEvent) Reset() {
	*x = PeerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerEvent) ProtoMessage() {}

func (x *PeerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerEvent.ProtoReflect.Descriptor instead.
func (*PeerEvent) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{5}
}

func (m *PeerEvent) GetEvent() isPeerEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *PeerEvent) GetMessage() *Message {
	if x, ok := x.GetEvent().(*PeerEvent_Message); ok {
		return x.Message
	}
	return nil
}

type isPeerEvent_Event interface {
	isPeerEvent_Event()
}

type PeerEvent_Message struct {
	Message *Message `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

func (*PeerEvent_Message) isPeerEvent_Event() {}

// Announce peer available on swarm.
type SwarmEvent_PeerAvailable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer  []byte                 `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Since *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=since,proto3" json:"since,omitempty"`
	// When, if at all (handle the default value as not), this availability would expires were it not re-announced, like
	// periodically in Pub/Sub with some margin such that Pub/Sub network partitions lead to offline statuses.
	Until *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=until,proto3,oneof" json:"until,omitempty"`
	// / Only relevant in Pub/Sub. Optional, the host topic to eagerly send PeerAvailable messages back to.
	AnnounceBackToHost []byte `protobuf:"bytes,4,opt,name=announce_back_to_host,json=announceBackToHost,proto3,oneof" json:"announce_back_to_host,omitempty"`
}

func (x *SwarmEvent_PeerAvailable) Reset() {
	*x = SwarmEvent_PeerAvailable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwarmEvent_PeerAvailable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwarmEvent_PeerAvailable) ProtoMessage() {}

func (x *SwarmEvent_PeerAvailable) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwarmEvent_PeerAvailable.ProtoReflect.Descriptor instead.
func (*SwarmEvent_PeerAvailable) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{3, 0}
}

func (x *SwarmEvent_PeerAvailable) GetPeer() []byte {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *SwarmEvent_PeerAvailable) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *SwarmEvent_PeerAvailable) GetUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.Until
	}
	return nil
}

func (x *SwarmEvent_PeerAvailable) GetAnnounceBackToHost() []byte {
	if x != nil {
		return x.AnnounceBackToHost
	}
	return nil
}

type SwarmEvent_PeerLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer []byte `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *SwarmEvent_PeerLeft) Reset() {
	*x = SwarmEvent_PeerLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwarmEvent_PeerLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwarmEvent_PeerLeft) ProtoMessage() {}

func (x *SwarmEvent_PeerLeft) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwarmEvent_PeerLeft.ProtoReflect.Descriptor instead.
func (*SwarmEvent_PeerLeft) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{3, 1}
}

func (x *SwarmEvent_PeerLeft) GetPeer() []byte {
	if x != nil {
		return x.Peer
	}
	return nil
}

type HostEvent_AnnounceBack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swarm         []byte                    `protobuf:"bytes,1,opt,name=swarm,proto3" json:"swarm,omitempty"`
	PeerAvailable *SwarmEvent_PeerAvailable `protobuf:"bytes,2,opt,name=peer_available,json=peerAvailable,proto3" json:"peer_available,omitempty"`
}

func (x *HostEvent_AnnounceBack) Reset() {
	*x = HostEvent_AnnounceBack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_mesh_signal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostEvent_AnnounceBack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostEvent_AnnounceBack) ProtoMessage() {}

func (x *HostEvent_AnnounceBack) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_mesh_signal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostEvent_AnnounceBack.ProtoReflect.Descriptor instead.
func (*HostEvent_AnnounceBack) Descriptor() ([]byte, []int) {
	return file_dxos_mesh_signal_proto_rawDescGZIP(), []int{4, 0}
}

func (x *HostEvent_AnnounceBack) GetSwarm() []byte {
	if x != nil {
		return x.Swarm
	}
	return nil
}

func (x *HostEvent_AnnounceBack) GetPeerAvailable() *SwarmEvent_PeerAvailable {
	if x != nil {
		return x.PeerAvailable
	}
	return nil
}

var File_dxos_mesh_signal_proto protoreflect.FileDescriptor

var file_dxos_mesh_signal_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x7e, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb6, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x10, 0x52, 0x65,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x22, 0xbb, 0x03, 0x0a, 0x0a, 0x53, 0x77, 0x61, 0x72, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x53, 0x0a, 0x0e, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x78, 0x6f, 0x73,
	0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x77, 0x61,
	0x72, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x78, 0x6f, 0x73,
	0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x77, 0x61,
	0x72, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x1a, 0xe8, 0x01, 0x0a,
	0x0d, 0x50, 0x65, 0x65, 0x72, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x00, 0x52, 0x05, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x12, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x6f, 0x48, 0x6f, 0x73, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x18, 0x0a,
	0x16, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x74, 0x6f, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x1a, 0x1e, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x4c,
	0x65, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0xde, 0x01, 0x0a, 0x09, 0x48, 0x6f, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4f,
	0x0a, 0x0d, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x1a,
	0x77, 0x0a, 0x0c, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x77, 0x61, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x73, 0x77, 0x61, 0x72, 0x6d, 0x12, 0x51, 0x0a, 0x0e, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x64, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x2e, 0x53, 0x77, 0x61, 0x72, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x4b, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0x67,
	0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x05, 0x32, 0xe5, 0x01, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x45, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x64, 0x78, 0x6f,
	0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x78, 0x6f, 0x73,
	0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x77, 0x61,
	0x72, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x12, 0x52, 0x0a, 0x0f, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x64,
	0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x30, 0x01, 0x12, 0x40, 0x0a,
	0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x2e, 0x64,
	0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x78,
	0x6f, 0x73, 0x2f, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65,
	0x66, 0x2f, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dxos_mesh_signal_proto_rawDescOnce sync.Once
	file_dxos_mesh_signal_proto_rawDescData = file_dxos_mesh_signal_proto_rawDesc
)

func file_dxos_mesh_signal_proto_rawDescGZIP() []byte {
	file_dxos_mesh_signal_proto_rawDescOnce.Do(func() {
		file_dxos_mesh_signal_proto_rawDescData = protoimpl.X.CompressGZIP(file_dxos_mesh_signal_proto_rawDescData)
	})
	return file_dxos_mesh_signal_proto_rawDescData
}

var file_dxos_mesh_signal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dxos_mesh_signal_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dxos_mesh_signal_proto_goTypes = []interface{}{
	(SignalState)(0),                 // 0: dxos.mesh.signal.SignalState
	(*JoinRequest)(nil),              // 1: dxos.mesh.signal.JoinRequest
	(*Message)(nil),                  // 2: dxos.mesh.signal.Message
	(*ReceptionRequest)(nil),         // 3: dxos.mesh.signal.ReceptionRequest
	(*SwarmEvent)(nil),               // 4: dxos.mesh.signal.SwarmEvent
	(*HostEvent)(nil),                // 5: dxos.mesh.signal.HostEvent
	(*PeerEvent)(nil),                // 6: dxos.mesh.signal.PeerEvent
	(*SwarmEvent_PeerAvailable)(nil), // 7: dxos.mesh.signal.SwarmEvent.PeerAvailable
	(*SwarmEvent_PeerLeft)(nil),      // 8: dxos.mesh.signal.SwarmEvent.PeerLeft
	(*HostEvent_AnnounceBack)(nil),   // 9: dxos.mesh.signal.HostEvent.AnnounceBack
	(*structpb.Struct)(nil),          // 10: google.protobuf.Struct
	(*anypb.Any)(nil),                // 11: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),            // 13: google.protobuf.Empty
}
var file_dxos_mesh_signal_proto_depIdxs = []int32{
	10, // 0: dxos.mesh.signal.JoinRequest.metadata:type_name -> google.protobuf.Struct
	11, // 1: dxos.mesh.signal.Message.payload:type_name -> google.protobuf.Any
	10, // 2: dxos.mesh.signal.Message.metadata:type_name -> google.protobuf.Struct
	7,  // 3: dxos.mesh.signal.SwarmEvent.peer_available:type_name -> dxos.mesh.signal.SwarmEvent.PeerAvailable
	8,  // 4: dxos.mesh.signal.SwarmEvent.peer_left:type_name -> dxos.mesh.signal.SwarmEvent.PeerLeft
	9,  // 5: dxos.mesh.signal.HostEvent.announce_back:type_name -> dxos.mesh.signal.HostEvent.AnnounceBack
	2,  // 6: dxos.mesh.signal.PeerEvent.message:type_name -> dxos.mesh.signal.Message
	12, // 7: dxos.mesh.signal.SwarmEvent.PeerAvailable.since:type_name -> google.protobuf.Timestamp
	12, // 8: dxos.mesh.signal.SwarmEvent.PeerAvailable.until:type_name -> google.protobuf.Timestamp
	7,  // 9: dxos.mesh.signal.HostEvent.AnnounceBack.peer_available:type_name -> dxos.mesh.signal.SwarmEvent.PeerAvailable
	1,  // 10: dxos.mesh.signal.Signal.Join:input_type -> dxos.mesh.signal.JoinRequest
	3,  // 11: dxos.mesh.signal.Signal.ReceiveMessages:input_type -> dxos.mesh.signal.ReceptionRequest
	2,  // 12: dxos.mesh.signal.Signal.SendMessage:input_type -> dxos.mesh.signal.Message
	4,  // 13: dxos.mesh.signal.Signal.Join:output_type -> dxos.mesh.signal.SwarmEvent
	2,  // 14: dxos.mesh.signal.Signal.ReceiveMessages:output_type -> dxos.mesh.signal.Message
	13, // 15: dxos.mesh.signal.Signal.SendMessage:output_type -> google.protobuf.Empty
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_dxos_mesh_signal_proto_init() }
func file_dxos_mesh_signal_proto_init() {
	if File_dxos_mesh_signal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dxos_mesh_signal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_mesh_signal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_mesh_signal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_mesh_signal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwarmEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_mesh_signal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_mesh_signal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_mesh_signal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwarmEvent_PeerAvailable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_mesh_signal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwarmEvent_PeerLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_mesh_signal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostEvent_AnnounceBack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dxos_mesh_signal_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_dxos_mesh_signal_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_dxos_mesh_signal_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SwarmEvent_PeerAvailable_)(nil),
		(*SwarmEvent_PeerLeft_)(nil),
	}
	file_dxos_mesh_signal_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*HostEvent_AnnounceBack_)(nil),
	}
	file_dxos_mesh_signal_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*PeerEvent_Message)(nil),
	}
	file_dxos_mesh_signal_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dxos_mesh_signal_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dxos_mesh_signal_proto_goTypes,
		DependencyIndexes: file_dxos_mesh_signal_proto_depIdxs,
		EnumInfos:         file_dxos_mesh_signal_proto_enumTypes,
		MessageInfos:      file_dxos_mesh_signal_proto_msgTypes,
	}.Build()
	File_dxos_mesh_signal_proto = out.File
	file_dxos_mesh_signal_proto_rawDesc = nil
	file_dxos_mesh_signal_proto_goTypes = nil
	file_dxos_mesh_signal_proto_depIdxs = nil
}
