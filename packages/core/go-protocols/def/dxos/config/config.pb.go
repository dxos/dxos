//
// Copyright 2021 DXOS.org
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: dxos/config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Runtime_Client_Storage_StorageDriver int32

const (
	Runtime_Client_Storage_RAM     Runtime_Client_Storage_StorageDriver = 0
	Runtime_Client_Storage_IDB     Runtime_Client_Storage_StorageDriver = 1
	Runtime_Client_Storage_CHROME  Runtime_Client_Storage_StorageDriver = 2
	Runtime_Client_Storage_FIREFOX Runtime_Client_Storage_StorageDriver = 3
	Runtime_Client_Storage_NODE    Runtime_Client_Storage_StorageDriver = 4
	Runtime_Client_Storage_WEBFS   Runtime_Client_Storage_StorageDriver = 5
	// Key storage only.
	Runtime_Client_Storage_LEVELJS  Runtime_Client_Storage_StorageDriver = 11
	Runtime_Client_Storage_JSONDOWN Runtime_Client_Storage_StorageDriver = 12
)

// Enum value maps for Runtime_Client_Storage_StorageDriver.
var (
	Runtime_Client_Storage_StorageDriver_name = map[int32]string{
		0:  "RAM",
		1:  "IDB",
		2:  "CHROME",
		3:  "FIREFOX",
		4:  "NODE",
		5:  "WEBFS",
		11: "LEVELJS",
		12: "JSONDOWN",
	}
	Runtime_Client_Storage_StorageDriver_value = map[string]int32{
		"RAM":      0,
		"IDB":      1,
		"CHROME":   2,
		"FIREFOX":  3,
		"NODE":     4,
		"WEBFS":    5,
		"LEVELJS":  11,
		"JSONDOWN": 12,
	}
)

func (x Runtime_Client_Storage_StorageDriver) Enum() *Runtime_Client_Storage_StorageDriver {
	p := new(Runtime_Client_Storage_StorageDriver)
	*p = x
	return p
}

func (x Runtime_Client_Storage_StorageDriver) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Runtime_Client_Storage_StorageDriver) Descriptor() protoreflect.EnumDescriptor {
	return file_dxos_config_proto_enumTypes[0].Descriptor()
}

func (Runtime_Client_Storage_StorageDriver) Type() protoreflect.EnumType {
	return &file_dxos_config_proto_enumTypes[0]
}

func (x Runtime_Client_Storage_StorageDriver) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Runtime_Client_Storage_StorageDriver.Descriptor instead.
func (Runtime_Client_Storage_StorageDriver) EnumDescriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 0, 0, 0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version *int32   `protobuf:"varint,1,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Package *Package `protobuf:"bytes,2,opt,name=package,proto3,oneof" json:"package,omitempty"`
	Runtime *Runtime `protobuf:"bytes,3,opt,name=runtime,proto3,oneof" json:"runtime,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *Config) GetPackage() *Package {
	if x != nil {
		return x.Package
	}
	return nil
}

func (x *Config) GetRuntime() *Runtime {
	if x != nil {
		return x.Runtime
	}
	return nil
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	License *string   `protobuf:"bytes,1,opt,name=license,proto3,oneof" json:"license,omitempty"`
	Repos   []*Repo   `protobuf:"bytes,2,rep,name=repos,proto3" json:"repos,omitempty"`
	Modules []*Module `protobuf:"bytes,3,rep,name=modules,proto3" json:"modules,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{1}
}

func (x *Package) GetLicense() string {
	if x != nil && x.License != nil {
		return *x.License
	}
	return ""
}

func (x *Package) GetRepos() []*Repo {
	if x != nil {
		return x.Repos
	}
	return nil
}

func (x *Package) GetModules() []*Module {
	if x != nil {
		return x.Modules
	}
	return nil
}

// TODO(wittjosiah): Shared with registry types. Factor out?
type Repo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Url     *string `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url,omitempty"`
	Version *string `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
}

func (x *Repo) Reset() {
	*x = Repo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repo) ProtoMessage() {}

func (x *Repo) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repo.ProtoReflect.Descriptor instead.
func (*Repo) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{2}
}

func (x *Repo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Repo) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Repo) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

// Unit of deployment.
type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *string `protobuf:"bytes,8,opt,name=id,proto3,oneof" json:"id,omitempty"`     // TODO(burdon): Ensured FQ (e.g., 'dxos.app.xxx')
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"` // TODO(burdon): Replace with id (or key?)
	Type *string `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"` // TODO(burdon): Define namespace (e.g., 'dxos.org/type/frame' vs. 'dxos.type.frame')
	// TODO(burdon): Start at 10.
	DisplayName *string  `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3,oneof" json:"display_name,omitempty"`
	Description *string  `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Tags        []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Bundle      []byte   `protobuf:"bytes,6,opt,name=bundle,proto3,oneof" json:"bundle,omitempty"` // TODO(burdon): ???
	// TODO(burdon): Remove.
	Tunnel *bool `protobuf:"varint,7,opt,name=tunnel,proto3,oneof" json:"tunnel,omitempty"`
	// TODO(burdon): Start at 100.
	Deps  []*Module     `protobuf:"bytes,10,rep,name=deps,proto3" json:"deps,omitempty"` // TODO(burdon): E.g., types.
	Build *Module_Build `protobuf:"bytes,100,opt,name=build,proto3,oneof" json:"build,omitempty"`
	Repos []*Repo       `protobuf:"bytes,101,rep,name=repos,proto3" json:"repos,omitempty"`
	// / Data which will be included as apart of DXNS record.
	// / The data will be validated based on the type when being published.
	Record *anypb.Any `protobuf:"bytes,200,opt,name=record,proto3,oneof" json:"record,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{3}
}

func (x *Module) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Module) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Module) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Module) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *Module) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Module) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Module) GetBundle() []byte {
	if x != nil {
		return x.Bundle
	}
	return nil
}

func (x *Module) GetTunnel() bool {
	if x != nil && x.Tunnel != nil {
		return *x.Tunnel
	}
	return false
}

func (x *Module) GetDeps() []*Module {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *Module) GetBuild() *Module_Build {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *Module) GetRepos() []*Repo {
	if x != nil {
		return x.Repos
	}
	return nil
}

func (x *Module) GetRecord() *anypb.Any {
	if x != nil {
		return x.Record
	}
	return nil
}

type Runtime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client   *Runtime_Client   `protobuf:"bytes,1,opt,name=client,proto3,oneof" json:"client,omitempty"`
	App      *Runtime_App      `protobuf:"bytes,2,opt,name=app,proto3,oneof" json:"app,omitempty"`
	Cli      *Runtime_CLI      `protobuf:"bytes,3,opt,name=cli,proto3,oneof" json:"cli,omitempty"`
	Props    *Runtime_Props    `protobuf:"bytes,4,opt,name=props,proto3,oneof" json:"props,omitempty"`
	Services *Runtime_Services `protobuf:"bytes,5,opt,name=services,proto3,oneof" json:"services,omitempty"`
	System   *Runtime_System   `protobuf:"bytes,6,opt,name=system,proto3,oneof" json:"system,omitempty"`
	Kube     *Runtime_Kube     `protobuf:"bytes,7,opt,name=kube,proto3,oneof" json:"kube,omitempty"`
	Keys     []*Runtime_Keys   `protobuf:"bytes,8,rep,name=keys,proto3" json:"keys,omitempty"`
	Agent    *Runtime_Agent    `protobuf:"bytes,9,opt,name=agent,proto3,oneof" json:"agent,omitempty"`
}

func (x *Runtime) Reset() {
	*x = Runtime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime) ProtoMessage() {}

func (x *Runtime) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime.ProtoReflect.Descriptor instead.
func (*Runtime) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4}
}

func (x *Runtime) GetClient() *Runtime_Client {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Runtime) GetApp() *Runtime_App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Runtime) GetCli() *Runtime_CLI {
	if x != nil {
		return x.Cli
	}
	return nil
}

func (x *Runtime) GetProps() *Runtime_Props {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Runtime) GetServices() *Runtime_Services {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Runtime) GetSystem() *Runtime_System {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Runtime) GetKube() *Runtime_Kube {
	if x != nil {
		return x.Kube
	}
	return nil
}

func (x *Runtime) GetKeys() []*Runtime_Keys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *Runtime) GetAgent() *Runtime_Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

type Module_Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command *string          `protobuf:"bytes,1,opt,name=command,proto3,oneof" json:"command,omitempty"`
	Outdir  *string          `protobuf:"bytes,2,opt,name=outdir,proto3,oneof" json:"outdir,omitempty"`
	Version *string          `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Tag     *string          `protobuf:"bytes,4,opt,name=tag,proto3,oneof" json:"tag,omitempty"`
	Env     *structpb.Struct `protobuf:"bytes,10,opt,name=env,proto3,oneof" json:"env,omitempty"`
}

func (x *Module_Build) Reset() {
	*x = Module_Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module_Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module_Build) ProtoMessage() {}

func (x *Module_Build) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module_Build.ProtoReflect.Descriptor instead.
func (*Module_Build) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Module_Build) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *Module_Build) GetOutdir() string {
	if x != nil && x.Outdir != nil {
		return *x.Outdir
	}
	return ""
}

func (x *Module_Build) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *Module_Build) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *Module_Build) GetEnv() *structpb.Struct {
	if x != nil {
		return x.Env
	}
	return nil
}

type Runtime_Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log             *Runtime_Client_Log     `protobuf:"bytes,1,opt,name=log,proto3,oneof" json:"log,omitempty"`
	Storage         *Runtime_Client_Storage `protobuf:"bytes,2,opt,name=storage,proto3,oneof" json:"storage,omitempty"`
	EnableSnapshots *bool                   `protobuf:"varint,3,opt,name=enable_snapshots,json=enableSnapshots,proto3,oneof" json:"enable_snapshots,omitempty"`
	// / Milliseconds
	SnapshotInterval *int32 `protobuf:"varint,4,opt,name=snapshot_interval,json=snapshotInterval,proto3,oneof" json:"snapshot_interval,omitempty"`
	// / Milliseconds
	InvitationExpiration *int32 `protobuf:"varint,5,opt,name=invitation_expiration,json=invitationExpiration,proto3,oneof" json:"invitation_expiration,omitempty"`
	// / Location of the remote client host.
	// TODO(burdon): Rename vault_endpoint (generalize http/ws; drop vault.html).
	RemoteSource *string `protobuf:"bytes,6,opt,name=remote_source,json=remoteSource,proto3,oneof" json:"remote_source,omitempty"`
	// Authenticate via `Sec-WebSocket-Protocol` header hack.
	RemoteSourceAuthenticationToken *string `protobuf:"bytes,8,opt,name=remote_source_authentication_token,json=remoteSourceAuthenticationToken,proto3,oneof" json:"remote_source_authentication_token,omitempty"`
	// / Connect to and serve client services to a remote proxy.
	DevtoolsProxy *string `protobuf:"bytes,7,opt,name=devtools_proxy,json=devtoolsProxy,proto3,oneof" json:"devtools_proxy,omitempty"`
	// / Spaces will stay in SpaceState.CLOSED until explicitly opened. Speeds up client-services initialization.
	LazySpaceOpen *bool `protobuf:"varint,9,opt,name=lazy_space_open,json=lazySpaceOpen,proto3,oneof" json:"lazy_space_open,omitempty"`
}

func (x *Runtime_Client) Reset() {
	*x = Runtime_Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Client) ProtoMessage() {}

func (x *Runtime_Client) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Client.ProtoReflect.Descriptor instead.
func (*Runtime_Client) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Runtime_Client) GetLog() *Runtime_Client_Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Runtime_Client) GetStorage() *Runtime_Client_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Runtime_Client) GetEnableSnapshots() bool {
	if x != nil && x.EnableSnapshots != nil {
		return *x.EnableSnapshots
	}
	return false
}

func (x *Runtime_Client) GetSnapshotInterval() int32 {
	if x != nil && x.SnapshotInterval != nil {
		return *x.SnapshotInterval
	}
	return 0
}

func (x *Runtime_Client) GetInvitationExpiration() int32 {
	if x != nil && x.InvitationExpiration != nil {
		return *x.InvitationExpiration
	}
	return 0
}

func (x *Runtime_Client) GetRemoteSource() string {
	if x != nil && x.RemoteSource != nil {
		return *x.RemoteSource
	}
	return ""
}

func (x *Runtime_Client) GetRemoteSourceAuthenticationToken() string {
	if x != nil && x.RemoteSourceAuthenticationToken != nil {
		return *x.RemoteSourceAuthenticationToken
	}
	return ""
}

func (x *Runtime_Client) GetDevtoolsProxy() string {
	if x != nil && x.DevtoolsProxy != nil {
		return *x.DevtoolsProxy
	}
	return ""
}

func (x *Runtime_Client) GetLazySpaceOpen() bool {
	if x != nil && x.LazySpaceOpen != nil {
		return *x.LazySpaceOpen
	}
	return false
}

type Runtime_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org       *string                `protobuf:"bytes,1,opt,name=org,proto3,oneof" json:"org,omitempty"`
	Theme     *string                `protobuf:"bytes,2,opt,name=theme,proto3,oneof" json:"theme,omitempty"`
	Website   *string                `protobuf:"bytes,3,opt,name=website,proto3,oneof" json:"website,omitempty"`
	PublicUrl *string                `protobuf:"bytes,4,opt,name=public_url,json=publicUrl,proto3,oneof" json:"public_url,omitempty"`
	Build     *Runtime_App_BuildInfo `protobuf:"bytes,100,opt,name=build,proto3,oneof" json:"build,omitempty"`
	Env       *structpb.Struct       `protobuf:"bytes,101,opt,name=env,proto3,oneof" json:"env,omitempty"`
}

func (x *Runtime_App) Reset() {
	*x = Runtime_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_App) ProtoMessage() {}

func (x *Runtime_App) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_App.ProtoReflect.Descriptor instead.
func (*Runtime_App) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Runtime_App) GetOrg() string {
	if x != nil && x.Org != nil {
		return *x.Org
	}
	return ""
}

func (x *Runtime_App) GetTheme() string {
	if x != nil && x.Theme != nil {
		return *x.Theme
	}
	return ""
}

func (x *Runtime_App) GetWebsite() string {
	if x != nil && x.Website != nil {
		return *x.Website
	}
	return ""
}

func (x *Runtime_App) GetPublicUrl() string {
	if x != nil && x.PublicUrl != nil {
		return *x.PublicUrl
	}
	return ""
}

func (x *Runtime_App) GetBuild() *Runtime_App_BuildInfo {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *Runtime_App) GetEnv() *structpb.Struct {
	if x != nil {
		return x.Env
	}
	return nil
}

type Runtime_Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugins []*Runtime_Agent_Plugin `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
}

func (x *Runtime_Agent) Reset() {
	*x = Runtime_Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Agent) ProtoMessage() {}

func (x *Runtime_Agent) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Agent.ProtoReflect.Descriptor instead.
func (*Runtime_Agent) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Runtime_Agent) GetPlugins() []*Runtime_Agent_Plugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

// CLI configuration
type Runtime_CLI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodePath  *string               `protobuf:"bytes,1,opt,name=node_path,json=nodePath,proto3,oneof" json:"node_path,omitempty"`
	App       *Runtime_CLI_AppServe `protobuf:"bytes,2,opt,name=app,proto3,oneof" json:"app,omitempty"`
	Console   *Runtime_CLI_Package  `protobuf:"bytes,3,opt,name=console,proto3,oneof" json:"console,omitempty"`
	Mdns      *Runtime_CLI_Package  `protobuf:"bytes,4,opt,name=mdns,proto3,oneof" json:"mdns,omitempty"`
	Signal    *Runtime_CLI_Package  `protobuf:"bytes,5,opt,name=signal,proto3,oneof" json:"signal,omitempty"`
	NpmClient *string               `protobuf:"bytes,6,opt,name=npm_client,json=npmClient,proto3,oneof" json:"npm_client,omitempty"`
	Channel   *string               `protobuf:"bytes,7,opt,name=channel,proto3,oneof" json:"channel,omitempty"`
}

func (x *Runtime_CLI) Reset() {
	*x = Runtime_CLI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_CLI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_CLI) ProtoMessage() {}

func (x *Runtime_CLI) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_CLI.ProtoReflect.Descriptor instead.
func (*Runtime_CLI) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 3}
}

func (x *Runtime_CLI) GetNodePath() string {
	if x != nil && x.NodePath != nil {
		return *x.NodePath
	}
	return ""
}

func (x *Runtime_CLI) GetApp() *Runtime_CLI_AppServe {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Runtime_CLI) GetConsole() *Runtime_CLI_Package {
	if x != nil {
		return x.Console
	}
	return nil
}

func (x *Runtime_CLI) GetMdns() *Runtime_CLI_Package {
	if x != nil {
		return x.Mdns
	}
	return nil
}

func (x *Runtime_CLI) GetSignal() *Runtime_CLI_Package {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *Runtime_CLI) GetNpmClient() string {
	if x != nil && x.NpmClient != nil {
		return *x.NpmClient
	}
	return ""
}

func (x *Runtime_CLI) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

type Runtime_Props struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title *string `protobuf:"bytes,1,opt,name=title,proto3,oneof" json:"title,omitempty"`
}

func (x *Runtime_Props) Reset() {
	*x = Runtime_Props{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Props) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Props) ProtoMessage() {}

func (x *Runtime_Props) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Props.ProtoReflect.Descriptor instead.
func (*Runtime_Props) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 4}
}

func (x *Runtime_Props) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type Runtime_System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug *string `protobuf:"bytes,1,opt,name=debug,proto3,oneof" json:"debug,omitempty"`
}

func (x *Runtime_System) Reset() {
	*x = Runtime_System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_System) ProtoMessage() {}

func (x *Runtime_System) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_System.ProtoReflect.Descriptor instead.
func (*Runtime_System) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 5}
}

func (x *Runtime_System) GetDebug() string {
	if x != nil && x.Debug != nil {
		return *x.Debug
	}
	return ""
}

// KUBE
type Runtime_Kube struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(burdon): Needs documentation/
	Host         string                     `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port         string                     `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Autoupdate   *Runtime_Kube_Autoupdate   `protobuf:"bytes,3,opt,name=autoupdate,proto3" json:"autoupdate,omitempty"`
	Https        *Runtime_Kube_Https        `protobuf:"bytes,4,opt,name=https,proto3" json:"https,omitempty"`
	P2P          *Runtime_Kube_P2P          `protobuf:"bytes,5,opt,name=p2p,proto3" json:"p2p,omitempty"`
	Confhost     string                     `protobuf:"bytes,6,opt,name=confhost,proto3" json:"confhost,omitempty"` // TODO(burdon): ?
	Env          []string                   `protobuf:"bytes,7,rep,name=env,proto3" json:"env,omitempty"`
	Alias        []string                   `protobuf:"bytes,8,rep,name=alias,proto3" json:"alias,omitempty"`
	Monitoring   *Runtime_Kube_Monitoring   `protobuf:"bytes,9,opt,name=monitoring,proto3" json:"monitoring,omitempty"`
	Trace        *Runtime_Kube_Trace        `protobuf:"bytes,10,opt,name=trace,proto3" json:"trace,omitempty"`
	Telemetry    *Runtime_Kube_Telemetry    `protobuf:"bytes,11,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
	Gravity      *Runtime_Kube_Gravity      `protobuf:"bytes,12,opt,name=gravity,proto3" json:"gravity,omitempty"`
	AppTunneling *Runtime_Kube_AppTunneling `protobuf:"bytes,13,opt,name=app_tunneling,json=appTunneling,proto3" json:"app_tunneling,omitempty"`
	Bots         *Runtime_Kube_Bots         `protobuf:"bytes,14,opt,name=bots,proto3" json:"bots,omitempty"`
	// TODO(nf): manage secret better.
	IpfsApiAuthorizations []*Runtime_Kube_KuboApiAuthorization `protobuf:"bytes,15,rep,name=ipfs_api_authorizations,json=ipfsApiAuthorizations,proto3" json:"ipfs_api_authorizations,omitempty"`
}

func (x *Runtime_Kube) Reset() {
	*x = Runtime_Kube{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube) ProtoMessage() {}

func (x *Runtime_Kube) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube.ProtoReflect.Descriptor instead.
func (*Runtime_Kube) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6}
}

func (x *Runtime_Kube) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Runtime_Kube) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Runtime_Kube) GetAutoupdate() *Runtime_Kube_Autoupdate {
	if x != nil {
		return x.Autoupdate
	}
	return nil
}

func (x *Runtime_Kube) GetHttps() *Runtime_Kube_Https {
	if x != nil {
		return x.Https
	}
	return nil
}

func (x *Runtime_Kube) GetP2P() *Runtime_Kube_P2P {
	if x != nil {
		return x.P2P
	}
	return nil
}

func (x *Runtime_Kube) GetConfhost() string {
	if x != nil {
		return x.Confhost
	}
	return ""
}

func (x *Runtime_Kube) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Runtime_Kube) GetAlias() []string {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *Runtime_Kube) GetMonitoring() *Runtime_Kube_Monitoring {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

func (x *Runtime_Kube) GetTrace() *Runtime_Kube_Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *Runtime_Kube) GetTelemetry() *Runtime_Kube_Telemetry {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

func (x *Runtime_Kube) GetGravity() *Runtime_Kube_Gravity {
	if x != nil {
		return x.Gravity
	}
	return nil
}

func (x *Runtime_Kube) GetAppTunneling() *Runtime_Kube_AppTunneling {
	if x != nil {
		return x.AppTunneling
	}
	return nil
}

func (x *Runtime_Kube) GetBots() *Runtime_Kube_Bots {
	if x != nil {
		return x.Bots
	}
	return nil
}

func (x *Runtime_Kube) GetIpfsApiAuthorizations() []*Runtime_Kube_KuboApiAuthorization {
	if x != nil {
		return x.IpfsApiAuthorizations
	}
	return nil
}

// DXOS Services.
type Runtime_Services struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kube         *Runtime_Services_Kube         `protobuf:"bytes,1,opt,name=kube,proto3,oneof" json:"kube,omitempty"`
	App          *Runtime_Services_AppServer    `protobuf:"bytes,2,opt,name=app,proto3,oneof" json:"app,omitempty"`
	Dxns         *Runtime_Services_Dxns         `protobuf:"bytes,3,opt,name=dxns,proto3,oneof" json:"dxns,omitempty"`
	Ipfs         *Runtime_Services_Ipfs         `protobuf:"bytes,4,opt,name=ipfs,proto3,oneof" json:"ipfs,omitempty"`
	Signaling    []*Runtime_Services_Signal     `protobuf:"bytes,5,rep,name=signaling,proto3" json:"signaling,omitempty"`
	Ice          []*Runtime_Services_Ice        `protobuf:"bytes,6,rep,name=ice,proto3" json:"ice,omitempty"`
	Machine      *Runtime_Services_Machine      `protobuf:"bytes,7,opt,name=machine,proto3,oneof" json:"machine,omitempty"`
	Bot          *Runtime_Services_BotHost      `protobuf:"bytes,8,opt,name=bot,proto3,oneof" json:"bot,omitempty"`
	Publisher    *Runtime_Services_Publisher    `protobuf:"bytes,9,opt,name=publisher,proto3,oneof" json:"publisher,omitempty"`
	Supervisor   *Runtime_Services_Supervisor   `protobuf:"bytes,10,opt,name=supervisor,proto3,oneof" json:"supervisor,omitempty"` // TODO(burdon): Promote to 1; start others at 10.
	Tunneling    *Runtime_Services_Tunneling    `protobuf:"bytes,11,opt,name=tunneling,proto3,oneof" json:"tunneling,omitempty"`
	Faasd        *Runtime_Services_Faasd        `protobuf:"bytes,12,opt,name=faasd,proto3,oneof" json:"faasd,omitempty"`
	AgentHosting *Runtime_Services_AgentHosting `protobuf:"bytes,13,opt,name=agent_hosting,json=agentHosting,proto3,oneof" json:"agent_hosting,omitempty"`
}

func (x *Runtime_Services) Reset() {
	*x = Runtime_Services{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services) ProtoMessage() {}

func (x *Runtime_Services) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services.ProtoReflect.Descriptor instead.
func (*Runtime_Services) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7}
}

func (x *Runtime_Services) GetKube() *Runtime_Services_Kube {
	if x != nil {
		return x.Kube
	}
	return nil
}

func (x *Runtime_Services) GetApp() *Runtime_Services_AppServer {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Runtime_Services) GetDxns() *Runtime_Services_Dxns {
	if x != nil {
		return x.Dxns
	}
	return nil
}

func (x *Runtime_Services) GetIpfs() *Runtime_Services_Ipfs {
	if x != nil {
		return x.Ipfs
	}
	return nil
}

func (x *Runtime_Services) GetSignaling() []*Runtime_Services_Signal {
	if x != nil {
		return x.Signaling
	}
	return nil
}

func (x *Runtime_Services) GetIce() []*Runtime_Services_Ice {
	if x != nil {
		return x.Ice
	}
	return nil
}

func (x *Runtime_Services) GetMachine() *Runtime_Services_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Runtime_Services) GetBot() *Runtime_Services_BotHost {
	if x != nil {
		return x.Bot
	}
	return nil
}

func (x *Runtime_Services) GetPublisher() *Runtime_Services_Publisher {
	if x != nil {
		return x.Publisher
	}
	return nil
}

func (x *Runtime_Services) GetSupervisor() *Runtime_Services_Supervisor {
	if x != nil {
		return x.Supervisor
	}
	return nil
}

func (x *Runtime_Services) GetTunneling() *Runtime_Services_Tunneling {
	if x != nil {
		return x.Tunneling
	}
	return nil
}

func (x *Runtime_Services) GetFaasd() *Runtime_Services_Faasd {
	if x != nil {
		return x.Faasd
	}
	return nil
}

func (x *Runtime_Services) GetAgentHosting() *Runtime_Services_AgentHosting {
	if x != nil {
		return x.AgentHosting
	}
	return nil
}

type Runtime_Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *Runtime_Keys) Reset() {
	*x = Runtime_Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Keys) ProtoMessage() {}

func (x *Runtime_Keys) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Keys.ProtoReflect.Descriptor instead.
func (*Runtime_Keys) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 8}
}

func (x *Runtime_Keys) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Runtime_Keys) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Runtime_Client_Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Persistent *bool                                 `protobuf:"varint,1,opt,name=persistent,proto3,oneof" json:"persistent,omitempty"`
	KeyStore   *Runtime_Client_Storage_StorageDriver `protobuf:"varint,2,opt,name=key_store,json=keyStore,proto3,enum=dxos.config.Runtime_Client_Storage_StorageDriver,oneof" json:"key_store,omitempty"`
	DataStore  *Runtime_Client_Storage_StorageDriver `protobuf:"varint,3,opt,name=data_store,json=dataStore,proto3,enum=dxos.config.Runtime_Client_Storage_StorageDriver,oneof" json:"data_store,omitempty"`
	DataRoot   *string                               `protobuf:"bytes,4,opt,name=data_root,json=dataRoot,proto3,oneof" json:"data_root,omitempty"`
	// *
	// @deprecated
	SpaceFragmentation *bool `protobuf:"varint,5,opt,name=space_fragmentation,json=spaceFragmentation,proto3,oneof" json:"space_fragmentation,omitempty"`
}

func (x *Runtime_Client_Storage) Reset() {
	*x = Runtime_Client_Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Client_Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Client_Storage) ProtoMessage() {}

func (x *Runtime_Client_Storage) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Client_Storage.ProtoReflect.Descriptor instead.
func (*Runtime_Client_Storage) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *Runtime_Client_Storage) GetPersistent() bool {
	if x != nil && x.Persistent != nil {
		return *x.Persistent
	}
	return false
}

func (x *Runtime_Client_Storage) GetKeyStore() Runtime_Client_Storage_StorageDriver {
	if x != nil && x.KeyStore != nil {
		return *x.KeyStore
	}
	return Runtime_Client_Storage_RAM
}

func (x *Runtime_Client_Storage) GetDataStore() Runtime_Client_Storage_StorageDriver {
	if x != nil && x.DataStore != nil {
		return *x.DataStore
	}
	return Runtime_Client_Storage_RAM
}

func (x *Runtime_Client_Storage) GetDataRoot() string {
	if x != nil && x.DataRoot != nil {
		return *x.DataRoot
	}
	return ""
}

func (x *Runtime_Client_Storage) GetSpaceFragmentation() bool {
	if x != nil && x.SpaceFragmentation != nil {
		return *x.SpaceFragmentation
	}
	return false
}

type Runtime_Client_Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *string `protobuf:"bytes,1,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	Prefix *string `protobuf:"bytes,2,opt,name=prefix,proto3,oneof" json:"prefix,omitempty"`
}

func (x *Runtime_Client_Log) Reset() {
	*x = Runtime_Client_Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Client_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Client_Log) ProtoMessage() {}

func (x *Runtime_Client_Log) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Client_Log.ProtoReflect.Descriptor instead.
func (*Runtime_Client_Log) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 0, 1}
}

func (x *Runtime_Client_Log) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *Runtime_Client_Log) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

type Runtime_App_BuildInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / RFC-3339 datetime string.
	Timestamp  *string `protobuf:"bytes,1,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	CommitHash *string `protobuf:"bytes,2,opt,name=commit_hash,json=commitHash,proto3,oneof" json:"commit_hash,omitempty"`
	// / Version from package.json.
	Version *string `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Branch  *string `protobuf:"bytes,4,opt,name=branch,proto3,oneof" json:"branch,omitempty"`
}

func (x *Runtime_App_BuildInfo) Reset() {
	*x = Runtime_App_BuildInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_App_BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_App_BuildInfo) ProtoMessage() {}

func (x *Runtime_App_BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_App_BuildInfo.ProtoReflect.Descriptor instead.
func (*Runtime_App_BuildInfo) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 1, 0}
}

func (x *Runtime_App_BuildInfo) GetTimestamp() string {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return ""
}

func (x *Runtime_App_BuildInfo) GetCommitHash() string {
	if x != nil && x.CommitHash != nil {
		return *x.CommitHash
	}
	return ""
}

func (x *Runtime_App_BuildInfo) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *Runtime_App_BuildInfo) GetBranch() string {
	if x != nil && x.Branch != nil {
		return *x.Branch
	}
	return ""
}

type Runtime_Agent_Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    *string    `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Enabled *bool      `protobuf:"varint,3,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Config  *anypb.Any `protobuf:"bytes,10,opt,name=config,proto3,oneof" json:"config,omitempty"`
}

func (x *Runtime_Agent_Plugin) Reset() {
	*x = Runtime_Agent_Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Agent_Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Agent_Plugin) ProtoMessage() {}

func (x *Runtime_Agent_Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Agent_Plugin.ProtoReflect.Descriptor instead.
func (*Runtime_Agent_Plugin) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 2, 0}
}

func (x *Runtime_Agent_Plugin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Runtime_Agent_Plugin) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Runtime_Agent_Plugin) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *Runtime_Agent_Plugin) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type Runtime_CLI_AppServe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serve *Runtime_CLI_AppServe_Serve `protobuf:"bytes,1,opt,name=serve,proto3,oneof" json:"serve,omitempty"`
}

func (x *Runtime_CLI_AppServe) Reset() {
	*x = Runtime_CLI_AppServe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_CLI_AppServe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_CLI_AppServe) ProtoMessage() {}

func (x *Runtime_CLI_AppServe) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_CLI_AppServe.ProtoReflect.Descriptor instead.
func (*Runtime_CLI_AppServe) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 3, 0}
}

func (x *Runtime_CLI_AppServe) GetServe() *Runtime_CLI_AppServe_Serve {
	if x != nil {
		return x.Serve
	}
	return nil
}

type Runtime_CLI_Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package *string `protobuf:"bytes,1,opt,name=package,proto3,oneof" json:"package,omitempty"`
	Channel *string `protobuf:"bytes,2,opt,name=channel,proto3,oneof" json:"channel,omitempty"`
	Bin     *string `protobuf:"bytes,3,opt,name=bin,proto3,oneof" json:"bin,omitempty"`
	Config  *string `protobuf:"bytes,4,opt,name=config,proto3,oneof" json:"config,omitempty"`
}

func (x *Runtime_CLI_Package) Reset() {
	*x = Runtime_CLI_Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_CLI_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_CLI_Package) ProtoMessage() {}

func (x *Runtime_CLI_Package) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_CLI_Package.ProtoReflect.Descriptor instead.
func (*Runtime_CLI_Package) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 3, 1}
}

func (x *Runtime_CLI_Package) GetPackage() string {
	if x != nil && x.Package != nil {
		return *x.Package
	}
	return ""
}

func (x *Runtime_CLI_Package) GetChannel() string {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return ""
}

func (x *Runtime_CLI_Package) GetBin() string {
	if x != nil && x.Bin != nil {
		return *x.Bin
	}
	return ""
}

func (x *Runtime_CLI_Package) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

type Runtime_CLI_AppServe_Serve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config    *string `protobuf:"bytes,1,opt,name=config,proto3,oneof" json:"config,omitempty"`
	LoginApp  *string `protobuf:"bytes,2,opt,name=login_app,json=loginApp,proto3,oneof" json:"login_app,omitempty"`
	KeyPhrase *string `protobuf:"bytes,3,opt,name=key_phrase,json=keyPhrase,proto3,oneof" json:"key_phrase,omitempty"`
}

func (x *Runtime_CLI_AppServe_Serve) Reset() {
	*x = Runtime_CLI_AppServe_Serve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_CLI_AppServe_Serve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_CLI_AppServe_Serve) ProtoMessage() {}

func (x *Runtime_CLI_AppServe_Serve) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_CLI_AppServe_Serve.ProtoReflect.Descriptor instead.
func (*Runtime_CLI_AppServe_Serve) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 3, 0, 0}
}

func (x *Runtime_CLI_AppServe_Serve) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

func (x *Runtime_CLI_AppServe_Serve) GetLoginApp() string {
	if x != nil && x.LoginApp != nil {
		return *x.LoginApp
	}
	return ""
}

func (x *Runtime_CLI_AppServe_Serve) GetKeyPhrase() string {
	if x != nil && x.KeyPhrase != nil {
		return *x.KeyPhrase
	}
	return ""
}

type Runtime_Kube_Autoupdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// / Seconds
	Interval int32 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *Runtime_Kube_Autoupdate) Reset() {
	*x = Runtime_Kube_Autoupdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_Autoupdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_Autoupdate) ProtoMessage() {}

func (x *Runtime_Kube_Autoupdate) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_Autoupdate.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_Autoupdate) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 0}
}

func (x *Runtime_Kube_Autoupdate) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Runtime_Kube_Autoupdate) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type Runtime_Kube_Https struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled     bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Port        string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Certfile    string `protobuf:"bytes,4,opt,name=certfile,proto3" json:"certfile,omitempty"`
	Keyfile     string `protobuf:"bytes,5,opt,name=keyfile,proto3" json:"keyfile,omitempty"`
	Dnsprovider string `protobuf:"bytes,6,opt,name=dnsprovider,proto3" json:"dnsprovider,omitempty"` // TODO(burdon): dns_provider.
}

func (x *Runtime_Kube_Https) Reset() {
	*x = Runtime_Kube_Https{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_Https) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_Https) ProtoMessage() {}

func (x *Runtime_Kube_Https) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_Https.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_Https) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 1}
}

func (x *Runtime_Kube_Https) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Runtime_Kube_Https) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Runtime_Kube_Https) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Runtime_Kube_Https) GetCertfile() string {
	if x != nil {
		return x.Certfile
	}
	return ""
}

func (x *Runtime_Kube_Https) GetKeyfile() string {
	if x != nil {
		return x.Keyfile
	}
	return ""
}

func (x *Runtime_Kube_Https) GetDnsprovider() string {
	if x != nil {
		return x.Dnsprovider
	}
	return ""
}

type Runtime_Kube_P2P struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(egorgripasov): private_key
	Privatekey string   `protobuf:"bytes,1,opt,name=privatekey,proto3" json:"privatekey,omitempty"`
	Port       string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Bootstrap  []string `protobuf:"bytes,3,rep,name=bootstrap,proto3" json:"bootstrap,omitempty"`
}

func (x *Runtime_Kube_P2P) Reset() {
	*x = Runtime_Kube_P2P{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_P2P) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_P2P) ProtoMessage() {}

func (x *Runtime_Kube_P2P) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_P2P.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_P2P) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 2}
}

func (x *Runtime_Kube_P2P) GetPrivatekey() string {
	if x != nil {
		return x.Privatekey
	}
	return ""
}

func (x *Runtime_Kube_P2P) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Runtime_Kube_P2P) GetBootstrap() []string {
	if x != nil {
		return x.Bootstrap
	}
	return nil
}

type Runtime_Kube_Monitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// / Seconds
	Interval int32 `protobuf:"varint,3,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *Runtime_Kube_Monitoring) Reset() {
	*x = Runtime_Kube_Monitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_Monitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_Monitoring) ProtoMessage() {}

func (x *Runtime_Kube_Monitoring) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_Monitoring.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_Monitoring) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 3}
}

func (x *Runtime_Kube_Monitoring) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Runtime_Kube_Monitoring) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Runtime_Kube_Monitoring) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type Runtime_Kube_Trace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *Runtime_Kube_Trace) Reset() {
	*x = Runtime_Kube_Trace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_Trace) ProtoMessage() {}

func (x *Runtime_Kube_Trace) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_Trace.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_Trace) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 4}
}

func (x *Runtime_Kube_Trace) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type Runtime_Kube_Telemetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool     `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Tags     []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Runtime_Kube_Telemetry) Reset() {
	*x = Runtime_Kube_Telemetry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_Telemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_Telemetry) ProtoMessage() {}

func (x *Runtime_Kube_Telemetry) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_Telemetry.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_Telemetry) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 5}
}

func (x *Runtime_Kube_Telemetry) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Runtime_Kube_Telemetry) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Runtime_Kube_Gravity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool    `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Name     string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LogDir   *string `protobuf:"bytes,3,opt,name=log_dir,json=logDir,proto3,oneof" json:"log_dir,omitempty"`
}

func (x *Runtime_Kube_Gravity) Reset() {
	*x = Runtime_Kube_Gravity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_Gravity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_Gravity) ProtoMessage() {}

func (x *Runtime_Kube_Gravity) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_Gravity.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_Gravity) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 6}
}

func (x *Runtime_Kube_Gravity) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Runtime_Kube_Gravity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Runtime_Kube_Gravity) GetLogDir() string {
	if x != nil && x.LogDir != nil {
		return *x.LogDir
	}
	return ""
}

type Runtime_Kube_AppTunneling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled         bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CommandTemplate string `protobuf:"bytes,2,opt,name=command_template,json=commandTemplate,proto3" json:"command_template,omitempty"`
	OutputRe        string `protobuf:"bytes,3,opt,name=output_re,json=outputRe,proto3" json:"output_re,omitempty"`
	Port            string `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Runtime_Kube_AppTunneling) Reset() {
	*x = Runtime_Kube_AppTunneling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_AppTunneling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_AppTunneling) ProtoMessage() {}

func (x *Runtime_Kube_AppTunneling) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_AppTunneling.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_AppTunneling) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 7}
}

func (x *Runtime_Kube_AppTunneling) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Runtime_Kube_AppTunneling) GetCommandTemplate() string {
	if x != nil {
		return x.CommandTemplate
	}
	return ""
}

func (x *Runtime_Kube_AppTunneling) GetOutputRe() string {
	if x != nil {
		return x.OutputRe
	}
	return ""
}

func (x *Runtime_Kube_AppTunneling) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type Runtime_Kube_Bots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// / Refresh interval - Seconds
	Interval int32 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *Runtime_Kube_Bots) Reset() {
	*x = Runtime_Kube_Bots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_Bots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_Bots) ProtoMessage() {}

func (x *Runtime_Kube_Bots) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_Bots.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_Bots) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 8}
}

func (x *Runtime_Kube_Bots) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Runtime_Kube_Bots) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

// / https://github.com/ipfs/kubo/blob/master/docs/config.md#apiauthorizations
type Runtime_Kube_KuboApiAuthorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Just for organizational purposes.
	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AuthSecret   string   `protobuf:"bytes,2,opt,name=auth_secret,json=authSecret,proto3" json:"auth_secret,omitempty"`
	AllowedPaths []string `protobuf:"bytes,3,rep,name=allowed_paths,json=allowedPaths,proto3" json:"allowed_paths,omitempty"`
}

func (x *Runtime_Kube_KuboApiAuthorization) Reset() {
	*x = Runtime_Kube_KuboApiAuthorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Kube_KuboApiAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Kube_KuboApiAuthorization) ProtoMessage() {}

func (x *Runtime_Kube_KuboApiAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Kube_KuboApiAuthorization.ProtoReflect.Descriptor instead.
func (*Runtime_Kube_KuboApiAuthorization) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 6, 9}
}

func (x *Runtime_Kube_KuboApiAuthorization) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Runtime_Kube_KuboApiAuthorization) GetAuthSecret() string {
	if x != nil {
		return x.AuthSecret
	}
	return ""
}

func (x *Runtime_Kube_KuboApiAuthorization) GetAllowedPaths() []string {
	if x != nil {
		return x.AllowedPaths
	}
	return nil
}

type Runtime_Services_Kube struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoints *Runtime_Services_Kube_Endpoints `protobuf:"bytes,1,opt,name=endpoints,proto3,oneof" json:"endpoints,omitempty"`
	PublicUrl *string                          `protobuf:"bytes,2,opt,name=public_url,json=publicUrl,proto3,oneof" json:"public_url,omitempty"`
}

func (x *Runtime_Services_Kube) Reset() {
	*x = Runtime_Services_Kube{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Kube) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Kube) ProtoMessage() {}

func (x *Runtime_Services_Kube) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Kube.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Kube) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 0}
}

func (x *Runtime_Services_Kube) GetEndpoints() *Runtime_Services_Kube_Endpoints {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Runtime_Services_Kube) GetPublicUrl() string {
	if x != nil && x.PublicUrl != nil {
		return *x.PublicUrl
	}
	return ""
}

type Runtime_Services_AppServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix *string `protobuf:"bytes,1,opt,name=prefix,proto3,oneof" json:"prefix,omitempty"`
	Server *string `protobuf:"bytes,2,opt,name=server,proto3,oneof" json:"server,omitempty"`
}

func (x *Runtime_Services_AppServer) Reset() {
	*x = Runtime_Services_AppServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_AppServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_AppServer) ProtoMessage() {}

func (x *Runtime_Services_AppServer) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_AppServer.ProtoReflect.Descriptor instead.
func (*Runtime_Services_AppServer) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 1}
}

func (x *Runtime_Services_AppServer) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *Runtime_Services_AppServer) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

// TODO(burdon): Delete/Rename DMG.
type Runtime_Services_Dxns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / DXNS endpoint.
	Server *string `protobuf:"bytes,1,opt,name=server,proto3,oneof" json:"server,omitempty"`
	// *
	// Substrate account URI. This is a secret.
	// KUBEs do not serve this with the config but we store it in profile.yml.
	//
	// TODO(dmaretskyi): Deprecate this and move it to keyring.
	AccountUri *string `protobuf:"bytes,2,opt,name=account_uri,json=accountUri,proto3,oneof" json:"account_uri,omitempty"`
	// *
	// Public Polkadot Address.
	Address *string `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	// *
	// Public address of a DXNS Account.
	Account *string `protobuf:"bytes,4,opt,name=account,proto3,oneof" json:"account,omitempty"`
	Faucet  *string `protobuf:"bytes,5,opt,name=faucet,proto3,oneof" json:"faucet,omitempty"`
}

func (x *Runtime_Services_Dxns) Reset() {
	*x = Runtime_Services_Dxns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Dxns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Dxns) ProtoMessage() {}

func (x *Runtime_Services_Dxns) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Dxns.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Dxns) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 2}
}

func (x *Runtime_Services_Dxns) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *Runtime_Services_Dxns) GetAccountUri() string {
	if x != nil && x.AccountUri != nil {
		return *x.AccountUri
	}
	return ""
}

func (x *Runtime_Services_Dxns) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *Runtime_Services_Dxns) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *Runtime_Services_Dxns) GetFaucet() string {
	if x != nil && x.Faucet != nil {
		return *x.Faucet
	}
	return ""
}

type Runtime_Services_Ipfs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server  *string `protobuf:"bytes,1,opt,name=server,proto3,oneof" json:"server,omitempty"`
	Gateway *string `protobuf:"bytes,2,opt,name=gateway,proto3,oneof" json:"gateway,omitempty"`
	// / Used for IPFS API authentication, regardless if server is direct KUBO API (e.g. path of '/api/v0') or a reverse proxy
	// / Same secret format as https://github.com/ipfs/kubo/blob/master/docs/config.md#apiauthorizations
	ServerAuthSecret *string `protobuf:"bytes,3,opt,name=server_auth_secret,json=serverAuthSecret,proto3,oneof" json:"server_auth_secret,omitempty"`
}

func (x *Runtime_Services_Ipfs) Reset() {
	*x = Runtime_Services_Ipfs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Ipfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Ipfs) ProtoMessage() {}

func (x *Runtime_Services_Ipfs) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Ipfs.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Ipfs) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 3}
}

func (x *Runtime_Services_Ipfs) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *Runtime_Services_Ipfs) GetGateway() string {
	if x != nil && x.Gateway != nil {
		return *x.Gateway
	}
	return ""
}

func (x *Runtime_Services_Ipfs) GetServerAuthSecret() string {
	if x != nil && x.ServerAuthSecret != nil {
		return *x.ServerAuthSecret
	}
	return ""
}

type Runtime_Services_Signal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string  `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Api    *string `protobuf:"bytes,2,opt,name=api,proto3,oneof" json:"api,omitempty"`
	Status *string `protobuf:"bytes,3,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *Runtime_Services_Signal) Reset() {
	*x = Runtime_Services_Signal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Signal) ProtoMessage() {}

func (x *Runtime_Services_Signal) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Signal.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Signal) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 4}
}

func (x *Runtime_Services_Signal) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *Runtime_Services_Signal) GetApi() string {
	if x != nil && x.Api != nil {
		return *x.Api
	}
	return ""
}

func (x *Runtime_Services_Signal) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type Runtime_Services_Ice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls       *string `protobuf:"bytes,1,opt,name=urls,proto3,oneof" json:"urls,omitempty"`
	Username   *string `protobuf:"bytes,2,opt,name=username,proto3,oneof" json:"username,omitempty"`
	Credential *string `protobuf:"bytes,3,opt,name=credential,proto3,oneof" json:"credential,omitempty"`
}

func (x *Runtime_Services_Ice) Reset() {
	*x = Runtime_Services_Ice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Ice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Ice) ProtoMessage() {}

func (x *Runtime_Services_Ice) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Ice.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Ice) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 5}
}

func (x *Runtime_Services_Ice) GetUrls() string {
	if x != nil && x.Urls != nil {
		return *x.Urls
	}
	return ""
}

func (x *Runtime_Services_Ice) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *Runtime_Services_Ice) GetCredential() string {
	if x != nil && x.Credential != nil {
		return *x.Credential
	}
	return ""
}

type Runtime_Services_Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DoAccessToken     *string `protobuf:"bytes,1,opt,name=do_access_token,json=doAccessToken,proto3,oneof" json:"do_access_token,omitempty"`
	GithubAccessToken *string `protobuf:"bytes,2,opt,name=github_access_token,json=githubAccessToken,proto3,oneof" json:"github_access_token,omitempty"`
	GithubUsername    *string `protobuf:"bytes,3,opt,name=github_username,json=githubUsername,proto3,oneof" json:"github_username,omitempty"`
	DnsDomain         *string `protobuf:"bytes,4,opt,name=dns_domain,json=dnsDomain,proto3,oneof" json:"dns_domain,omitempty"`
	NpmAccessToken    *string `protobuf:"bytes,5,opt,name=npm_access_token,json=npmAccessToken,proto3,oneof" json:"npm_access_token,omitempty"`
}

func (x *Runtime_Services_Machine) Reset() {
	*x = Runtime_Services_Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Machine) ProtoMessage() {}

func (x *Runtime_Services_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Machine.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Machine) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 6}
}

func (x *Runtime_Services_Machine) GetDoAccessToken() string {
	if x != nil && x.DoAccessToken != nil {
		return *x.DoAccessToken
	}
	return ""
}

func (x *Runtime_Services_Machine) GetGithubAccessToken() string {
	if x != nil && x.GithubAccessToken != nil {
		return *x.GithubAccessToken
	}
	return ""
}

func (x *Runtime_Services_Machine) GetGithubUsername() string {
	if x != nil && x.GithubUsername != nil {
		return *x.GithubUsername
	}
	return ""
}

func (x *Runtime_Services_Machine) GetDnsDomain() string {
	if x != nil && x.DnsDomain != nil {
		return *x.DnsDomain
	}
	return ""
}

func (x *Runtime_Services_Machine) GetNpmAccessToken() string {
	if x != nil && x.NpmAccessToken != nil {
		return *x.NpmAccessToken
	}
	return ""
}

type Runtime_Services_BotHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proxy *string `protobuf:"bytes,1,opt,name=proxy,proto3,oneof" json:"proxy,omitempty"`
}

func (x *Runtime_Services_BotHost) Reset() {
	*x = Runtime_Services_BotHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_BotHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_BotHost) ProtoMessage() {}

func (x *Runtime_Services_BotHost) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_BotHost.ProtoReflect.Descriptor instead.
func (*Runtime_Services_BotHost) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 7}
}

func (x *Runtime_Services_BotHost) GetProxy() string {
	if x != nil && x.Proxy != nil {
		return *x.Proxy
	}
	return ""
}

type Runtime_Services_Publisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *string `protobuf:"bytes,1,opt,name=server,proto3,oneof" json:"server,omitempty"`
}

func (x *Runtime_Services_Publisher) Reset() {
	*x = Runtime_Services_Publisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Publisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Publisher) ProtoMessage() {}

func (x *Runtime_Services_Publisher) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Publisher.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Publisher) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 8}
}

func (x *Runtime_Services_Publisher) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

type Runtime_Services_Tunneling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *string `protobuf:"bytes,1,opt,name=server,proto3,oneof" json:"server,omitempty"`
}

func (x *Runtime_Services_Tunneling) Reset() {
	*x = Runtime_Services_Tunneling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Tunneling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Tunneling) ProtoMessage() {}

func (x *Runtime_Services_Tunneling) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Tunneling.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Tunneling) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 9}
}

func (x *Runtime_Services_Tunneling) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

type Runtime_Services_Supervisor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *string `protobuf:"bytes,1,opt,name=server,proto3,oneof" json:"server,omitempty"`
}

func (x *Runtime_Services_Supervisor) Reset() {
	*x = Runtime_Services_Supervisor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Supervisor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Supervisor) ProtoMessage() {}

func (x *Runtime_Services_Supervisor) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Supervisor.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Supervisor) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 10}
}

func (x *Runtime_Services_Supervisor) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

type Runtime_Services_Faasd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gateway  *string `protobuf:"bytes,1,opt,name=gateway,proto3,oneof" json:"gateway,omitempty"`
	Username *string `protobuf:"bytes,2,opt,name=username,proto3,oneof" json:"username,omitempty"`
	Password *string `protobuf:"bytes,3,opt,name=password,proto3,oneof" json:"password,omitempty"`
}

func (x *Runtime_Services_Faasd) Reset() {
	*x = Runtime_Services_Faasd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Faasd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Faasd) ProtoMessage() {}

func (x *Runtime_Services_Faasd) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Faasd.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Faasd) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 11}
}

func (x *Runtime_Services_Faasd) GetGateway() string {
	if x != nil && x.Gateway != nil {
		return *x.Gateway
	}
	return ""
}

func (x *Runtime_Services_Faasd) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *Runtime_Services_Faasd) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

// TODO(nf): Set API version, authentication scheme, etc.
type Runtime_Services_AgentHosting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(nf): read enum from yml?
	Server *string `protobuf:"bytes,1,opt,name=server,proto3,oneof" json:"server,omitempty"`
	Type   *string `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
}

func (x *Runtime_Services_AgentHosting) Reset() {
	*x = Runtime_Services_AgentHosting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_AgentHosting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_AgentHosting) ProtoMessage() {}

func (x *Runtime_Services_AgentHosting) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_AgentHosting.ProtoReflect.Descriptor instead.
func (*Runtime_Services_AgentHosting) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 12}
}

func (x *Runtime_Services_AgentHosting) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *Runtime_Services_AgentHosting) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type Runtime_Services_Kube_Endpoints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs     *string `protobuf:"bytes,1,opt,name=logs,proto3,oneof" json:"logs,omitempty"`
	Services *string `protobuf:"bytes,2,opt,name=services,proto3,oneof" json:"services,omitempty"`
	Cert     *string `protobuf:"bytes,3,opt,name=cert,proto3,oneof" json:"cert,omitempty"`
}

func (x *Runtime_Services_Kube_Endpoints) Reset() {
	*x = Runtime_Services_Kube_Endpoints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_config_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Runtime_Services_Kube_Endpoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime_Services_Kube_Endpoints) ProtoMessage() {}

func (x *Runtime_Services_Kube_Endpoints) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_config_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime_Services_Kube_Endpoints.ProtoReflect.Descriptor instead.
func (*Runtime_Services_Kube_Endpoints) Descriptor() ([]byte, []int) {
	return file_dxos_config_proto_rawDescGZIP(), []int{4, 7, 0, 0}
}

func (x *Runtime_Services_Kube_Endpoints) GetLogs() string {
	if x != nil && x.Logs != nil {
		return *x.Logs
	}
	return ""
}

func (x *Runtime_Services_Kube_Endpoints) GetServices() string {
	if x != nil && x.Services != nil {
		return *x.Services
	}
	return ""
}

func (x *Runtime_Services_Kube_Endpoints) GetCert() string {
	if x != nil && x.Cert != nil {
		return *x.Cert
	}
	return ""
}

var file_dxos_config_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         1000,
		Name:          "dxos.config.env_var",
		Tag:           "bytes,1000,opt,name=env_var",
		Filename:      "dxos/config.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional string env_var = 1000;
	E_EnvVar = &file_dxos_config_proto_extTypes[0]
)

var File_dxos_config_proto protoreflect.FileDescriptor

var file_dxos_config_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x78,
	0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x48, 0x02, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27,
	0x0a, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x52, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x22, 0x72, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xec, 0x05, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x05, 0x52, 0x06, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x06, 0x74, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x65, 0x70, 0x73, 0x12, 0x34,
	0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x07, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x65, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x12, 0x32, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x48, 0x08, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x88, 0x01,
	0x01, 0x1a, 0xdc, 0x01, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x64, 0x69, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x74, 0x61, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a,
	0x03, 0x65, 0x6e, 0x76, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x48, 0x04, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x75,
	0x74, 0x64, 0x69, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x61, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x6e, 0x76,
	0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xeb, 0x3f, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x03, 0x61,
	0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x41,
	0x70, 0x70, 0x48, 0x01, 0x52, 0x03, 0x61, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x03,
	0x63, 0x6c, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x78, 0x6f, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x43, 0x4c, 0x49, 0x48, 0x02, 0x52, 0x03, 0x63, 0x6c, 0x69, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64,
	0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x48, 0x03, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x48, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x48, 0x05, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x32,
	0x0a, 0x04, 0x6b, 0x75, 0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64,
	0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x48, 0x06, 0x52, 0x04, 0x6b, 0x75, 0x62, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x12, 0x35, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x07, 0x52, 0x05,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x96, 0x0a, 0x0a, 0x06, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f,
	0x67, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64,
	0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x48, 0x01, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x2e, 0x0a, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x11, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x10, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x38, 0x0a, 0x15, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x04, 0x52, 0x14, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x22, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x1f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6c, 0x61, 0x7a, 0x79, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x08, 0x52, 0x0d,
	0x6c, 0x61, 0x7a, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x88, 0x01, 0x01,
	0x1a, 0xf0, 0x03, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x53, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x48, 0x01, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x64, 0x78, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x48, 0x02, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x52, 0x6f, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x34, 0x0a, 0x13, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x12,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x22, 0x6a, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x41, 0x4d, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x49, 0x44, 0x42, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x48, 0x52, 0x4f,
	0x4d, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x49, 0x52, 0x45, 0x46, 0x4f, 0x58, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x57,
	0x45, 0x42, 0x46, 0x53, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x4a,
	0x53, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x53, 0x4f, 0x4e, 0x44, 0x4f, 0x57, 0x4e, 0x10,
	0x0c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x73, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xc2, 0x3e, 0x0a, 0x4c,
	0x4f, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xc2, 0x3e, 0x0a, 0x4c, 0x4f, 0x47, 0x5f, 0x50,
	0x52, 0x45, 0x46, 0x49, 0x58, 0x48, 0x01, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x6f, 0x67,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x42, 0x25, 0x0a, 0x23, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64,
	0x65, 0x76, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x6c, 0x61, 0x7a, 0x79, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x1a, 0xff, 0x03, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x15, 0x0a, 0x03, 0x6f, 0x72, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x77,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07,
	0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xc2, 0x3e, 0x0a, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x55, 0x52, 0x4c, 0x48, 0x03, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a,
	0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64,
	0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x04, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x03,
	0x65, 0x6e, 0x76, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x48, 0x05, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x88, 0x01, 0x01, 0x1a, 0xc5, 0x01, 0x0a,
	0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6f, 0x72, 0x67, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x72,
	0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x65, 0x6e, 0x76, 0x1a, 0xea, 0x01, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a,
	0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x1a, 0xa3, 0x01, 0x0a, 0x06, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x01, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x48, 0x02, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0xc9, 0x06, 0x0a, 0x03, 0x43, 0x4c, 0x49, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x4c,
	0x49, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x48, 0x01, 0x52, 0x03, 0x61, 0x70,
	0x70, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x4c, 0x49, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x48, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x73, 0x6f,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x04, 0x6d, 0x64, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x4c, 0x49, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x48, 0x03, 0x52, 0x04, 0x6d, 0x64, 0x6e, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x4c, 0x49, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x48, 0x04, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x6e, 0x70, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x6e, 0x70, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x1a, 0xed, 0x01, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x12,
	0x42, 0x0a, 0x05, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x4c, 0x49, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x88, 0x01, 0x01, 0x1a, 0x92, 0x01, 0x0a, 0x05, 0x53, 0x65, 0x72, 0x76, 0x65, 0x12, 0x1b, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x6b, 0x65, 0x79, 0x5f, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x1a, 0xa6, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03,
	0x62, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x62, 0x69, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x62, 0x69, 0x6e,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x70,
	0x70, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6d, 0x64, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x70, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a, 0x2c, 0x0a, 0x05,
	0x50, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x2d, 0x0a, 0x06, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x1a, 0xa7, 0x0d, 0x0a, 0x04, 0x4b, 0x75,
	0x62, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x44, 0x0a, 0x0a, 0x61, 0x75,
	0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x0a, 0x05, 0x68, 0x74, 0x74, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x73,
	0x52, 0x05, 0x68, 0x74, 0x74, 0x70, 0x73, 0x12, 0x2f, 0x0a, 0x03, 0x70, 0x32, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e,
	0x50, 0x32, 0x50, 0x52, 0x03, 0x70, 0x32, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x44, 0x0a, 0x0a,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x35, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64,
	0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x07,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x07, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0d, 0x61, 0x70, 0x70,
	0x5f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x54,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e,
	0x42, 0x6f, 0x74, 0x73, 0x52, 0x04, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x66, 0x0a, 0x17, 0x69, 0x70,
	0x66, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64, 0x78,
	0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x2e, 0x4b, 0x75, 0x62, 0x6f, 0x41, 0x70, 0x69, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x69, 0x70, 0x66,
	0x73, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x42, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x1a, 0xa3, 0x01, 0x0a, 0x05, 0x48, 0x74, 0x74, 0x70, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6e,
	0x73, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x6e, 0x73, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x57, 0x0a, 0x03,
	0x50, 0x32, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x1a, 0x5e, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x1a, 0x23, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0x3b, 0x0a, 0x09, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x63, 0x0a, 0x07, 0x47, 0x72, 0x61, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x44, 0x69, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x1a, 0x84, 0x01, 0x0a,
	0x0c, 0x41, 0x70, 0x70, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x1a, 0x3c, 0x0a, 0x04, 0x42, 0x6f, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x1a, 0x70, 0x0a, 0x14, 0x4b, 0x75, 0x62, 0x6f, 0x41, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x1a, 0xfe, 0x15, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x75, 0x62, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4b, 0x75,
	0x62, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6b, 0x75, 0x62, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a,
	0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x78, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x48, 0x01, 0x52, 0x03, 0x61, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a,
	0x04, 0x64, 0x78, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x78,
	0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x78, 0x6e, 0x73, 0x48,
	0x02, 0x52, 0x04, 0x64, 0x78, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x04, 0x69, 0x70,
	0x66, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x70, 0x66, 0x73, 0x48, 0x03, 0x52, 0x04,
	0x69, 0x70, 0x66, 0x73, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x78, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x03, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x63, 0x65, 0x52, 0x03, 0x69, 0x63, 0x65,
	0x12, 0x44, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x48, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x03, 0x62, 0x6f, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x42, 0x6f, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x48, 0x05, 0x52, 0x03, 0x62, 0x6f,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x48, 0x06, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x4d, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x48, 0x07,
	0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x4a, 0x0a, 0x09, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x48, 0x08, 0x52, 0x09, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x05, 0x66,
	0x61, 0x61, 0x73, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x78, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x61, 0x61, 0x73, 0x64, 0x48,
	0x09, 0x52, 0x05, 0x66, 0x61, 0x61, 0x73, 0x64, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x0d, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x0a,
	0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x88, 0x01,
	0x01, 0x1a, 0x97, 0x02, 0x0a, 0x04, 0x4b, 0x75, 0x62, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x64, 0x78, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4b, 0x75, 0x62,
	0x65, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x09, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x1a,
	0x7d, 0x0a, 0x09, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f,
	0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x1a, 0x5b, 0x0a, 0x09, 0x41,
	0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0xe2, 0x01, 0x0a, 0x04, 0x44, 0x78, 0x6e,
	0x73, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x24,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x72,
	0x69, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x06, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x1a, 0xa3, 0x01,
	0x0a, 0x04, 0x49, 0x70, 0x66, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x1a, 0x67, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x61, 0x70, 0x69, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x70,
	0x69, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x89, 0x01, 0x0a,
	0x03, 0x49, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x1a, 0xd0, 0x02, 0x0a, 0x07, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x0f, 0x64, 0x6f, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0d, 0x64, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x33, 0x0a, 0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x11, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x0e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x6e, 0x70, 0x6d, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x0e, 0x6e, 0x70, 0x6d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x64, 0x6f, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x6e, 0x73, 0x5f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6e, 0x70, 0x6d, 0x5f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x2e, 0x0a, 0x07, 0x42,
	0x6f, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x1a, 0x33, 0x0a, 0x09, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x1a, 0x33, 0x0a, 0x09, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x34, 0x0a, 0x0a, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x8e, 0x01, 0x0a, 0x05,
	0x46, 0x61, 0x61, 0x73, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x58, 0x0a, 0x0c,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x78, 0x6e, 0x73,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x70, 0x66, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x62, 0x6f, 0x74, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74,
	0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66, 0x61, 0x61,
	0x73, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x1a, 0x4d, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x63, 0x6c, 0x69, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6b, 0x75, 0x62, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x78,
	0x6f, 0x73, 0x2f, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65,
	0x66, 0x2f, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dxos_config_proto_rawDescOnce sync.Once
	file_dxos_config_proto_rawDescData = file_dxos_config_proto_rawDesc
)

func file_dxos_config_proto_rawDescGZIP() []byte {
	file_dxos_config_proto_rawDescOnce.Do(func() {
		file_dxos_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_dxos_config_proto_rawDescData)
	})
	return file_dxos_config_proto_rawDescData
}

var file_dxos_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dxos_config_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_dxos_config_proto_goTypes = []interface{}{
	(Runtime_Client_Storage_StorageDriver)(0), // 0: dxos.config.Runtime.Client.Storage.StorageDriver
	(*Config)(nil),                            // 1: dxos.config.Config
	(*Package)(nil),                           // 2: dxos.config.Package
	(*Repo)(nil),                              // 3: dxos.config.Repo
	(*Module)(nil),                            // 4: dxos.config.Module
	(*Runtime)(nil),                           // 5: dxos.config.Runtime
	(*Module_Build)(nil),                      // 6: dxos.config.Module.Build
	(*Runtime_Client)(nil),                    // 7: dxos.config.Runtime.Client
	(*Runtime_App)(nil),                       // 8: dxos.config.Runtime.App
	(*Runtime_Agent)(nil),                     // 9: dxos.config.Runtime.Agent
	(*Runtime_CLI)(nil),                       // 10: dxos.config.Runtime.CLI
	(*Runtime_Props)(nil),                     // 11: dxos.config.Runtime.Props
	(*Runtime_System)(nil),                    // 12: dxos.config.Runtime.System
	(*Runtime_Kube)(nil),                      // 13: dxos.config.Runtime.Kube
	(*Runtime_Services)(nil),                  // 14: dxos.config.Runtime.Services
	(*Runtime_Keys)(nil),                      // 15: dxos.config.Runtime.Keys
	(*Runtime_Client_Storage)(nil),            // 16: dxos.config.Runtime.Client.Storage
	(*Runtime_Client_Log)(nil),                // 17: dxos.config.Runtime.Client.Log
	(*Runtime_App_BuildInfo)(nil),             // 18: dxos.config.Runtime.App.BuildInfo
	(*Runtime_Agent_Plugin)(nil),              // 19: dxos.config.Runtime.Agent.Plugin
	(*Runtime_CLI_AppServe)(nil),              // 20: dxos.config.Runtime.CLI.AppServe
	(*Runtime_CLI_Package)(nil),               // 21: dxos.config.Runtime.CLI.Package
	(*Runtime_CLI_AppServe_Serve)(nil),        // 22: dxos.config.Runtime.CLI.AppServe.Serve
	(*Runtime_Kube_Autoupdate)(nil),           // 23: dxos.config.Runtime.Kube.Autoupdate
	(*Runtime_Kube_Https)(nil),                // 24: dxos.config.Runtime.Kube.Https
	(*Runtime_Kube_P2P)(nil),                  // 25: dxos.config.Runtime.Kube.P2P
	(*Runtime_Kube_Monitoring)(nil),           // 26: dxos.config.Runtime.Kube.Monitoring
	(*Runtime_Kube_Trace)(nil),                // 27: dxos.config.Runtime.Kube.Trace
	(*Runtime_Kube_Telemetry)(nil),            // 28: dxos.config.Runtime.Kube.Telemetry
	(*Runtime_Kube_Gravity)(nil),              // 29: dxos.config.Runtime.Kube.Gravity
	(*Runtime_Kube_AppTunneling)(nil),         // 30: dxos.config.Runtime.Kube.AppTunneling
	(*Runtime_Kube_Bots)(nil),                 // 31: dxos.config.Runtime.Kube.Bots
	(*Runtime_Kube_KuboApiAuthorization)(nil), // 32: dxos.config.Runtime.Kube.KuboApiAuthorization
	(*Runtime_Services_Kube)(nil),             // 33: dxos.config.Runtime.Services.Kube
	(*Runtime_Services_AppServer)(nil),        // 34: dxos.config.Runtime.Services.AppServer
	(*Runtime_Services_Dxns)(nil),             // 35: dxos.config.Runtime.Services.Dxns
	(*Runtime_Services_Ipfs)(nil),             // 36: dxos.config.Runtime.Services.Ipfs
	(*Runtime_Services_Signal)(nil),           // 37: dxos.config.Runtime.Services.Signal
	(*Runtime_Services_Ice)(nil),              // 38: dxos.config.Runtime.Services.Ice
	(*Runtime_Services_Machine)(nil),          // 39: dxos.config.Runtime.Services.Machine
	(*Runtime_Services_BotHost)(nil),          // 40: dxos.config.Runtime.Services.BotHost
	(*Runtime_Services_Publisher)(nil),        // 41: dxos.config.Runtime.Services.Publisher
	(*Runtime_Services_Tunneling)(nil),        // 42: dxos.config.Runtime.Services.Tunneling
	(*Runtime_Services_Supervisor)(nil),       // 43: dxos.config.Runtime.Services.Supervisor
	(*Runtime_Services_Faasd)(nil),            // 44: dxos.config.Runtime.Services.Faasd
	(*Runtime_Services_AgentHosting)(nil),     // 45: dxos.config.Runtime.Services.AgentHosting
	(*Runtime_Services_Kube_Endpoints)(nil),   // 46: dxos.config.Runtime.Services.Kube.Endpoints
	(*anypb.Any)(nil),                         // 47: google.protobuf.Any
	(*structpb.Struct)(nil),                   // 48: google.protobuf.Struct
	(*descriptorpb.FieldOptions)(nil),         // 49: google.protobuf.FieldOptions
}
var file_dxos_config_proto_depIdxs = []int32{
	2,  // 0: dxos.config.Config.package:type_name -> dxos.config.Package
	5,  // 1: dxos.config.Config.runtime:type_name -> dxos.config.Runtime
	3,  // 2: dxos.config.Package.repos:type_name -> dxos.config.Repo
	4,  // 3: dxos.config.Package.modules:type_name -> dxos.config.Module
	4,  // 4: dxos.config.Module.deps:type_name -> dxos.config.Module
	6,  // 5: dxos.config.Module.build:type_name -> dxos.config.Module.Build
	3,  // 6: dxos.config.Module.repos:type_name -> dxos.config.Repo
	47, // 7: dxos.config.Module.record:type_name -> google.protobuf.Any
	7,  // 8: dxos.config.Runtime.client:type_name -> dxos.config.Runtime.Client
	8,  // 9: dxos.config.Runtime.app:type_name -> dxos.config.Runtime.App
	10, // 10: dxos.config.Runtime.cli:type_name -> dxos.config.Runtime.CLI
	11, // 11: dxos.config.Runtime.props:type_name -> dxos.config.Runtime.Props
	14, // 12: dxos.config.Runtime.services:type_name -> dxos.config.Runtime.Services
	12, // 13: dxos.config.Runtime.system:type_name -> dxos.config.Runtime.System
	13, // 14: dxos.config.Runtime.kube:type_name -> dxos.config.Runtime.Kube
	15, // 15: dxos.config.Runtime.keys:type_name -> dxos.config.Runtime.Keys
	9,  // 16: dxos.config.Runtime.agent:type_name -> dxos.config.Runtime.Agent
	48, // 17: dxos.config.Module.Build.env:type_name -> google.protobuf.Struct
	17, // 18: dxos.config.Runtime.Client.log:type_name -> dxos.config.Runtime.Client.Log
	16, // 19: dxos.config.Runtime.Client.storage:type_name -> dxos.config.Runtime.Client.Storage
	18, // 20: dxos.config.Runtime.App.build:type_name -> dxos.config.Runtime.App.BuildInfo
	48, // 21: dxos.config.Runtime.App.env:type_name -> google.protobuf.Struct
	19, // 22: dxos.config.Runtime.Agent.plugins:type_name -> dxos.config.Runtime.Agent.Plugin
	20, // 23: dxos.config.Runtime.CLI.app:type_name -> dxos.config.Runtime.CLI.AppServe
	21, // 24: dxos.config.Runtime.CLI.console:type_name -> dxos.config.Runtime.CLI.Package
	21, // 25: dxos.config.Runtime.CLI.mdns:type_name -> dxos.config.Runtime.CLI.Package
	21, // 26: dxos.config.Runtime.CLI.signal:type_name -> dxos.config.Runtime.CLI.Package
	23, // 27: dxos.config.Runtime.Kube.autoupdate:type_name -> dxos.config.Runtime.Kube.Autoupdate
	24, // 28: dxos.config.Runtime.Kube.https:type_name -> dxos.config.Runtime.Kube.Https
	25, // 29: dxos.config.Runtime.Kube.p2p:type_name -> dxos.config.Runtime.Kube.P2P
	26, // 30: dxos.config.Runtime.Kube.monitoring:type_name -> dxos.config.Runtime.Kube.Monitoring
	27, // 31: dxos.config.Runtime.Kube.trace:type_name -> dxos.config.Runtime.Kube.Trace
	28, // 32: dxos.config.Runtime.Kube.telemetry:type_name -> dxos.config.Runtime.Kube.Telemetry
	29, // 33: dxos.config.Runtime.Kube.gravity:type_name -> dxos.config.Runtime.Kube.Gravity
	30, // 34: dxos.config.Runtime.Kube.app_tunneling:type_name -> dxos.config.Runtime.Kube.AppTunneling
	31, // 35: dxos.config.Runtime.Kube.bots:type_name -> dxos.config.Runtime.Kube.Bots
	32, // 36: dxos.config.Runtime.Kube.ipfs_api_authorizations:type_name -> dxos.config.Runtime.Kube.KuboApiAuthorization
	33, // 37: dxos.config.Runtime.Services.kube:type_name -> dxos.config.Runtime.Services.Kube
	34, // 38: dxos.config.Runtime.Services.app:type_name -> dxos.config.Runtime.Services.AppServer
	35, // 39: dxos.config.Runtime.Services.dxns:type_name -> dxos.config.Runtime.Services.Dxns
	36, // 40: dxos.config.Runtime.Services.ipfs:type_name -> dxos.config.Runtime.Services.Ipfs
	37, // 41: dxos.config.Runtime.Services.signaling:type_name -> dxos.config.Runtime.Services.Signal
	38, // 42: dxos.config.Runtime.Services.ice:type_name -> dxos.config.Runtime.Services.Ice
	39, // 43: dxos.config.Runtime.Services.machine:type_name -> dxos.config.Runtime.Services.Machine
	40, // 44: dxos.config.Runtime.Services.bot:type_name -> dxos.config.Runtime.Services.BotHost
	41, // 45: dxos.config.Runtime.Services.publisher:type_name -> dxos.config.Runtime.Services.Publisher
	43, // 46: dxos.config.Runtime.Services.supervisor:type_name -> dxos.config.Runtime.Services.Supervisor
	42, // 47: dxos.config.Runtime.Services.tunneling:type_name -> dxos.config.Runtime.Services.Tunneling
	44, // 48: dxos.config.Runtime.Services.faasd:type_name -> dxos.config.Runtime.Services.Faasd
	45, // 49: dxos.config.Runtime.Services.agent_hosting:type_name -> dxos.config.Runtime.Services.AgentHosting
	0,  // 50: dxos.config.Runtime.Client.Storage.key_store:type_name -> dxos.config.Runtime.Client.Storage.StorageDriver
	0,  // 51: dxos.config.Runtime.Client.Storage.data_store:type_name -> dxos.config.Runtime.Client.Storage.StorageDriver
	47, // 52: dxos.config.Runtime.Agent.Plugin.config:type_name -> google.protobuf.Any
	22, // 53: dxos.config.Runtime.CLI.AppServe.serve:type_name -> dxos.config.Runtime.CLI.AppServe.Serve
	46, // 54: dxos.config.Runtime.Services.Kube.endpoints:type_name -> dxos.config.Runtime.Services.Kube.Endpoints
	49, // 55: dxos.config.env_var:extendee -> google.protobuf.FieldOptions
	56, // [56:56] is the sub-list for method output_type
	56, // [56:56] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	55, // [55:56] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_dxos_config_proto_init() }
func file_dxos_config_proto_init() {
	if File_dxos_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dxos_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module_Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_CLI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Props); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Client_Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Client_Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_App_BuildInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Agent_Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_CLI_AppServe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_CLI_Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_CLI_AppServe_Serve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_Autoupdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_Https); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_P2P); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_Monitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_Trace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_Telemetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_Gravity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_AppTunneling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_Bots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Kube_KuboApiAuthorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Kube); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_AppServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Dxns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Ipfs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Signal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Ice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_BotHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Publisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Tunneling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Supervisor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Faasd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_AgentHosting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_config_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Runtime_Services_Kube_Endpoints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dxos_config_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[33].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[43].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_dxos_config_proto_msgTypes[45].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dxos_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   46,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_dxos_config_proto_goTypes,
		DependencyIndexes: file_dxos_config_proto_depIdxs,
		EnumInfos:         file_dxos_config_proto_enumTypes,
		MessageInfos:      file_dxos_config_proto_msgTypes,
		ExtensionInfos:    file_dxos_config_proto_extTypes,
	}.Build()
	File_dxos_config_proto = out.File
	file_dxos_config_proto_rawDesc = nil
	file_dxos_config_proto_goTypes = nil
	file_dxos_config_proto_depIdxs = nil
}
