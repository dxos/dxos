//
// Copyright 2020 DXOS.org
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: dxos/echo/timeframe.proto

package timeframe

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Vector timestamp used to order messages.
type TimeframeVector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*TimeframeVector_Frame `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *TimeframeVector) Reset() {
	*x = TimeframeVector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_echo_timeframe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeframeVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeframeVector) ProtoMessage() {}

func (x *TimeframeVector) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_echo_timeframe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeframeVector.ProtoReflect.Descriptor instead.
func (*TimeframeVector) Descriptor() ([]byte, []int) {
	return file_dxos_echo_timeframe_proto_rawDescGZIP(), []int{0}
}

func (x *TimeframeVector) GetFrames() []*TimeframeVector_Frame {
	if x != nil {
		return x.Frames
	}
	return nil
}

type TimeframeVector_Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(dmaretskyi): Compress using numeric feed indexes.
	// TODO(burdon): Determine if admit DAG can be ordered. Requires space messages to be ordered (by lexical feed key).
	FeedKey []byte `protobuf:"bytes,1,opt,name=feed_key,json=feedKey,proto3" json:"feed_key,omitempty"`
	Seq     int32  `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *TimeframeVector_Frame) Reset() {
	*x = TimeframeVector_Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dxos_echo_timeframe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeframeVector_Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeframeVector_Frame) ProtoMessage() {}

func (x *TimeframeVector_Frame) ProtoReflect() protoreflect.Message {
	mi := &file_dxos_echo_timeframe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeframeVector_Frame.ProtoReflect.Descriptor instead.
func (*TimeframeVector_Frame) Descriptor() ([]byte, []int) {
	return file_dxos_echo_timeframe_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TimeframeVector_Frame) GetFeedKey() []byte {
	if x != nil {
		return x.FeedKey
	}
	return nil
}

func (x *TimeframeVector_Frame) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

var File_dxos_echo_timeframe_proto protoreflect.FileDescriptor

var file_dxos_echo_timeframe_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x65, 0x63, 0x68, 0x6f, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x64, 0x78, 0x6f,
	0x73, 0x2e, 0x65, 0x63, 0x68, 0x6f, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x78, 0x6f, 0x73, 0x2e, 0x65, 0x63, 0x68, 0x6f,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x34, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x42, 0x34,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x78, 0x6f,
	0x73, 0x2f, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x66,
	0x2f, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x65, 0x63, 0x68, 0x6f, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dxos_echo_timeframe_proto_rawDescOnce sync.Once
	file_dxos_echo_timeframe_proto_rawDescData = file_dxos_echo_timeframe_proto_rawDesc
)

func file_dxos_echo_timeframe_proto_rawDescGZIP() []byte {
	file_dxos_echo_timeframe_proto_rawDescOnce.Do(func() {
		file_dxos_echo_timeframe_proto_rawDescData = protoimpl.X.CompressGZIP(file_dxos_echo_timeframe_proto_rawDescData)
	})
	return file_dxos_echo_timeframe_proto_rawDescData
}

var file_dxos_echo_timeframe_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dxos_echo_timeframe_proto_goTypes = []interface{}{
	(*TimeframeVector)(nil),       // 0: dxos.echo.timeframe.TimeframeVector
	(*TimeframeVector_Frame)(nil), // 1: dxos.echo.timeframe.TimeframeVector.Frame
}
var file_dxos_echo_timeframe_proto_depIdxs = []int32{
	1, // 0: dxos.echo.timeframe.TimeframeVector.frames:type_name -> dxos.echo.timeframe.TimeframeVector.Frame
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dxos_echo_timeframe_proto_init() }
func file_dxos_echo_timeframe_proto_init() {
	if File_dxos_echo_timeframe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dxos_echo_timeframe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeframeVector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dxos_echo_timeframe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeframeVector_Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dxos_echo_timeframe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dxos_echo_timeframe_proto_goTypes,
		DependencyIndexes: file_dxos_echo_timeframe_proto_depIdxs,
		MessageInfos:      file_dxos_echo_timeframe_proto_msgTypes,
	}.Build()
	File_dxos_echo_timeframe_proto = out.File
	file_dxos_echo_timeframe_proto_rawDesc = nil
	file_dxos_echo_timeframe_proto_goTypes = nil
	file_dxos_echo_timeframe_proto_depIdxs = nil
}
