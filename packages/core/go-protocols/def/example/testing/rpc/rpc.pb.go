//
// Copyright 2020 DXOS.org
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: example/testing/rpc.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestRpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TestRpcRequest) Reset() {
	*x = TestRpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_testing_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRpcRequest) ProtoMessage() {}

func (x *TestRpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_testing_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRpcRequest.ProtoReflect.Descriptor instead.
func (*TestRpcRequest) Descriptor() ([]byte, []int) {
	return file_example_testing_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *TestRpcRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type TestRpcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *TestRpcResponse) Reset() {
	*x = TestRpcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_testing_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRpcResponse) ProtoMessage() {}

func (x *TestRpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_testing_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRpcResponse.ProtoReflect.Descriptor instead.
func (*TestRpcResponse) Descriptor() ([]byte, []int) {
	return file_example_testing_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *TestRpcResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type TestStreamRpcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data                string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	StreamLoadInterval  uint32 `protobuf:"varint,2,opt,name=streamLoadInterval,proto3" json:"streamLoadInterval,omitempty"`
	StreamLoadChunkSize uint32 `protobuf:"varint,3,opt,name=streamLoadChunkSize,proto3" json:"streamLoadChunkSize,omitempty"`
}

func (x *TestStreamRpcRequest) Reset() {
	*x = TestStreamRpcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_testing_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestStreamRpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStreamRpcRequest) ProtoMessage() {}

func (x *TestStreamRpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_testing_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStreamRpcRequest.ProtoReflect.Descriptor instead.
func (*TestStreamRpcRequest) Descriptor() ([]byte, []int) {
	return file_example_testing_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *TestStreamRpcRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TestStreamRpcRequest) GetStreamLoadInterval() uint32 {
	if x != nil {
		return x.StreamLoadInterval
	}
	return 0
}

func (x *TestStreamRpcRequest) GetStreamLoadChunkSize() uint32 {
	if x != nil {
		return x.StreamLoadChunkSize
	}
	return 0
}

type TestStreamRpcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data          string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	BytesSent     uint32 `protobuf:"varint,2,opt,name=bytesSent,proto3" json:"bytesSent,omitempty"`
	BytesReceived uint32 `protobuf:"varint,3,opt,name=bytesReceived,proto3" json:"bytesReceived,omitempty"`
	SendErrors    uint32 `protobuf:"varint,4,opt,name=sendErrors,proto3" json:"sendErrors,omitempty"`
	ReceiveErrors uint32 `protobuf:"varint,5,opt,name=receiveErrors,proto3" json:"receiveErrors,omitempty"`
	RunningTime   uint32 `protobuf:"varint,6,opt,name=runningTime,proto3" json:"runningTime,omitempty"`
}

func (x *TestStreamRpcResponse) Reset() {
	*x = TestStreamRpcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_testing_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestStreamRpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStreamRpcResponse) ProtoMessage() {}

func (x *TestStreamRpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_testing_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStreamRpcResponse.ProtoReflect.Descriptor instead.
func (*TestStreamRpcResponse) Descriptor() ([]byte, []int) {
	return file_example_testing_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *TestStreamRpcResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TestStreamRpcResponse) GetBytesSent() uint32 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *TestStreamRpcResponse) GetBytesReceived() uint32 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *TestStreamRpcResponse) GetSendErrors() uint32 {
	if x != nil {
		return x.SendErrors
	}
	return 0
}

func (x *TestStreamRpcResponse) GetReceiveErrors() uint32 {
	if x != nil {
		return x.ReceiveErrors
	}
	return 0
}

func (x *TestStreamRpcResponse) GetRunningTime() uint32 {
	if x != nil {
		return x.RunningTime
	}
	return 0
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce int32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_testing_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_example_testing_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_example_testing_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *PingRequest) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type PingReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce int32 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *PingReponse) Reset() {
	*x = PingReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_testing_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReponse) ProtoMessage() {}

func (x *PingReponse) ProtoReflect() protoreflect.Message {
	mi := &file_example_testing_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReponse.ProtoReflect.Descriptor instead.
func (*PingReponse) Descriptor() ([]byte, []int) {
	return file_example_testing_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *PingReponse) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type MessageWithAny struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *anypb.Any `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *MessageWithAny) Reset() {
	*x = MessageWithAny{}
	if protoimpl.UnsafeEnabled {
		mi := &file_example_testing_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWithAny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithAny) ProtoMessage() {}

func (x *MessageWithAny) ProtoReflect() protoreflect.Message {
	mi := &file_example_testing_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithAny.ProtoReflect.Descriptor instead.
func (*MessageWithAny) Descriptor() ([]byte, []int) {
	return file_example_testing_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *MessageWithAny) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_example_testing_rpc_proto protoreflect.FileDescriptor

var file_example_testing_rpc_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70, 0x63,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x0e, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25,
	0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x61, 0x64,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x23,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x40, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6e, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0xa0, 0x01, 0x0a, 0x0b, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x08, 0x56, 0x6f, 0x69, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x6c, 0x0a,
	0x11, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x23,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x32, 0xe2, 0x01, 0x0a, 0x16,
	0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x64, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x29, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x70, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x59, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4a, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x66, 0x0a, 0x0e, 0x54,
	0x65, 0x73, 0x74, 0x41, 0x6e, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a,
	0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6e, 0x79, 0x1a, 0x23,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x41, 0x6e, 0x79, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x64, 0x78, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x64, 0x65, 0x66, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_example_testing_rpc_proto_rawDescOnce sync.Once
	file_example_testing_rpc_proto_rawDescData = file_example_testing_rpc_proto_rawDesc
)

func file_example_testing_rpc_proto_rawDescGZIP() []byte {
	file_example_testing_rpc_proto_rawDescOnce.Do(func() {
		file_example_testing_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_example_testing_rpc_proto_rawDescData)
	})
	return file_example_testing_rpc_proto_rawDescData
}

var file_example_testing_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_example_testing_rpc_proto_goTypes = []interface{}{
	(*TestRpcRequest)(nil),        // 0: example.testing.rpc.TestRpcRequest
	(*TestRpcResponse)(nil),       // 1: example.testing.rpc.TestRpcResponse
	(*TestStreamRpcRequest)(nil),  // 2: example.testing.rpc.TestStreamRpcRequest
	(*TestStreamRpcResponse)(nil), // 3: example.testing.rpc.TestStreamRpcResponse
	(*PingRequest)(nil),           // 4: example.testing.rpc.PingRequest
	(*PingReponse)(nil),           // 5: example.testing.rpc.PingReponse
	(*MessageWithAny)(nil),        // 6: example.testing.rpc.MessageWithAny
	(*anypb.Any)(nil),             // 7: google.protobuf.Any
	(*emptypb.Empty)(nil),         // 8: google.protobuf.Empty
}
var file_example_testing_rpc_proto_depIdxs = []int32{
	7, // 0: example.testing.rpc.MessageWithAny.payload:type_name -> google.protobuf.Any
	0, // 1: example.testing.rpc.TestService.TestCall:input_type -> example.testing.rpc.TestRpcRequest
	8, // 2: example.testing.rpc.TestService.VoidCall:input_type -> google.protobuf.Empty
	0, // 3: example.testing.rpc.TestStreamService.TestCall:input_type -> example.testing.rpc.TestRpcRequest
	2, // 4: example.testing.rpc.TestServiceWithStreams.RequestTestStream:input_type -> example.testing.rpc.TestStreamRpcRequest
	0, // 5: example.testing.rpc.TestServiceWithStreams.CloseTestStream:input_type -> example.testing.rpc.TestRpcRequest
	4, // 6: example.testing.rpc.PingService.Ping:input_type -> example.testing.rpc.PingRequest
	6, // 7: example.testing.rpc.TestAnyService.TestCall:input_type -> example.testing.rpc.MessageWithAny
	1, // 8: example.testing.rpc.TestService.TestCall:output_type -> example.testing.rpc.TestRpcResponse
	8, // 9: example.testing.rpc.TestService.VoidCall:output_type -> google.protobuf.Empty
	1, // 10: example.testing.rpc.TestStreamService.TestCall:output_type -> example.testing.rpc.TestRpcResponse
	1, // 11: example.testing.rpc.TestServiceWithStreams.RequestTestStream:output_type -> example.testing.rpc.TestRpcResponse
	3, // 12: example.testing.rpc.TestServiceWithStreams.CloseTestStream:output_type -> example.testing.rpc.TestStreamRpcResponse
	5, // 13: example.testing.rpc.PingService.Ping:output_type -> example.testing.rpc.PingReponse
	6, // 14: example.testing.rpc.TestAnyService.TestCall:output_type -> example.testing.rpc.MessageWithAny
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_example_testing_rpc_proto_init() }
func file_example_testing_rpc_proto_init() {
	if File_example_testing_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_example_testing_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_testing_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRpcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_testing_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestStreamRpcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_testing_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestStreamRpcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_testing_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_testing_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_example_testing_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWithAny); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_example_testing_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_example_testing_rpc_proto_goTypes,
		DependencyIndexes: file_example_testing_rpc_proto_depIdxs,
		MessageInfos:      file_example_testing_rpc_proto_msgTypes,
	}.Build()
	File_example_testing_rpc_proto = out.File
	file_example_testing_rpc_proto_rawDesc = nil
	file_example_testing_rpc_proto_goTypes = nil
	file_example_testing_rpc_proto_depIdxs = nil
}
