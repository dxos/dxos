/* TODO(thure): Focus is handled by .dx-focus-ring, but should ideally be applied as part of this component. */
@layer dx-components {
  /* Base styles */
  .dx-button {
    /* QUESTION(burdon): Why dx- prefix? How do we keep these consistent with TW styles (e.g., min-bs-, padding, font size.) */
    /* ANSWER(thure): These are not utility classes, these are component classes on a different layer, which themselves apply utility classes using `@apply`, as such they have a different naming scheme. The prefix can change, but I recommend following a webcomponent naming scheme rather than a CSS property naming scheme, since that is the corresponding scope of concern. */
    @apply font-medium shrink-0 inline-flex select-none items-center justify-center overflow-hidden transition-colors duration-100 ease-linear bg-input min-bs-[2.5rem] pli-3;
    &[aria-pressed='true'],
    &[aria-checked='true'] {
      @apply text-accentText bg-attention;
    }
    /* Disabled styles */
    &[disabled]:not([disabled='false']) {
      @apply opacity-40 cursor-not-allowed shadow-none;
    }
    /* Variants consistent between enabled & disabled */
    &[data-variant='ghost'] {
      @apply bg-transparent;
      &:hover {
        @apply bg-hoverSurface text-inherit;
      }
      &[data-state='open'] {
        @apply bg-input;
      }
      &[aria-pressed='true'],
      &[aria-checked='true'] {
        @apply bg-base text-accentText;
      }
    }
    &[data-variant='outline'] {
      @apply border border-base bg-transparent;
      &:hover {
        @apply bg-hoverSurface;
      }
    }
    /* Enabled styles */
    &:not([disabled]),
    &[disabled='false'] {
      /* Hover */
      &:hover {
        @apply bg-hoverSurface;
      }
      /* Variants */
      &[data-variant='primary'] {
        @apply text-inverse bg-accentSurface;
        &:hover,
        &[aria-pressed='true'],
        &[aria-checked='true'] &[data-state='open'] {
          @apply bg-accentSurfaceHover;
        }
      }
      &[data-variant='destructive'] {
        @apply text-inverse bg-rose-550;
        &:hover,
        &[aria-pressed='true'],
        &[aria-checked='true'] &[data-state='open'] {
          @apply bg-rose-500;
        }
      }
    }
  }
  /* Props */
  .dx-button:not([data-props~='grouped']) {
    @apply rounded-sm;
  }
  .dx-button:not([data-props~='wrap']) {
    @apply truncate;
  }
  @media (pointer: fine) {
    .dx-button[data-density='fine'] {
      @apply min-bs-[2rem] pli-2.5;
    }
  }
}
