//
// Copyright 2022 DXOS.org
//

import yaml from 'js-yaml';
import { existsSync } from 'node:fs';
import { readFile, writeFile } from 'node:fs/promises';
import { join } from 'node:path';
import { v4 as uuid, validate as validateUuid } from 'uuid';

import { captureException } from '@dxos/sentry';

export const getMachineId = async (configDir: string) => {
  const idPath = join(configDir, 'machineid.yml');
  if (existsSync(idPath)) {
    const idContent = await readFile(idPath, 'utf-8');
    return validate(idContent) ?? createMachineId(idPath);
  }

  return createMachineId(idPath);
};

const createMachineId = async (idPath: string) => {
  const machineId = uuid();
  const idContent = yaml.dump({ machineId });
  const comment = '# This file is automatically generated by the dx-cli.\n';
  await writeFile(idPath, `${comment}${idContent}`, 'utf-8');
  return machineId;
};

const validate = (idContent: string) => {
  try {
    const { machineId } = yaml.load(idContent) as { machineId: string };
    if (Boolean(machineId) && validateUuid(machineId)) {
      return machineId;
    }
  } catch (err: any) {
    captureException(err);
  }
};
