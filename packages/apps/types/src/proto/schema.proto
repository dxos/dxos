//
// Copyright 2023 DXOS.org
//

syntax = "proto3";

import "dxos/schema.proto";

package braneframe;

//option echo_namespace = 'braneframe.com/schema';

/**
 *
 */
message Folder {
  option (object) = true;

  optional string name = 1;
  repeated dxos.schema.TypedObject objects = 2;
}

/**
 * Generic data view.
 */
message View {
  option (object) = true;

  string title = 1;
  string type = 2;
}

/**
 * Table view.
 */
message Table {
  option (object) = true;

  message Prop {
    string id = 1;
    string prop = 2;
    string label = 3;
    string refProp = 4;
    int32 size = 10;
  }

  string title = 1;
  dxos.schema.Schema schema = 2;
  repeated Prop props = 3;

  // TODO(burdon): Filter.
  // TODO(burdon): Visible columns.
  // TODO(burdon): Column widths.
}

/**
 *
 */
message File {
  option (object) = true;

  string type = 1;
  string timestamp = 2;
  string title = 3;
  string filename = 4;

  string cid = 10;
}

/**
 *
 */
message Document {
  option (object) = true;

  string title = 1;
  dxos.schema.Text content = 2;
}

/**
 *
 */
message Script {
  option (object) = true;

  string title = 1;
  dxos.schema.Text source = 2;
}

/**
 *
 */
message Stack {
  option (object) = true;

  message Section {
    // TODO(burdon): Should this be an object?
    option (object) = true;

    dxos.schema.TypedObject object = 1;
  }

  string title = 1;
  repeated Section sections = 2;
}

/**
 *
 */
message Kanban {
  option (object) = true;

  message Column {
    // TODO(burdon): Should this be an object?
    option (object) = true;

    string title = 1;
    string index = 2;
    repeated Item items = 3;
  }

  // TODO(burdon): Reconcile with Grid.Item.
  message Item {
    option (object) = true;

    dxos.schema.TypedObject object = 1;
    dxos.schema.Text title = 2;

    // TODO(burdon): Properties.
    string index = 11;
  }

  string title = 1;
  repeated Column columns = 2;
}

/**
 *
 */
message Grid {
  option (object) = true;

  // TODO(burdon): Reconcile with Kanban.Item.
  message Item {
    option (object) = true;

    dxos.schema.TypedObject object = 1;

    string position = 10; // TODO(burdon): Replace layout object?
    string color = 11;
  }

  string title = 1;
  repeated Item items = 2;
  dxos.schema.TypedObject layout = 3;
}

/**
 *
 */
message Sketch {
  option (object) = true;

  string title = 1;
  // TODO(burdon): YJS document (map).
  dxos.schema.Text data = 2;
}

/**
 *
 */
// TODO(burdon): Channel > Thread > Block > Message.
message Thread {
  option (object) = true;

  message Context {
    string space = 1;
    string schema = 2;
    string object = 3;
  }

  message Message {
    string timestamp = 1;
    string text = 2;
    string data = 3; // JSON.
    dxos.schema.Expando object = 4; // TODO(burdon): Change to TypedObject.
  }

  // TODO(burdon): Meta (e.g., source).
  message Block {
    option (object) = true;

    // TODO(burdon): Can the be inferred from the mutation/pipeline?
    // TODO(burdon): Import key.
    // dxos.keys.PublicKey identity_key = 2;
    string identity_key = 1;
    Context context = 2;
    repeated Message messages = 3;
  }

  string title = 1;
  repeated Block blocks = 2;
}

// TODO(burdon): Unify with Thread.Message.
message Message {
  option (object) = true;

  message Recipient {
    option (object) = true; // TODO(burdon): REMOVE.
    string email = 1;
    string name = 2;
  }

  // TODO(burdon): Type.
  // TODO(burdon): Timestamp (across all objects).
  string date = 2;
  Recipient from = 3;
  repeated Recipient to = 4;
  string subject = 5;
  string body = 6;
  string ref = 7; // TODO(burdon): Implement as link.
}

message Inbox {
  option (object) = true;

  string name = 1;
}
