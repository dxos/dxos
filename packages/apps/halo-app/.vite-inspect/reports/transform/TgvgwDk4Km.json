{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/queue-microtask@1.2.3/node_modules/queue-microtask/index.js","transforms":[{"name":"vite:load-fallback","result":"/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","start":1670465468221,"end":1670465468278},{"name":"vite:react-babel","result":"/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","start":1670465468278,"end":1670465468278,"order":"pre"},{"name":"commonjs","result":"/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nlet promise\n\nvar queueMicrotask_1 = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : commonjsHelpers.commonjsGlobal)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n\nexport default queueMicrotask_1;\nexport { queueMicrotask_1 as __moduleExports };","start":1670465468278,"end":1670465468278,"order":"normal"}]}
