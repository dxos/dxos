{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@segment+snippet@4.15.3/node_modules/@segment/snippet/lib/index.js","transforms":[{"name":"vite:load-fallback","result":"'use strict';\n\n/**\n * Module Dependencies.\n */\n\nvar map = require('@ndhoule/map');\nvar maxTemplate = require('../dist/max.template');\nvar minTemplate = require('../dist/min.template');\n\n/**\n * Has convenience alias\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return the maxified templating function.\n *\n * @param {Object} options (optional)\n * @return {String} rendered\n */\n\nexports.max = function(options) {\n  var settings = defaults(options);\n  settings.load = renderLoad(settings);\n  settings.page = renderPage(settings.page);\n  settings.optionalCDN = renderOptionalCDNHost(settings);\n\n  return maxTemplate(settings);\n};\n\n/**\n * Return the minified templating function.\n *\n * @param {Object} options\n * @return {String} min\n */\n\nexports.min = function(options) {\n  var settings = defaults(options);\n  settings.load = renderLoad(settings);\n  settings.page = renderPage(settings.page);\n  settings.optionalCDN = renderOptionalCDNHost(settings);\n\n  return minTemplate(settings);\n};\n\n/**\n * Back an options object with the snippet defaults.\n *\n * @param {Object} options (optional)\n * @return {Object}\n */\n\nfunction defaults(options) {\n  options || (options = {});\n  options.apiKey || (options.apiKey = 'YOUR_API_KEY');\n  options.host || (options.host = 'cdn.segment.com');\n  options.ajsPath || (options.ajsPath = '/analytics.js/v1/\\\" + key + \\\"/analytics.min.js');\n  options.useHostForBundles || (options.useHostForBundles = false);\n\n  if (!has.call(options, 'page')) options.page = true;\n  if (!has.call(options, 'load')) options.load = true;\n  return options;\n}\n\n/**\n * Handlebars helper which will render the window.analytics.page call.\n *\n * By default just render the empty call, adding whatever arguments are\n * passed in explicitly.\n *\n * @param {Object|Boolean} page options (name, category, properties)\n * @return {String}\n */\n\nfunction renderPage(page) {\n  if (!page) return '';\n\n  var args = [];\n\n  if (page.category) args.push(page.category);\n  if (page.name) args.push(page.name);\n  if (page.properties) args.push(page.properties);\n\n  // eslint-disable-next-line no-restricted-globals\n  var res = 'analytics.page(' + map(JSON.stringify, args).join(', ') + ');';\n\n  return res;\n}\n\nfunction renderLoad(settings) {\n  if (!settings.load) return '';\n\n  if (typeof settings.load !== 'boolean') {\n    // eslint-disable-next-line no-restricted-globals\n    var loadOptions = JSON.stringify(settings.load);\n    return 'analytics.load(\"' + settings.apiKey + '\", ' + loadOptions + ');';\n  }\n\n  return 'analytics.load(\"' + settings.apiKey + '\");';\n}\n\nfunction renderOptionalCDNHost(settings) {\n  if (!settings) return '';\n\n  if (typeof settings.useHostForBundles === 'boolean' && settings.useHostForBundles) {\n    return 'analytics._cdn = \"https://' + settings.host + '\"';\n  }\n\n  return '';\n}\n","start":1670465465282,"end":1670465465993},{"name":"vite:react-babel","result":"'use strict';\n\n/**\n * Module Dependencies.\n */\n\nvar map = require('@ndhoule/map');\nvar maxTemplate = require('../dist/max.template');\nvar minTemplate = require('../dist/min.template');\n\n/**\n * Has convenience alias\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return the maxified templating function.\n *\n * @param {Object} options (optional)\n * @return {String} rendered\n */\n\nexports.max = function(options) {\n  var settings = defaults(options);\n  settings.load = renderLoad(settings);\n  settings.page = renderPage(settings.page);\n  settings.optionalCDN = renderOptionalCDNHost(settings);\n\n  return maxTemplate(settings);\n};\n\n/**\n * Return the minified templating function.\n *\n * @param {Object} options\n * @return {String} min\n */\n\nexports.min = function(options) {\n  var settings = defaults(options);\n  settings.load = renderLoad(settings);\n  settings.page = renderPage(settings.page);\n  settings.optionalCDN = renderOptionalCDNHost(settings);\n\n  return minTemplate(settings);\n};\n\n/**\n * Back an options object with the snippet defaults.\n *\n * @param {Object} options (optional)\n * @return {Object}\n */\n\nfunction defaults(options) {\n  options || (options = {});\n  options.apiKey || (options.apiKey = 'YOUR_API_KEY');\n  options.host || (options.host = 'cdn.segment.com');\n  options.ajsPath || (options.ajsPath = '/analytics.js/v1/\\\" + key + \\\"/analytics.min.js');\n  options.useHostForBundles || (options.useHostForBundles = false);\n\n  if (!has.call(options, 'page')) options.page = true;\n  if (!has.call(options, 'load')) options.load = true;\n  return options;\n}\n\n/**\n * Handlebars helper which will render the window.analytics.page call.\n *\n * By default just render the empty call, adding whatever arguments are\n * passed in explicitly.\n *\n * @param {Object|Boolean} page options (name, category, properties)\n * @return {String}\n */\n\nfunction renderPage(page) {\n  if (!page) return '';\n\n  var args = [];\n\n  if (page.category) args.push(page.category);\n  if (page.name) args.push(page.name);\n  if (page.properties) args.push(page.properties);\n\n  // eslint-disable-next-line no-restricted-globals\n  var res = 'analytics.page(' + map(JSON.stringify, args).join(', ') + ');';\n\n  return res;\n}\n\nfunction renderLoad(settings) {\n  if (!settings.load) return '';\n\n  if (typeof settings.load !== 'boolean') {\n    // eslint-disable-next-line no-restricted-globals\n    var loadOptions = JSON.stringify(settings.load);\n    return 'analytics.load(\"' + settings.apiKey + '\", ' + loadOptions + ');';\n  }\n\n  return 'analytics.load(\"' + settings.apiKey + '\");';\n}\n\nfunction renderOptionalCDNHost(settings) {\n  if (!settings) return '';\n\n  if (typeof settings.useHostForBundles === 'boolean' && settings.useHostForBundles) {\n    return 'analytics._cdn = \"https://' + settings.host + '\"';\n  }\n\n  return '';\n}\n","start":1670465465993,"end":1670465465994,"order":"pre"},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as lib } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@segment+snippet@4.15.3/node_modules/@segment/snippet/lib/index.js?commonjs-exports\"\nimport require$$0 from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@ndhoule+map@2.0.1/node_modules/@ndhoule/map/index.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@segment+snippet@4.15.3/node_modules/@segment/snippet/dist/max.template.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@segment+snippet@4.15.3/node_modules/@segment/snippet/dist/min.template.js?commonjs-proxy\";\n\n'use strict';\n\n/**\n * Module Dependencies.\n */\n\nvar map = require$$0;\nvar maxTemplate = require$$1;\nvar minTemplate = require$$2;\n\n/**\n * Has convenience alias\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return the maxified templating function.\n *\n * @param {Object} options (optional)\n * @return {String} rendered\n */\n\nvar max = lib.max = function(options) {\n  var settings = defaults(options);\n  settings.load = renderLoad(settings);\n  settings.page = renderPage(settings.page);\n  settings.optionalCDN = renderOptionalCDNHost(settings);\n\n  return maxTemplate(settings);\n};\n\n/**\n * Return the minified templating function.\n *\n * @param {Object} options\n * @return {String} min\n */\n\nvar min = lib.min = function(options) {\n  var settings = defaults(options);\n  settings.load = renderLoad(settings);\n  settings.page = renderPage(settings.page);\n  settings.optionalCDN = renderOptionalCDNHost(settings);\n\n  return minTemplate(settings);\n};\n\n/**\n * Back an options object with the snippet defaults.\n *\n * @param {Object} options (optional)\n * @return {Object}\n */\n\nfunction defaults(options) {\n  options || (options = {});\n  options.apiKey || (options.apiKey = 'YOUR_API_KEY');\n  options.host || (options.host = 'cdn.segment.com');\n  options.ajsPath || (options.ajsPath = '/analytics.js/v1/\\\" + key + \\\"/analytics.min.js');\n  options.useHostForBundles || (options.useHostForBundles = false);\n\n  if (!has.call(options, 'page')) options.page = true;\n  if (!has.call(options, 'load')) options.load = true;\n  return options;\n}\n\n/**\n * Handlebars helper which will render the window.analytics.page call.\n *\n * By default just render the empty call, adding whatever arguments are\n * passed in explicitly.\n *\n * @param {Object|Boolean} page options (name, category, properties)\n * @return {String}\n */\n\nfunction renderPage(page) {\n  if (!page) return '';\n\n  var args = [];\n\n  if (page.category) args.push(page.category);\n  if (page.name) args.push(page.name);\n  if (page.properties) args.push(page.properties);\n\n  // eslint-disable-next-line no-restricted-globals\n  var res = 'analytics.page(' + map(JSON.stringify, args).join(', ') + ');';\n\n  return res;\n}\n\nfunction renderLoad(settings) {\n  if (!settings.load) return '';\n\n  if (typeof settings.load !== 'boolean') {\n    // eslint-disable-next-line no-restricted-globals\n    var loadOptions = JSON.stringify(settings.load);\n    return 'analytics.load(\"' + settings.apiKey + '\", ' + loadOptions + ');';\n  }\n\n  return 'analytics.load(\"' + settings.apiKey + '\");';\n}\n\nfunction renderOptionalCDNHost(settings) {\n  if (!settings) return '';\n\n  if (typeof settings.useHostForBundles === 'boolean' && settings.useHostForBundles) {\n    return 'analytics._cdn = \"https://' + settings.host + '\"';\n  }\n\n  return '';\n}\n\nexport { lib as __moduleExports, max, min, lib as default };","start":1670465465994,"end":1670465468882,"order":"normal"},{"name":"polyfill-node","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as lib } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@segment+snippet@4.15.3/node_modules/@segment/snippet/lib/index.js?commonjs-exports\"\nimport require$$0 from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@ndhoule+map@2.0.1/node_modules/@ndhoule/map/index.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@segment+snippet@4.15.3/node_modules/@segment/snippet/dist/max.template.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@segment+snippet@4.15.3/node_modules/@segment/snippet/dist/min.template.js?commonjs-proxy\";\n\n'use strict';\n\n/**\n * Module Dependencies.\n */\n\nvar map = require$$0;\nvar maxTemplate = require$$1;\nvar minTemplate = require$$2;\n\n/**\n * Has convenience alias\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Return the maxified templating function.\n *\n * @param {Object} options (optional)\n * @return {String} rendered\n */\n\nvar max = lib.max = function(options) {\n  var settings = defaults(options);\n  settings.load = renderLoad(settings);\n  settings.page = renderPage(settings.page);\n  settings.optionalCDN = renderOptionalCDNHost(settings);\n\n  return maxTemplate(settings);\n};\n\n/**\n * Return the minified templating function.\n *\n * @param {Object} options\n * @return {String} min\n */\n\nvar min = lib.min = function(options) {\n  var settings = defaults(options);\n  settings.load = renderLoad(settings);\n  settings.page = renderPage(settings.page);\n  settings.optionalCDN = renderOptionalCDNHost(settings);\n\n  return minTemplate(settings);\n};\n\n/**\n * Back an options object with the snippet defaults.\n *\n * @param {Object} options (optional)\n * @return {Object}\n */\n\nfunction defaults(options) {\n  options || (options = {});\n  options.apiKey || (options.apiKey = 'YOUR_API_KEY');\n  options.host || (options.host = 'cdn.segment.com');\n  options.ajsPath || (options.ajsPath = '/analytics.js/v1/\\\" + key + \\\"/analytics.min.js');\n  options.useHostForBundles || (options.useHostForBundles = false);\n\n  if (!has.call(options, 'page')) options.page = true;\n  if (!has.call(options, 'load')) options.load = true;\n  return options;\n}\n\n/**\n * Handlebars helper which will render the window.analytics.page call.\n *\n * By default just render the empty call, adding whatever arguments are\n * passed in explicitly.\n *\n * @param {Object|Boolean} page options (name, category, properties)\n * @return {String}\n */\n\nfunction renderPage(page) {\n  if (!page) return '';\n\n  var args = [];\n\n  if (page.category) args.push(page.category);\n  if (page.name) args.push(page.name);\n  if (page.properties) args.push(page.properties);\n\n  // eslint-disable-next-line no-restricted-globals\n  var res = 'analytics.page(' + map(JSON.stringify, args).join(', ') + ');';\n\n  return res;\n}\n\nfunction renderLoad(settings) {\n  if (!settings.load) return '';\n\n  if (typeof settings.load !== 'boolean') {\n    // eslint-disable-next-line no-restricted-globals\n    var loadOptions = JSON.stringify(settings.load);\n    return 'analytics.load(\"' + settings.apiKey + '\", ' + loadOptions + ');';\n  }\n\n  return 'analytics.load(\"' + settings.apiKey + '\");';\n}\n\nfunction renderOptionalCDNHost(settings) {\n  if (!settings) return '';\n\n  if (typeof settings.useHostForBundles === 'boolean' && settings.useHostForBundles) {\n    return 'analytics._cdn = \"https://' + settings.host + '\"';\n  }\n\n  return '';\n}\n\nexport { lib as __moduleExports, max, min, lib as default };","start":1670465468882,"end":1670465468883,"order":"normal"}]}
