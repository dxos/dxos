{"resolvedId":"/home/jdw/Code/dxos/dxos/packages/common/react-async/dist/lib/browser/index.mjs","transforms":[{"name":"vite:load-fallback","result":"// packages/common/react-async/src/useAsyncEffect.ts\nimport { useEffect } from \"react\";\nvar useAsyncEffect = (callback, destructor, deps) => {\n  const [effectDestructor, effectDeps] = typeof destructor === \"function\" ? [\n    destructor,\n    deps\n  ] : [\n    void 0,\n    destructor\n  ];\n  useEffect(() => {\n    let mounted = true;\n    let value;\n    const asyncResult = callback(() => mounted);\n    void Promise.resolve(asyncResult).then((result) => {\n      value = result;\n    });\n    return () => {\n      mounted = false;\n      effectDestructor == null ? void 0 : effectDestructor(value);\n    };\n  }, effectDeps);\n};\n\n// packages/common/react-async/src/useControlledState.ts\nimport { useEffect as useEffect2, useState } from \"react\";\nvar useControlledState = (controlledValue, onChange, deps) => {\n  const [value, setValue] = useState(controlledValue);\n  useEffect2(() => {\n    setValue(controlledValue);\n  }, [\n    controlledValue,\n    ...deps != null ? deps : []\n  ]);\n  return [\n    value,\n    (callback) => {\n      const newValue = typeof callback === \"function\" ? callback(value) : callback;\n      setValue(newValue);\n      onChange == null ? void 0 : onChange(newValue);\n    }\n  ];\n};\n\n// packages/common/react-async/src/useDynamicRef.ts\nimport { useEffect as useEffect3, useRef, useState as useState2 } from \"react\";\nvar useDynamicRef = (initialValue, deps) => {\n  const [, setValue] = useState2(initialValue);\n  const ref = useRef(initialValue());\n  useEffect3(() => {\n    ref.current = initialValue();\n    setValue(ref.current);\n  }, deps);\n  return ref;\n};\n\n// packages/common/react-async/src/useMounted.ts\nimport { useEffect as useEffect4, useRef as useRef2 } from \"react\";\nvar useMounted = () => {\n  const mounted = useRef2(false);\n  useEffect4(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return () => mounted.current;\n};\n\n// packages/common/react-async/src/useStateRef.ts\nimport { useEffect as useEffect5, useRef as useRef3, useState as useState3 } from \"react\";\nvar useStateRef = (initialValue) => {\n  const [value, setValue] = useState3(initialValue);\n  const ref = useRef3();\n  useEffect5(() => {\n    ref.current = value;\n  }, [\n    initialValue,\n    value\n  ]);\n  return [\n    value,\n    setValue,\n    ref\n  ];\n};\n\n// packages/common/react-async/src/useStateUpdater.ts\nimport update from \"immutability-helper\";\nimport { useState as useState4 } from \"react\";\nvar useStateUpdater = (initialValue) => {\n  const [value, setValue] = useState4(initialValue);\n  const handleUpdate = (spec) => {\n    const newValue = update(value, spec);\n    setValue(newValue);\n    return newValue;\n  };\n  return [\n    value,\n    setValue,\n    handleUpdate\n  ];\n};\n\n// packages/common/react-async/src/useStateWithRef.ts\nimport { useEffect as useEffect6, useRef as useRef4, useState as useState5 } from \"react\";\nvar useStateWithRef = (initialValue) => {\n  const [value, setValue] = useState5(initialValue);\n  const ref = useRef4();\n  useEffect6(() => {\n    ref.current = value;\n  }, [\n    initialValue,\n    value\n  ]);\n  return [\n    value,\n    setValue,\n    ref\n  ];\n};\n\n// packages/common/react-async/src/useTimestamp.ts\nimport { useEffect as useEffect7, useState as useState6 } from \"react\";\nvar useTimestamp = (deps) => {\n  const [{ timestamp, previous }, setTimestamp] = useState6({\n    timestamp: Date.now()\n  });\n  useEffect7(() => {\n    setTimestamp({\n      timestamp: Date.now(),\n      previous: timestamp\n    });\n  }, deps || []);\n  return [\n    timestamp,\n    () => setTimestamp({\n      timestamp: Date.now(),\n      previous: timestamp\n    }),\n    previous\n  ];\n};\nexport {\n  useAsyncEffect,\n  useControlledState,\n  useDynamicRef,\n  useMounted,\n  useStateRef,\n  useStateUpdater,\n  useStateWithRef,\n  useTimestamp\n};\n//# sourceMappingURL=index.mjs.map\n","start":1670465438903,"end":1670465440530},{"name":"vite:react-babel","result":"// packages/common/react-async/src/useAsyncEffect.ts\nimport { useEffect } from \"react\";\nvar useAsyncEffect = (callback, destructor, deps) => {\n  const [effectDestructor, effectDeps] = typeof destructor === \"function\" ? [\n    destructor,\n    deps\n  ] : [\n    void 0,\n    destructor\n  ];\n  useEffect(() => {\n    let mounted = true;\n    let value;\n    const asyncResult = callback(() => mounted);\n    void Promise.resolve(asyncResult).then((result) => {\n      value = result;\n    });\n    return () => {\n      mounted = false;\n      effectDestructor == null ? void 0 : effectDestructor(value);\n    };\n  }, effectDeps);\n};\n\n// packages/common/react-async/src/useControlledState.ts\nimport { useEffect as useEffect2, useState } from \"react\";\nvar useControlledState = (controlledValue, onChange, deps) => {\n  const [value, setValue] = useState(controlledValue);\n  useEffect2(() => {\n    setValue(controlledValue);\n  }, [\n    controlledValue,\n    ...deps != null ? deps : []\n  ]);\n  return [\n    value,\n    (callback) => {\n      const newValue = typeof callback === \"function\" ? callback(value) : callback;\n      setValue(newValue);\n      onChange == null ? void 0 : onChange(newValue);\n    }\n  ];\n};\n\n// packages/common/react-async/src/useDynamicRef.ts\nimport { useEffect as useEffect3, useRef, useState as useState2 } from \"react\";\nvar useDynamicRef = (initialValue, deps) => {\n  const [, setValue] = useState2(initialValue);\n  const ref = useRef(initialValue());\n  useEffect3(() => {\n    ref.current = initialValue();\n    setValue(ref.current);\n  }, deps);\n  return ref;\n};\n\n// packages/common/react-async/src/useMounted.ts\nimport { useEffect as useEffect4, useRef as useRef2 } from \"react\";\nvar useMounted = () => {\n  const mounted = useRef2(false);\n  useEffect4(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return () => mounted.current;\n};\n\n// packages/common/react-async/src/useStateRef.ts\nimport { useEffect as useEffect5, useRef as useRef3, useState as useState3 } from \"react\";\nvar useStateRef = (initialValue) => {\n  const [value, setValue] = useState3(initialValue);\n  const ref = useRef3();\n  useEffect5(() => {\n    ref.current = value;\n  }, [\n    initialValue,\n    value\n  ]);\n  return [\n    value,\n    setValue,\n    ref\n  ];\n};\n\n// packages/common/react-async/src/useStateUpdater.ts\nimport update from \"immutability-helper\";\nimport { useState as useState4 } from \"react\";\nvar useStateUpdater = (initialValue) => {\n  const [value, setValue] = useState4(initialValue);\n  const handleUpdate = (spec) => {\n    const newValue = update(value, spec);\n    setValue(newValue);\n    return newValue;\n  };\n  return [\n    value,\n    setValue,\n    handleUpdate\n  ];\n};\n\n// packages/common/react-async/src/useStateWithRef.ts\nimport { useEffect as useEffect6, useRef as useRef4, useState as useState5 } from \"react\";\nvar useStateWithRef = (initialValue) => {\n  const [value, setValue] = useState5(initialValue);\n  const ref = useRef4();\n  useEffect6(() => {\n    ref.current = value;\n  }, [\n    initialValue,\n    value\n  ]);\n  return [\n    value,\n    setValue,\n    ref\n  ];\n};\n\n// packages/common/react-async/src/useTimestamp.ts\nimport { useEffect as useEffect7, useState as useState6 } from \"react\";\nvar useTimestamp = (deps) => {\n  const [{ timestamp, previous }, setTimestamp] = useState6({\n    timestamp: Date.now()\n  });\n  useEffect7(() => {\n    setTimestamp({\n      timestamp: Date.now(),\n      previous: timestamp\n    });\n  }, deps || []);\n  return [\n    timestamp,\n    () => setTimestamp({\n      timestamp: Date.now(),\n      previous: timestamp\n    }),\n    previous\n  ];\n};\nexport {\n  useAsyncEffect,\n  useControlledState,\n  useDynamicRef,\n  useMounted,\n  useStateRef,\n  useStateUpdater,\n  useStateWithRef,\n  useTimestamp\n};\n//# sourceMappingURL=index.mjs.map\n","start":1670465440530,"end":1670465440530,"order":"pre"}]}
