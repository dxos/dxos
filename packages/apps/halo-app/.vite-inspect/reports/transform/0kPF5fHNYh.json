{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/sodium-javascript@0.8.0/node_modules/sodium-javascript/memory.js","transforms":[{"name":"vite:load-fallback","result":"/* eslint-disable camelcase */\n\nfunction sodium_malloc (n) {\n  return new Uint8Array(n)\n}\n\nfunction sodium_free (n) {\n  sodium_memzero(n)\n  loadSink().port1.postMessage(n.buffer, [n.buffer])\n}\n\nfunction sodium_memzero (arr) {\n  arr.fill(0)\n}\n\nvar sink\n\nfunction loadSink () {\n  if (sink) return sink\n  var MessageChannel = globalThis.MessageChannel\n  if (MessageChannel == null) ({ MessageChannel } = require('worker' + '_threads'))\n  sink = new MessageChannel()\n  return sink\n}\n\nmodule.exports = {\n  sodium_malloc,\n  sodium_free,\n  sodium_memzero\n}\n","start":1670465470653,"end":1670465470824},{"name":"vite:react-babel","result":"/* eslint-disable camelcase */\n\nfunction sodium_malloc (n) {\n  return new Uint8Array(n)\n}\n\nfunction sodium_free (n) {\n  sodium_memzero(n)\n  loadSink().port1.postMessage(n.buffer, [n.buffer])\n}\n\nfunction sodium_memzero (arr) {\n  arr.fill(0)\n}\n\nvar sink\n\nfunction loadSink () {\n  if (sink) return sink\n  var MessageChannel = globalThis.MessageChannel\n  if (MessageChannel == null) ({ MessageChannel } = require('worker' + '_threads'))\n  sink = new MessageChannel()\n  return sink\n}\n\nmodule.exports = {\n  sodium_malloc,\n  sodium_free,\n  sodium_memzero\n}\n","start":1670465470824,"end":1670465470824,"order":"pre"},{"name":"commonjs","result":"/* eslint-disable camelcase */\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { commonjsRequire as commonjsRequire } from \"\u0000commonjs-dynamic-modules\";\n\nfunction sodium_malloc (n) {\n  return new Uint8Array(n)\n}\n\nfunction sodium_free (n) {\n  sodium_memzero(n)\n  loadSink().port1.postMessage(n.buffer, [n.buffer])\n}\n\nfunction sodium_memzero (arr) {\n  arr.fill(0)\n}\n\nvar sink\n\nfunction loadSink () {\n  if (sink) return sink\n  var MessageChannel = globalThis.MessageChannel\n  if (MessageChannel == null) ({ MessageChannel } = commonjsRequire('worker' + '_threads'))\n  sink = new MessageChannel()\n  return sink\n}\n\nvar memory = {\n  sodium_malloc,\n  sodium_free,\n  sodium_memzero\n}\n\nexport default memory;\nexport { memory as __moduleExports };","start":1670465470825,"end":1670465470825,"order":"normal"},{"name":"polyfill-node","result":"/* eslint-disable camelcase */\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { commonjsRequire as commonjsRequire } from \"\u0000commonjs-dynamic-modules\";\n\nfunction sodium_malloc (n) {\n  return new Uint8Array(n)\n}\n\nfunction sodium_free (n) {\n  sodium_memzero(n)\n  loadSink().port1.postMessage(n.buffer, [n.buffer])\n}\n\nfunction sodium_memzero (arr) {\n  arr.fill(0)\n}\n\nvar sink\n\nfunction loadSink () {\n  if (sink) return sink\n  var MessageChannel = globalThis.MessageChannel\n  if (MessageChannel == null) ({ MessageChannel } = commonjsRequire('worker' + '_threads'))\n  sink = new MessageChannel()\n  return sink\n}\n\nvar memory = {\n  sodium_malloc,\n  sodium_free,\n  sodium_memzero\n}\n\nexport default memory;\nexport { memory as __moduleExports };","start":1670465470825,"end":1670465470826,"order":"normal"}]}
