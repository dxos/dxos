{"resolvedId":"/home/jdw/Code/dxos/dxos/packages/sdk/errors/dist/lib/browser/index.mjs","transforms":[{"name":"vite:load-fallback","result":"// packages/sdk/errors/src/errors.ts\nvar BaseError = class extends Error {\n  constructor(code, message, context) {\n    super(message ? `${code}: ${message}` : code.toString());\n    this.code = code;\n    this.context = context;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n};\nvar ApiError = class extends BaseError {\n};\nvar SystemError = class extends BaseError {\n};\nvar InvalidConfigError = class extends ApiError {\n  constructor(message, context) {\n    super(\"INVALID_CONFIG\", message, context);\n  }\n};\nvar RemoteServiceConnectionTimeout = class extends ApiError {\n  constructor(message, context) {\n    super(\"REMOTE_SERVICE_CONNECTION_TIMEOUT\", message, context);\n  }\n};\nexport {\n  ApiError,\n  InvalidConfigError,\n  RemoteServiceConnectionTimeout,\n  SystemError\n};\n//# sourceMappingURL=index.mjs.map\n","start":1670465465353,"end":1670465466202},{"name":"vite:react-babel","result":"// packages/sdk/errors/src/errors.ts\nvar BaseError = class extends Error {\n  constructor(code, message, context) {\n    super(message ? `${code}: ${message}` : code.toString());\n    this.code = code;\n    this.context = context;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n};\nvar ApiError = class extends BaseError {\n};\nvar SystemError = class extends BaseError {\n};\nvar InvalidConfigError = class extends ApiError {\n  constructor(message, context) {\n    super(\"INVALID_CONFIG\", message, context);\n  }\n};\nvar RemoteServiceConnectionTimeout = class extends ApiError {\n  constructor(message, context) {\n    super(\"REMOTE_SERVICE_CONNECTION_TIMEOUT\", message, context);\n  }\n};\nexport {\n  ApiError,\n  InvalidConfigError,\n  RemoteServiceConnectionTimeout,\n  SystemError\n};\n//# sourceMappingURL=index.mjs.map\n","start":1670465466202,"end":1670465466202,"order":"pre"}]}
