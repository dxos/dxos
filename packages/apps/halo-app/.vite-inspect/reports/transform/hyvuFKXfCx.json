{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/sodium-javascript@0.8.0/node_modules/sodium-javascript/crypto_shorthash.js","transforms":[{"name":"vite:load-fallback","result":"var siphash = require('siphash24')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nexports.crypto_shorthash_PRIMITIVE = 'siphash24'\nexports.crypto_shorthash_BYTES = siphash.BYTES\nexports.crypto_shorthash_KEYBYTES = siphash.KEYBYTES\nexports.crypto_shorthash_WASM_SUPPORTED = siphash.WASM_SUPPORTED\nexports.crypto_shorthash_WASM_LOADED = siphash.WASM_LOADED\nexports.crypto_shorthash = shorthash\n\nfunction shorthash (out, data, key, noAssert) {\n  siphash(data, key, out, noAssert)\n}\n","start":1670465470723,"end":1670465470866},{"name":"vite:react-babel","result":"var siphash = require('siphash24')\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nexports.crypto_shorthash_PRIMITIVE = 'siphash24'\nexports.crypto_shorthash_BYTES = siphash.BYTES\nexports.crypto_shorthash_KEYBYTES = siphash.KEYBYTES\nexports.crypto_shorthash_WASM_SUPPORTED = siphash.WASM_SUPPORTED\nexports.crypto_shorthash_WASM_LOADED = siphash.WASM_LOADED\nexports.crypto_shorthash = shorthash\n\nfunction shorthash (out, data, key, noAssert) {\n  siphash(data, key, out, noAssert)\n}\n","start":1670465470866,"end":1670465470866,"order":"pre"},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as crypto_shorthash } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/sodium-javascript@0.8.0/node_modules/sodium-javascript/crypto_shorthash.js?commonjs-exports\"\nimport require$$0 from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/siphash24@1.3.1/node_modules/siphash24/index.js?commonjs-proxy\";\n\nvar siphash = require$$0\n\nif (new Uint16Array([1])[0] !== 1) throw new Error('Big endian architecture is not supported.')\n\nvar crypto_shorthash_PRIMITIVE = crypto_shorthash.crypto_shorthash_PRIMITIVE = 'siphash24'\nvar crypto_shorthash_BYTES = crypto_shorthash.crypto_shorthash_BYTES = siphash.BYTES\nvar crypto_shorthash_KEYBYTES = crypto_shorthash.crypto_shorthash_KEYBYTES = siphash.KEYBYTES\nvar crypto_shorthash_WASM_SUPPORTED = crypto_shorthash.crypto_shorthash_WASM_SUPPORTED = siphash.WASM_SUPPORTED\nvar crypto_shorthash_WASM_LOADED = crypto_shorthash.crypto_shorthash_WASM_LOADED = siphash.WASM_LOADED\nvar crypto_shorthash_1 = crypto_shorthash.crypto_shorthash = shorthash\n\nfunction shorthash (out, data, key, noAssert) {\n  siphash(data, key, out, noAssert)\n}\n\nexport { crypto_shorthash as __moduleExports, crypto_shorthash_PRIMITIVE, crypto_shorthash_BYTES, crypto_shorthash_KEYBYTES, crypto_shorthash_WASM_SUPPORTED, crypto_shorthash_WASM_LOADED, crypto_shorthash_1 as crypto_shorthash, crypto_shorthash as default };","start":1670465470866,"end":1670465471620,"order":"normal"}]}
