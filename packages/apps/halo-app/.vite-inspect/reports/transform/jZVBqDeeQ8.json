{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/tailwind-merge@1.8.0/node_modules/tailwind-merge/dist/lib/tw-join.mjs","transforms":[{"name":"vite:load-fallback","result":"/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\nfunction twJoin() {\n  var index = 0;\n  var argument;\n  var resolvedValue;\n  var string = '';\n\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n\n  var resolvedValue;\n  var string = '';\n\n  for (var k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nexport { twJoin };\n//# sourceMappingURL=tw-join.mjs.map\n","start":1670465467879,"end":1670465468112},{"name":"vite:react-babel","result":"/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\nfunction twJoin() {\n  var index = 0;\n  var argument;\n  var resolvedValue;\n  var string = '';\n\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n\n  var resolvedValue;\n  var string = '';\n\n  for (var k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nexport { twJoin };\n//# sourceMappingURL=tw-join.mjs.map\n","start":1670465468112,"end":1670465468112,"order":"pre"}]}
