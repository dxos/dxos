{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/immediate@3.2.3/node_modules/immediate/lib/mutation.js","transforms":[{"name":"vite:load-fallback","result":"'use strict';\n//based off rsvp https://github.com/tildeio/rsvp.js\n//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE\n//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js\n\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nexports.test = function () {\n  return Mutation;\n};\n\nexports.install = function (handle) {\n  var called = 0;\n  var observer = new Mutation(handle);\n  var element = global.document.createTextNode('');\n  observer.observe(element, {\n    characterData: true\n  });\n  return function () {\n    element.data = (called = ++called % 2);\n  };\n};","start":1670465470163,"end":1670465470354},{"name":"vite:react-babel","result":"'use strict';\n//based off rsvp https://github.com/tildeio/rsvp.js\n//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE\n//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js\n\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nexports.test = function () {\n  return Mutation;\n};\n\nexports.install = function (handle) {\n  var called = 0;\n  var observer = new Mutation(handle);\n  var element = global.document.createTextNode('');\n  observer.observe(element, {\n    characterData: true\n  });\n  return function () {\n    element.data = (called = ++called % 2);\n  };\n};","start":1670465470354,"end":1670465470354,"order":"pre"},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as mutation } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/immediate@3.2.3/node_modules/immediate/lib/mutation.js?commonjs-exports\"\n\n'use strict';\n//based off rsvp https://github.com/tildeio/rsvp.js\n//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE\n//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js\n\nvar Mutation = commonjsHelpers.commonjsGlobal.MutationObserver || commonjsHelpers.commonjsGlobal.WebKitMutationObserver;\n\nvar test = mutation.test = function () {\n  return Mutation;\n};\n\nvar install = mutation.install = function (handle) {\n  var called = 0;\n  var observer = new Mutation(handle);\n  var element = commonjsHelpers.commonjsGlobal.document.createTextNode('');\n  observer.observe(element, {\n    characterData: true\n  });\n  return function () {\n    element.data = (called = ++called % 2);\n  };\n};\n\nexport { mutation as __moduleExports, test, install, mutation as default };","start":1670465470354,"end":1670465470355,"order":"normal"}]}
