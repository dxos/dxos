{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/sha224.js","transforms":[{"name":"vite:load-fallback","result":";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));","start":1670465468927,"end":1670465469097},{"name":"vite:react-babel","result":";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));","start":1670465469097,"end":1670465469097,"order":"pre"},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __module as sha224Module, exports as sha224 } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/sha224.js?commonjs-module\"\nimport { __require as require$$0 } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/core.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/sha256.js?commonjs-wrapped\";\n\nvar hasRequiredSha224;\n\nfunction requireSha224 () {\n\tif (hasRequiredSha224) return sha224;\n\thasRequiredSha224 = 1;\n\t(function (module, exports) {\n\t\t;(function (root, factory, undef) {\n\t\t\tif ('object' === \"object\") {\n\t\t\t\t// CommonJS\n\t\t\t\tmodule.exports = exports = factory(require$$0(), require$$1());\n\t\t\t}\n\t\t\telse if (typeof undefined === \"function\" && undefined.amd) {\n\t\t\t\t// AMD\n\t\t\t\tundefined([\"./core\", \"./sha256\"], factory);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Global (browser)\n\t\t\t\tfactory(root.CryptoJS);\n\t\t\t}\n\t\t}(commonjsHelpers.commonjsGlobal, function (CryptoJS) {\n\n\t\t\t(function () {\n\t\t\t    // Shortcuts\n\t\t\t    var C = CryptoJS;\n\t\t\t    var C_lib = C.lib;\n\t\t\t    var WordArray = C_lib.WordArray;\n\t\t\t    var C_algo = C.algo;\n\t\t\t    var SHA256 = C_algo.SHA256;\n\n\t\t\t    /**\n\t\t\t     * SHA-224 hash algorithm.\n\t\t\t     */\n\t\t\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t\t\t        _doReset: function () {\n\t\t\t            this._hash = new WordArray.init([\n\t\t\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t\t\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t\t\t            ]);\n\t\t\t        },\n\n\t\t\t        _doFinalize: function () {\n\t\t\t            var hash = SHA256._doFinalize.call(this);\n\n\t\t\t            hash.sigBytes -= 4;\n\n\t\t\t            return hash;\n\t\t\t        }\n\t\t\t    });\n\n\t\t\t    /**\n\t\t\t     * Shortcut function to the hasher's object interface.\n\t\t\t     *\n\t\t\t     * @param {WordArray|string} message The message to hash.\n\t\t\t     *\n\t\t\t     * @return {WordArray} The hash.\n\t\t\t     *\n\t\t\t     * @static\n\t\t\t     *\n\t\t\t     * @example\n\t\t\t     *\n\t\t\t     *     var hash = CryptoJS.SHA224('message');\n\t\t\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t\t\t     */\n\t\t\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t\t\t    /**\n\t\t\t     * Shortcut function to the HMAC's object interface.\n\t\t\t     *\n\t\t\t     * @param {WordArray|string} message The message to hash.\n\t\t\t     * @param {WordArray|string} key The secret key.\n\t\t\t     *\n\t\t\t     * @return {WordArray} The HMAC.\n\t\t\t     *\n\t\t\t     * @static\n\t\t\t     *\n\t\t\t     * @example\n\t\t\t     *\n\t\t\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t\t\t     */\n\t\t\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t\t\t}());\n\n\n\t\t\treturn CryptoJS.SHA224;\n\n\t\t}));\n} (sha224Module, sha224));\n\treturn sha224;\n}\n\nexport { requireSha224 as __require };","start":1670465469097,"end":1670465469098,"order":"normal"}]}
