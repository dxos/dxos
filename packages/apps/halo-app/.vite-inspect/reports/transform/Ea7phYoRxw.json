{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@radix-ui+react-navigation-menu@1.1.1_biqbaboplfbrettd7655fr4n2y/node_modules/@radix-ui/react-navigation-menu/dist/index.module.js","transforms":[{"name":"vite:load-fallback","result":"import $yHMN2$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport {forwardRef as $yHMN2$forwardRef, useState as $yHMN2$useState, useRef as $yHMN2$useRef, useCallback as $yHMN2$useCallback, useEffect as $yHMN2$useEffect, createElement as $yHMN2$createElement, Fragment as $yHMN2$Fragment, useMemo as $yHMN2$useMemo} from \"react\";\nimport $yHMN2$reactdom from \"react-dom\";\nimport {createContextScope as $yHMN2$createContextScope} from \"@radix-ui/react-context\";\nimport {composeEventHandlers as $yHMN2$composeEventHandlers} from \"@radix-ui/primitive\";\nimport {Primitive as $yHMN2$Primitive, dispatchDiscreteCustomEvent as $yHMN2$dispatchDiscreteCustomEvent} from \"@radix-ui/react-primitive\";\nimport {useControllableState as $yHMN2$useControllableState} from \"@radix-ui/react-use-controllable-state\";\nimport {useComposedRefs as $yHMN2$useComposedRefs, composeRefs as $yHMN2$composeRefs} from \"@radix-ui/react-compose-refs\";\nimport {useDirection as $yHMN2$useDirection} from \"@radix-ui/react-direction\";\nimport {Presence as $yHMN2$Presence} from \"@radix-ui/react-presence\";\nimport {useId as $yHMN2$useId} from \"@radix-ui/react-id\";\nimport {createCollection as $yHMN2$createCollection} from \"@radix-ui/react-collection\";\nimport {DismissableLayer as $yHMN2$DismissableLayer} from \"@radix-ui/react-dismissable-layer\";\nimport {usePrevious as $yHMN2$usePrevious} from \"@radix-ui/react-use-previous\";\nimport {useLayoutEffect as $yHMN2$useLayoutEffect} from \"@radix-ui/react-use-layout-effect\";\nimport {useCallbackRef as $yHMN2$useCallbackRef} from \"@radix-ui/react-use-callback-ref\";\nimport {Root as $yHMN2$Root} from \"@radix-ui/react-visually-hidden\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$NAVIGATION_MENU_NAME = 'NavigationMenu';\nconst [$322c88a641701f3b$var$Collection, $322c88a641701f3b$var$useCollection, $322c88a641701f3b$var$createCollectionScope] = $yHMN2$createCollection($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$FocusGroupCollection, $322c88a641701f3b$var$useFocusGroupCollection, $322c88a641701f3b$var$createFocusGroupCollectionScope] = $yHMN2$createCollection($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$createNavigationMenuContext, $322c88a641701f3b$export$fb8ea5af8c9fcdf0] = $yHMN2$createContextScope($322c88a641701f3b$var$NAVIGATION_MENU_NAME, [\n    $322c88a641701f3b$var$createCollectionScope,\n    $322c88a641701f3b$var$createFocusGroupCollectionScope\n]);\nconst [$322c88a641701f3b$var$NavigationMenuProviderImpl, $322c88a641701f3b$var$useNavigationMenuContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$ViewportContentProvider, $322c88a641701f3b$var$useViewportContentContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst $322c88a641701f3b$export$5b2278cf1e8bcae2 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , value: valueProp , onValueChange: onValueChange , defaultValue: defaultValue , delayDuration: delayDuration = 200 , skipDelayDuration: skipDelayDuration = 300 , orientation: orientation = 'horizontal' , dir: dir , ...NavigationMenuProps } = props;\n    const [navigationMenu, setNavigationMenu] = $yHMN2$useState(null);\n    const composedRef = $yHMN2$useComposedRefs(forwardedRef, (node)=>setNavigationMenu(node)\n    );\n    const direction = $yHMN2$useDirection(dir);\n    const openTimerRef = $yHMN2$useRef(0);\n    const closeTimerRef = $yHMN2$useRef(0);\n    const skipDelayTimerRef = $yHMN2$useRef(0);\n    const [isOpenDelayed, setIsOpenDelayed] = $yHMN2$useState(true);\n    const [value1 = '', setValue] = $yHMN2$useControllableState({\n        prop: valueProp,\n        onChange: (value)=>{\n            const isOpen = value !== '';\n            const hasSkipDelayDuration = skipDelayDuration > 0;\n            if (isOpen) {\n                window.clearTimeout(skipDelayTimerRef.current);\n                if (hasSkipDelayDuration) setIsOpenDelayed(false);\n            } else {\n                window.clearTimeout(skipDelayTimerRef.current);\n                skipDelayTimerRef.current = window.setTimeout(()=>setIsOpenDelayed(true)\n                , skipDelayDuration);\n            }\n            onValueChange === null || onValueChange === void 0 || onValueChange(value);\n        },\n        defaultProp: defaultValue\n    });\n    const startCloseTimer = $yHMN2$useCallback(()=>{\n        window.clearTimeout(closeTimerRef.current);\n        closeTimerRef.current = window.setTimeout(()=>setValue('')\n        , 150);\n    }, [\n        setValue\n    ]);\n    const handleOpen = $yHMN2$useCallback((itemValue)=>{\n        window.clearTimeout(closeTimerRef.current);\n        setValue(itemValue);\n    }, [\n        setValue\n    ]);\n    const handleDelayedOpen = $yHMN2$useCallback((itemValue)=>{\n        const isOpenItem = value1 === itemValue;\n        if (isOpenItem) // If the item is already open (e.g. we're transitioning from the content to the trigger)\n        // then we want to clear the close timer immediately.\n        window.clearTimeout(closeTimerRef.current);\n        else openTimerRef.current = window.setTimeout(()=>{\n            window.clearTimeout(closeTimerRef.current);\n            setValue(itemValue);\n        }, delayDuration);\n    }, [\n        value1,\n        setValue,\n        delayDuration\n    ]);\n    $yHMN2$useEffect(()=>{\n        return ()=>{\n            window.clearTimeout(openTimerRef.current);\n            window.clearTimeout(closeTimerRef.current);\n            window.clearTimeout(skipDelayTimerRef.current);\n        };\n    }, []);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProvider, {\n        scope: __scopeNavigationMenu,\n        isRootMenu: true,\n        value: value1,\n        dir: direction,\n        orientation: orientation,\n        rootNavigationMenu: navigationMenu,\n        onTriggerEnter: (itemValue)=>{\n            window.clearTimeout(openTimerRef.current);\n            if (isOpenDelayed) handleDelayedOpen(itemValue);\n            else handleOpen(itemValue);\n        },\n        onTriggerLeave: ()=>{\n            window.clearTimeout(openTimerRef.current);\n            startCloseTimer();\n        },\n        onContentEnter: ()=>window.clearTimeout(closeTimerRef.current)\n        ,\n        onContentLeave: startCloseTimer,\n        onItemSelect: (itemValue)=>{\n            setValue((prevValue)=>prevValue === itemValue ? '' : itemValue\n            );\n        },\n        onItemDismiss: ()=>setValue('')\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.nav, $yHMN2$babelruntimehelpersesmextends({\n        \"aria-label\": \"Main\",\n        \"data-orientation\": orientation,\n        dir: direction\n    }, NavigationMenuProps, {\n        ref: composedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$5b2278cf1e8bcae2, {\n    displayName: $322c88a641701f3b$var$NAVIGATION_MENU_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$SUB_NAME = 'NavigationMenuSub';\nconst $322c88a641701f3b$export$5958edd6c4ee7c79 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , value: valueProp , onValueChange: onValueChange , defaultValue: defaultValue , orientation: orientation = 'horizontal' , ...subProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$SUB_NAME, __scopeNavigationMenu);\n    const [value = '', setValue] = $yHMN2$useControllableState({\n        prop: valueProp,\n        onChange: onValueChange,\n        defaultProp: defaultValue\n    });\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProvider, {\n        scope: __scopeNavigationMenu,\n        isRootMenu: false,\n        value: value,\n        dir: context.dir,\n        orientation: orientation,\n        rootNavigationMenu: context.rootNavigationMenu,\n        onTriggerEnter: (itemValue)=>setValue(itemValue)\n        ,\n        onItemSelect: (itemValue)=>setValue(itemValue)\n        ,\n        onItemDismiss: ()=>setValue('')\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n        \"data-orientation\": orientation\n    }, subProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$5958edd6c4ee7c79, {\n    displayName: $322c88a641701f3b$var$SUB_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$NavigationMenuProvider = (props)=>{\n    const { scope: scope , isRootMenu: isRootMenu , rootNavigationMenu: rootNavigationMenu , dir: dir , orientation: orientation , children: children , value: value , onItemSelect: onItemSelect , onItemDismiss: onItemDismiss , onTriggerEnter: onTriggerEnter , onTriggerLeave: onTriggerLeave , onContentEnter: onContentEnter , onContentLeave: onContentLeave  } = props;\n    const [viewport, setViewport] = $yHMN2$useState(null);\n    const [viewportContent, setViewportContent] = $yHMN2$useState(new Map());\n    const [indicatorTrack, setIndicatorTrack] = $yHMN2$useState(null);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProviderImpl, {\n        scope: scope,\n        isRootMenu: isRootMenu,\n        rootNavigationMenu: rootNavigationMenu,\n        value: value,\n        previousValue: $yHMN2$usePrevious(value),\n        baseId: $yHMN2$useId(),\n        dir: dir,\n        orientation: orientation,\n        viewport: viewport,\n        onViewportChange: setViewport,\n        indicatorTrack: indicatorTrack,\n        onIndicatorTrackChange: setIndicatorTrack,\n        onTriggerEnter: $yHMN2$useCallbackRef(onTriggerEnter),\n        onTriggerLeave: $yHMN2$useCallbackRef(onTriggerLeave),\n        onContentEnter: $yHMN2$useCallbackRef(onContentEnter),\n        onContentLeave: $yHMN2$useCallbackRef(onContentLeave),\n        onItemSelect: $yHMN2$useCallbackRef(onItemSelect),\n        onItemDismiss: $yHMN2$useCallbackRef(onItemDismiss),\n        onViewportContentChange: $yHMN2$useCallback((contentValue, contentData)=>{\n            setViewportContent((prevContent)=>{\n                prevContent.set(contentValue, contentData);\n                return new Map(prevContent);\n            });\n        }, []),\n        onViewportContentRemove: $yHMN2$useCallback((contentValue)=>{\n            setViewportContent((prevContent)=>{\n                if (!prevContent.has(contentValue)) return prevContent;\n                prevContent.delete(contentValue);\n                return new Map(prevContent);\n            });\n        }, [])\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$Collection.Provider, {\n        scope: scope\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$ViewportContentProvider, {\n        scope: scope,\n        items: viewportContent\n    }, children)));\n};\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$LIST_NAME = 'NavigationMenuList';\nconst $322c88a641701f3b$export$c361068a95fd2286 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , ...listProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$LIST_NAME, __scopeNavigationMenu);\n    const list = /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.ul, $yHMN2$babelruntimehelpersesmextends({\n        \"data-orientation\": context.orientation\n    }, listProps, {\n        ref: forwardedRef\n    }));\n    return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, {\n        style: {\n            position: 'relative'\n        },\n        ref: context.onIndicatorTrackChange\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$Collection.Slot, {\n        scope: __scopeNavigationMenu\n    }, context.isRootMenu ? /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroup, {\n        asChild: true\n    }, list) : list));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$c361068a95fd2286, {\n    displayName: $322c88a641701f3b$var$LIST_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$ITEM_NAME = 'NavigationMenuItem';\nconst [$322c88a641701f3b$var$NavigationMenuItemContextProvider, $322c88a641701f3b$var$useNavigationMenuItemContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$ITEM_NAME);\nconst $322c88a641701f3b$export$ffdbb83a2de845c2 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , value: valueProp , ...itemProps } = props;\n    const autoValue = $yHMN2$useId(); // We need to provide an initial deterministic value as `useId` will return\n    // empty string on the first render and we don't want to match our internal \"closed\" value.\n    const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n    const contentRef = $yHMN2$useRef(null);\n    const triggerRef = $yHMN2$useRef(null);\n    const focusProxyRef = $yHMN2$useRef(null);\n    const restoreContentTabOrderRef = $yHMN2$useRef(()=>{});\n    const wasEscapeCloseRef = $yHMN2$useRef(false);\n    const handleContentEntry = $yHMN2$useCallback((side = 'start')=>{\n        if (contentRef.current) {\n            restoreContentTabOrderRef.current();\n            const candidates = $322c88a641701f3b$var$getTabbableCandidates(contentRef.current);\n            if (candidates.length) $322c88a641701f3b$var$focusFirst(side === 'start' ? candidates : candidates.reverse());\n        }\n    }, []);\n    const handleContentExit = $yHMN2$useCallback(()=>{\n        if (contentRef.current) {\n            const candidates = $322c88a641701f3b$var$getTabbableCandidates(contentRef.current);\n            if (candidates.length) restoreContentTabOrderRef.current = $322c88a641701f3b$var$removeFromTabOrder(candidates);\n        }\n    }, []);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuItemContextProvider, {\n        scope: __scopeNavigationMenu,\n        value: value,\n        triggerRef: triggerRef,\n        contentRef: contentRef,\n        focusProxyRef: focusProxyRef,\n        wasEscapeCloseRef: wasEscapeCloseRef,\n        onEntryKeyDown: handleContentEntry,\n        onFocusProxyEnter: handleContentEntry,\n        onRootContentClose: handleContentExit,\n        onContentFocusOutside: handleContentExit\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.li, $yHMN2$babelruntimehelpersesmextends({}, itemProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$ffdbb83a2de845c2, {\n    displayName: $322c88a641701f3b$var$ITEM_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$TRIGGER_NAME = 'NavigationMenuTrigger';\nconst $322c88a641701f3b$export$37fe8002734d8f2 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , disabled: disabled , ...triggerProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$TRIGGER_NAME, props.__scopeNavigationMenu);\n    const itemContext = $322c88a641701f3b$var$useNavigationMenuItemContext($322c88a641701f3b$var$TRIGGER_NAME, props.__scopeNavigationMenu);\n    const ref = $yHMN2$useRef(null);\n    const composedRefs = $yHMN2$useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n    const triggerId = $322c88a641701f3b$var$makeTriggerId(context.baseId, itemContext.value);\n    const contentId = $322c88a641701f3b$var$makeContentId(context.baseId, itemContext.value);\n    const hasPointerMoveOpenedRef = $yHMN2$useRef(false);\n    const wasClickCloseRef = $yHMN2$useRef(false);\n    const open = itemContext.value === context.value;\n    return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Fragment, null, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$Collection.ItemSlot, {\n        scope: __scopeNavigationMenu,\n        value: itemContext.value\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupItem, {\n        asChild: true\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.button, $yHMN2$babelruntimehelpersesmextends({\n        id: triggerId,\n        disabled: disabled,\n        \"data-disabled\": disabled ? '' : undefined,\n        \"data-state\": $322c88a641701f3b$var$getOpenState(open),\n        \"aria-expanded\": open,\n        \"aria-controls\": contentId\n    }, triggerProps, {\n        ref: composedRefs,\n        onPointerEnter: $yHMN2$composeEventHandlers(props.onPointerEnter, ()=>{\n            wasClickCloseRef.current = false;\n            itemContext.wasEscapeCloseRef.current = false;\n        }),\n        onPointerMove: $yHMN2$composeEventHandlers(props.onPointerMove, $322c88a641701f3b$var$whenMouse(()=>{\n            if (disabled || wasClickCloseRef.current || itemContext.wasEscapeCloseRef.current || hasPointerMoveOpenedRef.current) return;\n            context.onTriggerEnter(itemContext.value);\n            hasPointerMoveOpenedRef.current = true;\n        })),\n        onPointerLeave: $yHMN2$composeEventHandlers(props.onPointerLeave, $322c88a641701f3b$var$whenMouse(()=>{\n            if (disabled) return;\n            context.onTriggerLeave();\n            hasPointerMoveOpenedRef.current = false;\n        })),\n        onClick: $yHMN2$composeEventHandlers(props.onClick, ()=>{\n            context.onItemSelect(itemContext.value);\n            wasClickCloseRef.current = open;\n        }),\n        onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, (event)=>{\n            const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n            const entryKey = {\n                horizontal: 'ArrowDown',\n                vertical: verticalEntryKey\n            }[context.orientation];\n            if (open && event.key === entryKey) {\n                itemContext.onEntryKeyDown(); // Prevent FocusGroupItem from handling the event\n                event.preventDefault();\n            }\n        })\n    })))), open && /*#__PURE__*/ $yHMN2$createElement($yHMN2$Fragment, null, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Root, {\n        \"aria-hidden\": true,\n        tabIndex: 0,\n        ref: itemContext.focusProxyRef,\n        onFocus: (event)=>{\n            const content = itemContext.contentRef.current;\n            const prevFocusedElement = event.relatedTarget;\n            const wasTriggerFocused = prevFocusedElement === ref.current;\n            const wasFocusFromContent = content === null || content === void 0 ? void 0 : content.contains(prevFocusedElement);\n            if (wasTriggerFocused || !wasFocusFromContent) itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n        }\n    }), context.viewport && /*#__PURE__*/ $yHMN2$createElement(\"span\", {\n        \"aria-owns\": contentId\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$37fe8002734d8f2, {\n    displayName: $322c88a641701f3b$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$LINK_NAME = 'NavigationMenuLink';\nconst $322c88a641701f3b$var$LINK_SELECT = 'navigationMenu.linkSelect';\nconst $322c88a641701f3b$export$6893bf21536567da = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , active: active , onSelect: onSelect , ...linkProps } = props;\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupItem, {\n        asChild: true\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.a, $yHMN2$babelruntimehelpersesmextends({\n        \"data-active\": active ? '' : undefined,\n        \"aria-current\": active ? 'page' : undefined\n    }, linkProps, {\n        ref: forwardedRef,\n        onClick: $yHMN2$composeEventHandlers(props.onClick, (event1)=>{\n            const target = event1.target;\n            const linkSelectEvent = new CustomEvent($322c88a641701f3b$var$LINK_SELECT, {\n                bubbles: true,\n                cancelable: true\n            });\n            target.addEventListener($322c88a641701f3b$var$LINK_SELECT, (event)=>onSelect === null || onSelect === void 0 ? void 0 : onSelect(event)\n            , {\n                once: true\n            });\n            $yHMN2$dispatchDiscreteCustomEvent(target, linkSelectEvent);\n            if (!linkSelectEvent.defaultPrevented) {\n                const rootContentDismissEvent = new CustomEvent($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, {\n                    bubbles: true,\n                    cancelable: true\n                });\n                $yHMN2$dispatchDiscreteCustomEvent(target, rootContentDismissEvent);\n            }\n        }, {\n            checkForDefaultPrevented: false\n        })\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$6893bf21536567da, {\n    displayName: $322c88a641701f3b$var$LINK_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$INDICATOR_NAME = 'NavigationMenuIndicator';\nconst $322c88a641701f3b$export$8ddb526647c0d8fb = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { forceMount: forceMount , ...indicatorProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$INDICATOR_NAME, props.__scopeNavigationMenu);\n    const isVisible = Boolean(context.value);\n    return context.indicatorTrack ? /*#__PURE__*/ $yHMN2$reactdom.createPortal(/*#__PURE__*/ $yHMN2$createElement($yHMN2$Presence, {\n        present: forceMount || isVisible\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuIndicatorImpl, $yHMN2$babelruntimehelpersesmextends({}, indicatorProps, {\n        ref: forwardedRef\n    }))), context.indicatorTrack) : null;\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$8ddb526647c0d8fb, {\n    displayName: $322c88a641701f3b$var$INDICATOR_NAME\n});\nconst $322c88a641701f3b$var$NavigationMenuIndicatorImpl = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , ...indicatorProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$INDICATOR_NAME, __scopeNavigationMenu);\n    const getItems = $322c88a641701f3b$var$useCollection(__scopeNavigationMenu);\n    const [activeTrigger, setActiveTrigger] = $yHMN2$useState(null);\n    const [position, setPosition] = $yHMN2$useState(null);\n    const isHorizontal = context.orientation === 'horizontal';\n    const isVisible = Boolean(context.value);\n    $yHMN2$useEffect(()=>{\n        var _items$find;\n        const items = getItems();\n        const triggerNode = (_items$find = items.find((item)=>item.value === context.value\n        )) === null || _items$find === void 0 ? void 0 : _items$find.ref.current;\n        if (triggerNode) setActiveTrigger(triggerNode);\n    }, [\n        getItems,\n        context.value\n    ]);\n    /**\n   * Update position when the indicator or parent track size changes\n   */ const handlePositionChange = ()=>{\n        if (activeTrigger) setPosition({\n            size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n            offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop\n        });\n    };\n    $322c88a641701f3b$var$useResizeObserver(activeTrigger, handlePositionChange);\n    $322c88a641701f3b$var$useResizeObserver(context.indicatorTrack, handlePositionChange); // We need to wait for the indicator position to be available before rendering to\n    // snap immediately into position rather than transitioning from initial\n    return position ? /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n        \"aria-hidden\": true,\n        \"data-state\": isVisible ? 'visible' : 'hidden',\n        \"data-orientation\": context.orientation\n    }, indicatorProps, {\n        ref: forwardedRef,\n        style: {\n            position: 'absolute',\n            ...isHorizontal ? {\n                left: 0,\n                width: position.size + 'px',\n                transform: `translateX(${position.offset}px)`\n            } : {\n                top: 0,\n                height: position.size + 'px',\n                transform: `translateY(${position.offset}px)`\n            },\n            ...indicatorProps.style\n        }\n    })) : null;\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$CONTENT_NAME = 'NavigationMenuContent';\nconst $322c88a641701f3b$export$38e00e996c2f93f7 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { forceMount: forceMount , ...contentProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n    const itemContext = $322c88a641701f3b$var$useNavigationMenuItemContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n    const composedRefs = $yHMN2$useComposedRefs(itemContext.contentRef, forwardedRef);\n    const open = itemContext.value === context.value;\n    const commonProps = {\n        value: itemContext.value,\n        triggerRef: itemContext.triggerRef,\n        focusProxyRef: itemContext.focusProxyRef,\n        wasEscapeCloseRef: itemContext.wasEscapeCloseRef,\n        onContentFocusOutside: itemContext.onContentFocusOutside,\n        onRootContentClose: itemContext.onRootContentClose,\n        ...contentProps\n    };\n    return !context.viewport ? /*#__PURE__*/ $yHMN2$createElement($yHMN2$Presence, {\n        present: forceMount || open\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuContentImpl, $yHMN2$babelruntimehelpersesmextends({\n        \"data-state\": $322c88a641701f3b$var$getOpenState(open)\n    }, commonProps, {\n        ref: composedRefs,\n        onPointerEnter: $yHMN2$composeEventHandlers(props.onPointerEnter, context.onContentEnter),\n        onPointerLeave: $yHMN2$composeEventHandlers(props.onPointerLeave, $322c88a641701f3b$var$whenMouse(context.onContentLeave)),\n        style: {\n            // Prevent interaction when animating out\n            pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n            ...commonProps.style\n        }\n    }))) : /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$ViewportContentMounter, $yHMN2$babelruntimehelpersesmextends({\n        forceMount: forceMount\n    }, commonProps, {\n        ref: composedRefs\n    }));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$38e00e996c2f93f7, {\n    displayName: $322c88a641701f3b$var$CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$ViewportContentMounter = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n    const { onViewportContentChange: onViewportContentChange , onViewportContentRemove: onViewportContentRemove  } = context;\n    $yHMN2$useLayoutEffect(()=>{\n        onViewportContentChange(props.value, {\n            ref: forwardedRef,\n            ...props\n        });\n    }, [\n        props,\n        forwardedRef,\n        onViewportContentChange\n    ]);\n    $yHMN2$useLayoutEffect(()=>{\n        return ()=>onViewportContentRemove(props.value)\n        ;\n    }, [\n        props.value,\n        onViewportContentRemove\n    ]); // Content is proxied into the viewport\n    return null;\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss';\nconst $322c88a641701f3b$var$NavigationMenuContentImpl = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , value: value , triggerRef: triggerRef , focusProxyRef: focusProxyRef , wasEscapeCloseRef: wasEscapeCloseRef , onRootContentClose: onRootContentClose , onContentFocusOutside: onContentFocusOutside , ...contentProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, __scopeNavigationMenu);\n    const ref = $yHMN2$useRef(null);\n    const composedRefs = $yHMN2$useComposedRefs(ref, forwardedRef);\n    const triggerId = $322c88a641701f3b$var$makeTriggerId(context.baseId, value);\n    const contentId = $322c88a641701f3b$var$makeContentId(context.baseId, value);\n    const getItems = $322c88a641701f3b$var$useCollection(__scopeNavigationMenu);\n    const prevMotionAttributeRef = $yHMN2$useRef(null);\n    const { onItemDismiss: onItemDismiss  } = context;\n    $yHMN2$useEffect(()=>{\n        const content = ref.current; // Bubble dismiss to the root content node and focus its trigger\n        if (context.isRootMenu && content) {\n            const handleClose = ()=>{\n                var _triggerRef$current;\n                onItemDismiss();\n                onRootContentClose();\n                if (content.contains(document.activeElement)) (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 || _triggerRef$current.focus();\n            };\n            content.addEventListener($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, handleClose);\n            return ()=>content.removeEventListener($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, handleClose)\n            ;\n        }\n    }, [\n        context.isRootMenu,\n        props.value,\n        triggerRef,\n        onItemDismiss,\n        onRootContentClose\n    ]);\n    const motionAttribute = $yHMN2$useMemo(()=>{\n        const items = getItems();\n        const values = items.map((item)=>item.value\n        );\n        if (context.dir === 'rtl') values.reverse();\n        const index = values.indexOf(context.value);\n        const prevIndex = values.indexOf(context.previousValue);\n        const isSelected = value === context.value;\n        const wasSelected = prevIndex === values.indexOf(value); // We only want to update selected and the last selected content\n        // this avoids animations being interrupted outside of that range\n        if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n        const attribute = (()=>{\n            // Don't provide a direction on the initial open\n            if (index !== prevIndex) {\n                // If we're moving to this item from another\n                if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start'; // If we're leaving this item for another\n                if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n            } // Otherwise we're entering from closed or leaving the list\n            // entirely and should not animate in any direction\n            return null;\n        })();\n        prevMotionAttributeRef.current = attribute;\n        return attribute;\n    }, [\n        context.previousValue,\n        context.value,\n        context.dir,\n        getItems,\n        value\n    ]);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroup, {\n        asChild: true\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$DismissableLayer, $yHMN2$babelruntimehelpersesmextends({\n        id: contentId,\n        \"aria-labelledby\": triggerId,\n        \"data-motion\": motionAttribute,\n        \"data-orientation\": context.orientation\n    }, contentProps, {\n        ref: composedRefs,\n        onDismiss: ()=>{\n            var _ref$current;\n            const rootContentDismissEvent = new Event($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, {\n                bubbles: true,\n                cancelable: true\n            });\n            (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.dispatchEvent(rootContentDismissEvent);\n        },\n        onFocusOutside: $yHMN2$composeEventHandlers(props.onFocusOutside, (event)=>{\n            var _context$rootNavigati;\n            onContentFocusOutside();\n            const target = event.target; // Only dismiss content when focus moves outside of the menu\n            if ((_context$rootNavigati = context.rootNavigationMenu) !== null && _context$rootNavigati !== void 0 && _context$rootNavigati.contains(target)) event.preventDefault();\n        }),\n        onPointerDownOutside: $yHMN2$composeEventHandlers(props.onPointerDownOutside, (event)=>{\n            var _context$viewport;\n            const target = event.target;\n            const isTrigger = getItems().some((item)=>{\n                var _item$ref$current;\n                return (_item$ref$current = item.ref.current) === null || _item$ref$current === void 0 ? void 0 : _item$ref$current.contains(target);\n            });\n            const isRootViewport = context.isRootMenu && ((_context$viewport = context.viewport) === null || _context$viewport === void 0 ? void 0 : _context$viewport.contains(target));\n            if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n        }),\n        onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, (event)=>{\n            const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n            const isTabKey = event.key === 'Tab' && !isMetaKey;\n            if (isTabKey) {\n                const candidates = $322c88a641701f3b$var$getTabbableCandidates(event.currentTarget);\n                const focusedElement = document.activeElement;\n                const index = candidates.findIndex((candidate)=>candidate === focusedElement\n                );\n                const isMovingBackwards = event.shiftKey;\n                const nextCandidates = isMovingBackwards ? candidates.slice(0, index).reverse() : candidates.slice(index + 1, candidates.length);\n                if ($322c88a641701f3b$var$focusFirst(nextCandidates)) // prevent browser tab keydown because we've handled focus\n                event.preventDefault();\n                else {\n                    var _focusProxyRef$curren;\n                    // If we can't focus that means we're at the edges\n                    // so focus the proxy and let browser handle\n                    // tab/shift+tab keypress on the proxy instead\n                    (_focusProxyRef$curren = focusProxyRef.current) === null || _focusProxyRef$curren === void 0 || _focusProxyRef$curren.focus();\n                }\n            }\n        }),\n        onEscapeKeyDown: $yHMN2$composeEventHandlers(props.onEscapeKeyDown, (event)=>{\n            // prevent the dropdown from reopening\n            // after the escape key has been pressed\n            wasEscapeCloseRef.current = true;\n        })\n    })));\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$VIEWPORT_NAME = 'NavigationMenuViewport';\nconst $322c88a641701f3b$export$ee880b97cc6d44a5 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { forceMount: forceMount , ...viewportProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$VIEWPORT_NAME, props.__scopeNavigationMenu);\n    const open = Boolean(context.value);\n    return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Presence, {\n        present: forceMount || open\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuViewportImpl, $yHMN2$babelruntimehelpersesmextends({}, viewportProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$ee880b97cc6d44a5, {\n    displayName: $322c88a641701f3b$var$VIEWPORT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$NavigationMenuViewportImpl = /*#__PURE__*/ $yHMN2$forwardRef((props1, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , children: children , ...viewportImplProps } = props1;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$VIEWPORT_NAME, __scopeNavigationMenu);\n    const composedRefs = $yHMN2$useComposedRefs(forwardedRef, context.onViewportChange);\n    const viewportContentContext = $322c88a641701f3b$var$useViewportContentContext($322c88a641701f3b$var$CONTENT_NAME, props1.__scopeNavigationMenu);\n    const [size, setSize] = $yHMN2$useState(null);\n    const [content, setContent] = $yHMN2$useState(null);\n    const viewportWidth = size ? (size === null || size === void 0 ? void 0 : size.width) + 'px' : undefined;\n    const viewportHeight = size ? (size === null || size === void 0 ? void 0 : size.height) + 'px' : undefined;\n    const open = Boolean(context.value); // We persist the last active content value as the viewport may be animating out\n    // and we want the content to remain mounted for the lifecycle of the viewport.\n    const activeContentValue = open ? context.value : context.previousValue;\n    /**\n   * Update viewport size to match the active content node.\n   * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n   * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n   * from `0.5` to `1` of the intended size.\n   */ const handleSizeChange = ()=>{\n        if (content) setSize({\n            width: content.offsetWidth,\n            height: content.offsetHeight\n        });\n    };\n    $322c88a641701f3b$var$useResizeObserver(content, handleSizeChange);\n    return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n        \"data-state\": $322c88a641701f3b$var$getOpenState(open),\n        \"data-orientation\": context.orientation\n    }, viewportImplProps, {\n        ref: composedRefs,\n        style: {\n            // Prevent interaction when animating out\n            pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n            ['--radix-navigation-menu-viewport-width']: viewportWidth,\n            ['--radix-navigation-menu-viewport-height']: viewportHeight,\n            ...viewportImplProps.style\n        },\n        onPointerEnter: $yHMN2$composeEventHandlers(props1.onPointerEnter, context.onContentEnter),\n        onPointerLeave: $yHMN2$composeEventHandlers(props1.onPointerLeave, $322c88a641701f3b$var$whenMouse(context.onContentLeave))\n    }), Array.from(viewportContentContext.items).map(([value, { ref: ref , forceMount: forceMount , ...props }])=>{\n        const isActive = activeContentValue === value;\n        return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Presence, {\n            key: value,\n            present: forceMount || isActive\n        }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuContentImpl, $yHMN2$babelruntimehelpersesmextends({}, props, {\n            ref: $yHMN2$composeRefs(ref, (node)=>{\n                // We only want to update the stored node when another is available\n                // as we need to smoothly transition between them.\n                if (isActive && node) setContent(node);\n            })\n        })));\n    }));\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$FOCUS_GROUP_NAME = 'FocusGroup';\nconst $322c88a641701f3b$var$FocusGroup = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , ...groupProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$FOCUS_GROUP_NAME, __scopeNavigationMenu);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.Provider, {\n        scope: __scopeNavigationMenu\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.Slot, {\n        scope: __scopeNavigationMenu\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n        dir: context.dir\n    }, groupProps, {\n        ref: forwardedRef\n    }))));\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$ARROW_KEYS = [\n    'ArrowRight',\n    'ArrowLeft',\n    'ArrowUp',\n    'ArrowDown'\n];\nconst $322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\nconst $322c88a641701f3b$var$FocusGroupItem = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , ...groupProps } = props;\n    const getItems = $322c88a641701f3b$var$useFocusGroupCollection(__scopeNavigationMenu);\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.ItemSlot, {\n        scope: __scopeNavigationMenu\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.button, $yHMN2$babelruntimehelpersesmextends({}, groupProps, {\n        ref: forwardedRef,\n        onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, (event)=>{\n            const isFocusNavigationKey = [\n                'Home',\n                'End',\n                ...$322c88a641701f3b$var$ARROW_KEYS\n            ].includes(event.key);\n            if (isFocusNavigationKey) {\n                let candidateNodes = getItems().map((item)=>item.ref.current\n                );\n                const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n                const prevKeys = [\n                    prevItemKey,\n                    'ArrowUp',\n                    'End'\n                ];\n                if (prevKeys.includes(event.key)) candidateNodes.reverse();\n                if ($322c88a641701f3b$var$ARROW_KEYS.includes(event.key)) {\n                    const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                    candidateNodes = candidateNodes.slice(currentIndex + 1);\n                }\n                /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */ setTimeout(()=>$322c88a641701f3b$var$focusFirst(candidateNodes)\n                ); // Prevent page scroll while navigating\n                event.preventDefault();\n            }\n        })\n    })));\n});\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */ function $322c88a641701f3b$var$getTabbableCandidates(container) {\n    const nodes = [];\n    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n        acceptNode: (node)=>{\n            const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP; // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n            // runtime's understanding of tabbability, so this automatically accounts\n            // for any kind of element that could be tabbed to.\n            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n        }\n    });\n    while(walker.nextNode())nodes.push(walker.currentNode); // we do not take into account the order of nodes with positive `tabIndex` as it\n    // hinders accessibility to have tab order different from visual order.\n    return nodes;\n}\nfunction $322c88a641701f3b$var$focusFirst(candidates) {\n    const previouslyFocusedElement = document.activeElement;\n    return candidates.some((candidate)=>{\n        // if focus is already where we want to go, we don't want to keep going through the candidates\n        if (candidate === previouslyFocusedElement) return true;\n        candidate.focus();\n        return document.activeElement !== previouslyFocusedElement;\n    });\n}\nfunction $322c88a641701f3b$var$removeFromTabOrder(candidates) {\n    candidates.forEach((candidate)=>{\n        candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n        candidate.setAttribute('tabindex', '-1');\n    });\n    return ()=>{\n        candidates.forEach((candidate)=>{\n            const prevTabIndex = candidate.dataset.tabindex;\n            candidate.setAttribute('tabindex', prevTabIndex);\n        });\n    };\n}\nfunction $322c88a641701f3b$var$useResizeObserver(element, onResize) {\n    const handleResize = $yHMN2$useCallbackRef(onResize);\n    $yHMN2$useLayoutEffect(()=>{\n        let rAF = 0;\n        if (element) {\n            /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */ const resizeObserver = new ResizeObserver(()=>{\n                cancelAnimationFrame(rAF);\n                rAF = window.requestAnimationFrame(handleResize);\n            });\n            resizeObserver.observe(element);\n            return ()=>{\n                window.cancelAnimationFrame(rAF);\n                resizeObserver.unobserve(element);\n            };\n        }\n    }, [\n        element,\n        handleResize\n    ]);\n}\nfunction $322c88a641701f3b$var$getOpenState(open) {\n    return open ? 'open' : 'closed';\n}\nfunction $322c88a641701f3b$var$makeTriggerId(baseId, value) {\n    return `${baseId}-trigger-${value}`;\n}\nfunction $322c88a641701f3b$var$makeContentId(baseId, value) {\n    return `${baseId}-content-${value}`;\n}\nfunction $322c88a641701f3b$var$whenMouse(handler) {\n    return (event)=>event.pointerType === 'mouse' ? handler(event) : undefined\n    ;\n}\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$export$be92b6f5f03c0fe9 = $322c88a641701f3b$export$5b2278cf1e8bcae2;\nconst $322c88a641701f3b$export$d7a01e11500dfb6f = $322c88a641701f3b$export$5958edd6c4ee7c79;\nconst $322c88a641701f3b$export$54c2e3dc7acea9f5 = $322c88a641701f3b$export$c361068a95fd2286;\nconst $322c88a641701f3b$export$6d08773d2e66f8f2 = $322c88a641701f3b$export$ffdbb83a2de845c2;\nconst $322c88a641701f3b$export$41fb9f06171c75f4 = $322c88a641701f3b$export$37fe8002734d8f2;\nconst $322c88a641701f3b$export$a6c7ac8248d6e38a = $322c88a641701f3b$export$6893bf21536567da;\nconst $322c88a641701f3b$export$adb584737d712b70 = $322c88a641701f3b$export$8ddb526647c0d8fb;\nconst $322c88a641701f3b$export$7c6e2c02157bb7d2 = $322c88a641701f3b$export$38e00e996c2f93f7;\nconst $322c88a641701f3b$export$d5c6c08dc2d3ca7 = $322c88a641701f3b$export$ee880b97cc6d44a5;\n\n\n\n\nexport {$322c88a641701f3b$export$fb8ea5af8c9fcdf0 as createNavigationMenuScope, $322c88a641701f3b$export$5b2278cf1e8bcae2 as NavigationMenu, $322c88a641701f3b$export$5958edd6c4ee7c79 as NavigationMenuSub, $322c88a641701f3b$export$c361068a95fd2286 as NavigationMenuList, $322c88a641701f3b$export$ffdbb83a2de845c2 as NavigationMenuItem, $322c88a641701f3b$export$37fe8002734d8f2 as NavigationMenuTrigger, $322c88a641701f3b$export$6893bf21536567da as NavigationMenuLink, $322c88a641701f3b$export$8ddb526647c0d8fb as NavigationMenuIndicator, $322c88a641701f3b$export$38e00e996c2f93f7 as NavigationMenuContent, $322c88a641701f3b$export$ee880b97cc6d44a5 as NavigationMenuViewport, $322c88a641701f3b$export$be92b6f5f03c0fe9 as Root, $322c88a641701f3b$export$d7a01e11500dfb6f as Sub, $322c88a641701f3b$export$54c2e3dc7acea9f5 as List, $322c88a641701f3b$export$6d08773d2e66f8f2 as Item, $322c88a641701f3b$export$41fb9f06171c75f4 as Trigger, $322c88a641701f3b$export$a6c7ac8248d6e38a as Link, $322c88a641701f3b$export$adb584737d712b70 as Indicator, $322c88a641701f3b$export$7c6e2c02157bb7d2 as Content, $322c88a641701f3b$export$d5c6c08dc2d3ca7 as Viewport};\n//# sourceMappingURL=index.module.js.map\n","start":1670465466590,"end":1670465466684},{"name":"vite:react-babel","result":"import $yHMN2$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport {forwardRef as $yHMN2$forwardRef, useState as $yHMN2$useState, useRef as $yHMN2$useRef, useCallback as $yHMN2$useCallback, useEffect as $yHMN2$useEffect, createElement as $yHMN2$createElement, Fragment as $yHMN2$Fragment, useMemo as $yHMN2$useMemo} from \"react\";\nimport $yHMN2$reactdom from \"react-dom\";\nimport {createContextScope as $yHMN2$createContextScope} from \"@radix-ui/react-context\";\nimport {composeEventHandlers as $yHMN2$composeEventHandlers} from \"@radix-ui/primitive\";\nimport {Primitive as $yHMN2$Primitive, dispatchDiscreteCustomEvent as $yHMN2$dispatchDiscreteCustomEvent} from \"@radix-ui/react-primitive\";\nimport {useControllableState as $yHMN2$useControllableState} from \"@radix-ui/react-use-controllable-state\";\nimport {useComposedRefs as $yHMN2$useComposedRefs, composeRefs as $yHMN2$composeRefs} from \"@radix-ui/react-compose-refs\";\nimport {useDirection as $yHMN2$useDirection} from \"@radix-ui/react-direction\";\nimport {Presence as $yHMN2$Presence} from \"@radix-ui/react-presence\";\nimport {useId as $yHMN2$useId} from \"@radix-ui/react-id\";\nimport {createCollection as $yHMN2$createCollection} from \"@radix-ui/react-collection\";\nimport {DismissableLayer as $yHMN2$DismissableLayer} from \"@radix-ui/react-dismissable-layer\";\nimport {usePrevious as $yHMN2$usePrevious} from \"@radix-ui/react-use-previous\";\nimport {useLayoutEffect as $yHMN2$useLayoutEffect} from \"@radix-ui/react-use-layout-effect\";\nimport {useCallbackRef as $yHMN2$useCallbackRef} from \"@radix-ui/react-use-callback-ref\";\nimport {Root as $yHMN2$Root} from \"@radix-ui/react-visually-hidden\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenu\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$NAVIGATION_MENU_NAME = 'NavigationMenu';\nconst [$322c88a641701f3b$var$Collection, $322c88a641701f3b$var$useCollection, $322c88a641701f3b$var$createCollectionScope] = $yHMN2$createCollection($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$FocusGroupCollection, $322c88a641701f3b$var$useFocusGroupCollection, $322c88a641701f3b$var$createFocusGroupCollectionScope] = $yHMN2$createCollection($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$createNavigationMenuContext, $322c88a641701f3b$export$fb8ea5af8c9fcdf0] = $yHMN2$createContextScope($322c88a641701f3b$var$NAVIGATION_MENU_NAME, [\n    $322c88a641701f3b$var$createCollectionScope,\n    $322c88a641701f3b$var$createFocusGroupCollectionScope\n]);\nconst [$322c88a641701f3b$var$NavigationMenuProviderImpl, $322c88a641701f3b$var$useNavigationMenuContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst [$322c88a641701f3b$var$ViewportContentProvider, $322c88a641701f3b$var$useViewportContentContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$NAVIGATION_MENU_NAME);\nconst $322c88a641701f3b$export$5b2278cf1e8bcae2 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , value: valueProp , onValueChange: onValueChange , defaultValue: defaultValue , delayDuration: delayDuration = 200 , skipDelayDuration: skipDelayDuration = 300 , orientation: orientation = 'horizontal' , dir: dir , ...NavigationMenuProps } = props;\n    const [navigationMenu, setNavigationMenu] = $yHMN2$useState(null);\n    const composedRef = $yHMN2$useComposedRefs(forwardedRef, (node)=>setNavigationMenu(node)\n    );\n    const direction = $yHMN2$useDirection(dir);\n    const openTimerRef = $yHMN2$useRef(0);\n    const closeTimerRef = $yHMN2$useRef(0);\n    const skipDelayTimerRef = $yHMN2$useRef(0);\n    const [isOpenDelayed, setIsOpenDelayed] = $yHMN2$useState(true);\n    const [value1 = '', setValue] = $yHMN2$useControllableState({\n        prop: valueProp,\n        onChange: (value)=>{\n            const isOpen = value !== '';\n            const hasSkipDelayDuration = skipDelayDuration > 0;\n            if (isOpen) {\n                window.clearTimeout(skipDelayTimerRef.current);\n                if (hasSkipDelayDuration) setIsOpenDelayed(false);\n            } else {\n                window.clearTimeout(skipDelayTimerRef.current);\n                skipDelayTimerRef.current = window.setTimeout(()=>setIsOpenDelayed(true)\n                , skipDelayDuration);\n            }\n            onValueChange === null || onValueChange === void 0 || onValueChange(value);\n        },\n        defaultProp: defaultValue\n    });\n    const startCloseTimer = $yHMN2$useCallback(()=>{\n        window.clearTimeout(closeTimerRef.current);\n        closeTimerRef.current = window.setTimeout(()=>setValue('')\n        , 150);\n    }, [\n        setValue\n    ]);\n    const handleOpen = $yHMN2$useCallback((itemValue)=>{\n        window.clearTimeout(closeTimerRef.current);\n        setValue(itemValue);\n    }, [\n        setValue\n    ]);\n    const handleDelayedOpen = $yHMN2$useCallback((itemValue)=>{\n        const isOpenItem = value1 === itemValue;\n        if (isOpenItem) // If the item is already open (e.g. we're transitioning from the content to the trigger)\n        // then we want to clear the close timer immediately.\n        window.clearTimeout(closeTimerRef.current);\n        else openTimerRef.current = window.setTimeout(()=>{\n            window.clearTimeout(closeTimerRef.current);\n            setValue(itemValue);\n        }, delayDuration);\n    }, [\n        value1,\n        setValue,\n        delayDuration\n    ]);\n    $yHMN2$useEffect(()=>{\n        return ()=>{\n            window.clearTimeout(openTimerRef.current);\n            window.clearTimeout(closeTimerRef.current);\n            window.clearTimeout(skipDelayTimerRef.current);\n        };\n    }, []);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProvider, {\n        scope: __scopeNavigationMenu,\n        isRootMenu: true,\n        value: value1,\n        dir: direction,\n        orientation: orientation,\n        rootNavigationMenu: navigationMenu,\n        onTriggerEnter: (itemValue)=>{\n            window.clearTimeout(openTimerRef.current);\n            if (isOpenDelayed) handleDelayedOpen(itemValue);\n            else handleOpen(itemValue);\n        },\n        onTriggerLeave: ()=>{\n            window.clearTimeout(openTimerRef.current);\n            startCloseTimer();\n        },\n        onContentEnter: ()=>window.clearTimeout(closeTimerRef.current)\n        ,\n        onContentLeave: startCloseTimer,\n        onItemSelect: (itemValue)=>{\n            setValue((prevValue)=>prevValue === itemValue ? '' : itemValue\n            );\n        },\n        onItemDismiss: ()=>setValue('')\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.nav, $yHMN2$babelruntimehelpersesmextends({\n        \"aria-label\": \"Main\",\n        \"data-orientation\": orientation,\n        dir: direction\n    }, NavigationMenuProps, {\n        ref: composedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$5b2278cf1e8bcae2, {\n    displayName: $322c88a641701f3b$var$NAVIGATION_MENU_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuSub\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$SUB_NAME = 'NavigationMenuSub';\nconst $322c88a641701f3b$export$5958edd6c4ee7c79 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , value: valueProp , onValueChange: onValueChange , defaultValue: defaultValue , orientation: orientation = 'horizontal' , ...subProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$SUB_NAME, __scopeNavigationMenu);\n    const [value = '', setValue] = $yHMN2$useControllableState({\n        prop: valueProp,\n        onChange: onValueChange,\n        defaultProp: defaultValue\n    });\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProvider, {\n        scope: __scopeNavigationMenu,\n        isRootMenu: false,\n        value: value,\n        dir: context.dir,\n        orientation: orientation,\n        rootNavigationMenu: context.rootNavigationMenu,\n        onTriggerEnter: (itemValue)=>setValue(itemValue)\n        ,\n        onItemSelect: (itemValue)=>setValue(itemValue)\n        ,\n        onItemDismiss: ()=>setValue('')\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n        \"data-orientation\": orientation\n    }, subProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$5958edd6c4ee7c79, {\n    displayName: $322c88a641701f3b$var$SUB_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$NavigationMenuProvider = (props)=>{\n    const { scope: scope , isRootMenu: isRootMenu , rootNavigationMenu: rootNavigationMenu , dir: dir , orientation: orientation , children: children , value: value , onItemSelect: onItemSelect , onItemDismiss: onItemDismiss , onTriggerEnter: onTriggerEnter , onTriggerLeave: onTriggerLeave , onContentEnter: onContentEnter , onContentLeave: onContentLeave  } = props;\n    const [viewport, setViewport] = $yHMN2$useState(null);\n    const [viewportContent, setViewportContent] = $yHMN2$useState(new Map());\n    const [indicatorTrack, setIndicatorTrack] = $yHMN2$useState(null);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuProviderImpl, {\n        scope: scope,\n        isRootMenu: isRootMenu,\n        rootNavigationMenu: rootNavigationMenu,\n        value: value,\n        previousValue: $yHMN2$usePrevious(value),\n        baseId: $yHMN2$useId(),\n        dir: dir,\n        orientation: orientation,\n        viewport: viewport,\n        onViewportChange: setViewport,\n        indicatorTrack: indicatorTrack,\n        onIndicatorTrackChange: setIndicatorTrack,\n        onTriggerEnter: $yHMN2$useCallbackRef(onTriggerEnter),\n        onTriggerLeave: $yHMN2$useCallbackRef(onTriggerLeave),\n        onContentEnter: $yHMN2$useCallbackRef(onContentEnter),\n        onContentLeave: $yHMN2$useCallbackRef(onContentLeave),\n        onItemSelect: $yHMN2$useCallbackRef(onItemSelect),\n        onItemDismiss: $yHMN2$useCallbackRef(onItemDismiss),\n        onViewportContentChange: $yHMN2$useCallback((contentValue, contentData)=>{\n            setViewportContent((prevContent)=>{\n                prevContent.set(contentValue, contentData);\n                return new Map(prevContent);\n            });\n        }, []),\n        onViewportContentRemove: $yHMN2$useCallback((contentValue)=>{\n            setViewportContent((prevContent)=>{\n                if (!prevContent.has(contentValue)) return prevContent;\n                prevContent.delete(contentValue);\n                return new Map(prevContent);\n            });\n        }, [])\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$Collection.Provider, {\n        scope: scope\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$ViewportContentProvider, {\n        scope: scope,\n        items: viewportContent\n    }, children)));\n};\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuList\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$LIST_NAME = 'NavigationMenuList';\nconst $322c88a641701f3b$export$c361068a95fd2286 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , ...listProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$LIST_NAME, __scopeNavigationMenu);\n    const list = /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.ul, $yHMN2$babelruntimehelpersesmextends({\n        \"data-orientation\": context.orientation\n    }, listProps, {\n        ref: forwardedRef\n    }));\n    return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, {\n        style: {\n            position: 'relative'\n        },\n        ref: context.onIndicatorTrackChange\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$Collection.Slot, {\n        scope: __scopeNavigationMenu\n    }, context.isRootMenu ? /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroup, {\n        asChild: true\n    }, list) : list));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$c361068a95fd2286, {\n    displayName: $322c88a641701f3b$var$LIST_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuItem\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$ITEM_NAME = 'NavigationMenuItem';\nconst [$322c88a641701f3b$var$NavigationMenuItemContextProvider, $322c88a641701f3b$var$useNavigationMenuItemContext] = $322c88a641701f3b$var$createNavigationMenuContext($322c88a641701f3b$var$ITEM_NAME);\nconst $322c88a641701f3b$export$ffdbb83a2de845c2 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , value: valueProp , ...itemProps } = props;\n    const autoValue = $yHMN2$useId(); // We need to provide an initial deterministic value as `useId` will return\n    // empty string on the first render and we don't want to match our internal \"closed\" value.\n    const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n    const contentRef = $yHMN2$useRef(null);\n    const triggerRef = $yHMN2$useRef(null);\n    const focusProxyRef = $yHMN2$useRef(null);\n    const restoreContentTabOrderRef = $yHMN2$useRef(()=>{});\n    const wasEscapeCloseRef = $yHMN2$useRef(false);\n    const handleContentEntry = $yHMN2$useCallback((side = 'start')=>{\n        if (contentRef.current) {\n            restoreContentTabOrderRef.current();\n            const candidates = $322c88a641701f3b$var$getTabbableCandidates(contentRef.current);\n            if (candidates.length) $322c88a641701f3b$var$focusFirst(side === 'start' ? candidates : candidates.reverse());\n        }\n    }, []);\n    const handleContentExit = $yHMN2$useCallback(()=>{\n        if (contentRef.current) {\n            const candidates = $322c88a641701f3b$var$getTabbableCandidates(contentRef.current);\n            if (candidates.length) restoreContentTabOrderRef.current = $322c88a641701f3b$var$removeFromTabOrder(candidates);\n        }\n    }, []);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuItemContextProvider, {\n        scope: __scopeNavigationMenu,\n        value: value,\n        triggerRef: triggerRef,\n        contentRef: contentRef,\n        focusProxyRef: focusProxyRef,\n        wasEscapeCloseRef: wasEscapeCloseRef,\n        onEntryKeyDown: handleContentEntry,\n        onFocusProxyEnter: handleContentEntry,\n        onRootContentClose: handleContentExit,\n        onContentFocusOutside: handleContentExit\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.li, $yHMN2$babelruntimehelpersesmextends({}, itemProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$ffdbb83a2de845c2, {\n    displayName: $322c88a641701f3b$var$ITEM_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuTrigger\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$TRIGGER_NAME = 'NavigationMenuTrigger';\nconst $322c88a641701f3b$export$37fe8002734d8f2 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , disabled: disabled , ...triggerProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$TRIGGER_NAME, props.__scopeNavigationMenu);\n    const itemContext = $322c88a641701f3b$var$useNavigationMenuItemContext($322c88a641701f3b$var$TRIGGER_NAME, props.__scopeNavigationMenu);\n    const ref = $yHMN2$useRef(null);\n    const composedRefs = $yHMN2$useComposedRefs(ref, itemContext.triggerRef, forwardedRef);\n    const triggerId = $322c88a641701f3b$var$makeTriggerId(context.baseId, itemContext.value);\n    const contentId = $322c88a641701f3b$var$makeContentId(context.baseId, itemContext.value);\n    const hasPointerMoveOpenedRef = $yHMN2$useRef(false);\n    const wasClickCloseRef = $yHMN2$useRef(false);\n    const open = itemContext.value === context.value;\n    return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Fragment, null, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$Collection.ItemSlot, {\n        scope: __scopeNavigationMenu,\n        value: itemContext.value\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupItem, {\n        asChild: true\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.button, $yHMN2$babelruntimehelpersesmextends({\n        id: triggerId,\n        disabled: disabled,\n        \"data-disabled\": disabled ? '' : undefined,\n        \"data-state\": $322c88a641701f3b$var$getOpenState(open),\n        \"aria-expanded\": open,\n        \"aria-controls\": contentId\n    }, triggerProps, {\n        ref: composedRefs,\n        onPointerEnter: $yHMN2$composeEventHandlers(props.onPointerEnter, ()=>{\n            wasClickCloseRef.current = false;\n            itemContext.wasEscapeCloseRef.current = false;\n        }),\n        onPointerMove: $yHMN2$composeEventHandlers(props.onPointerMove, $322c88a641701f3b$var$whenMouse(()=>{\n            if (disabled || wasClickCloseRef.current || itemContext.wasEscapeCloseRef.current || hasPointerMoveOpenedRef.current) return;\n            context.onTriggerEnter(itemContext.value);\n            hasPointerMoveOpenedRef.current = true;\n        })),\n        onPointerLeave: $yHMN2$composeEventHandlers(props.onPointerLeave, $322c88a641701f3b$var$whenMouse(()=>{\n            if (disabled) return;\n            context.onTriggerLeave();\n            hasPointerMoveOpenedRef.current = false;\n        })),\n        onClick: $yHMN2$composeEventHandlers(props.onClick, ()=>{\n            context.onItemSelect(itemContext.value);\n            wasClickCloseRef.current = open;\n        }),\n        onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, (event)=>{\n            const verticalEntryKey = context.dir === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n            const entryKey = {\n                horizontal: 'ArrowDown',\n                vertical: verticalEntryKey\n            }[context.orientation];\n            if (open && event.key === entryKey) {\n                itemContext.onEntryKeyDown(); // Prevent FocusGroupItem from handling the event\n                event.preventDefault();\n            }\n        })\n    })))), open && /*#__PURE__*/ $yHMN2$createElement($yHMN2$Fragment, null, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Root, {\n        \"aria-hidden\": true,\n        tabIndex: 0,\n        ref: itemContext.focusProxyRef,\n        onFocus: (event)=>{\n            const content = itemContext.contentRef.current;\n            const prevFocusedElement = event.relatedTarget;\n            const wasTriggerFocused = prevFocusedElement === ref.current;\n            const wasFocusFromContent = content === null || content === void 0 ? void 0 : content.contains(prevFocusedElement);\n            if (wasTriggerFocused || !wasFocusFromContent) itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end');\n        }\n    }), context.viewport && /*#__PURE__*/ $yHMN2$createElement(\"span\", {\n        \"aria-owns\": contentId\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$37fe8002734d8f2, {\n    displayName: $322c88a641701f3b$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuLink\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$LINK_NAME = 'NavigationMenuLink';\nconst $322c88a641701f3b$var$LINK_SELECT = 'navigationMenu.linkSelect';\nconst $322c88a641701f3b$export$6893bf21536567da = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , active: active , onSelect: onSelect , ...linkProps } = props;\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupItem, {\n        asChild: true\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.a, $yHMN2$babelruntimehelpersesmextends({\n        \"data-active\": active ? '' : undefined,\n        \"aria-current\": active ? 'page' : undefined\n    }, linkProps, {\n        ref: forwardedRef,\n        onClick: $yHMN2$composeEventHandlers(props.onClick, (event1)=>{\n            const target = event1.target;\n            const linkSelectEvent = new CustomEvent($322c88a641701f3b$var$LINK_SELECT, {\n                bubbles: true,\n                cancelable: true\n            });\n            target.addEventListener($322c88a641701f3b$var$LINK_SELECT, (event)=>onSelect === null || onSelect === void 0 ? void 0 : onSelect(event)\n            , {\n                once: true\n            });\n            $yHMN2$dispatchDiscreteCustomEvent(target, linkSelectEvent);\n            if (!linkSelectEvent.defaultPrevented) {\n                const rootContentDismissEvent = new CustomEvent($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, {\n                    bubbles: true,\n                    cancelable: true\n                });\n                $yHMN2$dispatchDiscreteCustomEvent(target, rootContentDismissEvent);\n            }\n        }, {\n            checkForDefaultPrevented: false\n        })\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$6893bf21536567da, {\n    displayName: $322c88a641701f3b$var$LINK_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuIndicator\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$INDICATOR_NAME = 'NavigationMenuIndicator';\nconst $322c88a641701f3b$export$8ddb526647c0d8fb = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { forceMount: forceMount , ...indicatorProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$INDICATOR_NAME, props.__scopeNavigationMenu);\n    const isVisible = Boolean(context.value);\n    return context.indicatorTrack ? /*#__PURE__*/ $yHMN2$reactdom.createPortal(/*#__PURE__*/ $yHMN2$createElement($yHMN2$Presence, {\n        present: forceMount || isVisible\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuIndicatorImpl, $yHMN2$babelruntimehelpersesmextends({}, indicatorProps, {\n        ref: forwardedRef\n    }))), context.indicatorTrack) : null;\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$8ddb526647c0d8fb, {\n    displayName: $322c88a641701f3b$var$INDICATOR_NAME\n});\nconst $322c88a641701f3b$var$NavigationMenuIndicatorImpl = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , ...indicatorProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$INDICATOR_NAME, __scopeNavigationMenu);\n    const getItems = $322c88a641701f3b$var$useCollection(__scopeNavigationMenu);\n    const [activeTrigger, setActiveTrigger] = $yHMN2$useState(null);\n    const [position, setPosition] = $yHMN2$useState(null);\n    const isHorizontal = context.orientation === 'horizontal';\n    const isVisible = Boolean(context.value);\n    $yHMN2$useEffect(()=>{\n        var _items$find;\n        const items = getItems();\n        const triggerNode = (_items$find = items.find((item)=>item.value === context.value\n        )) === null || _items$find === void 0 ? void 0 : _items$find.ref.current;\n        if (triggerNode) setActiveTrigger(triggerNode);\n    }, [\n        getItems,\n        context.value\n    ]);\n    /**\n   * Update position when the indicator or parent track size changes\n   */ const handlePositionChange = ()=>{\n        if (activeTrigger) setPosition({\n            size: isHorizontal ? activeTrigger.offsetWidth : activeTrigger.offsetHeight,\n            offset: isHorizontal ? activeTrigger.offsetLeft : activeTrigger.offsetTop\n        });\n    };\n    $322c88a641701f3b$var$useResizeObserver(activeTrigger, handlePositionChange);\n    $322c88a641701f3b$var$useResizeObserver(context.indicatorTrack, handlePositionChange); // We need to wait for the indicator position to be available before rendering to\n    // snap immediately into position rather than transitioning from initial\n    return position ? /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n        \"aria-hidden\": true,\n        \"data-state\": isVisible ? 'visible' : 'hidden',\n        \"data-orientation\": context.orientation\n    }, indicatorProps, {\n        ref: forwardedRef,\n        style: {\n            position: 'absolute',\n            ...isHorizontal ? {\n                left: 0,\n                width: position.size + 'px',\n                transform: `translateX(${position.offset}px)`\n            } : {\n                top: 0,\n                height: position.size + 'px',\n                transform: `translateY(${position.offset}px)`\n            },\n            ...indicatorProps.style\n        }\n    })) : null;\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuContent\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$CONTENT_NAME = 'NavigationMenuContent';\nconst $322c88a641701f3b$export$38e00e996c2f93f7 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { forceMount: forceMount , ...contentProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n    const itemContext = $322c88a641701f3b$var$useNavigationMenuItemContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n    const composedRefs = $yHMN2$useComposedRefs(itemContext.contentRef, forwardedRef);\n    const open = itemContext.value === context.value;\n    const commonProps = {\n        value: itemContext.value,\n        triggerRef: itemContext.triggerRef,\n        focusProxyRef: itemContext.focusProxyRef,\n        wasEscapeCloseRef: itemContext.wasEscapeCloseRef,\n        onContentFocusOutside: itemContext.onContentFocusOutside,\n        onRootContentClose: itemContext.onRootContentClose,\n        ...contentProps\n    };\n    return !context.viewport ? /*#__PURE__*/ $yHMN2$createElement($yHMN2$Presence, {\n        present: forceMount || open\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuContentImpl, $yHMN2$babelruntimehelpersesmextends({\n        \"data-state\": $322c88a641701f3b$var$getOpenState(open)\n    }, commonProps, {\n        ref: composedRefs,\n        onPointerEnter: $yHMN2$composeEventHandlers(props.onPointerEnter, context.onContentEnter),\n        onPointerLeave: $yHMN2$composeEventHandlers(props.onPointerLeave, $322c88a641701f3b$var$whenMouse(context.onContentLeave)),\n        style: {\n            // Prevent interaction when animating out\n            pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n            ...commonProps.style\n        }\n    }))) : /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$ViewportContentMounter, $yHMN2$babelruntimehelpersesmextends({\n        forceMount: forceMount\n    }, commonProps, {\n        ref: composedRefs\n    }));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$38e00e996c2f93f7, {\n    displayName: $322c88a641701f3b$var$CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$ViewportContentMounter = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, props.__scopeNavigationMenu);\n    const { onViewportContentChange: onViewportContentChange , onViewportContentRemove: onViewportContentRemove  } = context;\n    $yHMN2$useLayoutEffect(()=>{\n        onViewportContentChange(props.value, {\n            ref: forwardedRef,\n            ...props\n        });\n    }, [\n        props,\n        forwardedRef,\n        onViewportContentChange\n    ]);\n    $yHMN2$useLayoutEffect(()=>{\n        return ()=>onViewportContentRemove(props.value)\n        ;\n    }, [\n        props.value,\n        onViewportContentRemove\n    ]); // Content is proxied into the viewport\n    return null;\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss';\nconst $322c88a641701f3b$var$NavigationMenuContentImpl = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , value: value , triggerRef: triggerRef , focusProxyRef: focusProxyRef , wasEscapeCloseRef: wasEscapeCloseRef , onRootContentClose: onRootContentClose , onContentFocusOutside: onContentFocusOutside , ...contentProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$CONTENT_NAME, __scopeNavigationMenu);\n    const ref = $yHMN2$useRef(null);\n    const composedRefs = $yHMN2$useComposedRefs(ref, forwardedRef);\n    const triggerId = $322c88a641701f3b$var$makeTriggerId(context.baseId, value);\n    const contentId = $322c88a641701f3b$var$makeContentId(context.baseId, value);\n    const getItems = $322c88a641701f3b$var$useCollection(__scopeNavigationMenu);\n    const prevMotionAttributeRef = $yHMN2$useRef(null);\n    const { onItemDismiss: onItemDismiss  } = context;\n    $yHMN2$useEffect(()=>{\n        const content = ref.current; // Bubble dismiss to the root content node and focus its trigger\n        if (context.isRootMenu && content) {\n            const handleClose = ()=>{\n                var _triggerRef$current;\n                onItemDismiss();\n                onRootContentClose();\n                if (content.contains(document.activeElement)) (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 || _triggerRef$current.focus();\n            };\n            content.addEventListener($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, handleClose);\n            return ()=>content.removeEventListener($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, handleClose)\n            ;\n        }\n    }, [\n        context.isRootMenu,\n        props.value,\n        triggerRef,\n        onItemDismiss,\n        onRootContentClose\n    ]);\n    const motionAttribute = $yHMN2$useMemo(()=>{\n        const items = getItems();\n        const values = items.map((item)=>item.value\n        );\n        if (context.dir === 'rtl') values.reverse();\n        const index = values.indexOf(context.value);\n        const prevIndex = values.indexOf(context.previousValue);\n        const isSelected = value === context.value;\n        const wasSelected = prevIndex === values.indexOf(value); // We only want to update selected and the last selected content\n        // this avoids animations being interrupted outside of that range\n        if (!isSelected && !wasSelected) return prevMotionAttributeRef.current;\n        const attribute = (()=>{\n            // Don't provide a direction on the initial open\n            if (index !== prevIndex) {\n                // If we're moving to this item from another\n                if (isSelected && prevIndex !== -1) return index > prevIndex ? 'from-end' : 'from-start'; // If we're leaving this item for another\n                if (wasSelected && index !== -1) return index > prevIndex ? 'to-start' : 'to-end';\n            } // Otherwise we're entering from closed or leaving the list\n            // entirely and should not animate in any direction\n            return null;\n        })();\n        prevMotionAttributeRef.current = attribute;\n        return attribute;\n    }, [\n        context.previousValue,\n        context.value,\n        context.dir,\n        getItems,\n        value\n    ]);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroup, {\n        asChild: true\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$DismissableLayer, $yHMN2$babelruntimehelpersesmextends({\n        id: contentId,\n        \"aria-labelledby\": triggerId,\n        \"data-motion\": motionAttribute,\n        \"data-orientation\": context.orientation\n    }, contentProps, {\n        ref: composedRefs,\n        onDismiss: ()=>{\n            var _ref$current;\n            const rootContentDismissEvent = new Event($322c88a641701f3b$var$ROOT_CONTENT_DISMISS, {\n                bubbles: true,\n                cancelable: true\n            });\n            (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.dispatchEvent(rootContentDismissEvent);\n        },\n        onFocusOutside: $yHMN2$composeEventHandlers(props.onFocusOutside, (event)=>{\n            var _context$rootNavigati;\n            onContentFocusOutside();\n            const target = event.target; // Only dismiss content when focus moves outside of the menu\n            if ((_context$rootNavigati = context.rootNavigationMenu) !== null && _context$rootNavigati !== void 0 && _context$rootNavigati.contains(target)) event.preventDefault();\n        }),\n        onPointerDownOutside: $yHMN2$composeEventHandlers(props.onPointerDownOutside, (event)=>{\n            var _context$viewport;\n            const target = event.target;\n            const isTrigger = getItems().some((item)=>{\n                var _item$ref$current;\n                return (_item$ref$current = item.ref.current) === null || _item$ref$current === void 0 ? void 0 : _item$ref$current.contains(target);\n            });\n            const isRootViewport = context.isRootMenu && ((_context$viewport = context.viewport) === null || _context$viewport === void 0 ? void 0 : _context$viewport.contains(target));\n            if (isTrigger || isRootViewport || !context.isRootMenu) event.preventDefault();\n        }),\n        onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, (event)=>{\n            const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n            const isTabKey = event.key === 'Tab' && !isMetaKey;\n            if (isTabKey) {\n                const candidates = $322c88a641701f3b$var$getTabbableCandidates(event.currentTarget);\n                const focusedElement = document.activeElement;\n                const index = candidates.findIndex((candidate)=>candidate === focusedElement\n                );\n                const isMovingBackwards = event.shiftKey;\n                const nextCandidates = isMovingBackwards ? candidates.slice(0, index).reverse() : candidates.slice(index + 1, candidates.length);\n                if ($322c88a641701f3b$var$focusFirst(nextCandidates)) // prevent browser tab keydown because we've handled focus\n                event.preventDefault();\n                else {\n                    var _focusProxyRef$curren;\n                    // If we can't focus that means we're at the edges\n                    // so focus the proxy and let browser handle\n                    // tab/shift+tab keypress on the proxy instead\n                    (_focusProxyRef$curren = focusProxyRef.current) === null || _focusProxyRef$curren === void 0 || _focusProxyRef$curren.focus();\n                }\n            }\n        }),\n        onEscapeKeyDown: $yHMN2$composeEventHandlers(props.onEscapeKeyDown, (event)=>{\n            // prevent the dropdown from reopening\n            // after the escape key has been pressed\n            wasEscapeCloseRef.current = true;\n        })\n    })));\n});\n/* -------------------------------------------------------------------------------------------------\n * NavigationMenuViewport\n * -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$VIEWPORT_NAME = 'NavigationMenuViewport';\nconst $322c88a641701f3b$export$ee880b97cc6d44a5 = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { forceMount: forceMount , ...viewportProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$VIEWPORT_NAME, props.__scopeNavigationMenu);\n    const open = Boolean(context.value);\n    return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Presence, {\n        present: forceMount || open\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuViewportImpl, $yHMN2$babelruntimehelpersesmextends({}, viewportProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($322c88a641701f3b$export$ee880b97cc6d44a5, {\n    displayName: $322c88a641701f3b$var$VIEWPORT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$NavigationMenuViewportImpl = /*#__PURE__*/ $yHMN2$forwardRef((props1, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , children: children , ...viewportImplProps } = props1;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$VIEWPORT_NAME, __scopeNavigationMenu);\n    const composedRefs = $yHMN2$useComposedRefs(forwardedRef, context.onViewportChange);\n    const viewportContentContext = $322c88a641701f3b$var$useViewportContentContext($322c88a641701f3b$var$CONTENT_NAME, props1.__scopeNavigationMenu);\n    const [size, setSize] = $yHMN2$useState(null);\n    const [content, setContent] = $yHMN2$useState(null);\n    const viewportWidth = size ? (size === null || size === void 0 ? void 0 : size.width) + 'px' : undefined;\n    const viewportHeight = size ? (size === null || size === void 0 ? void 0 : size.height) + 'px' : undefined;\n    const open = Boolean(context.value); // We persist the last active content value as the viewport may be animating out\n    // and we want the content to remain mounted for the lifecycle of the viewport.\n    const activeContentValue = open ? context.value : context.previousValue;\n    /**\n   * Update viewport size to match the active content node.\n   * We prefer offset dimensions over `getBoundingClientRect` as the latter respects CSS transform.\n   * For example, if content animates in from `scale(0.5)` the dimensions would be anything\n   * from `0.5` to `1` of the intended size.\n   */ const handleSizeChange = ()=>{\n        if (content) setSize({\n            width: content.offsetWidth,\n            height: content.offsetHeight\n        });\n    };\n    $322c88a641701f3b$var$useResizeObserver(content, handleSizeChange);\n    return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n        \"data-state\": $322c88a641701f3b$var$getOpenState(open),\n        \"data-orientation\": context.orientation\n    }, viewportImplProps, {\n        ref: composedRefs,\n        style: {\n            // Prevent interaction when animating out\n            pointerEvents: !open && context.isRootMenu ? 'none' : undefined,\n            ['--radix-navigation-menu-viewport-width']: viewportWidth,\n            ['--radix-navigation-menu-viewport-height']: viewportHeight,\n            ...viewportImplProps.style\n        },\n        onPointerEnter: $yHMN2$composeEventHandlers(props1.onPointerEnter, context.onContentEnter),\n        onPointerLeave: $yHMN2$composeEventHandlers(props1.onPointerLeave, $322c88a641701f3b$var$whenMouse(context.onContentLeave))\n    }), Array.from(viewportContentContext.items).map(([value, { ref: ref , forceMount: forceMount , ...props }])=>{\n        const isActive = activeContentValue === value;\n        return /*#__PURE__*/ $yHMN2$createElement($yHMN2$Presence, {\n            key: value,\n            present: forceMount || isActive\n        }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$NavigationMenuContentImpl, $yHMN2$babelruntimehelpersesmextends({}, props, {\n            ref: $yHMN2$composeRefs(ref, (node)=>{\n                // We only want to update the stored node when another is available\n                // as we need to smoothly transition between them.\n                if (isActive && node) setContent(node);\n            })\n        })));\n    }));\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$FOCUS_GROUP_NAME = 'FocusGroup';\nconst $322c88a641701f3b$var$FocusGroup = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , ...groupProps } = props;\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$FOCUS_GROUP_NAME, __scopeNavigationMenu);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.Provider, {\n        scope: __scopeNavigationMenu\n    }, /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.Slot, {\n        scope: __scopeNavigationMenu\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.div, $yHMN2$babelruntimehelpersesmextends({\n        dir: context.dir\n    }, groupProps, {\n        ref: forwardedRef\n    }))));\n});\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$var$ARROW_KEYS = [\n    'ArrowRight',\n    'ArrowLeft',\n    'ArrowUp',\n    'ArrowDown'\n];\nconst $322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME = 'FocusGroupItem';\nconst $322c88a641701f3b$var$FocusGroupItem = /*#__PURE__*/ $yHMN2$forwardRef((props, forwardedRef)=>{\n    const { __scopeNavigationMenu: __scopeNavigationMenu , ...groupProps } = props;\n    const getItems = $322c88a641701f3b$var$useFocusGroupCollection(__scopeNavigationMenu);\n    const context = $322c88a641701f3b$var$useNavigationMenuContext($322c88a641701f3b$var$FOCUS_GROUP_ITEM_NAME, __scopeNavigationMenu);\n    return /*#__PURE__*/ $yHMN2$createElement($322c88a641701f3b$var$FocusGroupCollection.ItemSlot, {\n        scope: __scopeNavigationMenu\n    }, /*#__PURE__*/ $yHMN2$createElement($yHMN2$Primitive.button, $yHMN2$babelruntimehelpersesmextends({}, groupProps, {\n        ref: forwardedRef,\n        onKeyDown: $yHMN2$composeEventHandlers(props.onKeyDown, (event)=>{\n            const isFocusNavigationKey = [\n                'Home',\n                'End',\n                ...$322c88a641701f3b$var$ARROW_KEYS\n            ].includes(event.key);\n            if (isFocusNavigationKey) {\n                let candidateNodes = getItems().map((item)=>item.ref.current\n                );\n                const prevItemKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n                const prevKeys = [\n                    prevItemKey,\n                    'ArrowUp',\n                    'End'\n                ];\n                if (prevKeys.includes(event.key)) candidateNodes.reverse();\n                if ($322c88a641701f3b$var$ARROW_KEYS.includes(event.key)) {\n                    const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                    candidateNodes = candidateNodes.slice(currentIndex + 1);\n                }\n                /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */ setTimeout(()=>$322c88a641701f3b$var$focusFirst(candidateNodes)\n                ); // Prevent page scroll while navigating\n                event.preventDefault();\n            }\n        })\n    })));\n});\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */ function $322c88a641701f3b$var$getTabbableCandidates(container) {\n    const nodes = [];\n    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n        acceptNode: (node)=>{\n            const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n            if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP; // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n            // runtime's understanding of tabbability, so this automatically accounts\n            // for any kind of element that could be tabbed to.\n            return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n        }\n    });\n    while(walker.nextNode())nodes.push(walker.currentNode); // we do not take into account the order of nodes with positive `tabIndex` as it\n    // hinders accessibility to have tab order different from visual order.\n    return nodes;\n}\nfunction $322c88a641701f3b$var$focusFirst(candidates) {\n    const previouslyFocusedElement = document.activeElement;\n    return candidates.some((candidate)=>{\n        // if focus is already where we want to go, we don't want to keep going through the candidates\n        if (candidate === previouslyFocusedElement) return true;\n        candidate.focus();\n        return document.activeElement !== previouslyFocusedElement;\n    });\n}\nfunction $322c88a641701f3b$var$removeFromTabOrder(candidates) {\n    candidates.forEach((candidate)=>{\n        candidate.dataset.tabindex = candidate.getAttribute('tabindex') || '';\n        candidate.setAttribute('tabindex', '-1');\n    });\n    return ()=>{\n        candidates.forEach((candidate)=>{\n            const prevTabIndex = candidate.dataset.tabindex;\n            candidate.setAttribute('tabindex', prevTabIndex);\n        });\n    };\n}\nfunction $322c88a641701f3b$var$useResizeObserver(element, onResize) {\n    const handleResize = $yHMN2$useCallbackRef(onResize);\n    $yHMN2$useLayoutEffect(()=>{\n        let rAF = 0;\n        if (element) {\n            /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */ const resizeObserver = new ResizeObserver(()=>{\n                cancelAnimationFrame(rAF);\n                rAF = window.requestAnimationFrame(handleResize);\n            });\n            resizeObserver.observe(element);\n            return ()=>{\n                window.cancelAnimationFrame(rAF);\n                resizeObserver.unobserve(element);\n            };\n        }\n    }, [\n        element,\n        handleResize\n    ]);\n}\nfunction $322c88a641701f3b$var$getOpenState(open) {\n    return open ? 'open' : 'closed';\n}\nfunction $322c88a641701f3b$var$makeTriggerId(baseId, value) {\n    return `${baseId}-trigger-${value}`;\n}\nfunction $322c88a641701f3b$var$makeContentId(baseId, value) {\n    return `${baseId}-content-${value}`;\n}\nfunction $322c88a641701f3b$var$whenMouse(handler) {\n    return (event)=>event.pointerType === 'mouse' ? handler(event) : undefined\n    ;\n}\n/* -----------------------------------------------------------------------------------------------*/ const $322c88a641701f3b$export$be92b6f5f03c0fe9 = $322c88a641701f3b$export$5b2278cf1e8bcae2;\nconst $322c88a641701f3b$export$d7a01e11500dfb6f = $322c88a641701f3b$export$5958edd6c4ee7c79;\nconst $322c88a641701f3b$export$54c2e3dc7acea9f5 = $322c88a641701f3b$export$c361068a95fd2286;\nconst $322c88a641701f3b$export$6d08773d2e66f8f2 = $322c88a641701f3b$export$ffdbb83a2de845c2;\nconst $322c88a641701f3b$export$41fb9f06171c75f4 = $322c88a641701f3b$export$37fe8002734d8f2;\nconst $322c88a641701f3b$export$a6c7ac8248d6e38a = $322c88a641701f3b$export$6893bf21536567da;\nconst $322c88a641701f3b$export$adb584737d712b70 = $322c88a641701f3b$export$8ddb526647c0d8fb;\nconst $322c88a641701f3b$export$7c6e2c02157bb7d2 = $322c88a641701f3b$export$38e00e996c2f93f7;\nconst $322c88a641701f3b$export$d5c6c08dc2d3ca7 = $322c88a641701f3b$export$ee880b97cc6d44a5;\n\n\n\n\nexport {$322c88a641701f3b$export$fb8ea5af8c9fcdf0 as createNavigationMenuScope, $322c88a641701f3b$export$5b2278cf1e8bcae2 as NavigationMenu, $322c88a641701f3b$export$5958edd6c4ee7c79 as NavigationMenuSub, $322c88a641701f3b$export$c361068a95fd2286 as NavigationMenuList, $322c88a641701f3b$export$ffdbb83a2de845c2 as NavigationMenuItem, $322c88a641701f3b$export$37fe8002734d8f2 as NavigationMenuTrigger, $322c88a641701f3b$export$6893bf21536567da as NavigationMenuLink, $322c88a641701f3b$export$8ddb526647c0d8fb as NavigationMenuIndicator, $322c88a641701f3b$export$38e00e996c2f93f7 as NavigationMenuContent, $322c88a641701f3b$export$ee880b97cc6d44a5 as NavigationMenuViewport, $322c88a641701f3b$export$be92b6f5f03c0fe9 as Root, $322c88a641701f3b$export$d7a01e11500dfb6f as Sub, $322c88a641701f3b$export$54c2e3dc7acea9f5 as List, $322c88a641701f3b$export$6d08773d2e66f8f2 as Item, $322c88a641701f3b$export$41fb9f06171c75f4 as Trigger, $322c88a641701f3b$export$a6c7ac8248d6e38a as Link, $322c88a641701f3b$export$adb584737d712b70 as Indicator, $322c88a641701f3b$export$7c6e2c02157bb7d2 as Content, $322c88a641701f3b$export$d5c6c08dc2d3ca7 as Viewport};\n//# sourceMappingURL=index.module.js.map\n","start":1670465466684,"end":1670465466684,"order":"pre"}]}
