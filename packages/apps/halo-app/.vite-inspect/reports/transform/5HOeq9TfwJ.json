{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/immediate@3.3.0/node_modules/immediate/lib/stateChange.js","transforms":[{"name":"vite:load-fallback","result":"'use strict';\n\nexports.test = function () {\n  return 'document' in global && 'onreadystatechange' in global.document.createElement('script');\n};\n\nexports.install = function (handle) {\n  return function () {\n\n    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n    var scriptEl = global.document.createElement('script');\n    scriptEl.onreadystatechange = function () {\n      handle();\n\n      scriptEl.onreadystatechange = null;\n      scriptEl.parentNode.removeChild(scriptEl);\n      scriptEl = null;\n    };\n    global.document.documentElement.appendChild(scriptEl);\n\n    return handle;\n  };\n};","start":1670465471076,"end":1670465471239},{"name":"vite:react-babel","result":"'use strict';\n\nexports.test = function () {\n  return 'document' in global && 'onreadystatechange' in global.document.createElement('script');\n};\n\nexports.install = function (handle) {\n  return function () {\n\n    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n    var scriptEl = global.document.createElement('script');\n    scriptEl.onreadystatechange = function () {\n      handle();\n\n      scriptEl.onreadystatechange = null;\n      scriptEl.parentNode.removeChild(scriptEl);\n      scriptEl = null;\n    };\n    global.document.documentElement.appendChild(scriptEl);\n\n    return handle;\n  };\n};","start":1670465471239,"end":1670465471239,"order":"pre"},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as stateChange } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/immediate@3.3.0/node_modules/immediate/lib/stateChange.js?commonjs-exports\"\n\n'use strict';\n\nvar test = stateChange.test = function () {\n  return 'document' in commonjsHelpers.commonjsGlobal && 'onreadystatechange' in commonjsHelpers.commonjsGlobal.document.createElement('script');\n};\n\nvar install = stateChange.install = function (handle) {\n  return function () {\n\n    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n    var scriptEl = commonjsHelpers.commonjsGlobal.document.createElement('script');\n    scriptEl.onreadystatechange = function () {\n      handle();\n\n      scriptEl.onreadystatechange = null;\n      scriptEl.parentNode.removeChild(scriptEl);\n      scriptEl = null;\n    };\n    commonjsHelpers.commonjsGlobal.document.documentElement.appendChild(scriptEl);\n\n    return handle;\n  };\n};\n\nexport { stateChange as __moduleExports, test, install, stateChange as default };","start":1670465471239,"end":1670465471239,"order":"normal"}]}
