{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/nanomessage@8.4.0/node_modules/nanomessage/src/errors.js","transforms":[{"name":"vite:load-fallback","result":"const nanoerror = require('nanoerror')\n\nconst errors = {}\n\nfunction createError (code, message) {\n  errors[code] = nanoerror(code, message)\n}\n\ncreateError('NMSG_ERR_TIMEOUT', 'timeout on request: %s')\ncreateError('NMSG_ERR_ENCODE', 'error encoding the request: %s')\ncreateError('NMSG_ERR_DECODE', 'error decoding the request: %s')\ncreateError('NMSG_ERR_RESPONSE', 'response error on request: %s')\ncreateError('NMSG_ERR_CLOSE', 'nanomessage was closed')\ncreateError('NMSG_ERR_NOT_OPEN', 'nanomessage is not open')\ncreateError('NMSG_ERR_CANCEL', 'request canceled: %s')\n\nmodule.exports = errors\n","start":1670465469292,"end":1670465469539},{"name":"vite:react-babel","result":"const nanoerror = require('nanoerror')\n\nconst errors = {}\n\nfunction createError (code, message) {\n  errors[code] = nanoerror(code, message)\n}\n\ncreateError('NMSG_ERR_TIMEOUT', 'timeout on request: %s')\ncreateError('NMSG_ERR_ENCODE', 'error encoding the request: %s')\ncreateError('NMSG_ERR_DECODE', 'error decoding the request: %s')\ncreateError('NMSG_ERR_RESPONSE', 'response error on request: %s')\ncreateError('NMSG_ERR_CLOSE', 'nanomessage was closed')\ncreateError('NMSG_ERR_NOT_OPEN', 'nanomessage is not open')\ncreateError('NMSG_ERR_CANCEL', 'request canceled: %s')\n\nmodule.exports = errors\n","start":1670465469539,"end":1670465469539,"order":"pre"},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/nanoerror@1.3.0/node_modules/nanoerror/index.js?commonjs-proxy\";\n\nconst nanoerror = require$$0\n\nconst errors = {}\n\nfunction createError (code, message) {\n  errors[code] = nanoerror(code, message)\n}\n\ncreateError('NMSG_ERR_TIMEOUT', 'timeout on request: %s')\ncreateError('NMSG_ERR_ENCODE', 'error encoding the request: %s')\ncreateError('NMSG_ERR_DECODE', 'error decoding the request: %s')\ncreateError('NMSG_ERR_RESPONSE', 'response error on request: %s')\ncreateError('NMSG_ERR_CLOSE', 'nanomessage was closed')\ncreateError('NMSG_ERR_NOT_OPEN', 'nanomessage is not open')\ncreateError('NMSG_ERR_CANCEL', 'request canceled: %s')\n\nvar errors_1 = errors\n\nexport default errors_1;\nexport { errors_1 as __moduleExports };","start":1670465469539,"end":1670465469540,"order":"normal"}]}
