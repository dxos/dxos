{"resolvedId":"/home/jdw/Code/dxos/dxos/packages/apps/halo-app/src/App.tsx","transforms":[{"name":"vite:load-fallback","result":"//\n// Copyright 2022 DXOS.org\n//\n\nimport { ErrorBoundary } from '@sentry/react';\nimport React from 'react';\nimport { HashRouter, useRoutes } from 'react-router-dom';\nimport { useRegisterSW } from 'virtual:pwa-register/react';\n\nimport { fromHost, fromIFrame } from '@dxos/client';\nimport { Config, Defaults, Dynamics } from '@dxos/config';\nimport { log } from '@dxos/log';\nimport {\n  AppLayout,\n  ErrorProvider,\n  Fallback,\n  FatalError,\n  GenericFallback,\n  ServiceWorkerToast,\n  useTelemetry,\n  translations,\n  StatusIndicator\n} from '@dxos/react-appkit';\nimport { ClientProvider, useStatus } from '@dxos/react-client';\nimport { UiKitProvider } from '@dxos/react-uikit';\nimport { captureException } from '@dxos/sentry';\n\nimport { NavMenu } from './components';\nimport haloTranslations from './translations';\n\nconst LockPage = React.lazy(() => import('./pages/LockPage'));\nconst AppsPage = React.lazy(() => import('./pages/AppsPage'));\nconst ContactsPage = React.lazy(() => import('./pages/ContactsPage'));\nconst CreateIdentityPage = React.lazy(() => import('./pages/CreateIdentityPage'));\nconst DevicesPage = React.lazy(() => import('./pages/DevicesPage'));\nconst IdentityPage = React.lazy(() => import('./pages/IdentityPage'));\nconst JoinIdentityPage = React.lazy(() => import('./pages/JoinIdentityPage'));\nconst RecoverIdentityPage = React.lazy(() => import('./pages/RecoverIdentityPage'));\nconst RequireIdentity = React.lazy(() => import('./pages/RequireIdentity'));\nconst SpacePage = React.lazy(() => import('./pages/SpacePage'));\nconst SpacesPage = React.lazy(() => import('./pages/SpacesPage'));\n\n// prettier-ignore\nlog.config({\n  filter: process.env.LOG_FILTER ?? 'halo-app:debug,client:debug,warn',\n  prefix: process.env.LOG_BROWSER_PREFIX\n});\n\nconst configProvider = async () => new Config(await Dynamics(), Defaults());\n\nconst StatusContainer = () => {\n  const status = useStatus();\n  return <StatusIndicator status={status} />;\n};\n\nconst Routes = () => {\n  useTelemetry({ namespace: 'halo-app' });\n\n  return useRoutes([\n    {\n      path: '/',\n      element: <LockPage />\n    },\n    {\n      path: '/identity/create',\n      element: <CreateIdentityPage />\n    },\n    {\n      path: '/identity/recover',\n      element: <RecoverIdentityPage />\n    },\n    {\n      path: '/identity/join',\n      element: <JoinIdentityPage />\n    },\n    {\n      path: '/',\n      element: <RequireIdentity redirect='/' />,\n      children: [\n        {\n          path: '/',\n          element: <AppLayout menubarContent={<NavMenu />} suppressSpaceMenu manageProfilePath='/identity' />,\n          children: [\n            { path: '/devices', element: <DevicesPage /> },\n            { path: '/identity', element: <IdentityPage /> },\n            { path: '/spaces', element: <SpacesPage /> },\n            { path: '/contacts', element: <ContactsPage /> },\n            { path: '/apps', element: <AppsPage /> },\n            { path: '/spaces/:space', element: <SpacePage /> }\n          ]\n        }\n      ]\n    }\n  ]);\n};\n\nexport const App = () => {\n  const {\n    offlineReady: [offlineReady, _setOfflineReady],\n    needRefresh: [needRefresh, _setNeedRefresh],\n    updateServiceWorker\n  } = useRegisterSW({\n    onRegisterError: (err) => {\n      captureException(err);\n      console.error(err);\n    }\n  });\n\n  return (\n    <UiKitProvider\n      resourceExtensions={[translations, haloTranslations]}\n      fallback={<Fallback message='Loading...' />}\n      appNs='halo'\n    >\n      <ErrorProvider>\n        {/* TODO(wittjosiah): Hook up user feedback mechanism. */}\n        <ErrorBoundary fallback={({ error }) => <FatalError error={error} />}>\n          <ClientProvider\n            config={configProvider}\n            services={(config) => (process.env.DX_VAULT === 'false' ? fromHost(config) : fromIFrame(config))}\n            fallback={<GenericFallback />}\n          >\n            <HashRouter>\n              <StatusContainer />\n              <Routes />\n              {needRefresh ? (\n                <ServiceWorkerToast {...{ variant: 'needRefresh', updateServiceWorker }} />\n              ) : offlineReady ? (\n                <ServiceWorkerToast variant='offlineReady' />\n              ) : null}\n            </HashRouter>\n          </ClientProvider>\n        </ErrorBoundary>\n      </ErrorProvider>\n    </UiKitProvider>\n  );\n};\n","start":1670465438265,"end":1670465438270},{"name":"vite:react-babel","result":"//\n// Copyright 2022 DXOS.org\n//\n\nimport { ErrorBoundary } from '@sentry/react';\nimport React from 'react';\nimport { HashRouter, useRoutes } from 'react-router-dom';\nimport { useRegisterSW } from 'virtual:pwa-register/react';\nimport { fromHost, fromIFrame } from '@dxos/client';\nimport { Config, Defaults, Dynamics } from '@dxos/config';\nimport { log } from '@dxos/log';\nimport { AppLayout, ErrorProvider, Fallback, FatalError, GenericFallback, ServiceWorkerToast, useTelemetry, translations, StatusIndicator } from '@dxos/react-appkit';\nimport { ClientProvider, useStatus } from '@dxos/react-client';\nimport { UiKitProvider } from '@dxos/react-uikit';\nimport { captureException } from '@dxos/sentry';\nimport { NavMenu } from './components';\nimport haloTranslations from './translations';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst LockPage = React.lazy(() => import('./pages/LockPage'));\nconst AppsPage = React.lazy(() => import('./pages/AppsPage'));\nconst ContactsPage = React.lazy(() => import('./pages/ContactsPage'));\nconst CreateIdentityPage = React.lazy(() => import('./pages/CreateIdentityPage'));\nconst DevicesPage = React.lazy(() => import('./pages/DevicesPage'));\nconst IdentityPage = React.lazy(() => import('./pages/IdentityPage'));\nconst JoinIdentityPage = React.lazy(() => import('./pages/JoinIdentityPage'));\nconst RecoverIdentityPage = React.lazy(() => import('./pages/RecoverIdentityPage'));\nconst RequireIdentity = React.lazy(() => import('./pages/RequireIdentity'));\nconst SpacePage = React.lazy(() => import('./pages/SpacePage'));\nconst SpacesPage = React.lazy(() => import('./pages/SpacesPage'));\n\n// prettier-ignore\nlog.config({\n  filter: process.env.LOG_FILTER ?? 'halo-app:debug,client:debug,warn',\n  prefix: process.env.LOG_BROWSER_PREFIX\n});\nconst configProvider = async () => new Config(await Dynamics(), Defaults());\nconst StatusContainer = () => {\n  const status = useStatus();\n  return /*#__PURE__*/_jsx(StatusIndicator, {\n    status: status\n  });\n};\nconst Routes = () => {\n  useTelemetry({\n    namespace: 'halo-app'\n  });\n  return useRoutes([{\n    path: '/',\n    element: /*#__PURE__*/_jsx(LockPage, {})\n  }, {\n    path: '/identity/create',\n    element: /*#__PURE__*/_jsx(CreateIdentityPage, {})\n  }, {\n    path: '/identity/recover',\n    element: /*#__PURE__*/_jsx(RecoverIdentityPage, {})\n  }, {\n    path: '/identity/join',\n    element: /*#__PURE__*/_jsx(JoinIdentityPage, {})\n  }, {\n    path: '/',\n    element: /*#__PURE__*/_jsx(RequireIdentity, {\n      redirect: \"/\"\n    }),\n    children: [{\n      path: '/',\n      element: /*#__PURE__*/_jsx(AppLayout, {\n        menubarContent: /*#__PURE__*/_jsx(NavMenu, {}),\n        suppressSpaceMenu: true,\n        manageProfilePath: \"/identity\"\n      }),\n      children: [{\n        path: '/devices',\n        element: /*#__PURE__*/_jsx(DevicesPage, {})\n      }, {\n        path: '/identity',\n        element: /*#__PURE__*/_jsx(IdentityPage, {})\n      }, {\n        path: '/spaces',\n        element: /*#__PURE__*/_jsx(SpacesPage, {})\n      }, {\n        path: '/contacts',\n        element: /*#__PURE__*/_jsx(ContactsPage, {})\n      }, {\n        path: '/apps',\n        element: /*#__PURE__*/_jsx(AppsPage, {})\n      }, {\n        path: '/spaces/:space',\n        element: /*#__PURE__*/_jsx(SpacePage, {})\n      }]\n    }]\n  }]);\n};\nexport const App = () => {\n  const {\n    offlineReady: [offlineReady, _setOfflineReady],\n    needRefresh: [needRefresh, _setNeedRefresh],\n    updateServiceWorker\n  } = useRegisterSW({\n    onRegisterError: err => {\n      captureException(err);\n      console.error(err);\n    }\n  });\n  return /*#__PURE__*/_jsx(UiKitProvider, {\n    resourceExtensions: [translations, haloTranslations],\n    fallback: /*#__PURE__*/_jsx(Fallback, {\n      message: \"Loading...\"\n    }),\n    appNs: \"halo\",\n    children: /*#__PURE__*/_jsx(ErrorProvider, {\n      children: /*#__PURE__*/_jsx(ErrorBoundary, {\n        fallback: ({\n          error\n        }) => /*#__PURE__*/_jsx(FatalError, {\n          error: error\n        }),\n        children: /*#__PURE__*/_jsx(ClientProvider, {\n          config: configProvider,\n          services: config => process.env.DX_VAULT === 'false' ? fromHost(config) : fromIFrame(config),\n          fallback: /*#__PURE__*/_jsx(GenericFallback, {}),\n          children: /*#__PURE__*/_jsxs(HashRouter, {\n            children: [/*#__PURE__*/_jsx(StatusContainer, {}), /*#__PURE__*/_jsx(Routes, {}), needRefresh ? /*#__PURE__*/_jsx(ServiceWorkerToast, {\n              variant: 'needRefresh',\n              updateServiceWorker\n            }) : offlineReady ? /*#__PURE__*/_jsx(ServiceWorkerToast, {\n              variant: \"offlineReady\"\n            }) : null]\n          })\n        })\n      })\n    })\n  });\n};","start":1670465438270,"end":1670465438309,"order":"pre"},{"name":"vite:esbuild","result":"import { ErrorBoundary } from \"@sentry/react\";\nimport React from \"react\";\nimport { HashRouter, useRoutes } from \"react-router-dom\";\nimport { useRegisterSW } from \"virtual:pwa-register/react\";\nimport { fromHost, fromIFrame } from \"@dxos/client\";\nimport { Config, Defaults, Dynamics } from \"@dxos/config\";\nimport { log } from \"@dxos/log\";\nimport { AppLayout, ErrorProvider, Fallback, FatalError, GenericFallback, ServiceWorkerToast, useTelemetry, translations, StatusIndicator } from \"@dxos/react-appkit\";\nimport { ClientProvider, useStatus } from \"@dxos/react-client\";\nimport { UiKitProvider } from \"@dxos/react-uikit\";\nimport { captureException } from \"@dxos/sentry\";\nimport { NavMenu } from \"./components\";\nimport haloTranslations from \"./translations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst LockPage = React.lazy(() => import(\"./pages/LockPage\"));\nconst AppsPage = React.lazy(() => import(\"./pages/AppsPage\"));\nconst ContactsPage = React.lazy(() => import(\"./pages/ContactsPage\"));\nconst CreateIdentityPage = React.lazy(() => import(\"./pages/CreateIdentityPage\"));\nconst DevicesPage = React.lazy(() => import(\"./pages/DevicesPage\"));\nconst IdentityPage = React.lazy(() => import(\"./pages/IdentityPage\"));\nconst JoinIdentityPage = React.lazy(() => import(\"./pages/JoinIdentityPage\"));\nconst RecoverIdentityPage = React.lazy(() => import(\"./pages/RecoverIdentityPage\"));\nconst RequireIdentity = React.lazy(() => import(\"./pages/RequireIdentity\"));\nconst SpacePage = React.lazy(() => import(\"./pages/SpacePage\"));\nconst SpacesPage = React.lazy(() => import(\"./pages/SpacesPage\"));\nlog.config({\n  filter: process.env.LOG_FILTER ?? \"halo-app:debug,client:debug,warn\",\n  prefix: process.env.LOG_BROWSER_PREFIX\n});\nconst configProvider = async () => new Config(await Dynamics(), Defaults());\nconst StatusContainer = () => {\n  const status = useStatus();\n  return /* @__PURE__ */ _jsx(StatusIndicator, {\n    status\n  });\n};\nconst Routes = () => {\n  useTelemetry({\n    namespace: \"halo-app\"\n  });\n  return useRoutes([{\n    path: \"/\",\n    element: /* @__PURE__ */ _jsx(LockPage, {})\n  }, {\n    path: \"/identity/create\",\n    element: /* @__PURE__ */ _jsx(CreateIdentityPage, {})\n  }, {\n    path: \"/identity/recover\",\n    element: /* @__PURE__ */ _jsx(RecoverIdentityPage, {})\n  }, {\n    path: \"/identity/join\",\n    element: /* @__PURE__ */ _jsx(JoinIdentityPage, {})\n  }, {\n    path: \"/\",\n    element: /* @__PURE__ */ _jsx(RequireIdentity, {\n      redirect: \"/\"\n    }),\n    children: [{\n      path: \"/\",\n      element: /* @__PURE__ */ _jsx(AppLayout, {\n        menubarContent: /* @__PURE__ */ _jsx(NavMenu, {}),\n        suppressSpaceMenu: true,\n        manageProfilePath: \"/identity\"\n      }),\n      children: [{\n        path: \"/devices\",\n        element: /* @__PURE__ */ _jsx(DevicesPage, {})\n      }, {\n        path: \"/identity\",\n        element: /* @__PURE__ */ _jsx(IdentityPage, {})\n      }, {\n        path: \"/spaces\",\n        element: /* @__PURE__ */ _jsx(SpacesPage, {})\n      }, {\n        path: \"/contacts\",\n        element: /* @__PURE__ */ _jsx(ContactsPage, {})\n      }, {\n        path: \"/apps\",\n        element: /* @__PURE__ */ _jsx(AppsPage, {})\n      }, {\n        path: \"/spaces/:space\",\n        element: /* @__PURE__ */ _jsx(SpacePage, {})\n      }]\n    }]\n  }]);\n};\nexport const App = () => {\n  const {\n    offlineReady: [offlineReady, _setOfflineReady],\n    needRefresh: [needRefresh, _setNeedRefresh],\n    updateServiceWorker\n  } = useRegisterSW({\n    onRegisterError: (err) => {\n      captureException(err);\n      console.error(err);\n    }\n  });\n  return /* @__PURE__ */ _jsx(UiKitProvider, {\n    resourceExtensions: [translations, haloTranslations],\n    fallback: /* @__PURE__ */ _jsx(Fallback, {\n      message: \"Loading...\"\n    }),\n    appNs: \"halo\",\n    children: /* @__PURE__ */ _jsx(ErrorProvider, {\n      children: /* @__PURE__ */ _jsx(ErrorBoundary, {\n        fallback: ({\n          error\n        }) => /* @__PURE__ */ _jsx(FatalError, {\n          error\n        }),\n        children: /* @__PURE__ */ _jsx(ClientProvider, {\n          config: configProvider,\n          services: (config) => process.env.DX_VAULT === \"false\" ? fromHost(config) : fromIFrame(config),\n          fallback: /* @__PURE__ */ _jsx(GenericFallback, {}),\n          children: /* @__PURE__ */ _jsxs(HashRouter, {\n            children: [/* @__PURE__ */ _jsx(StatusContainer, {}), /* @__PURE__ */ _jsx(Routes, {}), needRefresh ? /* @__PURE__ */ _jsx(ServiceWorkerToast, {\n              variant: \"needRefresh\",\n              updateServiceWorker\n            }) : offlineReady ? /* @__PURE__ */ _jsx(ServiceWorkerToast, {\n              variant: \"offlineReady\"\n            }) : null]\n          })\n        })\n      })\n    })\n  });\n};\n","start":1670465438309,"end":1670465438316,"order":"normal"},{"name":"vite:define","result":"import { ErrorBoundary } from \"@sentry/react\";\nimport React from \"react\";\nimport { HashRouter, useRoutes } from \"react-router-dom\";\nimport { useRegisterSW } from \"virtual:pwa-register/react\";\nimport { fromHost, fromIFrame } from \"@dxos/client\";\nimport { Config, Defaults, Dynamics } from \"@dxos/config\";\nimport { log } from \"@dxos/log\";\nimport { AppLayout, ErrorProvider, Fallback, FatalError, GenericFallback, ServiceWorkerToast, useTelemetry, translations, StatusIndicator } from \"@dxos/react-appkit\";\nimport { ClientProvider, useStatus } from \"@dxos/react-client\";\nimport { UiKitProvider } from \"@dxos/react-uikit\";\nimport { captureException } from \"@dxos/sentry\";\nimport { NavMenu } from \"./components\";\nimport haloTranslations from \"./translations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst LockPage = React.lazy(() => import(\"./pages/LockPage\"));\nconst AppsPage = React.lazy(() => import(\"./pages/AppsPage\"));\nconst ContactsPage = React.lazy(() => import(\"./pages/ContactsPage\"));\nconst CreateIdentityPage = React.lazy(() => import(\"./pages/CreateIdentityPage\"));\nconst DevicesPage = React.lazy(() => import(\"./pages/DevicesPage\"));\nconst IdentityPage = React.lazy(() => import(\"./pages/IdentityPage\"));\nconst JoinIdentityPage = React.lazy(() => import(\"./pages/JoinIdentityPage\"));\nconst RecoverIdentityPage = React.lazy(() => import(\"./pages/RecoverIdentityPage\"));\nconst RequireIdentity = React.lazy(() => import(\"./pages/RequireIdentity\"));\nconst SpacePage = React.lazy(() => import(\"./pages/SpacePage\"));\nconst SpacesPage = React.lazy(() => import(\"./pages/SpacesPage\"));\nlog.config({\n  filter: ({}).LOG_FILTER ?? \"halo-app:debug,client:debug,warn\",\n  prefix: \"vscode://file/home/jdw/Code/dxos/dxos/\"\n});\nconst configProvider = async () => new Config(await Dynamics(), Defaults());\nconst StatusContainer = () => {\n  const status = useStatus();\n  return /* @__PURE__ */ _jsx(StatusIndicator, {\n    status\n  });\n};\nconst Routes = () => {\n  useTelemetry({\n    namespace: \"halo-app\"\n  });\n  return useRoutes([{\n    path: \"/\",\n    element: /* @__PURE__ */ _jsx(LockPage, {})\n  }, {\n    path: \"/identity/create\",\n    element: /* @__PURE__ */ _jsx(CreateIdentityPage, {})\n  }, {\n    path: \"/identity/recover\",\n    element: /* @__PURE__ */ _jsx(RecoverIdentityPage, {})\n  }, {\n    path: \"/identity/join\",\n    element: /* @__PURE__ */ _jsx(JoinIdentityPage, {})\n  }, {\n    path: \"/\",\n    element: /* @__PURE__ */ _jsx(RequireIdentity, {\n      redirect: \"/\"\n    }),\n    children: [{\n      path: \"/\",\n      element: /* @__PURE__ */ _jsx(AppLayout, {\n        menubarContent: /* @__PURE__ */ _jsx(NavMenu, {}),\n        suppressSpaceMenu: true,\n        manageProfilePath: \"/identity\"\n      }),\n      children: [{\n        path: \"/devices\",\n        element: /* @__PURE__ */ _jsx(DevicesPage, {})\n      }, {\n        path: \"/identity\",\n        element: /* @__PURE__ */ _jsx(IdentityPage, {})\n      }, {\n        path: \"/spaces\",\n        element: /* @__PURE__ */ _jsx(SpacesPage, {})\n      }, {\n        path: \"/contacts\",\n        element: /* @__PURE__ */ _jsx(ContactsPage, {})\n      }, {\n        path: \"/apps\",\n        element: /* @__PURE__ */ _jsx(AppsPage, {})\n      }, {\n        path: \"/spaces/:space\",\n        element: /* @__PURE__ */ _jsx(SpacePage, {})\n      }]\n    }]\n  }]);\n};\nexport const App = () => {\n  const {\n    offlineReady: [offlineReady, _setOfflineReady],\n    needRefresh: [needRefresh, _setNeedRefresh],\n    updateServiceWorker\n  } = useRegisterSW({\n    onRegisterError: (err) => {\n      captureException(err);\n      console.error(err);\n    }\n  });\n  return /* @__PURE__ */ _jsx(UiKitProvider, {\n    resourceExtensions: [translations, haloTranslations],\n    fallback: /* @__PURE__ */ _jsx(Fallback, {\n      message: \"Loading...\"\n    }),\n    appNs: \"halo\",\n    children: /* @__PURE__ */ _jsx(ErrorProvider, {\n      children: /* @__PURE__ */ _jsx(ErrorBoundary, {\n        fallback: ({\n          error\n        }) => /* @__PURE__ */ _jsx(FatalError, {\n          error\n        }),\n        children: /* @__PURE__ */ _jsx(ClientProvider, {\n          config: configProvider,\n          services: (config) => undefined === \"false\" ? fromHost(config) : fromIFrame(config),\n          fallback: /* @__PURE__ */ _jsx(GenericFallback, {}),\n          children: /* @__PURE__ */ _jsxs(HashRouter, {\n            children: [/* @__PURE__ */ _jsx(StatusContainer, {}), /* @__PURE__ */ _jsx(Routes, {}), needRefresh ? /* @__PURE__ */ _jsx(ServiceWorkerToast, {\n              variant: \"needRefresh\",\n              updateServiceWorker\n            }) : offlineReady ? /* @__PURE__ */ _jsx(ServiceWorkerToast, {\n              variant: \"offlineReady\"\n            }) : null]\n          })\n        })\n      })\n    })\n  });\n};\n","start":1670465438318,"end":1670465438335,"order":"normal"},{"name":"vite:build-import-analysis","result":"import { __vitePreload } from \"\u0000vite/preload-helper\";import { ErrorBoundary } from \"@sentry/react\";\nimport React from \"react\";\nimport { HashRouter, useRoutes } from \"react-router-dom\";\nimport { useRegisterSW } from \"virtual:pwa-register/react\";\nimport { fromHost, fromIFrame } from \"@dxos/client\";\nimport { Config, Defaults, Dynamics } from \"@dxos/config\";\nimport { log } from \"@dxos/log\";\nimport { AppLayout, ErrorProvider, Fallback, FatalError, GenericFallback, ServiceWorkerToast, useTelemetry, translations, StatusIndicator } from \"@dxos/react-appkit\";\nimport { ClientProvider, useStatus } from \"@dxos/react-client\";\nimport { UiKitProvider } from \"@dxos/react-uikit\";\nimport { captureException } from \"@dxos/sentry\";\nimport { NavMenu } from \"./components\";\nimport haloTranslations from \"./translations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst LockPage = React.lazy(() => __vitePreload(() => import(\"./pages/LockPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst AppsPage = React.lazy(() => __vitePreload(() => import(\"./pages/AppsPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst ContactsPage = React.lazy(() => __vitePreload(() => import(\"./pages/ContactsPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst CreateIdentityPage = React.lazy(() => __vitePreload(() => import(\"./pages/CreateIdentityPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst DevicesPage = React.lazy(() => __vitePreload(() => import(\"./pages/DevicesPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst IdentityPage = React.lazy(() => __vitePreload(() => import(\"./pages/IdentityPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst JoinIdentityPage = React.lazy(() => __vitePreload(() => import(\"./pages/JoinIdentityPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst RecoverIdentityPage = React.lazy(() => __vitePreload(() => import(\"./pages/RecoverIdentityPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst RequireIdentity = React.lazy(() => __vitePreload(() => import(\"./pages/RequireIdentity\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst SpacePage = React.lazy(() => __vitePreload(() => import(\"./pages/SpacePage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nconst SpacesPage = React.lazy(() => __vitePreload(() => import(\"./pages/SpacesPage\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0));\nlog.config({\n  filter: ({}).LOG_FILTER ?? \"halo-app:debug,client:debug,warn\",\n  prefix: \"vscode://file/home/jdw/Code/dxos/dxos/\"\n});\nconst configProvider = async () => new Config(await Dynamics(), Defaults());\nconst StatusContainer = () => {\n  const status = useStatus();\n  return /* @__PURE__ */ _jsx(StatusIndicator, {\n    status\n  });\n};\nconst Routes = () => {\n  useTelemetry({\n    namespace: \"halo-app\"\n  });\n  return useRoutes([{\n    path: \"/\",\n    element: /* @__PURE__ */ _jsx(LockPage, {})\n  }, {\n    path: \"/identity/create\",\n    element: /* @__PURE__ */ _jsx(CreateIdentityPage, {})\n  }, {\n    path: \"/identity/recover\",\n    element: /* @__PURE__ */ _jsx(RecoverIdentityPage, {})\n  }, {\n    path: \"/identity/join\",\n    element: /* @__PURE__ */ _jsx(JoinIdentityPage, {})\n  }, {\n    path: \"/\",\n    element: /* @__PURE__ */ _jsx(RequireIdentity, {\n      redirect: \"/\"\n    }),\n    children: [{\n      path: \"/\",\n      element: /* @__PURE__ */ _jsx(AppLayout, {\n        menubarContent: /* @__PURE__ */ _jsx(NavMenu, {}),\n        suppressSpaceMenu: true,\n        manageProfilePath: \"/identity\"\n      }),\n      children: [{\n        path: \"/devices\",\n        element: /* @__PURE__ */ _jsx(DevicesPage, {})\n      }, {\n        path: \"/identity\",\n        element: /* @__PURE__ */ _jsx(IdentityPage, {})\n      }, {\n        path: \"/spaces\",\n        element: /* @__PURE__ */ _jsx(SpacesPage, {})\n      }, {\n        path: \"/contacts\",\n        element: /* @__PURE__ */ _jsx(ContactsPage, {})\n      }, {\n        path: \"/apps\",\n        element: /* @__PURE__ */ _jsx(AppsPage, {})\n      }, {\n        path: \"/spaces/:space\",\n        element: /* @__PURE__ */ _jsx(SpacePage, {})\n      }]\n    }]\n  }]);\n};\nexport const App = () => {\n  const {\n    offlineReady: [offlineReady, _setOfflineReady],\n    needRefresh: [needRefresh, _setNeedRefresh],\n    updateServiceWorker\n  } = useRegisterSW({\n    onRegisterError: (err) => {\n      captureException(err);\n      console.error(err);\n    }\n  });\n  return /* @__PURE__ */ _jsx(UiKitProvider, {\n    resourceExtensions: [translations, haloTranslations],\n    fallback: /* @__PURE__ */ _jsx(Fallback, {\n      message: \"Loading...\"\n    }),\n    appNs: \"halo\",\n    children: /* @__PURE__ */ _jsx(ErrorProvider, {\n      children: /* @__PURE__ */ _jsx(ErrorBoundary, {\n        fallback: ({\n          error\n        }) => /* @__PURE__ */ _jsx(FatalError, {\n          error\n        }),\n        children: /* @__PURE__ */ _jsx(ClientProvider, {\n          config: configProvider,\n          services: (config) => undefined === \"false\" ? fromHost(config) : fromIFrame(config),\n          fallback: /* @__PURE__ */ _jsx(GenericFallback, {}),\n          children: /* @__PURE__ */ _jsxs(HashRouter, {\n            children: [/* @__PURE__ */ _jsx(StatusContainer, {}), /* @__PURE__ */ _jsx(Routes, {}), needRefresh ? /* @__PURE__ */ _jsx(ServiceWorkerToast, {\n              variant: \"needRefresh\",\n              updateServiceWorker\n            }) : offlineReady ? /* @__PURE__ */ _jsx(ServiceWorkerToast, {\n              variant: \"offlineReady\"\n            }) : null]\n          })\n        })\n      })\n    })\n  });\n};\n","start":1670465438341,"end":1670465438354,"order":"normal"}]}
