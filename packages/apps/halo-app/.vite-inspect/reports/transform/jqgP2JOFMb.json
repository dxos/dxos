{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/md5.js","transforms":[{"name":"vite:load-fallback","result":";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","start":1670465468913,"end":1670465469070},{"name":"vite:react-babel","result":";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","start":1670465469070,"end":1670465469070,"order":"pre"},{"name":"commonjs","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __module as md5Module, exports as md5 } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/md5.js?commonjs-module\"\nimport { __require as require$$0 } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/core.js?commonjs-wrapped\";\n\nvar hasRequiredMd5;\n\nfunction requireMd5 () {\n\tif (hasRequiredMd5) return md5;\n\thasRequiredMd5 = 1;\n\t(function (module, exports) {\n\t\t;(function (root, factory) {\n\t\t\tif ('object' === \"object\") {\n\t\t\t\t// CommonJS\n\t\t\t\tmodule.exports = exports = factory(require$$0());\n\t\t\t}\n\t\t\telse if (typeof undefined === \"function\" && undefined.amd) {\n\t\t\t\t// AMD\n\t\t\t\tundefined([\"./core\"], factory);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Global (browser)\n\t\t\t\tfactory(root.CryptoJS);\n\t\t\t}\n\t\t}(commonjsHelpers.commonjsGlobal, function (CryptoJS) {\n\n\t\t\t(function (Math) {\n\t\t\t    // Shortcuts\n\t\t\t    var C = CryptoJS;\n\t\t\t    var C_lib = C.lib;\n\t\t\t    var WordArray = C_lib.WordArray;\n\t\t\t    var Hasher = C_lib.Hasher;\n\t\t\t    var C_algo = C.algo;\n\n\t\t\t    // Constants table\n\t\t\t    var T = [];\n\n\t\t\t    // Compute constants\n\t\t\t    (function () {\n\t\t\t        for (var i = 0; i < 64; i++) {\n\t\t\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t\t\t        }\n\t\t\t    }());\n\n\t\t\t    /**\n\t\t\t     * MD5 hash algorithm.\n\t\t\t     */\n\t\t\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t\t\t        _doReset: function () {\n\t\t\t            this._hash = new WordArray.init([\n\t\t\t                0x67452301, 0xefcdab89,\n\t\t\t                0x98badcfe, 0x10325476\n\t\t\t            ]);\n\t\t\t        },\n\n\t\t\t        _doProcessBlock: function (M, offset) {\n\t\t\t            // Swap endian\n\t\t\t            for (var i = 0; i < 16; i++) {\n\t\t\t                // Shortcuts\n\t\t\t                var offset_i = offset + i;\n\t\t\t                var M_offset_i = M[offset_i];\n\n\t\t\t                M[offset_i] = (\n\t\t\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t\t\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t\t\t                );\n\t\t\t            }\n\n\t\t\t            // Shortcuts\n\t\t\t            var H = this._hash.words;\n\n\t\t\t            var M_offset_0  = M[offset + 0];\n\t\t\t            var M_offset_1  = M[offset + 1];\n\t\t\t            var M_offset_2  = M[offset + 2];\n\t\t\t            var M_offset_3  = M[offset + 3];\n\t\t\t            var M_offset_4  = M[offset + 4];\n\t\t\t            var M_offset_5  = M[offset + 5];\n\t\t\t            var M_offset_6  = M[offset + 6];\n\t\t\t            var M_offset_7  = M[offset + 7];\n\t\t\t            var M_offset_8  = M[offset + 8];\n\t\t\t            var M_offset_9  = M[offset + 9];\n\t\t\t            var M_offset_10 = M[offset + 10];\n\t\t\t            var M_offset_11 = M[offset + 11];\n\t\t\t            var M_offset_12 = M[offset + 12];\n\t\t\t            var M_offset_13 = M[offset + 13];\n\t\t\t            var M_offset_14 = M[offset + 14];\n\t\t\t            var M_offset_15 = M[offset + 15];\n\n\t\t\t            // Working varialbes\n\t\t\t            var a = H[0];\n\t\t\t            var b = H[1];\n\t\t\t            var c = H[2];\n\t\t\t            var d = H[3];\n\n\t\t\t            // Computation\n\t\t\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t\t\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t\t\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t\t\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t\t\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t\t\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t\t\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t\t\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t\t\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t\t\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t\t\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t\t\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t\t\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t\t\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t\t\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t\t\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t\t\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t\t\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t\t\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t\t\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t\t\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t\t\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t\t\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t\t\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t\t\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t\t\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t\t\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t\t\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t\t\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t\t\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t\t\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t\t\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t\t\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t\t\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t\t\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t\t\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t\t\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t\t\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t\t\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t\t\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t\t\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t\t\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t\t\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t\t\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t\t\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t\t\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t\t\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t\t\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t\t\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t\t\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t\t\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t\t\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t\t\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t\t\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t\t\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t\t\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t\t\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t\t\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t\t\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t\t\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t\t\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t\t\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t\t\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t\t\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t\t\t            // Intermediate hash value\n\t\t\t            H[0] = (H[0] + a) | 0;\n\t\t\t            H[1] = (H[1] + b) | 0;\n\t\t\t            H[2] = (H[2] + c) | 0;\n\t\t\t            H[3] = (H[3] + d) | 0;\n\t\t\t        },\n\n\t\t\t        _doFinalize: function () {\n\t\t\t            // Shortcuts\n\t\t\t            var data = this._data;\n\t\t\t            var dataWords = data.words;\n\n\t\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t\t            var nBitsLeft = data.sigBytes * 8;\n\n\t\t\t            // Add padding\n\t\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t\t\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t\t\t            var nBitsTotalL = nBitsTotal;\n\t\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t\t\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t\t\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t\t\t            );\n\t\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t\t\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t\t\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t\t\t            );\n\n\t\t\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t\t\t            // Hash final blocks\n\t\t\t            this._process();\n\n\t\t\t            // Shortcuts\n\t\t\t            var hash = this._hash;\n\t\t\t            var H = hash.words;\n\n\t\t\t            // Swap endian\n\t\t\t            for (var i = 0; i < 4; i++) {\n\t\t\t                // Shortcut\n\t\t\t                var H_i = H[i];\n\n\t\t\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t\t\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t\t\t            }\n\n\t\t\t            // Return final computed hash\n\t\t\t            return hash;\n\t\t\t        },\n\n\t\t\t        clone: function () {\n\t\t\t            var clone = Hasher.clone.call(this);\n\t\t\t            clone._hash = this._hash.clone();\n\n\t\t\t            return clone;\n\t\t\t        }\n\t\t\t    });\n\n\t\t\t    function FF(a, b, c, d, x, s, t) {\n\t\t\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t\t    }\n\n\t\t\t    function GG(a, b, c, d, x, s, t) {\n\t\t\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t\t    }\n\n\t\t\t    function HH(a, b, c, d, x, s, t) {\n\t\t\t        var n = a + (b ^ c ^ d) + x + t;\n\t\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t\t    }\n\n\t\t\t    function II(a, b, c, d, x, s, t) {\n\t\t\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t\t    }\n\n\t\t\t    /**\n\t\t\t     * Shortcut function to the hasher's object interface.\n\t\t\t     *\n\t\t\t     * @param {WordArray|string} message The message to hash.\n\t\t\t     *\n\t\t\t     * @return {WordArray} The hash.\n\t\t\t     *\n\t\t\t     * @static\n\t\t\t     *\n\t\t\t     * @example\n\t\t\t     *\n\t\t\t     *     var hash = CryptoJS.MD5('message');\n\t\t\t     *     var hash = CryptoJS.MD5(wordArray);\n\t\t\t     */\n\t\t\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t\t\t    /**\n\t\t\t     * Shortcut function to the HMAC's object interface.\n\t\t\t     *\n\t\t\t     * @param {WordArray|string} message The message to hash.\n\t\t\t     * @param {WordArray|string} key The secret key.\n\t\t\t     *\n\t\t\t     * @return {WordArray} The HMAC.\n\t\t\t     *\n\t\t\t     * @static\n\t\t\t     *\n\t\t\t     * @example\n\t\t\t     *\n\t\t\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t\t\t     */\n\t\t\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t\t\t}(Math));\n\n\n\t\t\treturn CryptoJS.MD5;\n\n\t\t}));\n} (md5Module, md5));\n\treturn md5;\n}\n\nexport { requireMd5 as __require };","start":1670465469070,"end":1670465469073,"order":"normal"},{"name":"polyfill-node","result":"import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __module as md5Module, exports as md5 } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/md5.js?commonjs-module\"\nimport { __require as require$$0 } from \"\\u0000/home/jdw/Code/dxos/dxos/node_modules/.pnpm/crypto-js@3.3.0/node_modules/crypto-js/core.js?commonjs-wrapped\";\n\nvar hasRequiredMd5;\n\nfunction requireMd5 () {\n\tif (hasRequiredMd5) return md5;\n\thasRequiredMd5 = 1;\n\t(function (module, exports) {\n\t\t;(function (root, factory) {\n\t\t\tif ('object' === \"object\") {\n\t\t\t\t// CommonJS\n\t\t\t\tmodule.exports = exports = factory(require$$0());\n\t\t\t}\n\t\t\telse if (typeof undefined === \"function\" && undefined.amd) {\n\t\t\t\t// AMD\n\t\t\t\tundefined([\"./core\"], factory);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Global (browser)\n\t\t\t\tfactory(root.CryptoJS);\n\t\t\t}\n\t\t}(commonjsHelpers.commonjsGlobal, function (CryptoJS) {\n\n\t\t\t(function (Math) {\n\t\t\t    // Shortcuts\n\t\t\t    var C = CryptoJS;\n\t\t\t    var C_lib = C.lib;\n\t\t\t    var WordArray = C_lib.WordArray;\n\t\t\t    var Hasher = C_lib.Hasher;\n\t\t\t    var C_algo = C.algo;\n\n\t\t\t    // Constants table\n\t\t\t    var T = [];\n\n\t\t\t    // Compute constants\n\t\t\t    (function () {\n\t\t\t        for (var i = 0; i < 64; i++) {\n\t\t\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t\t\t        }\n\t\t\t    }());\n\n\t\t\t    /**\n\t\t\t     * MD5 hash algorithm.\n\t\t\t     */\n\t\t\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t\t\t        _doReset: function () {\n\t\t\t            this._hash = new WordArray.init([\n\t\t\t                0x67452301, 0xefcdab89,\n\t\t\t                0x98badcfe, 0x10325476\n\t\t\t            ]);\n\t\t\t        },\n\n\t\t\t        _doProcessBlock: function (M, offset) {\n\t\t\t            // Swap endian\n\t\t\t            for (var i = 0; i < 16; i++) {\n\t\t\t                // Shortcuts\n\t\t\t                var offset_i = offset + i;\n\t\t\t                var M_offset_i = M[offset_i];\n\n\t\t\t                M[offset_i] = (\n\t\t\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t\t\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t\t\t                );\n\t\t\t            }\n\n\t\t\t            // Shortcuts\n\t\t\t            var H = this._hash.words;\n\n\t\t\t            var M_offset_0  = M[offset + 0];\n\t\t\t            var M_offset_1  = M[offset + 1];\n\t\t\t            var M_offset_2  = M[offset + 2];\n\t\t\t            var M_offset_3  = M[offset + 3];\n\t\t\t            var M_offset_4  = M[offset + 4];\n\t\t\t            var M_offset_5  = M[offset + 5];\n\t\t\t            var M_offset_6  = M[offset + 6];\n\t\t\t            var M_offset_7  = M[offset + 7];\n\t\t\t            var M_offset_8  = M[offset + 8];\n\t\t\t            var M_offset_9  = M[offset + 9];\n\t\t\t            var M_offset_10 = M[offset + 10];\n\t\t\t            var M_offset_11 = M[offset + 11];\n\t\t\t            var M_offset_12 = M[offset + 12];\n\t\t\t            var M_offset_13 = M[offset + 13];\n\t\t\t            var M_offset_14 = M[offset + 14];\n\t\t\t            var M_offset_15 = M[offset + 15];\n\n\t\t\t            // Working varialbes\n\t\t\t            var a = H[0];\n\t\t\t            var b = H[1];\n\t\t\t            var c = H[2];\n\t\t\t            var d = H[3];\n\n\t\t\t            // Computation\n\t\t\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t\t\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t\t\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t\t\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t\t\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t\t\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t\t\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t\t\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t\t\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t\t\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t\t\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t\t\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t\t\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t\t\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t\t\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t\t\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t\t\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t\t\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t\t\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t\t\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t\t\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t\t\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t\t\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t\t\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t\t\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t\t\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t\t\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t\t\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t\t\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t\t\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t\t\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t\t\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t\t\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t\t\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t\t\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t\t\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t\t\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t\t\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t\t\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t\t\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t\t\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t\t\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t\t\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t\t\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t\t\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t\t\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t\t\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t\t\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t\t\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t\t\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t\t\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t\t\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t\t\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t\t\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t\t\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t\t\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t\t\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t\t\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t\t\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t\t\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t\t\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t\t\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t\t\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t\t\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t\t\t            // Intermediate hash value\n\t\t\t            H[0] = (H[0] + a) | 0;\n\t\t\t            H[1] = (H[1] + b) | 0;\n\t\t\t            H[2] = (H[2] + c) | 0;\n\t\t\t            H[3] = (H[3] + d) | 0;\n\t\t\t        },\n\n\t\t\t        _doFinalize: function () {\n\t\t\t            // Shortcuts\n\t\t\t            var data = this._data;\n\t\t\t            var dataWords = data.words;\n\n\t\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t\t            var nBitsLeft = data.sigBytes * 8;\n\n\t\t\t            // Add padding\n\t\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t\t\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t\t\t            var nBitsTotalL = nBitsTotal;\n\t\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t\t\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t\t\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t\t\t            );\n\t\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t\t\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t\t\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t\t\t            );\n\n\t\t\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t\t\t            // Hash final blocks\n\t\t\t            this._process();\n\n\t\t\t            // Shortcuts\n\t\t\t            var hash = this._hash;\n\t\t\t            var H = hash.words;\n\n\t\t\t            // Swap endian\n\t\t\t            for (var i = 0; i < 4; i++) {\n\t\t\t                // Shortcut\n\t\t\t                var H_i = H[i];\n\n\t\t\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t\t\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t\t\t            }\n\n\t\t\t            // Return final computed hash\n\t\t\t            return hash;\n\t\t\t        },\n\n\t\t\t        clone: function () {\n\t\t\t            var clone = Hasher.clone.call(this);\n\t\t\t            clone._hash = this._hash.clone();\n\n\t\t\t            return clone;\n\t\t\t        }\n\t\t\t    });\n\n\t\t\t    function FF(a, b, c, d, x, s, t) {\n\t\t\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t\t    }\n\n\t\t\t    function GG(a, b, c, d, x, s, t) {\n\t\t\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t\t    }\n\n\t\t\t    function HH(a, b, c, d, x, s, t) {\n\t\t\t        var n = a + (b ^ c ^ d) + x + t;\n\t\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t\t    }\n\n\t\t\t    function II(a, b, c, d, x, s, t) {\n\t\t\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t\t    }\n\n\t\t\t    /**\n\t\t\t     * Shortcut function to the hasher's object interface.\n\t\t\t     *\n\t\t\t     * @param {WordArray|string} message The message to hash.\n\t\t\t     *\n\t\t\t     * @return {WordArray} The hash.\n\t\t\t     *\n\t\t\t     * @static\n\t\t\t     *\n\t\t\t     * @example\n\t\t\t     *\n\t\t\t     *     var hash = CryptoJS.MD5('message');\n\t\t\t     *     var hash = CryptoJS.MD5(wordArray);\n\t\t\t     */\n\t\t\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t\t\t    /**\n\t\t\t     * Shortcut function to the HMAC's object interface.\n\t\t\t     *\n\t\t\t     * @param {WordArray|string} message The message to hash.\n\t\t\t     * @param {WordArray|string} key The secret key.\n\t\t\t     *\n\t\t\t     * @return {WordArray} The HMAC.\n\t\t\t     *\n\t\t\t     * @static\n\t\t\t     *\n\t\t\t     * @example\n\t\t\t     *\n\t\t\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t\t\t     */\n\t\t\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t\t\t}(Math));\n\n\n\t\t\treturn CryptoJS.MD5;\n\n\t\t}));\n} (md5Module, md5));\n\treturn md5;\n}\n\nexport { requireMd5 as __require };","start":1670465469073,"end":1670465469082,"order":"normal"}]}
