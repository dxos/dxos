{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/@radix-ui+react-toggle-group@1.0.1_biqbaboplfbrettd7655fr4n2y/node_modules/@radix-ui/react-toggle-group/dist/index.module.js","transforms":[{"name":"vite:load-fallback","result":"import $jFibJ$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport $jFibJ$react from \"react\";\nimport {createContextScope as $jFibJ$createContextScope} from \"@radix-ui/react-context\";\nimport {Primitive as $jFibJ$Primitive} from \"@radix-ui/react-primitive\";\nimport {createRovingFocusGroupScope as $jFibJ$createRovingFocusGroupScope, Root as $jFibJ$Root, Item as $jFibJ$Item} from \"@radix-ui/react-roving-focus\";\nimport {Toggle as $jFibJ$Toggle} from \"@radix-ui/react-toggle\";\nimport {useControllableState as $jFibJ$useControllableState} from \"@radix-ui/react-use-controllable-state\";\nimport {useDirection as $jFibJ$useDirection} from \"@radix-ui/react-direction\";\n\n\n\n\n\n\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * ToggleGroup\n * -----------------------------------------------------------------------------------------------*/ const $6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME = 'ToggleGroup';\nconst [$6c1fd9e6a8969628$var$createToggleGroupContext, $6c1fd9e6a8969628$export$d1c7c4bcd9f26dd4] = $jFibJ$createContextScope($6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME, [\n    $jFibJ$createRovingFocusGroupScope\n]);\nconst $6c1fd9e6a8969628$var$useRovingFocusGroupScope = $jFibJ$createRovingFocusGroupScope();\nconst $6c1fd9e6a8969628$export$af3ec21f6cfb5e30 = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { type: type , ...toggleGroupProps } = props;\n    if (type === 'single') {\n        const singleProps = toggleGroupProps;\n        return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupImplSingle, $jFibJ$babelruntimehelpersesmextends({}, singleProps, {\n            ref: forwardedRef\n        }));\n    }\n    if (type === 'multiple') {\n        const multipleProps = toggleGroupProps;\n        return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupImplMultiple, $jFibJ$babelruntimehelpersesmextends({}, multipleProps, {\n            ref: forwardedRef\n        }));\n    }\n    throw new Error(`Missing prop \\`type\\` expected on \\`${$6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME}\\``);\n});\n/*#__PURE__*/ Object.assign($6c1fd9e6a8969628$export$af3ec21f6cfb5e30, {\n    displayName: $6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const [$6c1fd9e6a8969628$var$ToggleGroupValueProvider, $6c1fd9e6a8969628$var$useToggleGroupValueContext] = $6c1fd9e6a8969628$var$createToggleGroupContext($6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME);\nconst $6c1fd9e6a8969628$var$ToggleGroupImplSingle = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { value: valueProp , defaultValue: defaultValue , onValueChange: onValueChange = ()=>{} , ...toggleGroupSingleProps } = props;\n    const [value, setValue] = $jFibJ$useControllableState({\n        prop: valueProp,\n        defaultProp: defaultValue,\n        onChange: onValueChange\n    });\n    return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupValueProvider, {\n        scope: props.__scopeToggleGroup,\n        type: \"single\",\n        value: value ? [\n            value\n        ] : [],\n        onItemActivate: setValue,\n        onItemDeactivate: $jFibJ$react.useCallback(()=>setValue('')\n        , [\n            setValue\n        ])\n    }, /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupImpl, $jFibJ$babelruntimehelpersesmextends({}, toggleGroupSingleProps, {\n        ref: forwardedRef\n    })));\n});\nconst $6c1fd9e6a8969628$var$ToggleGroupImplMultiple = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { value: valueProp , defaultValue: defaultValue , onValueChange: onValueChange = ()=>{} , ...toggleGroupMultipleProps } = props;\n    const [value1 = [], setValue] = $jFibJ$useControllableState({\n        prop: valueProp,\n        defaultProp: defaultValue,\n        onChange: onValueChange\n    });\n    const handleButtonActivate = $jFibJ$react.useCallback((itemValue)=>setValue((prevValue = [])=>[\n                ...prevValue,\n                itemValue\n            ]\n        )\n    , [\n        setValue\n    ]);\n    const handleButtonDeactivate = $jFibJ$react.useCallback((itemValue)=>setValue((prevValue = [])=>prevValue.filter((value)=>value !== itemValue\n            )\n        )\n    , [\n        setValue\n    ]);\n    return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupValueProvider, {\n        scope: props.__scopeToggleGroup,\n        type: \"multiple\",\n        value: value1,\n        onItemActivate: handleButtonActivate,\n        onItemDeactivate: handleButtonDeactivate\n    }, /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupImpl, $jFibJ$babelruntimehelpersesmextends({}, toggleGroupMultipleProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($6c1fd9e6a8969628$export$af3ec21f6cfb5e30, {\n    displayName: $6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const [$6c1fd9e6a8969628$var$ToggleGroupContext, $6c1fd9e6a8969628$var$useToggleGroupContext] = $6c1fd9e6a8969628$var$createToggleGroupContext($6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME);\nconst $6c1fd9e6a8969628$var$ToggleGroupImpl = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { __scopeToggleGroup: __scopeToggleGroup , disabled: disabled = false , rovingFocus: rovingFocus = true , orientation: orientation , dir: dir , loop: loop = true , ...toggleGroupProps } = props;\n    const rovingFocusGroupScope = $6c1fd9e6a8969628$var$useRovingFocusGroupScope(__scopeToggleGroup);\n    const direction = $jFibJ$useDirection(dir);\n    const commonProps = {\n        role: 'group',\n        dir: direction,\n        ...toggleGroupProps\n    };\n    return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupContext, {\n        scope: __scopeToggleGroup,\n        rovingFocus: rovingFocus,\n        disabled: disabled\n    }, rovingFocus ? /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Root, $jFibJ$babelruntimehelpersesmextends({\n        asChild: true\n    }, rovingFocusGroupScope, {\n        orientation: orientation,\n        dir: direction,\n        loop: loop\n    }), /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Primitive.div, $jFibJ$babelruntimehelpersesmextends({}, commonProps, {\n        ref: forwardedRef\n    }))) : /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Primitive.div, $jFibJ$babelruntimehelpersesmextends({}, commonProps, {\n        ref: forwardedRef\n    })));\n});\n/* -------------------------------------------------------------------------------------------------\n * ToggleGroupItem\n * -----------------------------------------------------------------------------------------------*/ const $6c1fd9e6a8969628$var$ITEM_NAME = 'ToggleGroupItem';\nconst $6c1fd9e6a8969628$export$b453109e13abe10b = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const valueContext = $6c1fd9e6a8969628$var$useToggleGroupValueContext($6c1fd9e6a8969628$var$ITEM_NAME, props.__scopeToggleGroup);\n    const context = $6c1fd9e6a8969628$var$useToggleGroupContext($6c1fd9e6a8969628$var$ITEM_NAME, props.__scopeToggleGroup);\n    const rovingFocusGroupScope = $6c1fd9e6a8969628$var$useRovingFocusGroupScope(props.__scopeToggleGroup);\n    const pressed = valueContext.value.includes(props.value);\n    const disabled = context.disabled || props.disabled;\n    const commonProps = {\n        ...props,\n        pressed: pressed,\n        disabled: disabled\n    };\n    const ref = $jFibJ$react.useRef(null);\n    return context.rovingFocus ? /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Item, $jFibJ$babelruntimehelpersesmextends({\n        asChild: true\n    }, rovingFocusGroupScope, {\n        focusable: !disabled,\n        active: pressed,\n        ref: ref\n    }), /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupItemImpl, $jFibJ$babelruntimehelpersesmextends({}, commonProps, {\n        ref: forwardedRef\n    }))) : /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupItemImpl, $jFibJ$babelruntimehelpersesmextends({}, commonProps, {\n        ref: forwardedRef\n    }));\n});\n/*#__PURE__*/ Object.assign($6c1fd9e6a8969628$export$b453109e13abe10b, {\n    displayName: $6c1fd9e6a8969628$var$ITEM_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $6c1fd9e6a8969628$var$ToggleGroupItemImpl = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { __scopeToggleGroup: __scopeToggleGroup , value: value , ...itemProps } = props;\n    const valueContext = $6c1fd9e6a8969628$var$useToggleGroupValueContext($6c1fd9e6a8969628$var$ITEM_NAME, __scopeToggleGroup);\n    const singleProps = {\n        role: 'radio',\n        'aria-checked': props.pressed,\n        'aria-pressed': undefined\n    };\n    const typeProps = valueContext.type === 'single' ? singleProps : undefined;\n    return /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Toggle, $jFibJ$babelruntimehelpersesmextends({}, typeProps, itemProps, {\n        ref: forwardedRef,\n        onPressedChange: (pressed)=>{\n            if (pressed) valueContext.onItemActivate(value);\n            else valueContext.onItemDeactivate(value);\n        }\n    }));\n});\n/* -----------------------------------------------------------------------------------------------*/ const $6c1fd9e6a8969628$export$be92b6f5f03c0fe9 = $6c1fd9e6a8969628$export$af3ec21f6cfb5e30;\nconst $6c1fd9e6a8969628$export$6d08773d2e66f8f2 = $6c1fd9e6a8969628$export$b453109e13abe10b;\n\n\n\n\nexport {$6c1fd9e6a8969628$export$d1c7c4bcd9f26dd4 as createToggleGroupScope, $6c1fd9e6a8969628$export$af3ec21f6cfb5e30 as ToggleGroup, $6c1fd9e6a8969628$export$b453109e13abe10b as ToggleGroupItem, $6c1fd9e6a8969628$export$be92b6f5f03c0fe9 as Root, $6c1fd9e6a8969628$export$6d08773d2e66f8f2 as Item};\n//# sourceMappingURL=index.module.js.map\n","start":1670465466488,"end":1670465466592},{"name":"vite:react-babel","result":"import $jFibJ$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport $jFibJ$react from \"react\";\nimport {createContextScope as $jFibJ$createContextScope} from \"@radix-ui/react-context\";\nimport {Primitive as $jFibJ$Primitive} from \"@radix-ui/react-primitive\";\nimport {createRovingFocusGroupScope as $jFibJ$createRovingFocusGroupScope, Root as $jFibJ$Root, Item as $jFibJ$Item} from \"@radix-ui/react-roving-focus\";\nimport {Toggle as $jFibJ$Toggle} from \"@radix-ui/react-toggle\";\nimport {useControllableState as $jFibJ$useControllableState} from \"@radix-ui/react-use-controllable-state\";\nimport {useDirection as $jFibJ$useDirection} from \"@radix-ui/react-direction\";\n\n\n\n\n\n\n\n\n\n\n/* -------------------------------------------------------------------------------------------------\n * ToggleGroup\n * -----------------------------------------------------------------------------------------------*/ const $6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME = 'ToggleGroup';\nconst [$6c1fd9e6a8969628$var$createToggleGroupContext, $6c1fd9e6a8969628$export$d1c7c4bcd9f26dd4] = $jFibJ$createContextScope($6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME, [\n    $jFibJ$createRovingFocusGroupScope\n]);\nconst $6c1fd9e6a8969628$var$useRovingFocusGroupScope = $jFibJ$createRovingFocusGroupScope();\nconst $6c1fd9e6a8969628$export$af3ec21f6cfb5e30 = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { type: type , ...toggleGroupProps } = props;\n    if (type === 'single') {\n        const singleProps = toggleGroupProps;\n        return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupImplSingle, $jFibJ$babelruntimehelpersesmextends({}, singleProps, {\n            ref: forwardedRef\n        }));\n    }\n    if (type === 'multiple') {\n        const multipleProps = toggleGroupProps;\n        return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupImplMultiple, $jFibJ$babelruntimehelpersesmextends({}, multipleProps, {\n            ref: forwardedRef\n        }));\n    }\n    throw new Error(`Missing prop \\`type\\` expected on \\`${$6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME}\\``);\n});\n/*#__PURE__*/ Object.assign($6c1fd9e6a8969628$export$af3ec21f6cfb5e30, {\n    displayName: $6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const [$6c1fd9e6a8969628$var$ToggleGroupValueProvider, $6c1fd9e6a8969628$var$useToggleGroupValueContext] = $6c1fd9e6a8969628$var$createToggleGroupContext($6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME);\nconst $6c1fd9e6a8969628$var$ToggleGroupImplSingle = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { value: valueProp , defaultValue: defaultValue , onValueChange: onValueChange = ()=>{} , ...toggleGroupSingleProps } = props;\n    const [value, setValue] = $jFibJ$useControllableState({\n        prop: valueProp,\n        defaultProp: defaultValue,\n        onChange: onValueChange\n    });\n    return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupValueProvider, {\n        scope: props.__scopeToggleGroup,\n        type: \"single\",\n        value: value ? [\n            value\n        ] : [],\n        onItemActivate: setValue,\n        onItemDeactivate: $jFibJ$react.useCallback(()=>setValue('')\n        , [\n            setValue\n        ])\n    }, /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupImpl, $jFibJ$babelruntimehelpersesmextends({}, toggleGroupSingleProps, {\n        ref: forwardedRef\n    })));\n});\nconst $6c1fd9e6a8969628$var$ToggleGroupImplMultiple = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { value: valueProp , defaultValue: defaultValue , onValueChange: onValueChange = ()=>{} , ...toggleGroupMultipleProps } = props;\n    const [value1 = [], setValue] = $jFibJ$useControllableState({\n        prop: valueProp,\n        defaultProp: defaultValue,\n        onChange: onValueChange\n    });\n    const handleButtonActivate = $jFibJ$react.useCallback((itemValue)=>setValue((prevValue = [])=>[\n                ...prevValue,\n                itemValue\n            ]\n        )\n    , [\n        setValue\n    ]);\n    const handleButtonDeactivate = $jFibJ$react.useCallback((itemValue)=>setValue((prevValue = [])=>prevValue.filter((value)=>value !== itemValue\n            )\n        )\n    , [\n        setValue\n    ]);\n    return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupValueProvider, {\n        scope: props.__scopeToggleGroup,\n        type: \"multiple\",\n        value: value1,\n        onItemActivate: handleButtonActivate,\n        onItemDeactivate: handleButtonDeactivate\n    }, /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupImpl, $jFibJ$babelruntimehelpersesmextends({}, toggleGroupMultipleProps, {\n        ref: forwardedRef\n    })));\n});\n/*#__PURE__*/ Object.assign($6c1fd9e6a8969628$export$af3ec21f6cfb5e30, {\n    displayName: $6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const [$6c1fd9e6a8969628$var$ToggleGroupContext, $6c1fd9e6a8969628$var$useToggleGroupContext] = $6c1fd9e6a8969628$var$createToggleGroupContext($6c1fd9e6a8969628$var$TOGGLE_GROUP_NAME);\nconst $6c1fd9e6a8969628$var$ToggleGroupImpl = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { __scopeToggleGroup: __scopeToggleGroup , disabled: disabled = false , rovingFocus: rovingFocus = true , orientation: orientation , dir: dir , loop: loop = true , ...toggleGroupProps } = props;\n    const rovingFocusGroupScope = $6c1fd9e6a8969628$var$useRovingFocusGroupScope(__scopeToggleGroup);\n    const direction = $jFibJ$useDirection(dir);\n    const commonProps = {\n        role: 'group',\n        dir: direction,\n        ...toggleGroupProps\n    };\n    return /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupContext, {\n        scope: __scopeToggleGroup,\n        rovingFocus: rovingFocus,\n        disabled: disabled\n    }, rovingFocus ? /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Root, $jFibJ$babelruntimehelpersesmextends({\n        asChild: true\n    }, rovingFocusGroupScope, {\n        orientation: orientation,\n        dir: direction,\n        loop: loop\n    }), /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Primitive.div, $jFibJ$babelruntimehelpersesmextends({}, commonProps, {\n        ref: forwardedRef\n    }))) : /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Primitive.div, $jFibJ$babelruntimehelpersesmextends({}, commonProps, {\n        ref: forwardedRef\n    })));\n});\n/* -------------------------------------------------------------------------------------------------\n * ToggleGroupItem\n * -----------------------------------------------------------------------------------------------*/ const $6c1fd9e6a8969628$var$ITEM_NAME = 'ToggleGroupItem';\nconst $6c1fd9e6a8969628$export$b453109e13abe10b = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const valueContext = $6c1fd9e6a8969628$var$useToggleGroupValueContext($6c1fd9e6a8969628$var$ITEM_NAME, props.__scopeToggleGroup);\n    const context = $6c1fd9e6a8969628$var$useToggleGroupContext($6c1fd9e6a8969628$var$ITEM_NAME, props.__scopeToggleGroup);\n    const rovingFocusGroupScope = $6c1fd9e6a8969628$var$useRovingFocusGroupScope(props.__scopeToggleGroup);\n    const pressed = valueContext.value.includes(props.value);\n    const disabled = context.disabled || props.disabled;\n    const commonProps = {\n        ...props,\n        pressed: pressed,\n        disabled: disabled\n    };\n    const ref = $jFibJ$react.useRef(null);\n    return context.rovingFocus ? /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Item, $jFibJ$babelruntimehelpersesmextends({\n        asChild: true\n    }, rovingFocusGroupScope, {\n        focusable: !disabled,\n        active: pressed,\n        ref: ref\n    }), /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupItemImpl, $jFibJ$babelruntimehelpersesmextends({}, commonProps, {\n        ref: forwardedRef\n    }))) : /*#__PURE__*/ $jFibJ$react.createElement($6c1fd9e6a8969628$var$ToggleGroupItemImpl, $jFibJ$babelruntimehelpersesmextends({}, commonProps, {\n        ref: forwardedRef\n    }));\n});\n/*#__PURE__*/ Object.assign($6c1fd9e6a8969628$export$b453109e13abe10b, {\n    displayName: $6c1fd9e6a8969628$var$ITEM_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ const $6c1fd9e6a8969628$var$ToggleGroupItemImpl = /*#__PURE__*/ $jFibJ$react.forwardRef((props, forwardedRef)=>{\n    const { __scopeToggleGroup: __scopeToggleGroup , value: value , ...itemProps } = props;\n    const valueContext = $6c1fd9e6a8969628$var$useToggleGroupValueContext($6c1fd9e6a8969628$var$ITEM_NAME, __scopeToggleGroup);\n    const singleProps = {\n        role: 'radio',\n        'aria-checked': props.pressed,\n        'aria-pressed': undefined\n    };\n    const typeProps = valueContext.type === 'single' ? singleProps : undefined;\n    return /*#__PURE__*/ $jFibJ$react.createElement($jFibJ$Toggle, $jFibJ$babelruntimehelpersesmextends({}, typeProps, itemProps, {\n        ref: forwardedRef,\n        onPressedChange: (pressed)=>{\n            if (pressed) valueContext.onItemActivate(value);\n            else valueContext.onItemDeactivate(value);\n        }\n    }));\n});\n/* -----------------------------------------------------------------------------------------------*/ const $6c1fd9e6a8969628$export$be92b6f5f03c0fe9 = $6c1fd9e6a8969628$export$af3ec21f6cfb5e30;\nconst $6c1fd9e6a8969628$export$6d08773d2e66f8f2 = $6c1fd9e6a8969628$export$b453109e13abe10b;\n\n\n\n\nexport {$6c1fd9e6a8969628$export$d1c7c4bcd9f26dd4 as createToggleGroupScope, $6c1fd9e6a8969628$export$af3ec21f6cfb5e30 as ToggleGroup, $6c1fd9e6a8969628$export$b453109e13abe10b as ToggleGroupItem, $6c1fd9e6a8969628$export$be92b6f5f03c0fe9 as Root, $6c1fd9e6a8969628$export$6d08773d2e66f8f2 as Item};\n//# sourceMappingURL=index.module.js.map\n","start":1670465466592,"end":1670465466592,"order":"pre"}]}
