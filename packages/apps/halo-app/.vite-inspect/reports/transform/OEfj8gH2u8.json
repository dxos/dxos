{"resolvedId":"/home/jdw/Code/dxos/dxos/node_modules/.pnpm/rci@0.0.3_biqbaboplfbrettd7655fr4n2y/node_modules/rci/dist/esm/index.js","transforms":[{"name":"vite:load-fallback","result":"import { useCodeInput } from 'use-code-input';\nexport { useCodeInput } from 'use-code-input';\nimport { jsx, Fragment, jsxs } from 'react/jsx-runtime';\nimport React, { useContext } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar LengthContext = React.createContext(6);\nvar useLengthContext = function () { return useContext(LengthContext); };\nvar SelectionContext = React.createContext(null);\nvar useSelectionContext = function () { return useContext(SelectionContext); };\nvar Context = function (props) { return (jsx(LengthContext.Provider, __assign({ value: props.length }, { children: jsx(SelectionContext.Provider, __assign({ value: props.selection }, { children: props.children }), void 0) }), void 0)); };\n\nvar getSegmentState = function (index, _a) {\n    var start = _a[0], end = _a[1];\n    if (typeof start !== 'number')\n        return null;\n    if (typeof end !== 'number')\n        return null;\n    if (start === end && start === index)\n        return 'cursor';\n    if (index >= start && index < end)\n        return 'selected';\n    return null;\n};\nvar getSegmentPosition = function (index, _a) {\n    var start = _a[0], end = _a[1];\n    return index < start ? -1 : index >= end ? 1 : 0;\n};\nvar getSegmentArray = function (size, selection) {\n    var array = Array(size).fill(null);\n    return array.map(function (_, index) { return ({\n        state: getSegmentState(index, selection),\n        position: getSegmentPosition(index, selection)\n    }); });\n};\n\nvar Root = function (props) { return (jsx(\"div\", __assign({}, props, { \"data-code-input\": 'root' }), void 0)); };\nvar Absolute = function (props) { return (jsx(\"div\", __assign({}, props, { \"data-code-input\": 'absolute', style: __assign({ position: 'absolute', left: 0, right: 0, top: 0, bottom: 0, display: 'flex', justifyContent: 'space-between' }, props.style) }), void 0)); };\nvar handleScroll = function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.currentTarget.scrollTop = 0;\n    event.currentTarget.scrollLeft = 0;\n};\nvar InputScrollWrapper = function (props) {\n    return (jsx(\"div\", __assign({}, props, { \"data-code-input\": 'input-scroll-wrapper', onScroll: handleScroll, style: __assign(__assign({}, props.style), { height: '100%', overflow: 'hidden' }) }), void 0));\n};\nvar Input = React.forwardRef(function (props, ref) {\n    var _a;\n    var length = useLengthContext();\n    return (jsx(\"input\", __assign({}, props, { width: undefined, \"data-code-input\": 'input', minLength: length, maxLength: length, ref: ref, style: __assign(__assign({}, props.style), { font: 'inherit', letterSpacing: 'inherit', textIndent: 'inherit', background: 'transparent', appearance: 'none', display: 'block', width: (_a = props.width) !== null && _a !== void 0 ? _a : '200%', padding: '0', margin: '0', border: '0 solid transparent', outline: 'none' }) }), void 0));\n});\nvar SegmentRenderer = function (props) {\n    var selection = useSelectionContext();\n    var length = useLengthContext();\n    // TODO: fix non-null assertion\n    var _selection = selection;\n    var segmentArray = getSegmentArray(length, _selection);\n    var content = segmentArray.map(function (_a, index) {\n        var state = _a.state, position = _a.position;\n        return props.children({ index: index, state: state, position: position, selection: _selection });\n    });\n    return jsx(Fragment, { children: content }, void 0);\n};\n\nvar RCI = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Root: Root,\n    Absolute: Absolute,\n    InputScrollWrapper: InputScrollWrapper,\n    Input: Input,\n    SegmentRenderer: SegmentRenderer,\n    Context: Context\n});\n\nvar CodeInput = function (_a) {\n    var renderSegment = _a.renderSegment, _b = _a.length, length = _b === void 0 ? 6 : _b, _c = _a.fontFamily, fontFamily = _c === void 0 ? \"'SF Mono', SFMono-Regular, ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono', 'Roboto Mono', monospace\" : _c, _d = _a.fontSize, fontSize = _d === void 0 ? '2rem' : _d, _e = _a.padding, padding = _e === void 0 ? '0.25rem' : _e, _f = _a.paddingY, paddingY = _f === void 0 ? padding : _f, _g = _a.paddingX, paddingX = _g === void 0 ? padding : _g, _h = _a.spacing, spacing = _h === void 0 ? '0.5rem' : _h, _j = _a.characterWidth, characterWidth = _j === void 0 ? '1ch' : _j, style = _a.style, className = _a.className, inputClassName = _a.inputClassName, inputStyle = _a.inputStyle, _k = _a.segmentWidth, segmentWidth = _k === void 0 ? \"calc(\".concat(characterWidth, \" + \").concat(paddingX, \" * 2)\") : _k, _l = _a.inputWidth, inputWidth = _l === void 0 ? \"calc(100% + \".concat(segmentWidth, \" + \").concat(spacing, \")\") : _l, inputRef = _a.inputRef, rest = __rest(_a, [\"renderSegment\", \"length\", \"fontFamily\", \"fontSize\", \"padding\", \"paddingY\", \"paddingX\", \"spacing\", \"characterWidth\", \"style\", \"className\", \"inputClassName\", \"inputStyle\", \"segmentWidth\", \"inputWidth\", \"inputRef\"]);\n    var selection = useCodeInput(inputRef);\n    var rootStyle = __assign(__assign({}, style), { position: 'relative', width: \"calc(\".concat(segmentWidth, \" * \").concat(length, \" + \").concat(spacing, \" * \").concat(length - 1, \")\"), fontFamily: fontFamily, fontSize: fontSize, textIndent: paddingX, letterSpacing: \"calc(\".concat(paddingX, \" * 2 + \").concat(spacing, \")\"), lineHeight: \"calc(\".concat(fontSize, \" + \").concat(paddingY, \" * 2)\"), zIndex: 0 });\n    var inputProps = {\n        className: inputClassName,\n        style: inputStyle,\n        ref: inputRef\n    };\n    return (jsx(Context, __assign({ length: length, selection: selection }, { children: jsxs(Root, __assign({ style: rootStyle, className: className }, { children: [jsx(Absolute, __assign({ \"aria-hidden\": true, style: { zIndex: -1 } }, { children: jsx(SegmentRenderer, { children: renderSegment }, void 0) }), void 0), jsx(InputScrollWrapper, __assign({ onMouseDownCapture: function (event) {\n                        var _a, _b;\n                        if (event.button !== 0 || event.ctrlKey)\n                            return;\n                        if (event.shiftKey || event.metaKey)\n                            return;\n                        if (!(event.currentTarget instanceof HTMLElement))\n                            return;\n                        if (!(inputRef.current instanceof HTMLInputElement))\n                            return;\n                        event.stopPropagation();\n                        event.preventDefault();\n                        var _c = event.currentTarget.getBoundingClientRect(), left = _c.left, width = _c.width;\n                        var eventX = event.clientX - left;\n                        var index = Math.floor((eventX / width) * length);\n                        if (document.activeElement !== inputRef.current) {\n                            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n                        }\n                        (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.setSelectionRange(index, index + 1);\n                    }, onDoubleClickCapture: function () {\n                        var _a;\n                        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.setSelectionRange(0, length);\n                    } }, { children: jsx(Input, __assign({ width: inputWidth }, rest, inputProps), void 0) }), void 0)] }), void 0) }), void 0));\n};\n\n/** paddingX must be a valid [CSS length](https://developer.mozilla.org/en-US/docs/Web/CSS/length). */\nvar getSegmentCssWidth = function (paddingX) {\n    return \"calc(1ch + \".concat(paddingX, \" * 2)\");\n};\n\nexport { CodeInput, RCI, getSegmentCssWidth, useLengthContext, useSelectionContext };\n//# sourceMappingURL=index.js.map\n","start":1670465466558,"end":1670465466620},{"name":"vite:react-babel","result":"import { useCodeInput } from 'use-code-input';\nexport { useCodeInput } from 'use-code-input';\nimport { jsx, Fragment, jsxs } from 'react/jsx-runtime';\nimport React, { useContext } from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar LengthContext = React.createContext(6);\nvar useLengthContext = function () { return useContext(LengthContext); };\nvar SelectionContext = React.createContext(null);\nvar useSelectionContext = function () { return useContext(SelectionContext); };\nvar Context = function (props) { return (jsx(LengthContext.Provider, __assign({ value: props.length }, { children: jsx(SelectionContext.Provider, __assign({ value: props.selection }, { children: props.children }), void 0) }), void 0)); };\n\nvar getSegmentState = function (index, _a) {\n    var start = _a[0], end = _a[1];\n    if (typeof start !== 'number')\n        return null;\n    if (typeof end !== 'number')\n        return null;\n    if (start === end && start === index)\n        return 'cursor';\n    if (index >= start && index < end)\n        return 'selected';\n    return null;\n};\nvar getSegmentPosition = function (index, _a) {\n    var start = _a[0], end = _a[1];\n    return index < start ? -1 : index >= end ? 1 : 0;\n};\nvar getSegmentArray = function (size, selection) {\n    var array = Array(size).fill(null);\n    return array.map(function (_, index) { return ({\n        state: getSegmentState(index, selection),\n        position: getSegmentPosition(index, selection)\n    }); });\n};\n\nvar Root = function (props) { return (jsx(\"div\", __assign({}, props, { \"data-code-input\": 'root' }), void 0)); };\nvar Absolute = function (props) { return (jsx(\"div\", __assign({}, props, { \"data-code-input\": 'absolute', style: __assign({ position: 'absolute', left: 0, right: 0, top: 0, bottom: 0, display: 'flex', justifyContent: 'space-between' }, props.style) }), void 0)); };\nvar handleScroll = function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.currentTarget.scrollTop = 0;\n    event.currentTarget.scrollLeft = 0;\n};\nvar InputScrollWrapper = function (props) {\n    return (jsx(\"div\", __assign({}, props, { \"data-code-input\": 'input-scroll-wrapper', onScroll: handleScroll, style: __assign(__assign({}, props.style), { height: '100%', overflow: 'hidden' }) }), void 0));\n};\nvar Input = React.forwardRef(function (props, ref) {\n    var _a;\n    var length = useLengthContext();\n    return (jsx(\"input\", __assign({}, props, { width: undefined, \"data-code-input\": 'input', minLength: length, maxLength: length, ref: ref, style: __assign(__assign({}, props.style), { font: 'inherit', letterSpacing: 'inherit', textIndent: 'inherit', background: 'transparent', appearance: 'none', display: 'block', width: (_a = props.width) !== null && _a !== void 0 ? _a : '200%', padding: '0', margin: '0', border: '0 solid transparent', outline: 'none' }) }), void 0));\n});\nvar SegmentRenderer = function (props) {\n    var selection = useSelectionContext();\n    var length = useLengthContext();\n    // TODO: fix non-null assertion\n    var _selection = selection;\n    var segmentArray = getSegmentArray(length, _selection);\n    var content = segmentArray.map(function (_a, index) {\n        var state = _a.state, position = _a.position;\n        return props.children({ index: index, state: state, position: position, selection: _selection });\n    });\n    return jsx(Fragment, { children: content }, void 0);\n};\n\nvar RCI = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Root: Root,\n    Absolute: Absolute,\n    InputScrollWrapper: InputScrollWrapper,\n    Input: Input,\n    SegmentRenderer: SegmentRenderer,\n    Context: Context\n});\n\nvar CodeInput = function (_a) {\n    var renderSegment = _a.renderSegment, _b = _a.length, length = _b === void 0 ? 6 : _b, _c = _a.fontFamily, fontFamily = _c === void 0 ? \"'SF Mono', SFMono-Regular, ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono', 'Roboto Mono', monospace\" : _c, _d = _a.fontSize, fontSize = _d === void 0 ? '2rem' : _d, _e = _a.padding, padding = _e === void 0 ? '0.25rem' : _e, _f = _a.paddingY, paddingY = _f === void 0 ? padding : _f, _g = _a.paddingX, paddingX = _g === void 0 ? padding : _g, _h = _a.spacing, spacing = _h === void 0 ? '0.5rem' : _h, _j = _a.characterWidth, characterWidth = _j === void 0 ? '1ch' : _j, style = _a.style, className = _a.className, inputClassName = _a.inputClassName, inputStyle = _a.inputStyle, _k = _a.segmentWidth, segmentWidth = _k === void 0 ? \"calc(\".concat(characterWidth, \" + \").concat(paddingX, \" * 2)\") : _k, _l = _a.inputWidth, inputWidth = _l === void 0 ? \"calc(100% + \".concat(segmentWidth, \" + \").concat(spacing, \")\") : _l, inputRef = _a.inputRef, rest = __rest(_a, [\"renderSegment\", \"length\", \"fontFamily\", \"fontSize\", \"padding\", \"paddingY\", \"paddingX\", \"spacing\", \"characterWidth\", \"style\", \"className\", \"inputClassName\", \"inputStyle\", \"segmentWidth\", \"inputWidth\", \"inputRef\"]);\n    var selection = useCodeInput(inputRef);\n    var rootStyle = __assign(__assign({}, style), { position: 'relative', width: \"calc(\".concat(segmentWidth, \" * \").concat(length, \" + \").concat(spacing, \" * \").concat(length - 1, \")\"), fontFamily: fontFamily, fontSize: fontSize, textIndent: paddingX, letterSpacing: \"calc(\".concat(paddingX, \" * 2 + \").concat(spacing, \")\"), lineHeight: \"calc(\".concat(fontSize, \" + \").concat(paddingY, \" * 2)\"), zIndex: 0 });\n    var inputProps = {\n        className: inputClassName,\n        style: inputStyle,\n        ref: inputRef\n    };\n    return (jsx(Context, __assign({ length: length, selection: selection }, { children: jsxs(Root, __assign({ style: rootStyle, className: className }, { children: [jsx(Absolute, __assign({ \"aria-hidden\": true, style: { zIndex: -1 } }, { children: jsx(SegmentRenderer, { children: renderSegment }, void 0) }), void 0), jsx(InputScrollWrapper, __assign({ onMouseDownCapture: function (event) {\n                        var _a, _b;\n                        if (event.button !== 0 || event.ctrlKey)\n                            return;\n                        if (event.shiftKey || event.metaKey)\n                            return;\n                        if (!(event.currentTarget instanceof HTMLElement))\n                            return;\n                        if (!(inputRef.current instanceof HTMLInputElement))\n                            return;\n                        event.stopPropagation();\n                        event.preventDefault();\n                        var _c = event.currentTarget.getBoundingClientRect(), left = _c.left, width = _c.width;\n                        var eventX = event.clientX - left;\n                        var index = Math.floor((eventX / width) * length);\n                        if (document.activeElement !== inputRef.current) {\n                            (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n                        }\n                        (_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.setSelectionRange(index, index + 1);\n                    }, onDoubleClickCapture: function () {\n                        var _a;\n                        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.setSelectionRange(0, length);\n                    } }, { children: jsx(Input, __assign({ width: inputWidth }, rest, inputProps), void 0) }), void 0)] }), void 0) }), void 0));\n};\n\n/** paddingX must be a valid [CSS length](https://developer.mozilla.org/en-US/docs/Web/CSS/length). */\nvar getSegmentCssWidth = function (paddingX) {\n    return \"calc(1ch + \".concat(paddingX, \" * 2)\");\n};\n\nexport { CodeInput, RCI, getSegmentCssWidth, useLengthContext, useSelectionContext };\n//# sourceMappingURL=index.js.map\n","start":1670465466620,"end":1670465466620,"order":"pre"}]}
