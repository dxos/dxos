#
# Copyright 2022 DXOS.org
#

#
# Party Genesis: Creating a new Party.
#

feed:
  key: Alice/Device-1/Feed-1
  messages:
    - id: 1
      data:
        # Self-signed Credential by the Party.
        @type: dxos.halo.party.PartyGenesis
        party_key: Alice-Halo # ISSUE: Different from IdentityKey?
        identity_key: Alice
    - id: 2
      data:
        # Authorizes device to sign on behalf of Identity
        # NOTE: This Credential SHOULD be Presented on joining a Party.
        @type: halo.credential.Credential
        issuer: Alice # Self-signed.
        subject:
          id: Alice/Device-1
          assertion:
            @type: halo.credentials.AuthorizedDevice
            identity_key: Alice
    - id: 3
      data:
        # Admits the feed to the feed graph.
        @type halo.credential.Credential
        issuer: Alice/Device-1
        subject:
          id: Alice/Device-1/Feed-1
          assertion:
            @type halo.credentials.AdmittedFeed
            party_key: Alice-Halo
            device_key: Alice/Device-1

#
# Device Admission: Adding a new Device to a HALO.
# NOTE: This is the same as the initial Device Admission above, but with a different Issuer.
#

feed:
  key: Alice/Device-1/Feed-1
  messages:
    - id: 100
      data:
        @type halo.credential.Credential
        issuer: Alice/Device-1
        subject:
          id: Alice/Device-2
          assertion:
            @type halo.credentials.AuthorizedDevice
            identity_key: Alice
    - id: 101
      data:
        # NOTE: This MUST have been Presented from an authorized Device.
        @type halo.credential.Credential
        issuer: Alice/Device-2
        subject:
          id: Alice/Device-2/Feed-2 # New Feed.
          assertion:
            @type halo.credentials.AdmittedFeed
            party_key: Alice-Halo
            device_key: Alice/Device-2

#
# ECHO Genesis: Creating a new Space.
#

feed:
  key: Alice/Device-1/Feed-3
  messages:
    - id: 1
      data:
        # Self-signed Credential by the Party.
        @type halo.party.Genesis # NOTE: Same as HALO.
        party_key: Party-1
        identity_key: Alice
    - id: 2
      data:
        # Authorizes Agent.
        @type halo.credential.Credential
        issuer: Alice # Self-signed.
        subject:
          id: Alice
          assertion:
            @type halo.credentials.PartyMember
            party_key: Party-1
            role: ADMIN

#
# Feed Admission: Device admits a new feed.
# NOTE: This happens as part of Genesis, but is exactly the same mechanism as any
#   Authorized Agent presenting a nested Feed Admission Credential.
# Any authorized Peer can Verify a Feed Admin Presentation.
#   ISSUE: How to detect and avoid multiple Peers from doing this concurrently? (e.g., Direct P2P Requests?)
#

feed:
  key: Alice/Device-2/Feed-3
    - id: 3
      data:
        @type: halo.credential.Credential
        issuer: Alice
        subject:
          id: Alice/Device-2/Feed-3 # NOTE: This Feed.
          assertion:
            @type: halo.credentials.AdmittedFeed
            party_key: Party-1
            identity_key: Alice
            device_key: Alice/Device-1
        proofs:
          - type: 'ECDSASignature'
            value: 0x1ba37..3125ab
            signer: Alice/Device-2
            # Mapping from the signing key to the credential that establishes it's authority
            chain:
              Alice/Device-2:
                @type: halo.credential.Credential
                issuer: Alice/Device-1
                subject:
                  id: Alice/Device-2
                  assertion:
                    @type halo.credentials.AuthorizedDevice
                    identity_key: Alice
                proof:
                  - type: 'ECDSASignature'
                    value: eyJhbGci...yHUdBBPM
              Alice/Device-1:
                issuer: Alice
                  subject:
                    id: Alice/Device-1
                    assertion:
                      @type halo.credentials.AuthorizedDevice
                      identity_key: Alice
                  proof:
                    - type: 'ECDSASignature'
                      value: eyJhbGci...yHUdBBPM

#
# Member Admission: Adding a new Member to a Space.
# The joining Agent will Present a Credential representing a Feed Admission.
#

feed:
  key: Alice/Device-1/Feed-3
  messages:
    - id: 100
      data:
        @type halo.credential.Credential
        issuer: Alice/Device-1
        subject:
          id: Bob
          assertion:
            @type halo.credentials.PartyMember
            party_key: Party-1
            role: WRITER

