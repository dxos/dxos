@startuml
!theme superhero
skinparam backgroundColor black

actor       Alice             as alice
entity      "Alice's kube"    as akube
queue       "Pub/Sub network" as psn
entity      "Bob's kube"      as bkube
actor       Bob               as bob
autonumber

activate psn
== Bob joins ==
bob <-> bkube:        <i>connect</i>
activate bkube
bob -> bkube:         ReceiveMessages(key:bob)
bob -> bkube:         Join(swarm:s0 peer:bob)
bkube -[#green]> psn: Sub(topic:bkube)
bkube -[#green]> psn: Sub(topic:s0)
bkube -[#blue]> psn:  Pub(topic:s0 lookupFor:bkube)
bkube -[#blue]> psn:  Pub(topic:p0 newPeer:bob)
...later on...
== Alice joins ==
alice <-> akube:<i>connect</i>
activate akube
alice -> akube:       ReceiveMessages(key:alice)
alice -> akube:       Join(swarm:0 peer:alice)
akube -[#green]> psn: Sub(topic:akube)
akube -[#green]> psn: Sub(topic:s0)
akube -[#blue]> psn:  Pub(topic:s0 lookupFor:akube)
psn -[#blue]> bkube:  Pub(topic:s0 lookupFor:akube)
bkube -[#blue]> psn:  Pub(topic:akube peer:bob)
psn -[#blue]> akube:  Pub(topic:akube peer:bob)
akube -> alice:       Join(s:s0 p:alice).PeerAvailable(peer:bob)
akube -[#blue]> psn:  Pub(topic:s0 newPeer:alice)
psn   -[#blue]> bkube:Pub(topic:s0 newPeer:alice)
bkube -> bob:         Join(s:s0 p:bob).PeerAvailable(peer:alice)

== Alice messages Bob to connect ==
alice -> akube:       SendMessage(sender:alice receiver:bob payload:…)
akube -[#blue]> psn:  Pub(topic:bob sender:alice payload:…)
psn -[#blue]> bkube:  Pub(topic:bob sender:alice payload:…)
bkube -> bob:         Message(from:alice to:bob payload:…)

group Roundtrips
bob -> bkube:         SendMessage(sender:bob receiver:alice payload:…)
bkube -[#blue]> psn:  Pub(topic:alice sender:bob payload:…)
psn -[#blue]> akube:  Pub(topic:alice sender:bob payload:…)
akube -> alice:       Message(from:bob to:alice payload:…)

alice -> akube:       SendMessage(sender:alice receiver:bob payload:…)
akube -[#blue]> psn:  Pub(topic:bob sender:alice payload:…)
psn -[#blue]> bkube:  Pub(topic:bob sender:alice payload:…)
bkube -> bob:         Message(from:alice to:bob payload:…)
end

...eventually...
== Alice leaves smoothly ==
alice -> akube:       Join(s:s0 p:alice).close()
akube -[#red]> psn:   Unsub(topic:s0)
akube -[#red]> psn:   Unsub(topic:akube)
akube -[#blue]> psn:  Pub(topic:s0 peerLeft:alice)
psn -[#blue]> bkube:  Pub(topic:s0 peerLeft:alice)
alice -> akube:       Subscribe(p:alice).close()
akube -[#red]> psn:   Unsub(topic:alice)
deactivate akube
...eventually...
== Bob leaves unexpectedly ==
bob X-X bkube:        <i>disconnect</i>
bkube -> bkube:       <i>timeout waiting for return</i>
bkube -[#red]> psn:   Unsub(topic:bob)
bkube -[#blue]> psn:  Pub(topic:s0 peerLeft:bob)
bkube -[#red]> psn:   Unsub(topic:s0)
bkube -[#red]> psn:   Unsub(topic:bkube)
deactivate bkube

@enduml
