diff --git a/src/executors/build/build.impl.js b/src/executors/build/build.impl.js
index f2d15f94e84b5369d0c52c4b163b1fecb81429ea..460ab35b43e99e0d170d914c21906695ccb88340 100644
--- a/src/executors/build/build.impl.js
+++ b/src/executors/build/build.impl.js
@@ -7,27 +7,8 @@ const _extends = require("@swc/helpers/lib/_extends.js").default;
 require("dotenv/config");
 const _vite = require("vite");
 const _optionsUtils = require("../../utils/options-utils");
-const _js = require("@nrwl/js");
-const _fs = require("fs");
-const _path = require("path");
 async function viteBuildExecutor(options, context) {
-    const projectRoot = context.projectsConfigurations.projects[context.projectName].root;
     await runInstance(await (0, _optionsUtils.getBuildAndSharedConfig)(options, context));
-    const libraryPackageJson = (0, _path.resolve)(projectRoot, 'package.json');
-    const rootPackageJson = (0, _path.resolve)(context.root, 'package.json');
-    // For buildable libs, copy package.json if it exists.
-    if ((0, _fs.existsSync)(libraryPackageJson) && rootPackageJson !== libraryPackageJson) {
-        await (0, _js.copyAssets)({
-            outputPath: options.outputPath,
-            assets: [
-                {
-                    input: projectRoot,
-                    output: '.',
-                    glob: 'package.json'
-                }
-            ]
-        }, context);
-    }
     return {
         success: true
     };
diff --git a/src/utils/options-utils.js b/src/utils/options-utils.js
index b5455c383532fa192b036b4388d5cbe9d02272ce..b3897cb20fb5da124d7189622dd23adb4554ce90 100644
--- a/src/utils/options-utils.js
+++ b/src/utils/options-utils.js
@@ -19,7 +19,7 @@ const _path = require("path");
 const _vite = require("vite");
 const _rollupReplaceFilesPlugin = require("../../plugins/rollup-replace-files.plugin");
 async function getBuildAndSharedConfig(options, context) {
-    const projectRoot = context.projectsConfigurations.projects[context.projectName].root;
+    const projectRoot = _path.join(context.projectsConfigurations.projects[context.projectName].root, options.base || '.');
     return (0, _vite.mergeConfig)({}, {
         mode: options.mode,
         root: projectRoot,