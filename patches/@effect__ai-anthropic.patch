diff --git a/dist/AnthropicClient/package.json b/dist/AnthropicClient/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..fcec5e9fa1d232e03d5fa0cf3c243351372d4d61
--- /dev/null
+++ b/dist/AnthropicClient/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/AnthropicClient.js",
+  "module": "../dist/esm/AnthropicClient.js",
+  "types": "../dist/dts/AnthropicClient.d.ts"
+}
diff --git a/dist/AnthropicConfig/package.json b/dist/AnthropicConfig/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..bf64d42b4fbf1a3e96c1542028013baed49c9ae2
--- /dev/null
+++ b/dist/AnthropicConfig/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/AnthropicConfig.js",
+  "module": "../dist/esm/AnthropicConfig.js",
+  "types": "../dist/dts/AnthropicConfig.d.ts"
+}
diff --git a/dist/AnthropicLanguageModel/package.json b/dist/AnthropicLanguageModel/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..86dfb81575af2a4ae4bb1f86c345c9a601bb42a7
--- /dev/null
+++ b/dist/AnthropicLanguageModel/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/AnthropicLanguageModel.js",
+  "module": "../dist/esm/AnthropicLanguageModel.js",
+  "types": "../dist/dts/AnthropicLanguageModel.d.ts"
+}
diff --git a/dist/AnthropicTokenizer/package.json b/dist/AnthropicTokenizer/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..52e7536300454e66014c98990625702095e16ed4
--- /dev/null
+++ b/dist/AnthropicTokenizer/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/AnthropicTokenizer.js",
+  "module": "../dist/esm/AnthropicTokenizer.js",
+  "types": "../dist/dts/AnthropicTokenizer.d.ts"
+}
diff --git a/dist/Generated/package.json b/dist/Generated/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..a6b3fbae9c20fe0de3dfed2d41cfc81d25bdb353
--- /dev/null
+++ b/dist/Generated/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/Generated.js",
+  "module": "../dist/esm/Generated.js",
+  "types": "../dist/dts/Generated.d.ts"
+}
diff --git a/dist/LICENSE b/dist/LICENSE
new file mode 100644
index 0000000000000000000000000000000000000000..be1f5c14c7b3bc63d9ae786dca566728999d3808
--- /dev/null
+++ b/dist/LICENSE
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2023 Effectful Technologies Inc
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/dist/README.md b/dist/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..65b3b342cceb3a89a5fb947229d60a1ec8f0a9a7
--- /dev/null
+++ b/dist/README.md
@@ -0,0 +1,5 @@
+# `@effect/ai-anthropic`
+
+## Documentation
+
+- **API Reference**: [View the full documentation](https://effect-ts.github.io/effect/docs/ai/ai-anthropic).
diff --git a/dist/cjs/AnthropicClient.js b/dist/cjs/AnthropicClient.js
index 7b1aa047fc674107fe03e42d8aba0187941c1496..3f1badcf0d23191f99cf6c2e99eb360f855553c1 100644
--- a/dist/cjs/AnthropicClient.js
+++ b/dist/cjs/AnthropicClient.js
@@ -89,7 +89,8 @@ const make = options => Effect.gen(function* () {
           {
             usage = {
               ...usage,
-              outputTokens: chunk.usage.output_tokens
+              outputTokens: chunk.usage.output_tokens,
+              totalTokens: usage.inputTokens + chunk.usage.output_tokens
             };
             if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
               metadata.stopSequence = chunk.delta.stop_sequence;
diff --git a/dist/cjs/AnthropicClient.js.map b/dist/cjs/AnthropicClient.js.map
index 29b38d1ca649d874c0f632ad70db6d2c983521d2..c495646b2b5c40078cb9cdd5ec003da0467670ee 100644
--- a/dist/cjs/AnthropicClient.js.map
+++ b/dist/cjs/AnthropicClient.js.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicClient.js","names":["AiError","_interopRequireWildcard","require","AiInput","AiResponse","Sse","HttpBody","HttpClient","HttpClientRequest","Config","Context","Effect","_Function","Layer","Option","Predicate","Redacted","Stream","_AnthropicConfig","Generated","InternalUtilities","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","constDisableValidation","disableValidation","AnthropicClient","Tag","exports","make","options","gen","httpClient","pipe","mapRequest","request","prependUrl","apiUrl","apiKey","setHeader","value","identity","anthropicVersion","acceptJson","transformClient","httpClientOk","filterStatusOk","client","AnthropicConfig","getOrUndefined","map","config","streamRequest","execute","stream","unwrapScoped","decodeText","pipeThroughChannel","makeChannel","takeUntil","event","JSON","parse","data","suspend","toolCalls","finishReason","reasoning","undefined","usage","inputTokens","outputTokens","totalTokens","reasoningTokens","cacheReadInputTokens","cacheWriteInputTokens","metadata","post","body","unsafeJson","filterMapEffect","chunk","parts","type","message","input_tokens","output_tokens","cache_creation_input_tokens","cache_read_input_tokens","push","MetadataPart","id","model","isNotNullable","delta","stop_sequence","stopSequence","resolveFinishReason","stop_reason","FinishPart","reason","providerMetadata","ProviderMetadataKey","content","content_block","thinking","index","name","params","RedactedReasoningPart","redactedText","TextPart","text","isNotUndefined","signature","tool","partial_json","inputJson","ToolCallPart","ToolCallId","ReasoningPart","reasoningText","join","some","die","module","method","description","error","length","none","succeed","of","layer","effect","layerConfig","configs","all","flatMap"],"sources":["../../src/AnthropicClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"AnthropicClient.js","names":["AiError","_interopRequireWildcard","require","AiInput","AiResponse","Sse","HttpBody","HttpClient","HttpClientRequest","Config","Context","Effect","_Function","Layer","Option","Predicate","Redacted","Stream","_AnthropicConfig","Generated","InternalUtilities","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","constDisableValidation","disableValidation","AnthropicClient","Tag","exports","make","options","gen","httpClient","pipe","mapRequest","request","prependUrl","apiUrl","apiKey","setHeader","value","identity","anthropicVersion","acceptJson","transformClient","httpClientOk","filterStatusOk","client","AnthropicConfig","getOrUndefined","map","config","streamRequest","execute","stream","unwrapScoped","decodeText","pipeThroughChannel","makeChannel","takeUntil","event","JSON","parse","data","suspend","toolCalls","finishReason","reasoning","undefined","usage","inputTokens","outputTokens","totalTokens","reasoningTokens","cacheReadInputTokens","cacheWriteInputTokens","metadata","post","body","unsafeJson","filterMapEffect","chunk","parts","type","message","input_tokens","output_tokens","cache_creation_input_tokens","cache_read_input_tokens","push","MetadataPart","id","model","isNotNullable","delta","stop_sequence","stopSequence","resolveFinishReason","stop_reason","FinishPart","reason","providerMetadata","ProviderMetadataKey","content","content_block","thinking","index","name","params","RedactedReasoningPart","redactedText","TextPart","text","isNotUndefined","signature","tool","partial_json","inputJson","ToolCallPart","ToolCallId","ReasoningPart","reasoningText","join","some","die","module","method","description","error","length","none","succeed","of","layer","effect","layerConfig","configs","all","flatMap"],"sources":["../../src/AnthropicClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/AnthropicConfig.js.map b/dist/cjs/AnthropicConfig.js.map
index a104c552f821f86f0c88b4ec7e7bcdde225de692..a4d2c84593958b26c624574bf382dc94364b241b 100644
--- a/dist/cjs/AnthropicConfig.js.map
+++ b/dist/cjs/AnthropicConfig.js.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicConfig.js","names":["Context","_interopRequireWildcard","require","Effect","_Function","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","AnthropicConfig","Tag","getOrUndefined","map","context","unsafeMap","key","exports","withClientTransform","dual","self","transformClient","flatMap","config","provideService"],"sources":["../../src/AnthropicConfig.ts"],"sourcesContent":[null],"mappings":";;;;;;AAIA,IAAAA,OAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAAsC,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,CAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAEtC;;;;AAIM,MAAOkB,eAAgB,sBAAQxB,OAAO,CAACyB,GAAG,CAAC,sCAAsC,CAAC,EAGrF;EACD;;;EAGA,OAAgBC,cAAc,gBAA8DvB,MAAM,CAACwB,GAAG,cACpGxB,MAAM,CAACyB,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACZ,GAAG,CAACO,eAAe,CAACM,GAAG,CAAC,CACxD;;AAgBH;;;;AAAAC,OAAA,CAAAP,eAAA,GAAAA,eAAA;AAIO,MAAMQ,mBAAmB,GAAAD,OAAA,CAAAC,mBAAA,gBAc5B,IAAAC,cAAI,EAeN,CAAC,EACD,CAACC,IAAI,EAAEC,eAAe,KACpBhC,MAAM,CAACiC,OAAO,CACZZ,eAAe,CAACE,cAAc,EAC7BW,MAAM,IAAKlC,MAAM,CAACmC,cAAc,CAACJ,IAAI,EAAEV,eAAe,EAAE;EAAE,GAAGa,MAAM;EAAEF;AAAe,CAAE,CAAC,CACzF,CACJ","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"AnthropicConfig.js","names":["Context","_interopRequireWildcard","require","Effect","_Function","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","AnthropicConfig","Tag","getOrUndefined","map","context","unsafeMap","key","exports","withClientTransform","dual","self","transformClient","flatMap","config","provideService"],"sources":["../../src/AnthropicConfig.ts"],"sourcesContent":[null],"mappings":";;;;;;AAIA,IAAAA,OAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAAsC,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,CAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAEtC;;;;AAIM,MAAOkB,eAAgB,sBAAQxB,OAAO,CAACyB,GAAG,CAAC,sCAAsC,CAAC,EAGrF;EACD;;;EAGA,OAAgBC,cAAc,gBAA8DvB,MAAM,CAACwB,GAAG,cACpGxB,MAAM,CAACyB,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACZ,GAAG,CAACO,eAAe,CAACM,GAAG,CAAC,CACxD;;AAgBH;;;;AAAAC,OAAA,CAAAP,eAAA,GAAAA,eAAA;AAIO,MAAMQ,mBAAmB,GAAAD,OAAA,CAAAC,mBAAA,gBAG5B,IAAAC,cAAI,EAIN,CAAC,EACD,CAACC,IAAI,EAAEC,eAAe,KACpBhC,MAAM,CAACiC,OAAO,CACZZ,eAAe,CAACE,cAAc,EAC7BW,MAAM,IAAKlC,MAAM,CAACmC,cAAc,CAACJ,IAAI,EAAEV,eAAe,EAAE;EAAE,GAAGa,MAAM;EAAEF;AAAe,CAAE,CAAC,CACzF,CACJ","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/cjs/AnthropicLanguageModel.js.map b/dist/cjs/AnthropicLanguageModel.js.map
index 598af28a1d6111f8a629efaddd90d32d866a55bb..253c5bcaf215cc61590ad27df04a9063e1a691ba 100644
--- a/dist/cjs/AnthropicLanguageModel.js.map
+++ b/dist/cjs/AnthropicLanguageModel.js.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicLanguageModel.js","names":["_AiError","require","AiLanguageModel","_interopRequireWildcard","AiModel","AiResponse","_AiTelemetry","Arr","Context","Effect","Encoding","_Function","Layer","Option","Predicate","Stream","_AnthropicClient","AnthropicTokenizer","InternalUtilities","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","constDisableValidation","disableValidation","Config","Tag","getOrUndefined","map","context","unsafeMap","key","exports","ProviderMetadata","ProviderMetadataKey","model","config","make","layer","modelWithTokenizer","layerWithTokenizer","fnUntraced","options","client","AnthropicClient","makeRequest","method","prompt","system","toolChoice","tools","useStructured","length","structured","tool_choice","undefined","type","name","tool","messages","makeMessages","max_tokens","description","input_schema","parameters","generateText","request","annotateRequest","span","rawResponse","messagesPost","params","payload","annotateChatResponse","response","makeResponse","catchAll","cause","AiError","is","module","streamText","pipe","tap","stream","unwrap","annotateStreamResponse","fail","effect","merge","withConfigOverride","dual","self","overrides","flatMap","provideService","groupMessages","current","message","_tag","push","groups","group","isLastGroup","content","j","isLastMessage","k","parts","part","isLastPart","thinking","reasoningText","signature","data","redactedText","text","trim","id","input","role","tool_use_id","JSON","stringify","result","isUndefined","mediaType","source","media_type","encodeBase64","url","toString","isNonEmptyReadonlyArray","MetadataPart","TextPart","ToolCallPart","fromUnknown","ReasoningPart","RedactedReasoningPart","metadata","stop_sequence","stopSequence","FinishPart","reason","resolveFinishReason","stop_reason","usage","Usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","reasoningTokens","cacheReadInputTokens","cache_read_input_tokens","cacheWriteInputTokens","cache_creation_input_tokens","providerMetadata","addGenAIAnnotations","operation","temperature","topK","top_k","topP","top_p","maxTokens","stopSequences","ensure","stop_sequences","filter","isNotNullable","finishReasons","metadataPart","find","finishPart"],"sources":["../../src/AnthropicLanguageModel.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"AnthropicLanguageModel.js","names":["_AiError","require","AiLanguageModel","_interopRequireWildcard","AiModel","AiResponse","_AiTelemetry","Arr","Context","Effect","Encoding","_Function","Layer","Option","Predicate","Stream","_AnthropicClient","AnthropicTokenizer","InternalUtilities","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","constDisableValidation","disableValidation","Config","Tag","getOrUndefined","map","context","unsafeMap","key","exports","ProviderMetadata","ProviderMetadataKey","model","config","make","layer","modelWithTokenizer","layerWithTokenizer","fnUntraced","options","client","AnthropicClient","makeRequest","method","prompt","system","toolChoice","tools","useStructured","length","structured","tool_choice","undefined","type","name","tool","messages","makeMessages","max_tokens","description","input_schema","parameters","generateText","request","annotateRequest","span","rawResponse","messagesPost","params","payload","annotateChatResponse","response","makeResponse","catchAll","cause","AiError","is","module","streamText","pipe","tap","stream","unwrap","annotateStreamResponse","fail","effect","merge","withConfigOverride","dual","self","overrides","flatMap","provideService","groupMessages","current","message","_tag","push","groups","group","isLastGroup","content","j","isLastMessage","k","parts","part","isLastPart","thinking","reasoningText","signature","data","redactedText","text","trim","id","input","role","tool_use_id","JSON","stringify","result","isUndefined","mediaType","source","media_type","encodeBase64","url","toString","isNonEmptyReadonlyArray","MetadataPart","TextPart","ToolCallPart","fromUnknown","ReasoningPart","RedactedReasoningPart","metadata","stop_sequence","stopSequence","FinishPart","reason","resolveFinishReason","stop_reason","usage","Usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","reasoningTokens","cacheReadInputTokens","cache_read_input_tokens","cacheWriteInputTokens","cache_creation_input_tokens","providerMetadata","addGenAIAnnotations","operation","temperature","topK","top_k","topP","top_p","maxTokens","stopSequences","ensure","stop_sequences","filter","isNotNullable","finishReasons","metadataPart","find","finishPart"],"sources":["../../src/AnthropicLanguageModel.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/AnthropicClient/package.json b/dist/dist/AnthropicClient/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..fcec5e9fa1d232e03d5fa0cf3c243351372d4d61
--- /dev/null
+++ b/dist/dist/AnthropicClient/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/AnthropicClient.js",
+  "module": "../dist/esm/AnthropicClient.js",
+  "types": "../dist/dts/AnthropicClient.d.ts"
+}
diff --git a/dist/dist/AnthropicConfig/package.json b/dist/dist/AnthropicConfig/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..bf64d42b4fbf1a3e96c1542028013baed49c9ae2
--- /dev/null
+++ b/dist/dist/AnthropicConfig/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/AnthropicConfig.js",
+  "module": "../dist/esm/AnthropicConfig.js",
+  "types": "../dist/dts/AnthropicConfig.d.ts"
+}
diff --git a/dist/dist/AnthropicLanguageModel/package.json b/dist/dist/AnthropicLanguageModel/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..86dfb81575af2a4ae4bb1f86c345c9a601bb42a7
--- /dev/null
+++ b/dist/dist/AnthropicLanguageModel/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/AnthropicLanguageModel.js",
+  "module": "../dist/esm/AnthropicLanguageModel.js",
+  "types": "../dist/dts/AnthropicLanguageModel.d.ts"
+}
diff --git a/dist/dist/AnthropicTokenizer/package.json b/dist/dist/AnthropicTokenizer/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..52e7536300454e66014c98990625702095e16ed4
--- /dev/null
+++ b/dist/dist/AnthropicTokenizer/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/AnthropicTokenizer.js",
+  "module": "../dist/esm/AnthropicTokenizer.js",
+  "types": "../dist/dts/AnthropicTokenizer.d.ts"
+}
diff --git a/dist/dist/Generated/package.json b/dist/dist/Generated/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..a6b3fbae9c20fe0de3dfed2d41cfc81d25bdb353
--- /dev/null
+++ b/dist/dist/Generated/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/Generated.js",
+  "module": "../dist/esm/Generated.js",
+  "types": "../dist/dts/Generated.d.ts"
+}
diff --git a/dist/dist/LICENSE b/dist/dist/LICENSE
new file mode 100644
index 0000000000000000000000000000000000000000..be1f5c14c7b3bc63d9ae786dca566728999d3808
--- /dev/null
+++ b/dist/dist/LICENSE
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2023 Effectful Technologies Inc
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
diff --git a/dist/dist/README.md b/dist/dist/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..65b3b342cceb3a89a5fb947229d60a1ec8f0a9a7
--- /dev/null
+++ b/dist/dist/README.md
@@ -0,0 +1,5 @@
+# `@effect/ai-anthropic`
+
+## Documentation
+
+- **API Reference**: [View the full documentation](https://effect-ts.github.io/effect/docs/ai/ai-anthropic).
diff --git a/dist/dist/cjs/AnthropicClient.js b/dist/dist/cjs/AnthropicClient.js
new file mode 100644
index 0000000000000000000000000000000000000000..8016d4656566a781ff6c93f339c37806d4c48a1f
--- /dev/null
+++ b/dist/dist/cjs/AnthropicClient.js
@@ -0,0 +1,259 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.make = exports.layerConfig = exports.layer = exports.AnthropicClient = void 0;
+var AiError = _interopRequireWildcard(require("@effect/ai/AiError"));
+var AiInput = _interopRequireWildcard(require("@effect/ai/AiInput"));
+var AiResponse = _interopRequireWildcard(require("@effect/ai/AiResponse"));
+var Sse = _interopRequireWildcard(require("@effect/experimental/Sse"));
+var HttpBody = _interopRequireWildcard(require("@effect/platform/HttpBody"));
+var HttpClient = _interopRequireWildcard(require("@effect/platform/HttpClient"));
+var HttpClientRequest = _interopRequireWildcard(require("@effect/platform/HttpClientRequest"));
+var Config = _interopRequireWildcard(require("effect/Config"));
+var Context = _interopRequireWildcard(require("effect/Context"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var _Function = require("effect/Function");
+var Layer = _interopRequireWildcard(require("effect/Layer"));
+var Option = _interopRequireWildcard(require("effect/Option"));
+var Predicate = _interopRequireWildcard(require("effect/Predicate"));
+var Redacted = _interopRequireWildcard(require("effect/Redacted"));
+var Stream = _interopRequireWildcard(require("effect/Stream"));
+var _AnthropicConfig = require("./AnthropicConfig.js");
+var Generated = _interopRequireWildcard(require("./Generated.js"));
+var InternalUtilities = _interopRequireWildcard(require("./internal/utilities.js"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/**
+ * @since 1.0.0
+ */
+
+const constDisableValidation = {
+  disableValidation: true
+};
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+class AnthropicClient extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicClient")() {}
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+exports.AnthropicClient = AnthropicClient;
+const make = options => Effect.gen(function* () {
+  const httpClient = (yield* HttpClient.HttpClient).pipe(HttpClient.mapRequest(request => request.pipe(HttpClientRequest.prependUrl(options.apiUrl ?? "https://api.anthropic.com"), options.apiKey ? HttpClientRequest.setHeader("x-api-key", Redacted.value(options.apiKey)) : _Function.identity, HttpClientRequest.setHeader("anthropic-version", options.anthropicVersion ?? "2023-06-01"), HttpClientRequest.acceptJson)), options.transformClient ? options.transformClient : _Function.identity);
+  const httpClientOk = HttpClient.filterStatusOk(httpClient);
+  const client = Generated.make(httpClient, {
+    transformClient: client => _AnthropicConfig.AnthropicConfig.getOrUndefined.pipe(Effect.map(config => config?.transformClient ? config.transformClient(client) : client))
+  });
+  const streamRequest = request => httpClientOk.execute(request).pipe(Effect.map(r => r.stream), Stream.unwrapScoped, Stream.decodeText(), Stream.pipeThroughChannel(Sse.makeChannel()), Stream.takeUntil(event => event.event === "message_stop"), Stream.map(event => JSON.parse(event.data)));
+  const stream = request => Stream.suspend(() => {
+    const toolCalls = {};
+    let finishReason = "unknown";
+    let reasoning = undefined;
+    let usage = {
+      inputTokens: 0,
+      outputTokens: 0,
+      totalTokens: 0,
+      reasoningTokens: 0,
+      cacheReadInputTokens: 0,
+      cacheWriteInputTokens: 0
+    };
+    const metadata = {};
+    return streamRequest(HttpClientRequest.post("/v1/messages", {
+      body: HttpBody.unsafeJson({
+        ...request,
+        stream: true
+      })
+    })).pipe(Stream.filterMapEffect(chunk => {
+      const parts = [];
+      switch (chunk.type) {
+        case "message_start":
+          {
+            usage = {
+              inputTokens: chunk.message.usage.input_tokens,
+              outputTokens: chunk.message.usage.output_tokens,
+              totalTokens: chunk.message.usage.input_tokens + chunk.message.usage.output_tokens,
+              reasoningTokens: 0,
+              cacheWriteInputTokens: chunk.message.usage.cache_creation_input_tokens ?? 0,
+              cacheReadInputTokens: chunk.message.usage.cache_read_input_tokens ?? 0
+            };
+            console.error("message_start", JSON.stringify(usage, null, 2));
+            parts.push(new AiResponse.MetadataPart({
+              id: chunk.message.id,
+              model: chunk.message.model
+            }, constDisableValidation));
+            break;
+          }
+        case "message_delta":
+          {
+            usage = {
+              ...usage,
+              outputTokens: chunk.usage.output_tokens,
+              totalTokens: usage.inputTokens + chunk.usage.output_tokens
+            };
+            console.error("message_delta", JSON.stringify(usage, null, 2));
+            if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
+              metadata.stopSequence = chunk.delta.stop_sequence;
+            }
+            finishReason = InternalUtilities.resolveFinishReason(chunk.delta.stop_reason);
+            break;
+          }
+        case "message_stop":
+          {
+            parts.push(new AiResponse.FinishPart({
+              usage,
+              reason: finishReason,
+              providerMetadata: {
+                [InternalUtilities.ProviderMetadataKey]: metadata
+              }
+            }, constDisableValidation));
+            break;
+          }
+        case "content_block_start":
+          {
+            const content = chunk.content_block;
+            switch (content.type) {
+              case "text":
+                {
+                  break;
+                }
+              case "thinking":
+                {
+                  reasoning = {
+                    content: [content.thinking]
+                  };
+                  break;
+                }
+              case "tool_use":
+                {
+                  toolCalls[chunk.index] = {
+                    id: content.id,
+                    name: content.name,
+                    params: ""
+                  };
+                  break;
+                }
+              case "redacted_thinking":
+                {
+                  parts.push(new AiResponse.RedactedReasoningPart({
+                    redactedText: content.data
+                  }, constDisableValidation));
+                  break;
+                }
+            }
+            break;
+          }
+        case "content_block_delta":
+          {
+            switch (chunk.delta.type) {
+              case "text_delta":
+                {
+                  parts.push(new AiResponse.TextPart({
+                    text: chunk.delta.text
+                  }, constDisableValidation));
+                  break;
+                }
+              case "thinking_delta":
+                {
+                  if (Predicate.isNotUndefined(reasoning)) {
+                    reasoning.content.push(chunk.delta.thinking);
+                  }
+                  break;
+                }
+              case "signature_delta":
+                {
+                  if (Predicate.isNotUndefined(reasoning)) {
+                    reasoning = {
+                      ...reasoning,
+                      signature: chunk.delta.signature
+                    };
+                  }
+                  break;
+                }
+              case "input_json_delta":
+                {
+                  const tool = toolCalls[chunk.index];
+                  if (Predicate.isNotUndefined(tool)) {
+                    tool.params += chunk.delta.partial_json;
+                  }
+                  break;
+                }
+              // TODO: add support for citations (?)
+              case "citations_delta":
+                {
+                  break;
+                }
+            }
+            break;
+          }
+        case "content_block_stop":
+          {
+            if (Predicate.isNotUndefined(toolCalls[chunk.index])) {
+              const tool = toolCalls[chunk.index];
+              try {
+                // If the tool call has no parameters, the model sends an empty string.
+                const inputJson = tool.params === "" ? "{}" : tool.params;
+                const params = JSON.parse(inputJson);
+                parts.push(new AiResponse.ToolCallPart({
+                  id: AiInput.ToolCallId.make(tool.id, constDisableValidation),
+                  name: tool.name,
+                  params
+                }, constDisableValidation));
+                delete toolCalls[chunk.index];
+                // eslint-disable-next-line no-empty
+              } catch {}
+            }
+            if (Predicate.isNotUndefined(reasoning)) {
+              parts.push(new AiResponse.ReasoningPart({
+                reasoningText: reasoning.content.join(""),
+                signature: reasoning.signature
+              }, constDisableValidation));
+              reasoning = undefined;
+            }
+            break;
+          }
+        case "error":
+          {
+            return Option.some(Effect.die(new AiError.AiError({
+              module: "AnthropicClient",
+              method: "stream",
+              description: `${chunk.error.type}: ${chunk.error.message}`
+            })));
+          }
+      }
+      return parts.length === 0 ? Option.none() : Option.some(Effect.succeed(AiResponse.AiResponse.make({
+        parts
+      }, constDisableValidation)));
+    }));
+  });
+  return AnthropicClient.of({
+    client,
+    streamRequest,
+    stream
+  });
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+exports.make = make;
+const layer = options => Layer.effect(AnthropicClient, make(options));
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+exports.layer = layer;
+const layerConfig = options => {
+  const {
+    transformClient,
+    ...configs
+  } = options;
+  return Config.all(configs).pipe(Effect.flatMap(configs => make({
+    ...configs,
+    transformClient
+  })), Layer.effect(AnthropicClient));
+};
+exports.layerConfig = layerConfig;
+//# sourceMappingURL=AnthropicClient.js.map
\ No newline at end of file
diff --git a/dist/dist/cjs/AnthropicClient.js.map b/dist/dist/cjs/AnthropicClient.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..65e8b59c0eebbf8e5d989616c9eebef01546b74d
--- /dev/null
+++ b/dist/dist/cjs/AnthropicClient.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicClient.js","names":["AiError","_interopRequireWildcard","require","AiInput","AiResponse","Sse","HttpBody","HttpClient","HttpClientRequest","Config","Context","Effect","_Function","Layer","Option","Predicate","Redacted","Stream","_AnthropicConfig","Generated","InternalUtilities","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","constDisableValidation","disableValidation","AnthropicClient","Tag","exports","make","options","gen","httpClient","pipe","mapRequest","request","prependUrl","apiUrl","apiKey","setHeader","value","identity","anthropicVersion","acceptJson","transformClient","httpClientOk","filterStatusOk","client","AnthropicConfig","getOrUndefined","map","config","streamRequest","execute","stream","unwrapScoped","decodeText","pipeThroughChannel","makeChannel","takeUntil","event","JSON","parse","data","suspend","toolCalls","finishReason","reasoning","undefined","usage","inputTokens","outputTokens","totalTokens","reasoningTokens","cacheReadInputTokens","cacheWriteInputTokens","metadata","post","body","unsafeJson","filterMapEffect","chunk","parts","type","message","input_tokens","output_tokens","cache_creation_input_tokens","cache_read_input_tokens","console","error","stringify","push","MetadataPart","id","model","isNotNullable","delta","stop_sequence","stopSequence","resolveFinishReason","stop_reason","FinishPart","reason","providerMetadata","ProviderMetadataKey","content","content_block","thinking","index","name","params","RedactedReasoningPart","redactedText","TextPart","text","isNotUndefined","signature","tool","partial_json","inputJson","ToolCallPart","ToolCallId","ReasoningPart","reasoningText","join","some","die","module","method","description","length","none","succeed","of","layer","effect","layerConfig","configs","all","flatMap"],"sources":["../../src/AnthropicClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/cjs/AnthropicConfig.js b/dist/dist/cjs/AnthropicConfig.js
new file mode 100644
index 0000000000000000000000000000000000000000..fce941d92b245eb67f73c97d07a77532cb484ca2
--- /dev/null
+++ b/dist/dist/cjs/AnthropicConfig.js
@@ -0,0 +1,30 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.withClientTransform = exports.AnthropicConfig = void 0;
+var Context = _interopRequireWildcard(require("effect/Context"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var _Function = require("effect/Function");
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+class AnthropicConfig extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicConfig")() {
+  /**
+   * @since 1.0.0
+   */
+  static getOrUndefined = /*#__PURE__*/Effect.map(/*#__PURE__*/Effect.context(), context => context.unsafeMap.get(AnthropicConfig.key));
+}
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+exports.AnthropicConfig = AnthropicConfig;
+const withClientTransform = exports.withClientTransform = /*#__PURE__*/(0, _Function.dual)(2, (self, transformClient) => Effect.flatMap(AnthropicConfig.getOrUndefined, config => Effect.provideService(self, AnthropicConfig, {
+  ...config,
+  transformClient
+})));
+//# sourceMappingURL=AnthropicConfig.js.map
\ No newline at end of file
diff --git a/dist/dist/cjs/AnthropicConfig.js.map b/dist/dist/cjs/AnthropicConfig.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..a4d2c84593958b26c624574bf382dc94364b241b
--- /dev/null
+++ b/dist/dist/cjs/AnthropicConfig.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicConfig.js","names":["Context","_interopRequireWildcard","require","Effect","_Function","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","AnthropicConfig","Tag","getOrUndefined","map","context","unsafeMap","key","exports","withClientTransform","dual","self","transformClient","flatMap","config","provideService"],"sources":["../../src/AnthropicConfig.ts"],"sourcesContent":[null],"mappings":";;;;;;AAIA,IAAAA,OAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAAsC,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,CAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAEtC;;;;AAIM,MAAOkB,eAAgB,sBAAQxB,OAAO,CAACyB,GAAG,CAAC,sCAAsC,CAAC,EAGrF;EACD;;;EAGA,OAAgBC,cAAc,gBAA8DvB,MAAM,CAACwB,GAAG,cACpGxB,MAAM,CAACyB,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACZ,GAAG,CAACO,eAAe,CAACM,GAAG,CAAC,CACxD;;AAgBH;;;;AAAAC,OAAA,CAAAP,eAAA,GAAAA,eAAA;AAIO,MAAMQ,mBAAmB,GAAAD,OAAA,CAAAC,mBAAA,gBAG5B,IAAAC,cAAI,EAIN,CAAC,EACD,CAACC,IAAI,EAAEC,eAAe,KACpBhC,MAAM,CAACiC,OAAO,CACZZ,eAAe,CAACE,cAAc,EAC7BW,MAAM,IAAKlC,MAAM,CAACmC,cAAc,CAACJ,IAAI,EAAEV,eAAe,EAAE;EAAE,GAAGa,MAAM;EAAEF;AAAe,CAAE,CAAC,CACzF,CACJ","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/cjs/AnthropicLanguageModel.js b/dist/dist/cjs/AnthropicLanguageModel.js
new file mode 100644
index 0000000000000000000000000000000000000000..0e440c7396397c1a0aaa89b3c2c3fa9b79dfd124
--- /dev/null
+++ b/dist/dist/cjs/AnthropicLanguageModel.js
@@ -0,0 +1,496 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.withConfigOverride = exports.modelWithTokenizer = exports.model = exports.make = exports.layerWithTokenizer = exports.layer = exports.ProviderMetadata = exports.Config = void 0;
+var _AiError = require("@effect/ai/AiError");
+var AiLanguageModel = _interopRequireWildcard(require("@effect/ai/AiLanguageModel"));
+var AiModel = _interopRequireWildcard(require("@effect/ai/AiModel"));
+var AiResponse = _interopRequireWildcard(require("@effect/ai/AiResponse"));
+var _AiTelemetry = require("@effect/ai/AiTelemetry");
+var Arr = _interopRequireWildcard(require("effect/Array"));
+var Context = _interopRequireWildcard(require("effect/Context"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var Encoding = _interopRequireWildcard(require("effect/Encoding"));
+var _Function = require("effect/Function");
+var Layer = _interopRequireWildcard(require("effect/Layer"));
+var Option = _interopRequireWildcard(require("effect/Option"));
+var Predicate = _interopRequireWildcard(require("effect/Predicate"));
+var Stream = _interopRequireWildcard(require("effect/Stream"));
+var _AnthropicClient = require("./AnthropicClient.js");
+var AnthropicTokenizer = _interopRequireWildcard(require("./AnthropicTokenizer.js"));
+var InternalUtilities = _interopRequireWildcard(require("./internal/utilities.js"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/**
+ * @since 1.0.0
+ */
+
+const constDisableValidation = {
+  disableValidation: true
+};
+// =============================================================================
+// Configuration
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+class Config extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicLanguageModel/Config")() {
+  /**
+   * @since 1.0.0
+   */
+  static getOrUndefined = /*#__PURE__*/Effect.map(/*#__PURE__*/Effect.context(), context => context.unsafeMap.get(Config.key));
+}
+// =============================================================================
+// Anthropic Provider Metadata
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+exports.Config = Config;
+class ProviderMetadata extends /*#__PURE__*/Context.Tag(InternalUtilities.ProviderMetadataKey)() {}
+// =============================================================================
+// Anthropic Language Model
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+exports.ProviderMetadata = ProviderMetadata;
+const model = (model, config) => AiModel.make(layer({
+  model,
+  config
+}));
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+exports.model = model;
+const modelWithTokenizer = (model, config) => AiModel.make(layerWithTokenizer({
+  model,
+  config
+}));
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+exports.modelWithTokenizer = modelWithTokenizer;
+const make = exports.make = /*#__PURE__*/Effect.fnUntraced(function* (options) {
+  const client = yield* _AnthropicClient.AnthropicClient;
+  const makeRequest = Effect.fnUntraced(function* (method, {
+    prompt,
+    system,
+    toolChoice,
+    tools
+  }) {
+    const context = yield* Effect.context();
+    const useStructured = tools.length === 1 && tools[0].structured;
+    let tool_choice = undefined;
+    if (useStructured) {
+      tool_choice = {
+        type: "tool",
+        name: tools[0].name
+      };
+    } else if (tools.length > 0) {
+      if (toolChoice === "required") {
+        tool_choice = {
+          type: "any"
+        };
+      } else if (typeof toolChoice === "object") {
+        tool_choice = {
+          type: "tool",
+          name: toolChoice.tool
+        };
+      } else {
+        tool_choice = {
+          type: toolChoice
+        };
+      }
+    }
+    const messages = yield* makeMessages(method, prompt);
+    return {
+      model: options.model,
+      max_tokens: 4096,
+      ...options.config,
+      ...context.unsafeMap.get(Config.key),
+      // TODO: re-evaluate a better way to do this
+      system: Option.getOrUndefined(system),
+      messages,
+      tools: tools.length === 0 ? undefined : tools.map(tool => ({
+        name: tool.name,
+        description: tool.description,
+        input_schema: tool.parameters
+      })),
+      tool_choice
+    };
+  });
+  return yield* AiLanguageModel.make({
+    generateText: Effect.fnUntraced(function* (options) {
+      const request = yield* makeRequest("generateText", options);
+      annotateRequest(options.span, request);
+      const rawResponse = yield* client.client.messagesPost({
+        params: {},
+        payload: request
+      });
+      annotateChatResponse(options.span, rawResponse);
+      const response = yield* makeResponse(rawResponse);
+      return response;
+    }, Effect.catchAll(cause => _AiError.AiError.is(cause) ? cause : new _AiError.AiError({
+      module: "AnthropicLanguageModel",
+      method: "generateText",
+      description: "An error occurred",
+      cause
+    }))),
+    streamText(options) {
+      return makeRequest("streamText", options).pipe(Effect.tap(request => annotateRequest(options.span, request)), Effect.map(client.stream), Stream.unwrap, Stream.map(response => {
+        annotateStreamResponse(options.span, response);
+        return response;
+      }), Stream.catchAll(cause => _AiError.AiError.is(cause) ? Effect.fail(cause) : Effect.fail(new _AiError.AiError({
+        module: "AnthropicLanguageModel",
+        method: "streamText",
+        description: "An error occurred",
+        cause
+      }))));
+    }
+  });
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+const layer = options => Layer.effect(AiLanguageModel.AiLanguageModel, make({
+  model: options.model,
+  config: options.config
+}));
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+exports.layer = layer;
+const layerWithTokenizer = options => Layer.merge(layer(options), AnthropicTokenizer.layer);
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+exports.layerWithTokenizer = layerWithTokenizer;
+const withConfigOverride = exports.withConfigOverride = /*#__PURE__*/(0, _Function.dual)(2, (self, overrides) => Effect.flatMap(Config.getOrUndefined, config => Effect.provideService(self, Config, {
+  ...config,
+  ...overrides
+})));
+const groupMessages = prompt => {
+  const messages = [];
+  let current = undefined;
+  for (const message of prompt.messages) {
+    switch (message._tag) {
+      case "AssistantMessage":
+        {
+          if (current?.type !== "assistant") {
+            current = {
+              type: "assistant",
+              messages: []
+            };
+            messages.push(current);
+          }
+          current.messages.push(message);
+          break;
+        }
+      case "ToolMessage":
+      case "UserMessage":
+        {
+          if (current?.type !== "user") {
+            current = {
+              type: "user",
+              messages: []
+            };
+            messages.push(current);
+          }
+          current.messages.push(message);
+          break;
+        }
+    }
+  }
+  return messages;
+};
+const makeMessages = /*#__PURE__*/Effect.fnUntraced(function* (method, prompt) {
+  const messages = [];
+  const groups = groupMessages(prompt);
+  for (let i = 0; i < groups.length; i++) {
+    const group = groups[i];
+    const isLastGroup = i === groups.length - 1;
+    switch (group.type) {
+      case "assistant":
+        {
+          const content = [];
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j];
+            const isLastMessage = j === group.messages.length - 1;
+            for (let k = 0; k < message.parts.length; k++) {
+              const part = message.parts[k];
+              const isLastPart = k === message.parts.length - 1;
+              switch (part._tag) {
+                case "ReasoningPart":
+                  {
+                    content.push({
+                      type: "thinking",
+                      thinking: part.reasoningText,
+                      signature: part.signature
+                    });
+                    break;
+                  }
+                case "RedactedReasoningPart":
+                  {
+                    content.push({
+                      type: "redacted_thinking",
+                      data: part.redactedText
+                    });
+                    break;
+                  }
+                case "TextPart":
+                  {
+                    content.push({
+                      type: "text",
+                      text:
+                      // Anthropic does not allow trailing whitespace in assistant
+                      // content blocks
+                      isLastGroup && isLastMessage && isLastPart ? part.text.trim() : part.text
+                    });
+                    break;
+                  }
+                case "ToolCallPart":
+                  {
+                    content.push({
+                      type: "tool_use",
+                      id: part.id,
+                      name: part.name,
+                      input: part.params
+                    });
+                    break;
+                  }
+              }
+            }
+          }
+          messages.push({
+            role: "assistant",
+            content
+          });
+          break;
+        }
+      case "user":
+        {
+          const content = [];
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j];
+            switch (message._tag) {
+              case "ToolMessage":
+                {
+                  for (let k = 0; k < message.parts.length; k++) {
+                    const part = message.parts[k];
+                    // TODO: support advanced tool result content parts
+                    content.push({
+                      type: "tool_result",
+                      tool_use_id: part.id,
+                      content: JSON.stringify(part.result)
+                    });
+                  }
+                  break;
+                }
+              case "UserMessage":
+                {
+                  for (let k = 0; k < message.parts.length; k++) {
+                    const part = message.parts[k];
+                    switch (part._tag) {
+                      case "FilePart":
+                        {
+                          if (Predicate.isUndefined(part.mediaType) || part.mediaType !== "application/pdf") {
+                            return yield* new _AiError.AiError({
+                              module: "AnthropicLanguageModel",
+                              method,
+                              description: "AnthropicLanguageModel only supports PDF file inputs"
+                            });
+                          }
+                          content.push({
+                            type: "document",
+                            source: {
+                              type: "base64",
+                              media_type: "application/pdf",
+                              data: Encoding.encodeBase64(part.data)
+                            }
+                          });
+                          break;
+                        }
+                      case "FileUrlPart":
+                        {
+                          content.push({
+                            type: "document",
+                            source: {
+                              type: "url",
+                              url: part.url.toString()
+                            }
+                          });
+                          break;
+                        }
+                      case "TextPart":
+                        {
+                          content.push({
+                            type: "text",
+                            text: part.text
+                          });
+                          break;
+                        }
+                      case "ImagePart":
+                        {
+                          content.push({
+                            type: "image",
+                            source: {
+                              type: "base64",
+                              media_type: part.mediaType ?? "image/jpeg",
+                              data: Encoding.encodeBase64(part.data)
+                            }
+                          });
+                          break;
+                        }
+                      case "ImageUrlPart":
+                        {
+                          content.push({
+                            type: "image",
+                            source: {
+                              type: "url",
+                              url: part.url.toString()
+                            }
+                          });
+                          break;
+                        }
+                    }
+                  }
+                  break;
+                }
+            }
+          }
+          messages.push({
+            role: "user",
+            content
+          });
+          break;
+        }
+    }
+  }
+  if (Arr.isNonEmptyReadonlyArray(messages)) {
+    return messages;
+  }
+  return yield* new _AiError.AiError({
+    module: "AnthropicLanguageModel",
+    method,
+    description: "Prompt contained no messages"
+  });
+});
+const makeResponse = /*#__PURE__*/Effect.fnUntraced(function* (response) {
+  const parts = [];
+  parts.push(new AiResponse.MetadataPart({
+    id: response.id,
+    model: response.model
+  }, constDisableValidation));
+  for (const part of response.content) {
+    switch (part.type) {
+      case "text":
+        {
+          parts.push(new AiResponse.TextPart({
+            text: part.text
+          }, constDisableValidation));
+          break;
+        }
+      case "tool_use":
+        {
+          parts.push(AiResponse.ToolCallPart.fromUnknown({
+            id: part.id,
+            name: part.name,
+            params: part.input
+          }));
+          break;
+        }
+      case "thinking":
+        {
+          parts.push(new AiResponse.ReasoningPart({
+            reasoningText: part.thinking,
+            signature: part.signature
+          }, constDisableValidation));
+          break;
+        }
+      case "redacted_thinking":
+        {
+          parts.push(new AiResponse.RedactedReasoningPart({
+            redactedText: part.data
+          }, constDisableValidation));
+          break;
+        }
+    }
+  }
+  const metadata = {};
+  if (response.stop_sequence !== null) {
+    metadata.stopSequence = response.stop_sequence;
+  }
+  parts.push(new AiResponse.FinishPart({
+    // Anthropic always returns a non-null `stop_reason` for non-streaming responses
+    reason: InternalUtilities.resolveFinishReason(response.stop_reason),
+    usage: new AiResponse.Usage({
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens,
+      totalTokens: response.usage.input_tokens + response.usage.output_tokens,
+      reasoningTokens: 0,
+      cacheReadInputTokens: response.usage.cache_read_input_tokens ?? 0,
+      cacheWriteInputTokens: response.usage.cache_creation_input_tokens ?? 0
+    }),
+    providerMetadata: {
+      [InternalUtilities.ProviderMetadataKey]: metadata
+    }
+  }, constDisableValidation));
+  return new AiResponse.AiResponse({
+    parts
+  }, constDisableValidation);
+});
+const annotateRequest = (span, request) => {
+  (0, _AiTelemetry.addGenAIAnnotations)(span, {
+    system: "anthropic",
+    operation: {
+      name: "chat"
+    },
+    request: {
+      model: request.model,
+      temperature: request.temperature,
+      topK: request.top_k,
+      topP: request.top_p,
+      maxTokens: request.max_tokens,
+      stopSequences: Arr.ensure(request.stop_sequences).filter(Predicate.isNotNullable)
+    }
+  });
+};
+const annotateChatResponse = (span, response) => {
+  (0, _AiTelemetry.addGenAIAnnotations)(span, {
+    response: {
+      id: response.id,
+      model: response.model,
+      finishReasons: response.stop_reason ? [response.stop_reason] : undefined
+    },
+    usage: {
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens
+    }
+  });
+};
+const annotateStreamResponse = (span, response) => {
+  const metadataPart = response.parts.find(part => part._tag === "MetadataPart");
+  const finishPart = response.parts.find(part => part._tag === "FinishPart");
+  (0, _AiTelemetry.addGenAIAnnotations)(span, {
+    response: {
+      id: metadataPart?.id,
+      model: metadataPart?.model,
+      finishReasons: finishPart?.reason ? [finishPart.reason] : undefined
+    },
+    usage: {
+      inputTokens: finishPart?.usage.inputTokens,
+      outputTokens: finishPart?.usage.outputTokens
+    }
+  });
+};
+//# sourceMappingURL=AnthropicLanguageModel.js.map
\ No newline at end of file
diff --git a/dist/dist/cjs/AnthropicLanguageModel.js.map b/dist/dist/cjs/AnthropicLanguageModel.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..253c5bcaf215cc61590ad27df04a9063e1a691ba
--- /dev/null
+++ b/dist/dist/cjs/AnthropicLanguageModel.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicLanguageModel.js","names":["_AiError","require","AiLanguageModel","_interopRequireWildcard","AiModel","AiResponse","_AiTelemetry","Arr","Context","Effect","Encoding","_Function","Layer","Option","Predicate","Stream","_AnthropicClient","AnthropicTokenizer","InternalUtilities","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","constDisableValidation","disableValidation","Config","Tag","getOrUndefined","map","context","unsafeMap","key","exports","ProviderMetadata","ProviderMetadataKey","model","config","make","layer","modelWithTokenizer","layerWithTokenizer","fnUntraced","options","client","AnthropicClient","makeRequest","method","prompt","system","toolChoice","tools","useStructured","length","structured","tool_choice","undefined","type","name","tool","messages","makeMessages","max_tokens","description","input_schema","parameters","generateText","request","annotateRequest","span","rawResponse","messagesPost","params","payload","annotateChatResponse","response","makeResponse","catchAll","cause","AiError","is","module","streamText","pipe","tap","stream","unwrap","annotateStreamResponse","fail","effect","merge","withConfigOverride","dual","self","overrides","flatMap","provideService","groupMessages","current","message","_tag","push","groups","group","isLastGroup","content","j","isLastMessage","k","parts","part","isLastPart","thinking","reasoningText","signature","data","redactedText","text","trim","id","input","role","tool_use_id","JSON","stringify","result","isUndefined","mediaType","source","media_type","encodeBase64","url","toString","isNonEmptyReadonlyArray","MetadataPart","TextPart","ToolCallPart","fromUnknown","ReasoningPart","RedactedReasoningPart","metadata","stop_sequence","stopSequence","FinishPart","reason","resolveFinishReason","stop_reason","usage","Usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","reasoningTokens","cacheReadInputTokens","cache_read_input_tokens","cacheWriteInputTokens","cache_creation_input_tokens","providerMetadata","addGenAIAnnotations","operation","temperature","topK","top_k","topP","top_p","maxTokens","stopSequences","ensure","stop_sequences","filter","isNotNullable","finishReasons","metadataPart","find","finishPart"],"sources":["../../src/AnthropicLanguageModel.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/cjs/AnthropicTokenizer.js b/dist/dist/cjs/AnthropicTokenizer.js
new file mode 100644
index 0000000000000000000000000000000000000000..1c42763b11c30784061a768f072d15b1d3f884b9
--- /dev/null
+++ b/dist/dist/cjs/AnthropicTokenizer.js
@@ -0,0 +1,50 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.make = exports.layer = void 0;
+var _tokenizer = require("@anthropic-ai/tokenizer");
+var _AiError = require("@effect/ai/AiError");
+var Tokenizer = _interopRequireWildcard(require("@effect/ai/Tokenizer"));
+var Arr = _interopRequireWildcard(require("effect/Array"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var Layer = _interopRequireWildcard(require("effect/Layer"));
+var Option = _interopRequireWildcard(require("effect/Option"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/**
+ * @since 1.0.0
+ */
+
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+const make = exports.make = /*#__PURE__*/Tokenizer.make({
+  tokenize(input) {
+    return Effect.try({
+      try: () => {
+        const tokenizer = (0, _tokenizer.getTokenizer)();
+        const text = Arr.flatMap(input.messages, message => Arr.filterMap(message.parts, part => {
+          if (part._tag === "FilePart" || part._tag === "FileUrlPart" || part._tag === "ImagePart" || part._tag === "ImageUrlPart" || part._tag === "ReasoningPart" || part._tag === "RedactedReasoningPart") return Option.none();
+          return Option.some(part._tag === "TextPart" ? part.text : JSON.stringify(part._tag === "ToolCallPart" ? part.params : part.result));
+        })).join("");
+        const encoded = tokenizer.encode(text.normalize("NFKC"), "all");
+        tokenizer.free();
+        return Array.from(encoded);
+      },
+      catch: cause => new _AiError.AiError({
+        module: "AnthropicTokenizer",
+        method: "tokenize",
+        description: "Could not tokenize",
+        cause
+      })
+    });
+  }
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+const layer = exports.layer = /*#__PURE__*/Layer.succeed(Tokenizer.Tokenizer, make);
+//# sourceMappingURL=AnthropicTokenizer.js.map
\ No newline at end of file
diff --git a/dist/dist/cjs/AnthropicTokenizer.js.map b/dist/dist/cjs/AnthropicTokenizer.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..fa6f6b6923ae291a74628dd887531ec63e06d624
--- /dev/null
+++ b/dist/dist/cjs/AnthropicTokenizer.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicTokenizer.js","names":["_tokenizer","require","_AiError","Tokenizer","_interopRequireWildcard","Arr","Effect","Layer","Option","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","make","exports","tokenize","input","try","tokenizer","getTokenizer","text","flatMap","messages","message","filterMap","parts","part","_tag","none","some","JSON","stringify","params","result","join","encoded","encode","normalize","free","Array","from","catch","cause","AiError","module","method","description","layer","succeed"],"sources":["../../src/AnthropicTokenizer.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/cjs/Generated.js b/dist/dist/cjs/Generated.js
new file mode 100644
index 0000000000000000000000000000000000000000..3c63a9f50b91af7c6ba0e90e65d61cd13fb75460
--- /dev/null
+++ b/dist/dist/cjs/Generated.js
@@ -0,0 +1,2589 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.BetaModelInfoType = exports.BetaModelInfo = exports.BetaMetadata = exports.BetaMessagesPostParams = exports.BetaMessagesCountTokensPostParams = exports.BetaMessageType = exports.BetaMessageRole = exports.BetaMessageBatchesRetrieveParams = exports.BetaMessageBatchesResultsParams = exports.BetaMessageBatchesPostParams = exports.BetaMessageBatchesListParams = exports.BetaMessageBatchesDeleteParams = exports.BetaMessageBatchesCancelParams = exports.BetaMessageBatchType = exports.BetaMessageBatchProcessingStatus = exports.BetaMessageBatchIndividualRequestParams = exports.BetaMessageBatch = exports.BetaMessage = exports.BetaListResponseModelInfo = exports.BetaListResponseMessageBatch = exports.BetaListFilesV1FilesGetParams = exports.BetaInvalidRequestErrorType = exports.BetaInvalidRequestError = exports.BetaInputSchemaType = exports.BetaInputSchema = exports.BetaInputMessageRole = exports.BetaInputMessage = exports.BetaInputContentBlock = exports.BetaGetFileMetadataV1FilesFileIdGetParams = exports.BetaGatewayTimeoutErrorType = exports.BetaGatewayTimeoutError = exports.BetaFileMetadataSchemaType = exports.BetaFileMetadataSchema = exports.BetaFileListResponse = exports.BetaFileImageSourceType = exports.BetaFileImageSource = exports.BetaFileDocumentSourceType = exports.BetaFileDocumentSource = exports.BetaFileDeleteResponseType = exports.BetaFileDeleteResponse = exports.BetaErrorResponseType = exports.BetaErrorResponse = exports.BetaDownloadFileV1FilesFileIdContentGetParams = exports.BetaDeleteMessageBatchResponseType = exports.BetaDeleteMessageBatchResponse = exports.BetaDeleteFileV1FilesFileIdDeleteParams = exports.BetaCreateMessageParamsServiceTier = exports.BetaCreateMessageParams = exports.BetaCreateMessageBatchParams = exports.BetaCountMessageTokensResponse = exports.BetaCountMessageTokensParams = exports.BetaContentBlockSourceType = exports.BetaContentBlockSource = exports.BetaContentBlock = exports.BetaContainer = exports.BetaComputerUseTool20250124Type = exports.BetaComputerUseTool20250124Name = exports.BetaComputerUseTool20250124 = exports.BetaComputerUseTool20241022Type = exports.BetaComputerUseTool20241022Name = exports.BetaComputerUseTool20241022 = exports.BetaCodeExecutionToolResultErrorCode = exports.BetaCodeExecutionTool20250522Type = exports.BetaCodeExecutionTool20250522Name = exports.BetaCodeExecutionTool20250522 = exports.BetaCacheCreation = exports.BetaCacheControlEphemeralType = exports.BetaCacheControlEphemeralTtl = exports.BetaCacheControlEphemeral = exports.BetaBillingErrorType = exports.BetaBillingError = exports.BetaBashTool20250124Type = exports.BetaBashTool20250124Name = exports.BetaBashTool20250124 = exports.BetaBashTool20241022Type = exports.BetaBashTool20241022Name = exports.BetaBashTool20241022 = exports.BetaBase64PDFSourceType = exports.BetaBase64PDFSourceMediaType = exports.BetaBase64PDFSource = exports.BetaBase64ImageSourceType = exports.BetaBase64ImageSourceMediaType = exports.BetaBase64ImageSource = exports.BetaAuthenticationErrorType = exports.BetaAuthenticationError = exports.BetaAPIErrorType = exports.BetaAPIError = exports.BashTool20250124Type = exports.BashTool20250124Name = exports.BashTool20250124 = exports.Base64PDFSourceType = exports.Base64PDFSourceMediaType = exports.Base64PDFSource = exports.Base64ImageSourceType = exports.Base64ImageSourceMediaType = exports.Base64ImageSource = exports.AuthenticationErrorType = exports.AuthenticationError = exports.APIErrorType = exports.APIError = void 0;
+exports.BetaResponseWebSearchToolResultBlockType = exports.BetaResponseWebSearchToolResultBlock = exports.BetaResponseWebSearchResultLocationCitationType = exports.BetaResponseWebSearchResultLocationCitation = exports.BetaResponseWebSearchResultBlockType = exports.BetaResponseWebSearchResultBlock = exports.BetaResponseToolUseBlockType = exports.BetaResponseToolUseBlock = exports.BetaResponseThinkingBlockType = exports.BetaResponseThinkingBlock = exports.BetaResponseTextBlockType = exports.BetaResponseTextBlock = exports.BetaResponseServerToolUseBlockType = exports.BetaResponseServerToolUseBlockName = exports.BetaResponseServerToolUseBlock = exports.BetaResponseRedactedThinkingBlockType = exports.BetaResponseRedactedThinkingBlock = exports.BetaResponsePageLocationCitationType = exports.BetaResponsePageLocationCitation = exports.BetaResponseMCPToolUseBlockType = exports.BetaResponseMCPToolUseBlock = exports.BetaResponseMCPToolResultBlockType = exports.BetaResponseMCPToolResultBlock = exports.BetaResponseContentBlockLocationCitationType = exports.BetaResponseContentBlockLocationCitation = exports.BetaResponseContainerUploadBlockType = exports.BetaResponseContainerUploadBlock = exports.BetaResponseCodeExecutionToolResultErrorType = exports.BetaResponseCodeExecutionToolResultError = exports.BetaResponseCodeExecutionToolResultBlockType = exports.BetaResponseCodeExecutionToolResultBlock = exports.BetaResponseCodeExecutionResultBlockType = exports.BetaResponseCodeExecutionResultBlock = exports.BetaResponseCodeExecutionOutputBlockType = exports.BetaResponseCodeExecutionOutputBlock = exports.BetaResponseCharLocationCitationType = exports.BetaResponseCharLocationCitation = exports.BetaRequestWebSearchToolResultErrorType = exports.BetaRequestWebSearchToolResultError = exports.BetaRequestWebSearchToolResultBlockType = exports.BetaRequestWebSearchToolResultBlock = exports.BetaRequestWebSearchResultLocationCitationType = exports.BetaRequestWebSearchResultLocationCitation = exports.BetaRequestWebSearchResultBlockType = exports.BetaRequestWebSearchResultBlock = exports.BetaRequestToolUseBlockType = exports.BetaRequestToolUseBlock = exports.BetaRequestToolResultBlockType = exports.BetaRequestToolResultBlock = exports.BetaRequestThinkingBlockType = exports.BetaRequestThinkingBlock = exports.BetaRequestTextBlockType = exports.BetaRequestTextBlock = exports.BetaRequestServerToolUseBlockType = exports.BetaRequestServerToolUseBlockName = exports.BetaRequestServerToolUseBlock = exports.BetaRequestRedactedThinkingBlockType = exports.BetaRequestRedactedThinkingBlock = exports.BetaRequestPageLocationCitationType = exports.BetaRequestPageLocationCitation = exports.BetaRequestMCPToolUseBlockType = exports.BetaRequestMCPToolUseBlock = exports.BetaRequestMCPToolResultBlockType = exports.BetaRequestMCPToolResultBlock = exports.BetaRequestMCPServerURLDefinitionType = exports.BetaRequestMCPServerURLDefinition = exports.BetaRequestMCPServerToolConfiguration = exports.BetaRequestImageBlockType = exports.BetaRequestImageBlock = exports.BetaRequestDocumentBlockType = exports.BetaRequestDocumentBlock = exports.BetaRequestCounts = exports.BetaRequestContentBlockLocationCitationType = exports.BetaRequestContentBlockLocationCitation = exports.BetaRequestContainerUploadBlockType = exports.BetaRequestContainerUploadBlock = exports.BetaRequestCodeExecutionToolResultErrorType = exports.BetaRequestCodeExecutionToolResultError = exports.BetaRequestCodeExecutionToolResultBlockType = exports.BetaRequestCodeExecutionToolResultBlock = exports.BetaRequestCodeExecutionResultBlockType = exports.BetaRequestCodeExecutionResultBlock = exports.BetaRequestCodeExecutionOutputBlockType = exports.BetaRequestCodeExecutionOutputBlock = exports.BetaRequestCitationsConfig = exports.BetaRequestCharLocationCitationType = exports.BetaRequestCharLocationCitation = exports.BetaRateLimitErrorType = exports.BetaRateLimitError = exports.BetaPlainTextSourceType = exports.BetaPlainTextSourceMediaType = exports.BetaPlainTextSource = exports.BetaPermissionErrorType = exports.BetaPermissionError = exports.BetaOverloadedErrorType = exports.BetaOverloadedError = exports.BetaNotFoundErrorType = exports.BetaNotFoundError = exports.BetaModelsListParams = exports.BetaModelsGetParams = void 0;
+exports.ModelInfo = exports.Model = exports.Metadata = exports.MessagesPostParams = exports.MessagesCountTokensPostParams = exports.MessageType = exports.MessageRole = exports.MessageBatchesRetrieveParams = exports.MessageBatchesResultsParams = exports.MessageBatchesPostParams = exports.MessageBatchesListParams = exports.MessageBatchesDeleteParams = exports.MessageBatchesCancelParams = exports.MessageBatchType = exports.MessageBatchProcessingStatus = exports.MessageBatchIndividualRequestParams = exports.MessageBatch = exports.Message = exports.ListResponseModelInfo = exports.ListResponseMessageBatch = exports.ListFilesV1FilesGetParams = exports.InvalidRequestErrorType = exports.InvalidRequestError = exports.InputSchemaType = exports.InputSchema = exports.InputMessageRole = exports.InputMessage = exports.InputContentBlock = exports.GetFileMetadataV1FilesFileIdGetParams = exports.GatewayTimeoutErrorType = exports.GatewayTimeoutError = exports.FileMetadataSchemaType = exports.FileMetadataSchema = exports.FileListResponse = exports.FileDeleteResponseType = exports.FileDeleteResponse = exports.ErrorResponseType = exports.ErrorResponse = exports.DownloadFileV1FilesFileIdContentGetParams = exports.DeleteMessageBatchResponseType = exports.DeleteMessageBatchResponse = exports.DeleteFileV1FilesFileIdDeleteParams = exports.CreateMessageParamsServiceTier = exports.CreateMessageParams = exports.CreateMessageBatchParams = exports.CountMessageTokensResponse = exports.CountMessageTokensParams = exports.ContentBlockSourceType = exports.ContentBlockSource = exports.ContentBlock = exports.CompletionResponseType = exports.CompletionResponse = exports.CompletionRequest = exports.CompletePostParams = exports.CacheControlEphemeralType = exports.CacheControlEphemeral = exports.BillingErrorType = exports.BillingError = exports.BetaWebSearchToolResultErrorCode = exports.BetaWebSearchTool20250305Type = exports.BetaWebSearchTool20250305Name = exports.BetaWebSearchTool20250305 = exports.BetaUserLocationType = exports.BetaUserLocation = exports.BetaUsageServiceTierEnum = exports.BetaUsage = exports.BetaUploadFileV1FilesPostParams = exports.BetaURLPDFSourceType = exports.BetaURLPDFSource = exports.BetaURLImageSourceType = exports.BetaURLImageSource = exports.BetaToolTypeEnum = exports.BetaToolChoiceToolType = exports.BetaToolChoiceTool = exports.BetaToolChoiceNoneType = exports.BetaToolChoiceNone = exports.BetaToolChoiceAutoType = exports.BetaToolChoiceAuto = exports.BetaToolChoiceAnyType = exports.BetaToolChoiceAny = exports.BetaToolChoice = exports.BetaTool = exports.BetaThinkingConfigParam = exports.BetaThinkingConfigEnabledType = exports.BetaThinkingConfigEnabled = exports.BetaThinkingConfigDisabledType = exports.BetaThinkingConfigDisabled = exports.BetaTextEditor20250429Type = exports.BetaTextEditor20250429Name = exports.BetaTextEditor20250429 = exports.BetaTextEditor20250124Type = exports.BetaTextEditor20250124Name = exports.BetaTextEditor20250124 = exports.BetaTextEditor20241022Type = exports.BetaTextEditor20241022Name = exports.BetaTextEditor20241022 = exports.BetaStopReason = exports.BetaServerToolUsage = exports.BetaResponseWebSearchToolResultErrorType = exports.BetaResponseWebSearchToolResultError = void 0;
+exports.URLPDFSourceType = exports.URLPDFSource = exports.URLImageSourceType = exports.URLImageSource = exports.ToolTypeEnum = exports.ToolChoiceToolType = exports.ToolChoiceTool = exports.ToolChoiceNoneType = exports.ToolChoiceNone = exports.ToolChoiceAutoType = exports.ToolChoiceAuto = exports.ToolChoiceAnyType = exports.ToolChoiceAny = exports.ToolChoice = exports.Tool = exports.ThinkingConfigParam = exports.ThinkingConfigEnabledType = exports.ThinkingConfigEnabled = exports.ThinkingConfigDisabledType = exports.ThinkingConfigDisabled = exports.TextEditor20250429Type = exports.TextEditor20250429Name = exports.TextEditor20250429 = exports.TextEditor20250124Type = exports.TextEditor20250124Name = exports.TextEditor20250124 = exports.StopReason = exports.ServerToolUsage = exports.ResponseWebSearchToolResultErrorType = exports.ResponseWebSearchToolResultError = exports.ResponseWebSearchToolResultBlockType = exports.ResponseWebSearchToolResultBlock = exports.ResponseWebSearchResultLocationCitationType = exports.ResponseWebSearchResultLocationCitation = exports.ResponseWebSearchResultBlockType = exports.ResponseWebSearchResultBlock = exports.ResponseToolUseBlockType = exports.ResponseToolUseBlock = exports.ResponseThinkingBlockType = exports.ResponseThinkingBlock = exports.ResponseTextBlockType = exports.ResponseTextBlock = exports.ResponseServerToolUseBlockType = exports.ResponseServerToolUseBlockName = exports.ResponseServerToolUseBlock = exports.ResponseRedactedThinkingBlockType = exports.ResponseRedactedThinkingBlock = exports.ResponsePageLocationCitationType = exports.ResponsePageLocationCitation = exports.ResponseContentBlockLocationCitationType = exports.ResponseContentBlockLocationCitation = exports.ResponseCharLocationCitationType = exports.ResponseCharLocationCitation = exports.RequestWebSearchToolResultErrorType = exports.RequestWebSearchToolResultError = exports.RequestWebSearchToolResultBlockType = exports.RequestWebSearchToolResultBlock = exports.RequestWebSearchResultLocationCitationType = exports.RequestWebSearchResultLocationCitation = exports.RequestWebSearchResultBlockType = exports.RequestWebSearchResultBlock = exports.RequestToolUseBlockType = exports.RequestToolUseBlock = exports.RequestToolResultBlockType = exports.RequestToolResultBlock = exports.RequestThinkingBlockType = exports.RequestThinkingBlock = exports.RequestTextBlockType = exports.RequestTextBlock = exports.RequestServerToolUseBlockType = exports.RequestServerToolUseBlockName = exports.RequestServerToolUseBlock = exports.RequestRedactedThinkingBlockType = exports.RequestRedactedThinkingBlock = exports.RequestPageLocationCitationType = exports.RequestPageLocationCitation = exports.RequestImageBlockType = exports.RequestImageBlock = exports.RequestDocumentBlockType = exports.RequestDocumentBlock = exports.RequestCounts = exports.RequestContentBlockLocationCitationType = exports.RequestContentBlockLocationCitation = exports.RequestCitationsConfig = exports.RequestCharLocationCitationType = exports.RequestCharLocationCitation = exports.RateLimitErrorType = exports.RateLimitError = exports.PlainTextSourceType = exports.PlainTextSourceMediaType = exports.PlainTextSource = exports.PermissionErrorType = exports.PermissionError = exports.OverloadedErrorType = exports.OverloadedError = exports.NotFoundErrorType = exports.NotFoundError = exports.ModelsListParams = exports.ModelsGetParams = exports.ModelInfoType = void 0;
+exports.make = exports.WebSearchToolResultErrorCode = exports.WebSearchTool20250305Type = exports.WebSearchTool20250305Name = exports.WebSearchTool20250305 = exports.UserLocationType = exports.UserLocation = exports.UsageServiceTierEnum = exports.Usage = exports.UploadFileV1FilesPostParams = void 0;
+var HttpClientError = _interopRequireWildcard(require("@effect/platform/HttpClientError"));
+var HttpClientRequest = _interopRequireWildcard(require("@effect/platform/HttpClientRequest"));
+var HttpClientResponse = _interopRequireWildcard(require("@effect/platform/HttpClientResponse"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var S = _interopRequireWildcard(require("effect/Schema"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+class MessagesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessagesPostParams = MessagesPostParams;
+class Model extends /*#__PURE__*/S.Literal("claude-3-7-sonnet-latest", "claude-3-7-sonnet-20250219", "claude-3-5-haiku-latest", "claude-3-5-haiku-20241022", "claude-sonnet-4-20250514", "claude-sonnet-4-0", "claude-4-sonnet-20250514", "claude-3-5-sonnet-latest", "claude-3-5-sonnet-20241022", "claude-3-5-sonnet-20240620", "claude-opus-4-0", "claude-opus-4-20250514", "claude-4-opus-20250514", "claude-3-opus-latest", "claude-3-opus-20240229", "claude-3-sonnet-20240229", "claude-3-haiku-20240307", "claude-2.1", "claude-2.0") {}
+exports.Model = Model;
+class CacheControlEphemeralType extends /*#__PURE__*/S.Literal("ephemeral") {}
+exports.CacheControlEphemeralType = CacheControlEphemeralType;
+class CacheControlEphemeral extends /*#__PURE__*/S.Struct({
+  "type": CacheControlEphemeralType
+}) {}
+exports.CacheControlEphemeral = CacheControlEphemeral;
+class RequestServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search") {}
+exports.RequestServerToolUseBlockName = RequestServerToolUseBlockName;
+class RequestServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+exports.RequestServerToolUseBlockType = RequestServerToolUseBlockType;
+class RequestServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": RequestServerToolUseBlockName,
+  "type": RequestServerToolUseBlockType
+}) {}
+exports.RequestServerToolUseBlock = RequestServerToolUseBlock;
+class RequestWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+exports.RequestWebSearchResultBlockType = RequestWebSearchResultBlockType;
+class RequestWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "title": S.String,
+  "type": RequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+exports.RequestWebSearchResultBlock = RequestWebSearchResultBlock;
+class WebSearchToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long") {}
+exports.WebSearchToolResultErrorCode = WebSearchToolResultErrorCode;
+class RequestWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+exports.RequestWebSearchToolResultErrorType = RequestWebSearchToolResultErrorType;
+class RequestWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": RequestWebSearchToolResultErrorType
+}) {}
+exports.RequestWebSearchToolResultError = RequestWebSearchToolResultError;
+class RequestWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+exports.RequestWebSearchToolResultBlockType = RequestWebSearchToolResultBlockType;
+class RequestWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(/*#__PURE__*/S.Array(RequestWebSearchResultBlock), RequestWebSearchToolResultError),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": RequestWebSearchToolResultBlockType
+}) {}
+exports.RequestWebSearchToolResultBlock = RequestWebSearchToolResultBlock;
+class RequestCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+exports.RequestCharLocationCitationType = RequestCharLocationCitationType;
+class RequestCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": RequestCharLocationCitationType
+}) {}
+exports.RequestCharLocationCitation = RequestCharLocationCitation;
+class RequestPageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+exports.RequestPageLocationCitationType = RequestPageLocationCitationType;
+class RequestPageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": RequestPageLocationCitationType
+}) {}
+exports.RequestPageLocationCitation = RequestPageLocationCitation;
+class RequestContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+exports.RequestContentBlockLocationCitationType = RequestContentBlockLocationCitationType;
+class RequestContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": RequestContentBlockLocationCitationType
+}) {}
+exports.RequestContentBlockLocationCitation = RequestContentBlockLocationCitation;
+class RequestWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+exports.RequestWebSearchResultLocationCitationType = RequestWebSearchResultLocationCitationType;
+class RequestWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "type": RequestWebSearchResultLocationCitationType,
+  "url": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(2048))
+}) {}
+exports.RequestWebSearchResultLocationCitation = RequestWebSearchResultLocationCitation;
+class RequestTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+exports.RequestTextBlockType = RequestTextBlockType;
+class RequestTextBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestCharLocationCitation, RequestPageLocationCitation, RequestContentBlockLocationCitation, RequestWebSearchResultLocationCitation)), S.Null), {
+    nullable: true
+  }),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": RequestTextBlockType
+}) {}
+exports.RequestTextBlock = RequestTextBlock;
+class Base64ImageSourceMediaType extends /*#__PURE__*/S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+exports.Base64ImageSourceMediaType = Base64ImageSourceMediaType;
+class Base64ImageSourceType extends /*#__PURE__*/S.Literal("base64") {}
+exports.Base64ImageSourceType = Base64ImageSourceType;
+class Base64ImageSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": Base64ImageSourceMediaType,
+  "type": Base64ImageSourceType
+}) {}
+exports.Base64ImageSource = Base64ImageSource;
+class URLImageSourceType extends /*#__PURE__*/S.Literal("url") {}
+exports.URLImageSourceType = URLImageSourceType;
+class URLImageSource extends /*#__PURE__*/S.Struct({
+  "type": URLImageSourceType,
+  "url": S.String
+}) {}
+exports.URLImageSource = URLImageSource;
+class RequestImageBlockType extends /*#__PURE__*/S.Literal("image") {}
+exports.RequestImageBlockType = RequestImageBlockType;
+class RequestImageBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(Base64ImageSource, URLImageSource),
+  "type": RequestImageBlockType
+}) {}
+exports.RequestImageBlock = RequestImageBlock;
+class RequestToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+exports.RequestToolUseBlockType = RequestToolUseBlockType;
+class RequestToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(200)),
+  "type": RequestToolUseBlockType
+}) {}
+exports.RequestToolUseBlock = RequestToolUseBlock;
+class RequestToolResultBlockType extends /*#__PURE__*/S.Literal("tool_result") {}
+exports.RequestToolResultBlockType = RequestToolResultBlockType;
+class RequestToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestTextBlock, RequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": RequestToolResultBlockType
+}) {}
+exports.RequestToolResultBlock = RequestToolResultBlock;
+class RequestCitationsConfig extends /*#__PURE__*/S.Struct({
+  "enabled": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+exports.RequestCitationsConfig = RequestCitationsConfig;
+class Base64PDFSourceMediaType extends /*#__PURE__*/S.Literal("application/pdf") {}
+exports.Base64PDFSourceMediaType = Base64PDFSourceMediaType;
+class Base64PDFSourceType extends /*#__PURE__*/S.Literal("base64") {}
+exports.Base64PDFSourceType = Base64PDFSourceType;
+class Base64PDFSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": Base64PDFSourceMediaType,
+  "type": Base64PDFSourceType
+}) {}
+exports.Base64PDFSource = Base64PDFSource;
+class PlainTextSourceMediaType extends /*#__PURE__*/S.Literal("text/plain") {}
+exports.PlainTextSourceMediaType = PlainTextSourceMediaType;
+class PlainTextSourceType extends /*#__PURE__*/S.Literal("text") {}
+exports.PlainTextSourceType = PlainTextSourceType;
+class PlainTextSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": PlainTextSourceMediaType,
+  "type": PlainTextSourceType
+}) {}
+exports.PlainTextSource = PlainTextSource;
+class ContentBlockSourceType extends /*#__PURE__*/S.Literal("content") {}
+exports.ContentBlockSourceType = ContentBlockSourceType;
+class ContentBlockSource extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestTextBlock, RequestImageBlock))),
+  "type": ContentBlockSourceType
+}) {}
+exports.ContentBlockSource = ContentBlockSource;
+class URLPDFSourceType extends /*#__PURE__*/S.Literal("url") {}
+exports.URLPDFSourceType = URLPDFSourceType;
+class URLPDFSource extends /*#__PURE__*/S.Struct({
+  "type": URLPDFSourceType,
+  "url": S.String
+}) {}
+exports.URLPDFSource = URLPDFSource;
+class RequestDocumentBlockType extends /*#__PURE__*/S.Literal("document") {}
+exports.RequestDocumentBlockType = RequestDocumentBlockType;
+class RequestDocumentBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(RequestCitationsConfig, {
+    nullable: true
+  }),
+  "context": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)), S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(Base64PDFSource, PlainTextSource, ContentBlockSource, URLPDFSource),
+  "title": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)), S.Null), {
+    nullable: true
+  }),
+  "type": RequestDocumentBlockType
+}) {}
+exports.RequestDocumentBlock = RequestDocumentBlock;
+class RequestThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+exports.RequestThinkingBlockType = RequestThinkingBlockType;
+class RequestThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": RequestThinkingBlockType
+}) {}
+exports.RequestThinkingBlock = RequestThinkingBlock;
+class RequestRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+exports.RequestRedactedThinkingBlockType = RequestRedactedThinkingBlockType;
+class RequestRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": RequestRedactedThinkingBlockType
+}) {}
+exports.RequestRedactedThinkingBlock = RequestRedactedThinkingBlock;
+class InputContentBlock extends /*#__PURE__*/S.Union(RequestServerToolUseBlock, RequestWebSearchToolResultBlock, RequestTextBlock, RequestImageBlock, RequestToolUseBlock, RequestToolResultBlock, RequestDocumentBlock, RequestThinkingBlock, RequestRedactedThinkingBlock) {}
+exports.InputContentBlock = InputContentBlock;
+class InputMessageRole extends /*#__PURE__*/S.Literal("user", "assistant") {}
+exports.InputMessageRole = InputMessageRole;
+class InputMessage extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(InputContentBlock)),
+  "role": InputMessageRole
+}) {}
+exports.InputMessage = InputMessage;
+class Metadata extends /*#__PURE__*/S.Struct({
+  "user_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.maxLength(256)), S.Null), {
+    nullable: true
+  })
+}) {}
+exports.Metadata = Metadata;
+class CreateMessageParamsServiceTier extends /*#__PURE__*/S.Literal("auto", "standard_only") {}
+exports.CreateMessageParamsServiceTier = CreateMessageParamsServiceTier;
+class ThinkingConfigEnabledType extends /*#__PURE__*/S.Literal("enabled") {}
+exports.ThinkingConfigEnabledType = ThinkingConfigEnabledType;
+class ThinkingConfigEnabled extends /*#__PURE__*/S.Struct({
+  "budget_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1024)),
+  "type": ThinkingConfigEnabledType
+}) {}
+exports.ThinkingConfigEnabled = ThinkingConfigEnabled;
+class ThinkingConfigDisabledType extends /*#__PURE__*/S.Literal("disabled") {}
+exports.ThinkingConfigDisabledType = ThinkingConfigDisabledType;
+class ThinkingConfigDisabled extends /*#__PURE__*/S.Struct({
+  "type": ThinkingConfigDisabledType
+}) {}
+exports.ThinkingConfigDisabled = ThinkingConfigDisabled;
+class ThinkingConfigParam extends /*#__PURE__*/S.Union(ThinkingConfigEnabled, ThinkingConfigDisabled) {}
+exports.ThinkingConfigParam = ThinkingConfigParam;
+class ToolChoiceAutoType extends /*#__PURE__*/S.Literal("auto") {}
+exports.ToolChoiceAutoType = ToolChoiceAutoType;
+class ToolChoiceAuto extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": ToolChoiceAutoType
+}) {}
+exports.ToolChoiceAuto = ToolChoiceAuto;
+class ToolChoiceAnyType extends /*#__PURE__*/S.Literal("any") {}
+exports.ToolChoiceAnyType = ToolChoiceAnyType;
+class ToolChoiceAny extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": ToolChoiceAnyType
+}) {}
+exports.ToolChoiceAny = ToolChoiceAny;
+class ToolChoiceToolType extends /*#__PURE__*/S.Literal("tool") {}
+exports.ToolChoiceToolType = ToolChoiceToolType;
+class ToolChoiceTool extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "name": S.String,
+  "type": ToolChoiceToolType
+}) {}
+exports.ToolChoiceTool = ToolChoiceTool;
+class ToolChoiceNoneType extends /*#__PURE__*/S.Literal("none") {}
+exports.ToolChoiceNoneType = ToolChoiceNoneType;
+class ToolChoiceNone extends /*#__PURE__*/S.Struct({
+  "type": ToolChoiceNoneType
+}) {}
+exports.ToolChoiceNone = ToolChoiceNone;
+class ToolChoice extends /*#__PURE__*/S.Union(ToolChoiceAuto, ToolChoiceAny, ToolChoiceTool, ToolChoiceNone) {}
+exports.ToolChoice = ToolChoice;
+class ToolTypeEnum extends /*#__PURE__*/S.Literal("custom") {}
+exports.ToolTypeEnum = ToolTypeEnum;
+class InputSchemaType extends /*#__PURE__*/S.Literal("object") {}
+exports.InputSchemaType = InputSchemaType;
+class InputSchema extends /*#__PURE__*/S.Struct({
+  "properties": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }), S.Null), {
+    nullable: true
+  }),
+  "required": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "type": InputSchemaType
+}) {}
+exports.InputSchema = InputSchema;
+class Tool extends /*#__PURE__*/S.Struct({
+  "type": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Null, ToolTypeEnum), {
+    nullable: true
+  }),
+  "description": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": InputSchema,
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.Tool = Tool;
+class BashTool20250124Name extends /*#__PURE__*/S.Literal("bash") {}
+exports.BashTool20250124Name = BashTool20250124Name;
+class BashTool20250124Type extends /*#__PURE__*/S.Literal("bash_20250124") {}
+exports.BashTool20250124Type = BashTool20250124Type;
+class BashTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BashTool20250124Name,
+  "type": BashTool20250124Type
+}) {}
+exports.BashTool20250124 = BashTool20250124;
+class TextEditor20250124Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+exports.TextEditor20250124Name = TextEditor20250124Name;
+class TextEditor20250124Type extends /*#__PURE__*/S.Literal("text_editor_20250124") {}
+exports.TextEditor20250124Type = TextEditor20250124Type;
+class TextEditor20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": TextEditor20250124Name,
+  "type": TextEditor20250124Type
+}) {}
+exports.TextEditor20250124 = TextEditor20250124;
+class TextEditor20250429Name extends /*#__PURE__*/S.Literal("str_replace_based_edit_tool") {}
+exports.TextEditor20250429Name = TextEditor20250429Name;
+class TextEditor20250429Type extends /*#__PURE__*/S.Literal("text_editor_20250429") {}
+exports.TextEditor20250429Type = TextEditor20250429Type;
+class TextEditor20250429 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": TextEditor20250429Name,
+  "type": TextEditor20250429Type
+}) {}
+exports.TextEditor20250429 = TextEditor20250429;
+class WebSearchTool20250305Name extends /*#__PURE__*/S.Literal("web_search") {}
+exports.WebSearchTool20250305Name = WebSearchTool20250305Name;
+class WebSearchTool20250305Type extends /*#__PURE__*/S.Literal("web_search_20250305") {}
+exports.WebSearchTool20250305Type = WebSearchTool20250305Type;
+class UserLocationType extends /*#__PURE__*/S.Literal("approximate") {}
+exports.UserLocationType = UserLocationType;
+class UserLocation extends /*#__PURE__*/S.Struct({
+  "city": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "country": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(2), /*#__PURE__*/S.maxLength(2)), S.Null), {
+    nullable: true
+  }),
+  "region": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "timezone": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "type": UserLocationType
+}) {}
+exports.UserLocation = UserLocation;
+class WebSearchTool20250305 extends /*#__PURE__*/S.Struct({
+  "allowed_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "blocked_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "max_uses": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThan(0)), S.Null), {
+    nullable: true
+  }),
+  "name": WebSearchTool20250305Name,
+  "type": WebSearchTool20250305Type,
+  "user_location": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(UserLocation, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.WebSearchTool20250305 = WebSearchTool20250305;
+class CreateMessageParams extends /*#__PURE__*/S.Class("CreateMessageParams")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "messages": /*#__PURE__*/S.Array(InputMessage),
+  "max_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "metadata": /*#__PURE__*/S.optionalWith(Metadata, {
+    nullable: true
+  }),
+  "service_tier": /*#__PURE__*/S.optionalWith(CreateMessageParamsServiceTier, {
+    nullable: true
+  }),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(RequestTextBlock)), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(ThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(ToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  })
+}) {}
+exports.CreateMessageParams = CreateMessageParams;
+class MessageType extends /*#__PURE__*/S.Literal("message") {}
+exports.MessageType = MessageType;
+class MessageRole extends /*#__PURE__*/S.Literal("assistant") {}
+exports.MessageRole = MessageRole;
+class ResponseCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+exports.ResponseCharLocationCitationType = ResponseCharLocationCitationType;
+class ResponseCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": ResponseCharLocationCitationType
+}) {}
+exports.ResponseCharLocationCitation = ResponseCharLocationCitation;
+class ResponsePageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+exports.ResponsePageLocationCitationType = ResponsePageLocationCitationType;
+class ResponsePageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": ResponsePageLocationCitationType
+}) {}
+exports.ResponsePageLocationCitation = ResponsePageLocationCitation;
+class ResponseContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+exports.ResponseContentBlockLocationCitationType = ResponseContentBlockLocationCitationType;
+class ResponseContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": ResponseContentBlockLocationCitationType
+}) {}
+exports.ResponseContentBlockLocationCitation = ResponseContentBlockLocationCitation;
+class ResponseWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+exports.ResponseWebSearchResultLocationCitationType = ResponseWebSearchResultLocationCitationType;
+class ResponseWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": ResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+exports.ResponseWebSearchResultLocationCitation = ResponseWebSearchResultLocationCitation;
+class ResponseTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+exports.ResponseTextBlockType = ResponseTextBlockType;
+class ResponseTextBlock extends /*#__PURE__*/S.Struct({
+  "citations": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(ResponseCharLocationCitation, ResponsePageLocationCitation, ResponseContentBlockLocationCitation, ResponseWebSearchResultLocationCitation)))),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(0), /*#__PURE__*/S.maxLength(5000000)),
+  "type": ResponseTextBlockType
+}) {}
+exports.ResponseTextBlock = ResponseTextBlock;
+class ResponseToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+exports.ResponseToolUseBlockType = ResponseToolUseBlockType;
+class ResponseToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": ResponseToolUseBlockType
+}) {}
+exports.ResponseToolUseBlock = ResponseToolUseBlock;
+class ResponseServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search") {}
+exports.ResponseServerToolUseBlockName = ResponseServerToolUseBlockName;
+class ResponseServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+exports.ResponseServerToolUseBlockType = ResponseServerToolUseBlockType;
+class ResponseServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": ResponseServerToolUseBlockName,
+  "type": ResponseServerToolUseBlockType
+}) {}
+exports.ResponseServerToolUseBlock = ResponseServerToolUseBlock;
+class ResponseWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+exports.ResponseWebSearchToolResultErrorType = ResponseWebSearchToolResultErrorType;
+class ResponseWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": ResponseWebSearchToolResultErrorType
+}) {}
+exports.ResponseWebSearchToolResultError = ResponseWebSearchToolResultError;
+class ResponseWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+exports.ResponseWebSearchResultBlockType = ResponseWebSearchResultBlockType;
+class ResponseWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": ResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+exports.ResponseWebSearchResultBlock = ResponseWebSearchResultBlock;
+class ResponseWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+exports.ResponseWebSearchToolResultBlockType = ResponseWebSearchToolResultBlockType;
+class ResponseWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(ResponseWebSearchToolResultError, /*#__PURE__*/S.Array(ResponseWebSearchResultBlock)),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": ResponseWebSearchToolResultBlockType
+}) {}
+exports.ResponseWebSearchToolResultBlock = ResponseWebSearchToolResultBlock;
+class ResponseThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+exports.ResponseThinkingBlockType = ResponseThinkingBlockType;
+class ResponseThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": ResponseThinkingBlockType
+}) {}
+exports.ResponseThinkingBlock = ResponseThinkingBlock;
+class ResponseRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+exports.ResponseRedactedThinkingBlockType = ResponseRedactedThinkingBlockType;
+class ResponseRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": ResponseRedactedThinkingBlockType
+}) {}
+exports.ResponseRedactedThinkingBlock = ResponseRedactedThinkingBlock;
+class ContentBlock extends /*#__PURE__*/S.Union(ResponseTextBlock, ResponseToolUseBlock, ResponseServerToolUseBlock, ResponseWebSearchToolResultBlock, ResponseThinkingBlock, ResponseRedactedThinkingBlock) {}
+exports.ContentBlock = ContentBlock;
+class StopReason extends /*#__PURE__*/S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal") {}
+exports.StopReason = StopReason;
+class ServerToolUsage extends /*#__PURE__*/S.Struct({
+  "web_search_requests": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+exports.ServerToolUsage = ServerToolUsage;
+class UsageServiceTierEnum extends /*#__PURE__*/S.Literal("standard", "priority", "batch") {}
+exports.UsageServiceTierEnum = UsageServiceTierEnum;
+class Usage extends /*#__PURE__*/S.Struct({
+  "cache_creation_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "output_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "server_tool_use": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(ServerToolUsage)),
+  "service_tier": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(UsageServiceTierEnum, S.Null))
+}) {}
+exports.Usage = Usage;
+class Message extends /*#__PURE__*/S.Class("Message")({
+  "id": S.String,
+  "type": MessageType,
+  "role": MessageRole,
+  "content": /*#__PURE__*/S.Array(ContentBlock),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(StopReason, S.Null),
+  "stop_sequence": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "usage": Usage
+}) {}
+exports.Message = Message;
+class InvalidRequestErrorType extends /*#__PURE__*/S.Literal("invalid_request_error") {}
+exports.InvalidRequestErrorType = InvalidRequestErrorType;
+class InvalidRequestError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": InvalidRequestErrorType
+}) {}
+exports.InvalidRequestError = InvalidRequestError;
+class AuthenticationErrorType extends /*#__PURE__*/S.Literal("authentication_error") {}
+exports.AuthenticationErrorType = AuthenticationErrorType;
+class AuthenticationError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": AuthenticationErrorType
+}) {}
+exports.AuthenticationError = AuthenticationError;
+class BillingErrorType extends /*#__PURE__*/S.Literal("billing_error") {}
+exports.BillingErrorType = BillingErrorType;
+class BillingError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BillingErrorType
+}) {}
+exports.BillingError = BillingError;
+class PermissionErrorType extends /*#__PURE__*/S.Literal("permission_error") {}
+exports.PermissionErrorType = PermissionErrorType;
+class PermissionError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": PermissionErrorType
+}) {}
+exports.PermissionError = PermissionError;
+class NotFoundErrorType extends /*#__PURE__*/S.Literal("not_found_error") {}
+exports.NotFoundErrorType = NotFoundErrorType;
+class NotFoundError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": NotFoundErrorType
+}) {}
+exports.NotFoundError = NotFoundError;
+class RateLimitErrorType extends /*#__PURE__*/S.Literal("rate_limit_error") {}
+exports.RateLimitErrorType = RateLimitErrorType;
+class RateLimitError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": RateLimitErrorType
+}) {}
+exports.RateLimitError = RateLimitError;
+class GatewayTimeoutErrorType extends /*#__PURE__*/S.Literal("timeout_error") {}
+exports.GatewayTimeoutErrorType = GatewayTimeoutErrorType;
+class GatewayTimeoutError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": GatewayTimeoutErrorType
+}) {}
+exports.GatewayTimeoutError = GatewayTimeoutError;
+class APIErrorType extends /*#__PURE__*/S.Literal("api_error") {}
+exports.APIErrorType = APIErrorType;
+class APIError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": APIErrorType
+}) {}
+exports.APIError = APIError;
+class OverloadedErrorType extends /*#__PURE__*/S.Literal("overloaded_error") {}
+exports.OverloadedErrorType = OverloadedErrorType;
+class OverloadedError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": OverloadedErrorType
+}) {}
+exports.OverloadedError = OverloadedError;
+class ErrorResponseType extends /*#__PURE__*/S.Literal("error") {}
+exports.ErrorResponseType = ErrorResponseType;
+class ErrorResponse extends /*#__PURE__*/S.Class("ErrorResponse")({
+  "error": /*#__PURE__*/S.Union(InvalidRequestError, AuthenticationError, BillingError, PermissionError, NotFoundError, RateLimitError, GatewayTimeoutError, APIError, OverloadedError),
+  "type": ErrorResponseType
+}) {}
+exports.ErrorResponse = ErrorResponse;
+class CompletePostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.CompletePostParams = CompletePostParams;
+class CompletionRequest extends /*#__PURE__*/S.Class("CompletionRequest")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "prompt": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "max_tokens_to_sample": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "metadata": /*#__PURE__*/S.optionalWith(Metadata, {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+exports.CompletionRequest = CompletionRequest;
+class CompletionResponseType extends /*#__PURE__*/S.Literal("completion") {}
+exports.CompletionResponseType = CompletionResponseType;
+class CompletionResponse extends /*#__PURE__*/S.Class("CompletionResponse")({
+  "completion": S.String,
+  "id": S.String,
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": CompletionResponseType
+}) {}
+exports.CompletionResponse = CompletionResponse;
+class ModelsListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.ModelsListParams = ModelsListParams;
+class ModelInfoType extends /*#__PURE__*/S.Literal("model") {}
+exports.ModelInfoType = ModelInfoType;
+class ModelInfo extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": ModelInfoType
+}) {}
+exports.ModelInfo = ModelInfo;
+class ListResponseModelInfo extends /*#__PURE__*/S.Class("ListResponseModelInfo")({
+  "data": /*#__PURE__*/S.Array(ModelInfo),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+exports.ListResponseModelInfo = ListResponseModelInfo;
+class ModelsGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.ModelsGetParams = ModelsGetParams;
+class MessageBatchesListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesListParams = MessageBatchesListParams;
+class MessageBatchProcessingStatus extends /*#__PURE__*/S.Literal("in_progress", "canceling", "ended") {}
+exports.MessageBatchProcessingStatus = MessageBatchProcessingStatus;
+class RequestCounts extends /*#__PURE__*/S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+exports.RequestCounts = RequestCounts;
+class MessageBatchType extends /*#__PURE__*/S.Literal("message_batch") {}
+exports.MessageBatchType = MessageBatchType;
+class MessageBatch extends /*#__PURE__*/S.Struct({
+  "archived_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "cancel_initiated_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": MessageBatchProcessingStatus,
+  "request_counts": RequestCounts,
+  "results_url": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": MessageBatchType
+}) {}
+exports.MessageBatch = MessageBatch;
+class ListResponseMessageBatch extends /*#__PURE__*/S.Class("ListResponseMessageBatch")({
+  "data": /*#__PURE__*/S.Array(MessageBatch),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+exports.ListResponseMessageBatch = ListResponseMessageBatch;
+class MessageBatchesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesPostParams = MessageBatchesPostParams;
+class MessageBatchIndividualRequestParams extends /*#__PURE__*/S.Struct({
+  "custom_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": CreateMessageParams
+}) {}
+exports.MessageBatchIndividualRequestParams = MessageBatchIndividualRequestParams;
+class CreateMessageBatchParams extends /*#__PURE__*/S.Class("CreateMessageBatchParams")({
+  "requests": /*#__PURE__*/S.Array(MessageBatchIndividualRequestParams).pipe(/*#__PURE__*/S.minItems(1), /*#__PURE__*/S.maxItems(10000))
+}) {}
+exports.CreateMessageBatchParams = CreateMessageBatchParams;
+class MessageBatchesRetrieveParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesRetrieveParams = MessageBatchesRetrieveParams;
+class MessageBatchesDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesDeleteParams = MessageBatchesDeleteParams;
+class DeleteMessageBatchResponseType extends /*#__PURE__*/S.Literal("message_batch_deleted") {}
+exports.DeleteMessageBatchResponseType = DeleteMessageBatchResponseType;
+class DeleteMessageBatchResponse extends /*#__PURE__*/S.Class("DeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": DeleteMessageBatchResponseType
+}) {}
+exports.DeleteMessageBatchResponse = DeleteMessageBatchResponse;
+class MessageBatchesCancelParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesCancelParams = MessageBatchesCancelParams;
+class MessageBatchesResultsParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesResultsParams = MessageBatchesResultsParams;
+class MessagesCountTokensPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessagesCountTokensPostParams = MessagesCountTokensPostParams;
+class CountMessageTokensParams extends /*#__PURE__*/S.Class("CountMessageTokensParams")({
+  "messages": /*#__PURE__*/S.Array(InputMessage),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(RequestTextBlock)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(ThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(ToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)), {
+    nullable: true
+  })
+}) {}
+exports.CountMessageTokensParams = CountMessageTokensParams;
+class CountMessageTokensResponse extends /*#__PURE__*/S.Class("CountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+exports.CountMessageTokensResponse = CountMessageTokensResponse;
+class ListFilesV1FilesGetParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.ListFilesV1FilesGetParams = ListFilesV1FilesGetParams;
+class FileMetadataSchemaType extends /*#__PURE__*/S.Literal("file") {}
+exports.FileMetadataSchemaType = FileMetadataSchemaType;
+class FileMetadataSchema extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "downloadable": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "filename": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)),
+  "id": S.String,
+  "mime_type": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)),
+  "size_bytes": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": FileMetadataSchemaType
+}) {}
+exports.FileMetadataSchema = FileMetadataSchema;
+class FileListResponse extends /*#__PURE__*/S.Class("FileListResponse")({
+  "data": /*#__PURE__*/S.Array(FileMetadataSchema),
+  "first_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "has_more": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "last_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.FileListResponse = FileListResponse;
+class UploadFileV1FilesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.UploadFileV1FilesPostParams = UploadFileV1FilesPostParams;
+class GetFileMetadataV1FilesFileIdGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.GetFileMetadataV1FilesFileIdGetParams = GetFileMetadataV1FilesFileIdGetParams;
+class DeleteFileV1FilesFileIdDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.DeleteFileV1FilesFileIdDeleteParams = DeleteFileV1FilesFileIdDeleteParams;
+class FileDeleteResponseType extends /*#__PURE__*/S.Literal("file_deleted") {}
+exports.FileDeleteResponseType = FileDeleteResponseType;
+class FileDeleteResponse extends /*#__PURE__*/S.Class("FileDeleteResponse")({
+  "id": S.String,
+  "type": /*#__PURE__*/S.optionalWith(FileDeleteResponseType, {
+    nullable: true
+  })
+}) {}
+exports.FileDeleteResponse = FileDeleteResponse;
+class DownloadFileV1FilesFileIdContentGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.DownloadFileV1FilesFileIdContentGetParams = DownloadFileV1FilesFileIdContentGetParams;
+class BetaMessagesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessagesPostParams = BetaMessagesPostParams;
+class BetaCacheControlEphemeralTtl extends /*#__PURE__*/S.Literal("5m", "1h") {}
+exports.BetaCacheControlEphemeralTtl = BetaCacheControlEphemeralTtl;
+class BetaCacheControlEphemeralType extends /*#__PURE__*/S.Literal("ephemeral") {}
+exports.BetaCacheControlEphemeralType = BetaCacheControlEphemeralType;
+class BetaCacheControlEphemeral extends /*#__PURE__*/S.Struct({
+  "ttl": /*#__PURE__*/S.optionalWith(BetaCacheControlEphemeralTtl, {
+    nullable: true
+  }),
+  "type": BetaCacheControlEphemeralType
+}) {}
+exports.BetaCacheControlEphemeral = BetaCacheControlEphemeral;
+class BetaRequestServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search", "code_execution") {}
+exports.BetaRequestServerToolUseBlockName = BetaRequestServerToolUseBlockName;
+class BetaRequestServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+exports.BetaRequestServerToolUseBlockType = BetaRequestServerToolUseBlockType;
+class BetaRequestServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": BetaRequestServerToolUseBlockName,
+  "type": BetaRequestServerToolUseBlockType
+}) {}
+exports.BetaRequestServerToolUseBlock = BetaRequestServerToolUseBlock;
+class BetaRequestWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+exports.BetaRequestWebSearchResultBlockType = BetaRequestWebSearchResultBlockType;
+class BetaRequestWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "title": S.String,
+  "type": BetaRequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+exports.BetaRequestWebSearchResultBlock = BetaRequestWebSearchResultBlock;
+class BetaWebSearchToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long") {}
+exports.BetaWebSearchToolResultErrorCode = BetaWebSearchToolResultErrorCode;
+class BetaRequestWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+exports.BetaRequestWebSearchToolResultErrorType = BetaRequestWebSearchToolResultErrorType;
+class BetaRequestWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaRequestWebSearchToolResultErrorType
+}) {}
+exports.BetaRequestWebSearchToolResultError = BetaRequestWebSearchToolResultError;
+class BetaRequestWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+exports.BetaRequestWebSearchToolResultBlockType = BetaRequestWebSearchToolResultBlockType;
+class BetaRequestWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(/*#__PURE__*/S.Array(BetaRequestWebSearchResultBlock), BetaRequestWebSearchToolResultError),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestWebSearchToolResultBlockType
+}) {}
+exports.BetaRequestWebSearchToolResultBlock = BetaRequestWebSearchToolResultBlock;
+class BetaCodeExecutionToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "too_many_requests", "execution_time_exceeded") {}
+exports.BetaCodeExecutionToolResultErrorCode = BetaCodeExecutionToolResultErrorCode;
+class BetaRequestCodeExecutionToolResultErrorType extends /*#__PURE__*/S.Literal("code_execution_tool_result_error") {}
+exports.BetaRequestCodeExecutionToolResultErrorType = BetaRequestCodeExecutionToolResultErrorType;
+class BetaRequestCodeExecutionToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaRequestCodeExecutionToolResultErrorType
+}) {}
+exports.BetaRequestCodeExecutionToolResultError = BetaRequestCodeExecutionToolResultError;
+class BetaRequestCodeExecutionOutputBlockType extends /*#__PURE__*/S.Literal("code_execution_output") {}
+exports.BetaRequestCodeExecutionOutputBlockType = BetaRequestCodeExecutionOutputBlockType;
+class BetaRequestCodeExecutionOutputBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaRequestCodeExecutionOutputBlockType
+}) {}
+exports.BetaRequestCodeExecutionOutputBlock = BetaRequestCodeExecutionOutputBlock;
+class BetaRequestCodeExecutionResultBlockType extends /*#__PURE__*/S.Literal("code_execution_result") {}
+exports.BetaRequestCodeExecutionResultBlockType = BetaRequestCodeExecutionResultBlockType;
+class BetaRequestCodeExecutionResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Array(BetaRequestCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaRequestCodeExecutionResultBlockType
+}) {}
+exports.BetaRequestCodeExecutionResultBlock = BetaRequestCodeExecutionResultBlock;
+class BetaRequestCodeExecutionToolResultBlockType extends /*#__PURE__*/S.Literal("code_execution_tool_result") {}
+exports.BetaRequestCodeExecutionToolResultBlockType = BetaRequestCodeExecutionToolResultBlockType;
+class BetaRequestCodeExecutionToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(BetaRequestCodeExecutionToolResultError, BetaRequestCodeExecutionResultBlock),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestCodeExecutionToolResultBlockType
+}) {}
+exports.BetaRequestCodeExecutionToolResultBlock = BetaRequestCodeExecutionToolResultBlock;
+class BetaRequestMCPToolUseBlockType extends /*#__PURE__*/S.Literal("mcp_tool_use") {}
+exports.BetaRequestMCPToolUseBlockType = BetaRequestMCPToolUseBlockType;
+class BetaRequestMCPToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaRequestMCPToolUseBlockType
+}) {}
+exports.BetaRequestMCPToolUseBlock = BetaRequestMCPToolUseBlock;
+class BetaRequestCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+exports.BetaRequestCharLocationCitationType = BetaRequestCharLocationCitationType;
+class BetaRequestCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestCharLocationCitationType
+}) {}
+exports.BetaRequestCharLocationCitation = BetaRequestCharLocationCitation;
+class BetaRequestPageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+exports.BetaRequestPageLocationCitationType = BetaRequestPageLocationCitationType;
+class BetaRequestPageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": BetaRequestPageLocationCitationType
+}) {}
+exports.BetaRequestPageLocationCitation = BetaRequestPageLocationCitation;
+class BetaRequestContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+exports.BetaRequestContentBlockLocationCitationType = BetaRequestContentBlockLocationCitationType;
+class BetaRequestContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestContentBlockLocationCitationType
+}) {}
+exports.BetaRequestContentBlockLocationCitation = BetaRequestContentBlockLocationCitation;
+class BetaRequestWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+exports.BetaRequestWebSearchResultLocationCitationType = BetaRequestWebSearchResultLocationCitationType;
+class BetaRequestWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "type": BetaRequestWebSearchResultLocationCitationType,
+  "url": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(2048))
+}) {}
+exports.BetaRequestWebSearchResultLocationCitation = BetaRequestWebSearchResultLocationCitation;
+class BetaRequestTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+exports.BetaRequestTextBlockType = BetaRequestTextBlockType;
+class BetaRequestTextBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestCharLocationCitation, BetaRequestPageLocationCitation, BetaRequestContentBlockLocationCitation, BetaRequestWebSearchResultLocationCitation)), S.Null), {
+    nullable: true
+  }),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": BetaRequestTextBlockType
+}) {}
+exports.BetaRequestTextBlock = BetaRequestTextBlock;
+class BetaRequestMCPToolResultBlockType extends /*#__PURE__*/S.Literal("mcp_tool_result") {}
+exports.BetaRequestMCPToolResultBlockType = BetaRequestMCPToolResultBlockType;
+class BetaRequestMCPToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestMCPToolResultBlockType
+}) {}
+exports.BetaRequestMCPToolResultBlock = BetaRequestMCPToolResultBlock;
+class BetaBase64ImageSourceMediaType extends /*#__PURE__*/S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+exports.BetaBase64ImageSourceMediaType = BetaBase64ImageSourceMediaType;
+class BetaBase64ImageSourceType extends /*#__PURE__*/S.Literal("base64") {}
+exports.BetaBase64ImageSourceType = BetaBase64ImageSourceType;
+class BetaBase64ImageSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64ImageSourceMediaType,
+  "type": BetaBase64ImageSourceType
+}) {}
+exports.BetaBase64ImageSource = BetaBase64ImageSource;
+class BetaURLImageSourceType extends /*#__PURE__*/S.Literal("url") {}
+exports.BetaURLImageSourceType = BetaURLImageSourceType;
+class BetaURLImageSource extends /*#__PURE__*/S.Struct({
+  "type": BetaURLImageSourceType,
+  "url": S.String
+}) {}
+exports.BetaURLImageSource = BetaURLImageSource;
+class BetaFileImageSourceType extends /*#__PURE__*/S.Literal("file") {}
+exports.BetaFileImageSourceType = BetaFileImageSourceType;
+class BetaFileImageSource extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaFileImageSourceType
+}) {}
+exports.BetaFileImageSource = BetaFileImageSource;
+class BetaRequestImageBlockType extends /*#__PURE__*/S.Literal("image") {}
+exports.BetaRequestImageBlockType = BetaRequestImageBlockType;
+class BetaRequestImageBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(BetaBase64ImageSource, BetaURLImageSource, BetaFileImageSource),
+  "type": BetaRequestImageBlockType
+}) {}
+exports.BetaRequestImageBlock = BetaRequestImageBlock;
+class BetaRequestToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+exports.BetaRequestToolUseBlockType = BetaRequestToolUseBlockType;
+class BetaRequestToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(200)),
+  "type": BetaRequestToolUseBlockType
+}) {}
+exports.BetaRequestToolUseBlock = BetaRequestToolUseBlock;
+class BetaRequestToolResultBlockType extends /*#__PURE__*/S.Literal("tool_result") {}
+exports.BetaRequestToolResultBlockType = BetaRequestToolResultBlockType;
+class BetaRequestToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestTextBlock, BetaRequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestToolResultBlockType
+}) {}
+exports.BetaRequestToolResultBlock = BetaRequestToolResultBlock;
+class BetaRequestCitationsConfig extends /*#__PURE__*/S.Struct({
+  "enabled": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+exports.BetaRequestCitationsConfig = BetaRequestCitationsConfig;
+class BetaBase64PDFSourceMediaType extends /*#__PURE__*/S.Literal("application/pdf") {}
+exports.BetaBase64PDFSourceMediaType = BetaBase64PDFSourceMediaType;
+class BetaBase64PDFSourceType extends /*#__PURE__*/S.Literal("base64") {}
+exports.BetaBase64PDFSourceType = BetaBase64PDFSourceType;
+class BetaBase64PDFSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64PDFSourceMediaType,
+  "type": BetaBase64PDFSourceType
+}) {}
+exports.BetaBase64PDFSource = BetaBase64PDFSource;
+class BetaPlainTextSourceMediaType extends /*#__PURE__*/S.Literal("text/plain") {}
+exports.BetaPlainTextSourceMediaType = BetaPlainTextSourceMediaType;
+class BetaPlainTextSourceType extends /*#__PURE__*/S.Literal("text") {}
+exports.BetaPlainTextSourceType = BetaPlainTextSourceType;
+class BetaPlainTextSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaPlainTextSourceMediaType,
+  "type": BetaPlainTextSourceType
+}) {}
+exports.BetaPlainTextSource = BetaPlainTextSource;
+class BetaContentBlockSourceType extends /*#__PURE__*/S.Literal("content") {}
+exports.BetaContentBlockSourceType = BetaContentBlockSourceType;
+class BetaContentBlockSource extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestTextBlock, BetaRequestImageBlock))),
+  "type": BetaContentBlockSourceType
+}) {}
+exports.BetaContentBlockSource = BetaContentBlockSource;
+class BetaURLPDFSourceType extends /*#__PURE__*/S.Literal("url") {}
+exports.BetaURLPDFSourceType = BetaURLPDFSourceType;
+class BetaURLPDFSource extends /*#__PURE__*/S.Struct({
+  "type": BetaURLPDFSourceType,
+  "url": S.String
+}) {}
+exports.BetaURLPDFSource = BetaURLPDFSource;
+class BetaFileDocumentSourceType extends /*#__PURE__*/S.Literal("file") {}
+exports.BetaFileDocumentSourceType = BetaFileDocumentSourceType;
+class BetaFileDocumentSource extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaFileDocumentSourceType
+}) {}
+exports.BetaFileDocumentSource = BetaFileDocumentSource;
+class BetaRequestDocumentBlockType extends /*#__PURE__*/S.Literal("document") {}
+exports.BetaRequestDocumentBlockType = BetaRequestDocumentBlockType;
+class BetaRequestDocumentBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(BetaRequestCitationsConfig, {
+    nullable: true
+  }),
+  "context": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)), S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(BetaBase64PDFSource, BetaPlainTextSource, BetaContentBlockSource, BetaURLPDFSource, BetaFileDocumentSource),
+  "title": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)), S.Null), {
+    nullable: true
+  }),
+  "type": BetaRequestDocumentBlockType
+}) {}
+exports.BetaRequestDocumentBlock = BetaRequestDocumentBlock;
+class BetaRequestThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+exports.BetaRequestThinkingBlockType = BetaRequestThinkingBlockType;
+class BetaRequestThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaRequestThinkingBlockType
+}) {}
+exports.BetaRequestThinkingBlock = BetaRequestThinkingBlock;
+class BetaRequestRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+exports.BetaRequestRedactedThinkingBlockType = BetaRequestRedactedThinkingBlockType;
+class BetaRequestRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": BetaRequestRedactedThinkingBlockType
+}) {}
+exports.BetaRequestRedactedThinkingBlock = BetaRequestRedactedThinkingBlock;
+class BetaRequestContainerUploadBlockType extends /*#__PURE__*/S.Literal("container_upload") {}
+exports.BetaRequestContainerUploadBlockType = BetaRequestContainerUploadBlockType;
+class BetaRequestContainerUploadBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "file_id": S.String,
+  "type": BetaRequestContainerUploadBlockType
+}) {}
+exports.BetaRequestContainerUploadBlock = BetaRequestContainerUploadBlock;
+class BetaInputContentBlock extends /*#__PURE__*/S.Union(BetaRequestServerToolUseBlock, BetaRequestWebSearchToolResultBlock, BetaRequestCodeExecutionToolResultBlock, BetaRequestMCPToolUseBlock, BetaRequestMCPToolResultBlock, BetaRequestTextBlock, BetaRequestImageBlock, BetaRequestToolUseBlock, BetaRequestToolResultBlock, BetaRequestDocumentBlock, BetaRequestThinkingBlock, BetaRequestRedactedThinkingBlock, BetaRequestContainerUploadBlock) {}
+exports.BetaInputContentBlock = BetaInputContentBlock;
+class BetaInputMessageRole extends /*#__PURE__*/S.Literal("user", "assistant") {}
+exports.BetaInputMessageRole = BetaInputMessageRole;
+class BetaInputMessage extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaInputContentBlock)),
+  "role": BetaInputMessageRole
+}) {}
+exports.BetaInputMessage = BetaInputMessage;
+class BetaRequestMCPServerToolConfiguration extends /*#__PURE__*/S.Struct({
+  "allowed_tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "enabled": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Boolean, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaRequestMCPServerToolConfiguration = BetaRequestMCPServerToolConfiguration;
+class BetaRequestMCPServerURLDefinitionType extends /*#__PURE__*/S.Literal("url") {}
+exports.BetaRequestMCPServerURLDefinitionType = BetaRequestMCPServerURLDefinitionType;
+class BetaRequestMCPServerURLDefinition extends /*#__PURE__*/S.Struct({
+  "authorization_token": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "name": S.String,
+  "tool_configuration": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaRequestMCPServerToolConfiguration, S.Null), {
+    nullable: true
+  }),
+  "type": BetaRequestMCPServerURLDefinitionType,
+  "url": S.String
+}) {}
+exports.BetaRequestMCPServerURLDefinition = BetaRequestMCPServerURLDefinition;
+class BetaMetadata extends /*#__PURE__*/S.Struct({
+  "user_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.maxLength(256)), S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaMetadata = BetaMetadata;
+class BetaCreateMessageParamsServiceTier extends /*#__PURE__*/S.Literal("auto", "standard_only") {}
+exports.BetaCreateMessageParamsServiceTier = BetaCreateMessageParamsServiceTier;
+class BetaThinkingConfigEnabledType extends /*#__PURE__*/S.Literal("enabled") {}
+exports.BetaThinkingConfigEnabledType = BetaThinkingConfigEnabledType;
+class BetaThinkingConfigEnabled extends /*#__PURE__*/S.Struct({
+  "budget_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1024)),
+  "type": BetaThinkingConfigEnabledType
+}) {}
+exports.BetaThinkingConfigEnabled = BetaThinkingConfigEnabled;
+class BetaThinkingConfigDisabledType extends /*#__PURE__*/S.Literal("disabled") {}
+exports.BetaThinkingConfigDisabledType = BetaThinkingConfigDisabledType;
+class BetaThinkingConfigDisabled extends /*#__PURE__*/S.Struct({
+  "type": BetaThinkingConfigDisabledType
+}) {}
+exports.BetaThinkingConfigDisabled = BetaThinkingConfigDisabled;
+class BetaThinkingConfigParam extends /*#__PURE__*/S.Union(BetaThinkingConfigEnabled, BetaThinkingConfigDisabled) {}
+exports.BetaThinkingConfigParam = BetaThinkingConfigParam;
+class BetaToolChoiceAutoType extends /*#__PURE__*/S.Literal("auto") {}
+exports.BetaToolChoiceAutoType = BetaToolChoiceAutoType;
+class BetaToolChoiceAuto extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": BetaToolChoiceAutoType
+}) {}
+exports.BetaToolChoiceAuto = BetaToolChoiceAuto;
+class BetaToolChoiceAnyType extends /*#__PURE__*/S.Literal("any") {}
+exports.BetaToolChoiceAnyType = BetaToolChoiceAnyType;
+class BetaToolChoiceAny extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": BetaToolChoiceAnyType
+}) {}
+exports.BetaToolChoiceAny = BetaToolChoiceAny;
+class BetaToolChoiceToolType extends /*#__PURE__*/S.Literal("tool") {}
+exports.BetaToolChoiceToolType = BetaToolChoiceToolType;
+class BetaToolChoiceTool extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "name": S.String,
+  "type": BetaToolChoiceToolType
+}) {}
+exports.BetaToolChoiceTool = BetaToolChoiceTool;
+class BetaToolChoiceNoneType extends /*#__PURE__*/S.Literal("none") {}
+exports.BetaToolChoiceNoneType = BetaToolChoiceNoneType;
+class BetaToolChoiceNone extends /*#__PURE__*/S.Struct({
+  "type": BetaToolChoiceNoneType
+}) {}
+exports.BetaToolChoiceNone = BetaToolChoiceNone;
+class BetaToolChoice extends /*#__PURE__*/S.Union(BetaToolChoiceAuto, BetaToolChoiceAny, BetaToolChoiceTool, BetaToolChoiceNone) {}
+exports.BetaToolChoice = BetaToolChoice;
+class BetaToolTypeEnum extends /*#__PURE__*/S.Literal("custom") {}
+exports.BetaToolTypeEnum = BetaToolTypeEnum;
+class BetaInputSchemaType extends /*#__PURE__*/S.Literal("object") {}
+exports.BetaInputSchemaType = BetaInputSchemaType;
+class BetaInputSchema extends /*#__PURE__*/S.Struct({
+  "properties": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }), S.Null), {
+    nullable: true
+  }),
+  "required": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "type": BetaInputSchemaType
+}) {}
+exports.BetaInputSchema = BetaInputSchema;
+class BetaTool extends /*#__PURE__*/S.Struct({
+  "type": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Null, BetaToolTypeEnum), {
+    nullable: true
+  }),
+  "description": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": BetaInputSchema,
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaTool = BetaTool;
+class BetaComputerUseTool20241022Name extends /*#__PURE__*/S.Literal("computer") {}
+exports.BetaComputerUseTool20241022Name = BetaComputerUseTool20241022Name;
+class BetaComputerUseTool20241022Type extends /*#__PURE__*/S.Literal("computer_20241022") {}
+exports.BetaComputerUseTool20241022Type = BetaComputerUseTool20241022Type;
+class BetaComputerUseTool20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "display_height_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "display_number": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null), {
+    nullable: true
+  }),
+  "display_width_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20241022Name,
+  "type": BetaComputerUseTool20241022Type
+}) {}
+exports.BetaComputerUseTool20241022 = BetaComputerUseTool20241022;
+class BetaBashTool20241022Name extends /*#__PURE__*/S.Literal("bash") {}
+exports.BetaBashTool20241022Name = BetaBashTool20241022Name;
+class BetaBashTool20241022Type extends /*#__PURE__*/S.Literal("bash_20241022") {}
+exports.BetaBashTool20241022Type = BetaBashTool20241022Type;
+class BetaBashTool20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaBashTool20241022Name,
+  "type": BetaBashTool20241022Type
+}) {}
+exports.BetaBashTool20241022 = BetaBashTool20241022;
+class BetaTextEditor20241022Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+exports.BetaTextEditor20241022Name = BetaTextEditor20241022Name;
+class BetaTextEditor20241022Type extends /*#__PURE__*/S.Literal("text_editor_20241022") {}
+exports.BetaTextEditor20241022Type = BetaTextEditor20241022Type;
+class BetaTextEditor20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20241022Name,
+  "type": BetaTextEditor20241022Type
+}) {}
+exports.BetaTextEditor20241022 = BetaTextEditor20241022;
+class BetaComputerUseTool20250124Name extends /*#__PURE__*/S.Literal("computer") {}
+exports.BetaComputerUseTool20250124Name = BetaComputerUseTool20250124Name;
+class BetaComputerUseTool20250124Type extends /*#__PURE__*/S.Literal("computer_20250124") {}
+exports.BetaComputerUseTool20250124Type = BetaComputerUseTool20250124Type;
+class BetaComputerUseTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "display_height_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "display_number": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null), {
+    nullable: true
+  }),
+  "display_width_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20250124Name,
+  "type": BetaComputerUseTool20250124Type
+}) {}
+exports.BetaComputerUseTool20250124 = BetaComputerUseTool20250124;
+class BetaBashTool20250124Name extends /*#__PURE__*/S.Literal("bash") {}
+exports.BetaBashTool20250124Name = BetaBashTool20250124Name;
+class BetaBashTool20250124Type extends /*#__PURE__*/S.Literal("bash_20250124") {}
+exports.BetaBashTool20250124Type = BetaBashTool20250124Type;
+class BetaBashTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaBashTool20250124Name,
+  "type": BetaBashTool20250124Type
+}) {}
+exports.BetaBashTool20250124 = BetaBashTool20250124;
+class BetaTextEditor20250124Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+exports.BetaTextEditor20250124Name = BetaTextEditor20250124Name;
+class BetaTextEditor20250124Type extends /*#__PURE__*/S.Literal("text_editor_20250124") {}
+exports.BetaTextEditor20250124Type = BetaTextEditor20250124Type;
+class BetaTextEditor20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20250124Name,
+  "type": BetaTextEditor20250124Type
+}) {}
+exports.BetaTextEditor20250124 = BetaTextEditor20250124;
+class BetaTextEditor20250429Name extends /*#__PURE__*/S.Literal("str_replace_based_edit_tool") {}
+exports.BetaTextEditor20250429Name = BetaTextEditor20250429Name;
+class BetaTextEditor20250429Type extends /*#__PURE__*/S.Literal("text_editor_20250429") {}
+exports.BetaTextEditor20250429Type = BetaTextEditor20250429Type;
+class BetaTextEditor20250429 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20250429Name,
+  "type": BetaTextEditor20250429Type
+}) {}
+exports.BetaTextEditor20250429 = BetaTextEditor20250429;
+class BetaWebSearchTool20250305Name extends /*#__PURE__*/S.Literal("web_search") {}
+exports.BetaWebSearchTool20250305Name = BetaWebSearchTool20250305Name;
+class BetaWebSearchTool20250305Type extends /*#__PURE__*/S.Literal("web_search_20250305") {}
+exports.BetaWebSearchTool20250305Type = BetaWebSearchTool20250305Type;
+class BetaUserLocationType extends /*#__PURE__*/S.Literal("approximate") {}
+exports.BetaUserLocationType = BetaUserLocationType;
+class BetaUserLocation extends /*#__PURE__*/S.Struct({
+  "city": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "country": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(2), /*#__PURE__*/S.maxLength(2)), S.Null), {
+    nullable: true
+  }),
+  "region": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "timezone": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "type": BetaUserLocationType
+}) {}
+exports.BetaUserLocation = BetaUserLocation;
+class BetaWebSearchTool20250305 extends /*#__PURE__*/S.Struct({
+  "allowed_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "blocked_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "max_uses": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThan(0)), S.Null), {
+    nullable: true
+  }),
+  "name": BetaWebSearchTool20250305Name,
+  "type": BetaWebSearchTool20250305Type,
+  "user_location": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaUserLocation, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaWebSearchTool20250305 = BetaWebSearchTool20250305;
+class BetaCodeExecutionTool20250522Name extends /*#__PURE__*/S.Literal("code_execution") {}
+exports.BetaCodeExecutionTool20250522Name = BetaCodeExecutionTool20250522Name;
+class BetaCodeExecutionTool20250522Type extends /*#__PURE__*/S.Literal("code_execution_20250522") {}
+exports.BetaCodeExecutionTool20250522Type = BetaCodeExecutionTool20250522Type;
+class BetaCodeExecutionTool20250522 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaCodeExecutionTool20250522Name,
+  "type": BetaCodeExecutionTool20250522Type
+}) {}
+exports.BetaCodeExecutionTool20250522 = BetaCodeExecutionTool20250522;
+class BetaCreateMessageParams extends /*#__PURE__*/S.Class("BetaCreateMessageParams")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "messages": /*#__PURE__*/S.Array(BetaInputMessage),
+  "container": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "max_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "mcp_servers": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(BetaRequestMCPServerURLDefinition).pipe(/*#__PURE__*/S.maxItems(20)), {
+    nullable: true
+  }),
+  "metadata": /*#__PURE__*/S.optionalWith(BetaMetadata, {
+    nullable: true
+  }),
+  "service_tier": /*#__PURE__*/S.optionalWith(BetaCreateMessageParamsServiceTier, {
+    nullable: true
+  }),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(BetaThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(BetaToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaTool, BetaComputerUseTool20241022, BetaBashTool20241022, BetaTextEditor20241022, BetaComputerUseTool20250124, BetaBashTool20250124, BetaTextEditor20250124, BetaTextEditor20250429, BetaWebSearchTool20250305, BetaCodeExecutionTool20250522)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  })
+}) {}
+exports.BetaCreateMessageParams = BetaCreateMessageParams;
+class BetaMessageType extends /*#__PURE__*/S.Literal("message") {}
+exports.BetaMessageType = BetaMessageType;
+class BetaMessageRole extends /*#__PURE__*/S.Literal("assistant") {}
+exports.BetaMessageRole = BetaMessageRole;
+class BetaResponseCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+exports.BetaResponseCharLocationCitationType = BetaResponseCharLocationCitationType;
+class BetaResponseCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseCharLocationCitationType
+}) {}
+exports.BetaResponseCharLocationCitation = BetaResponseCharLocationCitation;
+class BetaResponsePageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+exports.BetaResponsePageLocationCitationType = BetaResponsePageLocationCitationType;
+class BetaResponsePageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": BetaResponsePageLocationCitationType
+}) {}
+exports.BetaResponsePageLocationCitation = BetaResponsePageLocationCitation;
+class BetaResponseContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+exports.BetaResponseContentBlockLocationCitationType = BetaResponseContentBlockLocationCitationType;
+class BetaResponseContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseContentBlockLocationCitationType
+}) {}
+exports.BetaResponseContentBlockLocationCitation = BetaResponseContentBlockLocationCitation;
+class BetaResponseWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+exports.BetaResponseWebSearchResultLocationCitationType = BetaResponseWebSearchResultLocationCitationType;
+class BetaResponseWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": BetaResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+exports.BetaResponseWebSearchResultLocationCitation = BetaResponseWebSearchResultLocationCitation;
+class BetaResponseTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+exports.BetaResponseTextBlockType = BetaResponseTextBlockType;
+class BetaResponseTextBlock extends /*#__PURE__*/S.Struct({
+  "citations": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaResponseCharLocationCitation, BetaResponsePageLocationCitation, BetaResponseContentBlockLocationCitation, BetaResponseWebSearchResultLocationCitation)))),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(0), /*#__PURE__*/S.maxLength(5000000)),
+  "type": BetaResponseTextBlockType
+}) {}
+exports.BetaResponseTextBlock = BetaResponseTextBlock;
+class BetaResponseToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+exports.BetaResponseToolUseBlockType = BetaResponseToolUseBlockType;
+class BetaResponseToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": BetaResponseToolUseBlockType
+}) {}
+exports.BetaResponseToolUseBlock = BetaResponseToolUseBlock;
+class BetaResponseServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search", "code_execution") {}
+exports.BetaResponseServerToolUseBlockName = BetaResponseServerToolUseBlockName;
+class BetaResponseServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+exports.BetaResponseServerToolUseBlockType = BetaResponseServerToolUseBlockType;
+class BetaResponseServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": BetaResponseServerToolUseBlockName,
+  "type": BetaResponseServerToolUseBlockType
+}) {}
+exports.BetaResponseServerToolUseBlock = BetaResponseServerToolUseBlock;
+class BetaResponseWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+exports.BetaResponseWebSearchToolResultErrorType = BetaResponseWebSearchToolResultErrorType;
+class BetaResponseWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaResponseWebSearchToolResultErrorType
+}) {}
+exports.BetaResponseWebSearchToolResultError = BetaResponseWebSearchToolResultError;
+class BetaResponseWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+exports.BetaResponseWebSearchResultBlockType = BetaResponseWebSearchResultBlockType;
+class BetaResponseWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": BetaResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+exports.BetaResponseWebSearchResultBlock = BetaResponseWebSearchResultBlock;
+class BetaResponseWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+exports.BetaResponseWebSearchToolResultBlockType = BetaResponseWebSearchToolResultBlockType;
+class BetaResponseWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(BetaResponseWebSearchToolResultError, /*#__PURE__*/S.Array(BetaResponseWebSearchResultBlock)),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseWebSearchToolResultBlockType
+}) {}
+exports.BetaResponseWebSearchToolResultBlock = BetaResponseWebSearchToolResultBlock;
+class BetaResponseCodeExecutionToolResultErrorType extends /*#__PURE__*/S.Literal("code_execution_tool_result_error") {}
+exports.BetaResponseCodeExecutionToolResultErrorType = BetaResponseCodeExecutionToolResultErrorType;
+class BetaResponseCodeExecutionToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaResponseCodeExecutionToolResultErrorType
+}) {}
+exports.BetaResponseCodeExecutionToolResultError = BetaResponseCodeExecutionToolResultError;
+class BetaResponseCodeExecutionOutputBlockType extends /*#__PURE__*/S.Literal("code_execution_output") {}
+exports.BetaResponseCodeExecutionOutputBlockType = BetaResponseCodeExecutionOutputBlockType;
+class BetaResponseCodeExecutionOutputBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseCodeExecutionOutputBlockType
+}) {}
+exports.BetaResponseCodeExecutionOutputBlock = BetaResponseCodeExecutionOutputBlock;
+class BetaResponseCodeExecutionResultBlockType extends /*#__PURE__*/S.Literal("code_execution_result") {}
+exports.BetaResponseCodeExecutionResultBlockType = BetaResponseCodeExecutionResultBlockType;
+class BetaResponseCodeExecutionResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Array(BetaResponseCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaResponseCodeExecutionResultBlockType
+}) {}
+exports.BetaResponseCodeExecutionResultBlock = BetaResponseCodeExecutionResultBlock;
+class BetaResponseCodeExecutionToolResultBlockType extends /*#__PURE__*/S.Literal("code_execution_tool_result") {}
+exports.BetaResponseCodeExecutionToolResultBlockType = BetaResponseCodeExecutionToolResultBlockType;
+class BetaResponseCodeExecutionToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(BetaResponseCodeExecutionToolResultError, BetaResponseCodeExecutionResultBlock),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseCodeExecutionToolResultBlockType
+}) {}
+exports.BetaResponseCodeExecutionToolResultBlock = BetaResponseCodeExecutionToolResultBlock;
+class BetaResponseMCPToolUseBlockType extends /*#__PURE__*/S.Literal("mcp_tool_use") {}
+exports.BetaResponseMCPToolUseBlockType = BetaResponseMCPToolUseBlockType;
+class BetaResponseMCPToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaResponseMCPToolUseBlockType
+}) {}
+exports.BetaResponseMCPToolUseBlock = BetaResponseMCPToolUseBlock;
+class BetaResponseMCPToolResultBlockType extends /*#__PURE__*/S.Literal("mcp_tool_result") {}
+exports.BetaResponseMCPToolResultBlockType = BetaResponseMCPToolResultBlockType;
+class BetaResponseMCPToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaResponseTextBlock)),
+  "is_error": S.Boolean,
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaResponseMCPToolResultBlockType
+}) {}
+exports.BetaResponseMCPToolResultBlock = BetaResponseMCPToolResultBlock;
+class BetaResponseContainerUploadBlockType extends /*#__PURE__*/S.Literal("container_upload") {}
+exports.BetaResponseContainerUploadBlockType = BetaResponseContainerUploadBlockType;
+class BetaResponseContainerUploadBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseContainerUploadBlockType
+}) {}
+exports.BetaResponseContainerUploadBlock = BetaResponseContainerUploadBlock;
+class BetaResponseThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+exports.BetaResponseThinkingBlockType = BetaResponseThinkingBlockType;
+class BetaResponseThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaResponseThinkingBlockType
+}) {}
+exports.BetaResponseThinkingBlock = BetaResponseThinkingBlock;
+class BetaResponseRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+exports.BetaResponseRedactedThinkingBlockType = BetaResponseRedactedThinkingBlockType;
+class BetaResponseRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": BetaResponseRedactedThinkingBlockType
+}) {}
+exports.BetaResponseRedactedThinkingBlock = BetaResponseRedactedThinkingBlock;
+class BetaContentBlock extends /*#__PURE__*/S.Union(BetaResponseTextBlock, BetaResponseToolUseBlock, BetaResponseServerToolUseBlock, BetaResponseWebSearchToolResultBlock, BetaResponseCodeExecutionToolResultBlock, BetaResponseMCPToolUseBlock, BetaResponseMCPToolResultBlock, BetaResponseContainerUploadBlock, BetaResponseThinkingBlock, BetaResponseRedactedThinkingBlock) {}
+exports.BetaContentBlock = BetaContentBlock;
+class BetaStopReason extends /*#__PURE__*/S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal") {}
+exports.BetaStopReason = BetaStopReason;
+class BetaCacheCreation extends /*#__PURE__*/S.Struct({
+  "ephemeral_1h_input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "ephemeral_5m_input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+exports.BetaCacheCreation = BetaCacheCreation;
+class BetaServerToolUsage extends /*#__PURE__*/S.Struct({
+  "web_search_requests": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+exports.BetaServerToolUsage = BetaServerToolUsage;
+class BetaUsageServiceTierEnum extends /*#__PURE__*/S.Literal("standard", "priority", "batch") {}
+exports.BetaUsageServiceTierEnum = BetaUsageServiceTierEnum;
+class BetaUsage extends /*#__PURE__*/S.Struct({
+  "cache_creation": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaCacheCreation, S.Null)),
+  "cache_creation_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "output_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "server_tool_use": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(BetaServerToolUsage)),
+  "service_tier": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaUsageServiceTierEnum, S.Null))
+}) {}
+exports.BetaUsage = BetaUsage;
+class BetaContainer extends /*#__PURE__*/S.Struct({
+  "expires_at": S.String,
+  "id": S.String
+}) {}
+exports.BetaContainer = BetaContainer;
+class BetaMessage extends /*#__PURE__*/S.Class("BetaMessage")({
+  "id": S.String,
+  "type": BetaMessageType,
+  "role": BetaMessageRole,
+  "content": /*#__PURE__*/S.Array(BetaContentBlock),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(BetaStopReason, S.Null),
+  "stop_sequence": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "usage": BetaUsage,
+  "container": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaContainer, S.Null))
+}) {}
+exports.BetaMessage = BetaMessage;
+class BetaInvalidRequestErrorType extends /*#__PURE__*/S.Literal("invalid_request_error") {}
+exports.BetaInvalidRequestErrorType = BetaInvalidRequestErrorType;
+class BetaInvalidRequestError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaInvalidRequestErrorType
+}) {}
+exports.BetaInvalidRequestError = BetaInvalidRequestError;
+class BetaAuthenticationErrorType extends /*#__PURE__*/S.Literal("authentication_error") {}
+exports.BetaAuthenticationErrorType = BetaAuthenticationErrorType;
+class BetaAuthenticationError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaAuthenticationErrorType
+}) {}
+exports.BetaAuthenticationError = BetaAuthenticationError;
+class BetaBillingErrorType extends /*#__PURE__*/S.Literal("billing_error") {}
+exports.BetaBillingErrorType = BetaBillingErrorType;
+class BetaBillingError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaBillingErrorType
+}) {}
+exports.BetaBillingError = BetaBillingError;
+class BetaPermissionErrorType extends /*#__PURE__*/S.Literal("permission_error") {}
+exports.BetaPermissionErrorType = BetaPermissionErrorType;
+class BetaPermissionError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaPermissionErrorType
+}) {}
+exports.BetaPermissionError = BetaPermissionError;
+class BetaNotFoundErrorType extends /*#__PURE__*/S.Literal("not_found_error") {}
+exports.BetaNotFoundErrorType = BetaNotFoundErrorType;
+class BetaNotFoundError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaNotFoundErrorType
+}) {}
+exports.BetaNotFoundError = BetaNotFoundError;
+class BetaRateLimitErrorType extends /*#__PURE__*/S.Literal("rate_limit_error") {}
+exports.BetaRateLimitErrorType = BetaRateLimitErrorType;
+class BetaRateLimitError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaRateLimitErrorType
+}) {}
+exports.BetaRateLimitError = BetaRateLimitError;
+class BetaGatewayTimeoutErrorType extends /*#__PURE__*/S.Literal("timeout_error") {}
+exports.BetaGatewayTimeoutErrorType = BetaGatewayTimeoutErrorType;
+class BetaGatewayTimeoutError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaGatewayTimeoutErrorType
+}) {}
+exports.BetaGatewayTimeoutError = BetaGatewayTimeoutError;
+class BetaAPIErrorType extends /*#__PURE__*/S.Literal("api_error") {}
+exports.BetaAPIErrorType = BetaAPIErrorType;
+class BetaAPIError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaAPIErrorType
+}) {}
+exports.BetaAPIError = BetaAPIError;
+class BetaOverloadedErrorType extends /*#__PURE__*/S.Literal("overloaded_error") {}
+exports.BetaOverloadedErrorType = BetaOverloadedErrorType;
+class BetaOverloadedError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaOverloadedErrorType
+}) {}
+exports.BetaOverloadedError = BetaOverloadedError;
+class BetaErrorResponseType extends /*#__PURE__*/S.Literal("error") {}
+exports.BetaErrorResponseType = BetaErrorResponseType;
+class BetaErrorResponse extends /*#__PURE__*/S.Class("BetaErrorResponse")({
+  "error": /*#__PURE__*/S.Union(BetaInvalidRequestError, BetaAuthenticationError, BetaBillingError, BetaPermissionError, BetaNotFoundError, BetaRateLimitError, BetaGatewayTimeoutError, BetaAPIError, BetaOverloadedError),
+  "type": BetaErrorResponseType
+}) {}
+exports.BetaErrorResponse = BetaErrorResponse;
+class BetaModelsListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaModelsListParams = BetaModelsListParams;
+class BetaModelInfoType extends /*#__PURE__*/S.Literal("model") {}
+exports.BetaModelInfoType = BetaModelInfoType;
+class BetaModelInfo extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": BetaModelInfoType
+}) {}
+exports.BetaModelInfo = BetaModelInfo;
+class BetaListResponseModelInfo extends /*#__PURE__*/S.Class("BetaListResponseModelInfo")({
+  "data": /*#__PURE__*/S.Array(BetaModelInfo),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+exports.BetaListResponseModelInfo = BetaListResponseModelInfo;
+class BetaModelsGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaModelsGetParams = BetaModelsGetParams;
+class BetaMessageBatchesListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesListParams = BetaMessageBatchesListParams;
+class BetaMessageBatchProcessingStatus extends /*#__PURE__*/S.Literal("in_progress", "canceling", "ended") {}
+exports.BetaMessageBatchProcessingStatus = BetaMessageBatchProcessingStatus;
+class BetaRequestCounts extends /*#__PURE__*/S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+exports.BetaRequestCounts = BetaRequestCounts;
+class BetaMessageBatchType extends /*#__PURE__*/S.Literal("message_batch") {}
+exports.BetaMessageBatchType = BetaMessageBatchType;
+class BetaMessageBatch extends /*#__PURE__*/S.Struct({
+  "archived_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "cancel_initiated_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": BetaMessageBatchProcessingStatus,
+  "request_counts": BetaRequestCounts,
+  "results_url": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": BetaMessageBatchType
+}) {}
+exports.BetaMessageBatch = BetaMessageBatch;
+class BetaListResponseMessageBatch extends /*#__PURE__*/S.Class("BetaListResponseMessageBatch")({
+  "data": /*#__PURE__*/S.Array(BetaMessageBatch),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+exports.BetaListResponseMessageBatch = BetaListResponseMessageBatch;
+class BetaMessageBatchesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesPostParams = BetaMessageBatchesPostParams;
+class BetaMessageBatchIndividualRequestParams extends /*#__PURE__*/S.Struct({
+  "custom_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": BetaCreateMessageParams
+}) {}
+exports.BetaMessageBatchIndividualRequestParams = BetaMessageBatchIndividualRequestParams;
+class BetaCreateMessageBatchParams extends /*#__PURE__*/S.Class("BetaCreateMessageBatchParams")({
+  "requests": /*#__PURE__*/S.Array(BetaMessageBatchIndividualRequestParams).pipe(/*#__PURE__*/S.minItems(1), /*#__PURE__*/S.maxItems(10000))
+}) {}
+exports.BetaCreateMessageBatchParams = BetaCreateMessageBatchParams;
+class BetaMessageBatchesRetrieveParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesRetrieveParams = BetaMessageBatchesRetrieveParams;
+class BetaMessageBatchesDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesDeleteParams = BetaMessageBatchesDeleteParams;
+class BetaDeleteMessageBatchResponseType extends /*#__PURE__*/S.Literal("message_batch_deleted") {}
+exports.BetaDeleteMessageBatchResponseType = BetaDeleteMessageBatchResponseType;
+class BetaDeleteMessageBatchResponse extends /*#__PURE__*/S.Class("BetaDeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": BetaDeleteMessageBatchResponseType
+}) {}
+exports.BetaDeleteMessageBatchResponse = BetaDeleteMessageBatchResponse;
+class BetaMessageBatchesCancelParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesCancelParams = BetaMessageBatchesCancelParams;
+class BetaMessageBatchesResultsParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesResultsParams = BetaMessageBatchesResultsParams;
+class BetaMessagesCountTokensPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessagesCountTokensPostParams = BetaMessagesCountTokensPostParams;
+class BetaCountMessageTokensParams extends /*#__PURE__*/S.Class("BetaCountMessageTokensParams")({
+  "mcp_servers": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(BetaRequestMCPServerURLDefinition).pipe(/*#__PURE__*/S.maxItems(20)), {
+    nullable: true
+  }),
+  "messages": /*#__PURE__*/S.Array(BetaInputMessage),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(BetaThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(BetaToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaTool, BetaComputerUseTool20241022, BetaBashTool20241022, BetaTextEditor20241022, BetaComputerUseTool20250124, BetaBashTool20250124, BetaTextEditor20250124, BetaTextEditor20250429, BetaWebSearchTool20250305, BetaCodeExecutionTool20250522)), {
+    nullable: true
+  })
+}) {}
+exports.BetaCountMessageTokensParams = BetaCountMessageTokensParams;
+class BetaCountMessageTokensResponse extends /*#__PURE__*/S.Class("BetaCountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+exports.BetaCountMessageTokensResponse = BetaCountMessageTokensResponse;
+class BetaListFilesV1FilesGetParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaListFilesV1FilesGetParams = BetaListFilesV1FilesGetParams;
+class BetaFileMetadataSchemaType extends /*#__PURE__*/S.Literal("file") {}
+exports.BetaFileMetadataSchemaType = BetaFileMetadataSchemaType;
+class BetaFileMetadataSchema extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "downloadable": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "filename": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)),
+  "id": S.String,
+  "mime_type": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)),
+  "size_bytes": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaFileMetadataSchemaType
+}) {}
+exports.BetaFileMetadataSchema = BetaFileMetadataSchema;
+class BetaFileListResponse extends /*#__PURE__*/S.Class("BetaFileListResponse")({
+  "data": /*#__PURE__*/S.Array(BetaFileMetadataSchema),
+  "first_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "has_more": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "last_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaFileListResponse = BetaFileListResponse;
+class BetaUploadFileV1FilesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaUploadFileV1FilesPostParams = BetaUploadFileV1FilesPostParams;
+class BetaGetFileMetadataV1FilesFileIdGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaGetFileMetadataV1FilesFileIdGetParams = BetaGetFileMetadataV1FilesFileIdGetParams;
+class BetaDeleteFileV1FilesFileIdDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaDeleteFileV1FilesFileIdDeleteParams = BetaDeleteFileV1FilesFileIdDeleteParams;
+class BetaFileDeleteResponseType extends /*#__PURE__*/S.Literal("file_deleted") {}
+exports.BetaFileDeleteResponseType = BetaFileDeleteResponseType;
+class BetaFileDeleteResponse extends /*#__PURE__*/S.Class("BetaFileDeleteResponse")({
+  "id": S.String,
+  "type": /*#__PURE__*/S.optionalWith(BetaFileDeleteResponseType, {
+    nullable: true
+  })
+}) {}
+exports.BetaFileDeleteResponse = BetaFileDeleteResponse;
+class BetaDownloadFileV1FilesFileIdContentGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaDownloadFileV1FilesFileIdContentGetParams = BetaDownloadFileV1FilesFileIdContentGetParams;
+const make = (httpClient, options = {}) => {
+  const unexpectedStatus = (request, response) => Effect.flatMap(Effect.orElseSucceed(response.text, () => "Unexpected status code"), description => Effect.fail(new HttpClientError.ResponseError({
+    request,
+    response,
+    reason: "StatusCode",
+    description
+  })));
+  const applyClientTransform = client => options.transformClient ? options.transformClient(client) : Effect.succeed(client);
+  const decodeError = (response, schema) => Effect.flatMap(HttpClientResponse.schemaBodyJson(schema)(response), Effect.fail);
+  return {
+    httpClient,
+    "messagesPost": options => HttpClientRequest.make("POST")(`/v1/messages`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(Message)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "completePost": options => HttpClientRequest.make("POST")(`/v1/complete`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined,
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(CompletionResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "modelsList": options => HttpClientRequest.make("GET")(`/v1/models`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ListResponseModelInfo)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "modelsGet": (modelId, options) => HttpClientRequest.make("GET")(`/v1/models/${modelId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ModelInfo)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesList": options => HttpClientRequest.make("GET")(`/v1/messages/batches`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ListResponseMessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesPost": options => HttpClientRequest.make("POST")(`/v1/messages/batches`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesRetrieve": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesDelete": (messageBatchId, options) => HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(DeleteMessageBatchResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesCancel": (messageBatchId, options) => HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesResults": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messagesCountTokensPost": options => HttpClientRequest.make("POST")(`/v1/messages/count_tokens`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(CountMessageTokensResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "listFilesV1FilesGet": options => HttpClientRequest.make("GET")(`/v1/files`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileListResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "uploadFileV1FilesPost": options => HttpClientRequest.make("POST")(`/v1/files`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), HttpClientRequest.bodyFormData(options.payload), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "getFileMetadataV1FilesFileIdGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "deleteFileV1FilesFileIdDelete": (fileId, options) => HttpClientRequest.make("DELETE")(`/v1/files/${fileId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileDeleteResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "downloadFileV1FilesFileIdContentGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}/content`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessagesPost": options => HttpClientRequest.make("POST")(`/v1/messages?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessage)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaModelsList": options => HttpClientRequest.make("GET")(`/v1/models?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaListResponseModelInfo)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaModelsGet": (modelId, options) => HttpClientRequest.make("GET")(`/v1/models/${modelId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaModelInfo)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesList": options => HttpClientRequest.make("GET")(`/v1/messages/batches?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaListResponseMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesPost": options => HttpClientRequest.make("POST")(`/v1/messages/batches?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesRetrieve": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesDelete": (messageBatchId, options) => HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaDeleteMessageBatchResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesCancel": (messageBatchId, options) => HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesResults": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessagesCountTokensPost": options => HttpClientRequest.make("POST")(`/v1/messages/count_tokens?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaCountMessageTokensResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaListFilesV1FilesGet": options => HttpClientRequest.make("GET")(`/v1/files?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileListResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaUploadFileV1FilesPost": options => HttpClientRequest.make("POST")(`/v1/files?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), HttpClientRequest.bodyFormData(options.payload), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaGetFileMetadataV1FilesFileIdGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaDeleteFileV1FilesFileIdDelete": (fileId, options) => HttpClientRequest.make("DELETE")(`/v1/files/${fileId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileDeleteResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaDownloadFileV1FilesFileIdContentGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}/content?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      orElse: response => unexpectedStatus(request, response)
+    })))))
+  };
+};
+exports.make = make;
+//# sourceMappingURL=Generated.js.map
\ No newline at end of file
diff --git a/dist/dist/cjs/Generated.js.map b/dist/dist/cjs/Generated.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..e36f51c7c1da6598fa468c2b030f59936c2c7695
--- /dev/null
+++ b/dist/dist/cjs/Generated.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"Generated.js","names":["HttpClientError","_interopRequireWildcard","require","HttpClientRequest","HttpClientResponse","Effect","S","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","MessagesPostParams","Struct","optionalWith","String","nullable","exports","Model","Literal","CacheControlEphemeralType","CacheControlEphemeral","RequestServerToolUseBlockName","RequestServerToolUseBlockType","RequestServerToolUseBlock","Union","Null","pipe","pattern","RegExp","Record","key","value","Unknown","RequestWebSearchResultBlockType","RequestWebSearchResultBlock","WebSearchToolResultErrorCode","RequestWebSearchToolResultErrorType","RequestWebSearchToolResultError","RequestWebSearchToolResultBlockType","RequestWebSearchToolResultBlock","Array","RequestCharLocationCitationType","RequestCharLocationCitation","Int","greaterThanOrEqualTo","minLength","maxLength","RequestPageLocationCitationType","RequestPageLocationCitation","RequestContentBlockLocationCitationType","RequestContentBlockLocationCitation","RequestWebSearchResultLocationCitationType","RequestWebSearchResultLocationCitation","RequestTextBlockType","RequestTextBlock","Base64ImageSourceMediaType","Base64ImageSourceType","Base64ImageSource","URLImageSourceType","URLImageSource","RequestImageBlockType","RequestImageBlock","RequestToolUseBlockType","RequestToolUseBlock","RequestToolResultBlockType","RequestToolResultBlock","Boolean","RequestCitationsConfig","Base64PDFSourceMediaType","Base64PDFSourceType","Base64PDFSource","PlainTextSourceMediaType","PlainTextSourceType","PlainTextSource","ContentBlockSourceType","ContentBlockSource","URLPDFSourceType","URLPDFSource","RequestDocumentBlockType","RequestDocumentBlock","RequestThinkingBlockType","RequestThinkingBlock","RequestRedactedThinkingBlockType","RequestRedactedThinkingBlock","InputContentBlock","InputMessageRole","InputMessage","Metadata","CreateMessageParamsServiceTier","ThinkingConfigEnabledType","ThinkingConfigEnabled","ThinkingConfigDisabledType","ThinkingConfigDisabled","ThinkingConfigParam","ToolChoiceAutoType","ToolChoiceAuto","ToolChoiceAnyType","ToolChoiceAny","ToolChoiceToolType","ToolChoiceTool","ToolChoiceNoneType","ToolChoiceNone","ToolChoice","ToolTypeEnum","InputSchemaType","InputSchema","Tool","BashTool20250124Name","BashTool20250124Type","BashTool20250124","TextEditor20250124Name","TextEditor20250124Type","TextEditor20250124","TextEditor20250429Name","TextEditor20250429Type","TextEditor20250429","WebSearchTool20250305Name","WebSearchTool20250305Type","UserLocationType","UserLocation","WebSearchTool20250305","greaterThan","CreateMessageParams","Class","Number","lessThanOrEqualTo","MessageType","MessageRole","ResponseCharLocationCitationType","ResponseCharLocationCitation","ResponsePageLocationCitationType","ResponsePageLocationCitation","ResponseContentBlockLocationCitationType","ResponseContentBlockLocationCitation","ResponseWebSearchResultLocationCitationType","ResponseWebSearchResultLocationCitation","ResponseTextBlockType","ResponseTextBlock","optional","NullOr","ResponseToolUseBlockType","ResponseToolUseBlock","ResponseServerToolUseBlockName","ResponseServerToolUseBlockType","ResponseServerToolUseBlock","ResponseWebSearchToolResultErrorType","ResponseWebSearchToolResultError","ResponseWebSearchResultBlockType","ResponseWebSearchResultBlock","ResponseWebSearchToolResultBlockType","ResponseWebSearchToolResultBlock","ResponseThinkingBlockType","ResponseThinkingBlock","ResponseRedactedThinkingBlockType","ResponseRedactedThinkingBlock","ContentBlock","StopReason","ServerToolUsage","UsageServiceTierEnum","Usage","Message","InvalidRequestErrorType","InvalidRequestError","AuthenticationErrorType","AuthenticationError","BillingErrorType","BillingError","PermissionErrorType","PermissionError","NotFoundErrorType","NotFoundError","RateLimitErrorType","RateLimitError","GatewayTimeoutErrorType","GatewayTimeoutError","APIErrorType","APIError","OverloadedErrorType","OverloadedError","ErrorResponseType","ErrorResponse","CompletePostParams","CompletionRequest","CompletionResponseType","CompletionResponse","ModelsListParams","ModelInfoType","ModelInfo","ListResponseModelInfo","ModelsGetParams","MessageBatchesListParams","MessageBatchProcessingStatus","RequestCounts","MessageBatchType","MessageBatch","ListResponseMessageBatch","MessageBatchesPostParams","MessageBatchIndividualRequestParams","CreateMessageBatchParams","minItems","maxItems","MessageBatchesRetrieveParams","MessageBatchesDeleteParams","DeleteMessageBatchResponseType","DeleteMessageBatchResponse","MessageBatchesCancelParams","MessageBatchesResultsParams","MessagesCountTokensPostParams","CountMessageTokensParams","CountMessageTokensResponse","ListFilesV1FilesGetParams","FileMetadataSchemaType","FileMetadataSchema","FileListResponse","UploadFileV1FilesPostParams","GetFileMetadataV1FilesFileIdGetParams","DeleteFileV1FilesFileIdDeleteParams","FileDeleteResponseType","FileDeleteResponse","DownloadFileV1FilesFileIdContentGetParams","BetaMessagesPostParams","BetaCacheControlEphemeralTtl","BetaCacheControlEphemeralType","BetaCacheControlEphemeral","BetaRequestServerToolUseBlockName","BetaRequestServerToolUseBlockType","BetaRequestServerToolUseBlock","BetaRequestWebSearchResultBlockType","BetaRequestWebSearchResultBlock","BetaWebSearchToolResultErrorCode","BetaRequestWebSearchToolResultErrorType","BetaRequestWebSearchToolResultError","BetaRequestWebSearchToolResultBlockType","BetaRequestWebSearchToolResultBlock","BetaCodeExecutionToolResultErrorCode","BetaRequestCodeExecutionToolResultErrorType","BetaRequestCodeExecutionToolResultError","BetaRequestCodeExecutionOutputBlockType","BetaRequestCodeExecutionOutputBlock","BetaRequestCodeExecutionResultBlockType","BetaRequestCodeExecutionResultBlock","BetaRequestCodeExecutionToolResultBlockType","BetaRequestCodeExecutionToolResultBlock","BetaRequestMCPToolUseBlockType","BetaRequestMCPToolUseBlock","BetaRequestCharLocationCitationType","BetaRequestCharLocationCitation","BetaRequestPageLocationCitationType","BetaRequestPageLocationCitation","BetaRequestContentBlockLocationCitationType","BetaRequestContentBlockLocationCitation","BetaRequestWebSearchResultLocationCitationType","BetaRequestWebSearchResultLocationCitation","BetaRequestTextBlockType","BetaRequestTextBlock","BetaRequestMCPToolResultBlockType","BetaRequestMCPToolResultBlock","BetaBase64ImageSourceMediaType","BetaBase64ImageSourceType","BetaBase64ImageSource","BetaURLImageSourceType","BetaURLImageSource","BetaFileImageSourceType","BetaFileImageSource","BetaRequestImageBlockType","BetaRequestImageBlock","BetaRequestToolUseBlockType","BetaRequestToolUseBlock","BetaRequestToolResultBlockType","BetaRequestToolResultBlock","BetaRequestCitationsConfig","BetaBase64PDFSourceMediaType","BetaBase64PDFSourceType","BetaBase64PDFSource","BetaPlainTextSourceMediaType","BetaPlainTextSourceType","BetaPlainTextSource","BetaContentBlockSourceType","BetaContentBlockSource","BetaURLPDFSourceType","BetaURLPDFSource","BetaFileDocumentSourceType","BetaFileDocumentSource","BetaRequestDocumentBlockType","BetaRequestDocumentBlock","BetaRequestThinkingBlockType","BetaRequestThinkingBlock","BetaRequestRedactedThinkingBlockType","BetaRequestRedactedThinkingBlock","BetaRequestContainerUploadBlockType","BetaRequestContainerUploadBlock","BetaInputContentBlock","BetaInputMessageRole","BetaInputMessage","BetaRequestMCPServerToolConfiguration","BetaRequestMCPServerURLDefinitionType","BetaRequestMCPServerURLDefinition","BetaMetadata","BetaCreateMessageParamsServiceTier","BetaThinkingConfigEnabledType","BetaThinkingConfigEnabled","BetaThinkingConfigDisabledType","BetaThinkingConfigDisabled","BetaThinkingConfigParam","BetaToolChoiceAutoType","BetaToolChoiceAuto","BetaToolChoiceAnyType","BetaToolChoiceAny","BetaToolChoiceToolType","BetaToolChoiceTool","BetaToolChoiceNoneType","BetaToolChoiceNone","BetaToolChoice","BetaToolTypeEnum","BetaInputSchemaType","BetaInputSchema","BetaTool","BetaComputerUseTool20241022Name","BetaComputerUseTool20241022Type","BetaComputerUseTool20241022","BetaBashTool20241022Name","BetaBashTool20241022Type","BetaBashTool20241022","BetaTextEditor20241022Name","BetaTextEditor20241022Type","BetaTextEditor20241022","BetaComputerUseTool20250124Name","BetaComputerUseTool20250124Type","BetaComputerUseTool20250124","BetaBashTool20250124Name","BetaBashTool20250124Type","BetaBashTool20250124","BetaTextEditor20250124Name","BetaTextEditor20250124Type","BetaTextEditor20250124","BetaTextEditor20250429Name","BetaTextEditor20250429Type","BetaTextEditor20250429","BetaWebSearchTool20250305Name","BetaWebSearchTool20250305Type","BetaUserLocationType","BetaUserLocation","BetaWebSearchTool20250305","BetaCodeExecutionTool20250522Name","BetaCodeExecutionTool20250522Type","BetaCodeExecutionTool20250522","BetaCreateMessageParams","BetaMessageType","BetaMessageRole","BetaResponseCharLocationCitationType","BetaResponseCharLocationCitation","BetaResponsePageLocationCitationType","BetaResponsePageLocationCitation","BetaResponseContentBlockLocationCitationType","BetaResponseContentBlockLocationCitation","BetaResponseWebSearchResultLocationCitationType","BetaResponseWebSearchResultLocationCitation","BetaResponseTextBlockType","BetaResponseTextBlock","BetaResponseToolUseBlockType","BetaResponseToolUseBlock","BetaResponseServerToolUseBlockName","BetaResponseServerToolUseBlockType","BetaResponseServerToolUseBlock","BetaResponseWebSearchToolResultErrorType","BetaResponseWebSearchToolResultError","BetaResponseWebSearchResultBlockType","BetaResponseWebSearchResultBlock","BetaResponseWebSearchToolResultBlockType","BetaResponseWebSearchToolResultBlock","BetaResponseCodeExecutionToolResultErrorType","BetaResponseCodeExecutionToolResultError","BetaResponseCodeExecutionOutputBlockType","BetaResponseCodeExecutionOutputBlock","BetaResponseCodeExecutionResultBlockType","BetaResponseCodeExecutionResultBlock","BetaResponseCodeExecutionToolResultBlockType","BetaResponseCodeExecutionToolResultBlock","BetaResponseMCPToolUseBlockType","BetaResponseMCPToolUseBlock","BetaResponseMCPToolResultBlockType","BetaResponseMCPToolResultBlock","BetaResponseContainerUploadBlockType","BetaResponseContainerUploadBlock","BetaResponseThinkingBlockType","BetaResponseThinkingBlock","BetaResponseRedactedThinkingBlockType","BetaResponseRedactedThinkingBlock","BetaContentBlock","BetaStopReason","BetaCacheCreation","BetaServerToolUsage","BetaUsageServiceTierEnum","BetaUsage","BetaContainer","BetaMessage","BetaInvalidRequestErrorType","BetaInvalidRequestError","BetaAuthenticationErrorType","BetaAuthenticationError","BetaBillingErrorType","BetaBillingError","BetaPermissionErrorType","BetaPermissionError","BetaNotFoundErrorType","BetaNotFoundError","BetaRateLimitErrorType","BetaRateLimitError","BetaGatewayTimeoutErrorType","BetaGatewayTimeoutError","BetaAPIErrorType","BetaAPIError","BetaOverloadedErrorType","BetaOverloadedError","BetaErrorResponseType","BetaErrorResponse","BetaModelsListParams","BetaModelInfoType","BetaModelInfo","BetaListResponseModelInfo","BetaModelsGetParams","BetaMessageBatchesListParams","BetaMessageBatchProcessingStatus","BetaRequestCounts","BetaMessageBatchType","BetaMessageBatch","BetaListResponseMessageBatch","BetaMessageBatchesPostParams","BetaMessageBatchIndividualRequestParams","BetaCreateMessageBatchParams","BetaMessageBatchesRetrieveParams","BetaMessageBatchesDeleteParams","BetaDeleteMessageBatchResponseType","BetaDeleteMessageBatchResponse","BetaMessageBatchesCancelParams","BetaMessageBatchesResultsParams","BetaMessagesCountTokensPostParams","BetaCountMessageTokensParams","BetaCountMessageTokensResponse","BetaListFilesV1FilesGetParams","BetaFileMetadataSchemaType","BetaFileMetadataSchema","BetaFileListResponse","BetaUploadFileV1FilesPostParams","BetaGetFileMetadataV1FilesFileIdGetParams","BetaDeleteFileV1FilesFileIdDeleteParams","BetaFileDeleteResponseType","BetaFileDeleteResponse","BetaDownloadFileV1FilesFileIdContentGetParams","make","httpClient","options","unexpectedStatus","request","response","flatMap","orElseSucceed","text","description","fail","ResponseError","reason","applyClientTransform","client","transformClient","succeed","decodeError","schema","schemaBodyJson","setHeaders","params","undefined","req","orDie","bodyJson","payload","execute","matchStatus","orElse","setUrlParams","modelsGet","modelId","messageBatchesRetrieve","messageBatchId","messageBatchesDelete","messageBatchesCancel","messageBatchesResults","bodyFormData","getFileMetadataV1FilesFileIdGet","fileId","deleteFileV1FilesFileIdDelete","downloadFileV1FilesFileIdContentGet","betaModelsGet","betaMessageBatchesRetrieve","betaMessageBatchesDelete","betaMessageBatchesCancel","betaMessageBatchesResults","betaGetFileMetadataV1FilesFileIdGet","betaDeleteFileV1FilesFileIdDelete","betaDownloadFileV1FilesFileIdContentGet"],"sources":["../../src/Generated.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/cjs/index.js b/dist/dist/cjs/index.js
new file mode 100644
index 0000000000000000000000000000000000000000..21216a943d8b1a9928f67af07be7bda2df991cbd
--- /dev/null
+++ b/dist/dist/cjs/index.js
@@ -0,0 +1,18 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.Generated = exports.AnthropicTokenizer = exports.AnthropicLanguageModel = exports.AnthropicConfig = exports.AnthropicClient = void 0;
+var _AnthropicClient = _interopRequireWildcard(require("./AnthropicClient.js"));
+exports.AnthropicClient = _AnthropicClient;
+var _AnthropicConfig = _interopRequireWildcard(require("./AnthropicConfig.js"));
+exports.AnthropicConfig = _AnthropicConfig;
+var _AnthropicLanguageModel = _interopRequireWildcard(require("./AnthropicLanguageModel.js"));
+exports.AnthropicLanguageModel = _AnthropicLanguageModel;
+var _AnthropicTokenizer = _interopRequireWildcard(require("./AnthropicTokenizer.js"));
+exports.AnthropicTokenizer = _AnthropicTokenizer;
+var _Generated = _interopRequireWildcard(require("./Generated.js"));
+exports.Generated = _Generated;
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/dist/cjs/index.js.map b/dist/dist/cjs/index.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..3b50aad9d52aac38d09d57e4e4856ac4896f9680
--- /dev/null
+++ b/dist/dist/cjs/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","names":[],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/cjs/internal/utilities.js b/dist/dist/cjs/internal/utilities.js
new file mode 100644
index 0000000000000000000000000000000000000000..7555dc3c14b0426e1b0e7b71de155a9ab9e7cc2d
--- /dev/null
+++ b/dist/dist/cjs/internal/utilities.js
@@ -0,0 +1,23 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.resolveFinishReason = exports.ProviderMetadataKey = void 0;
+var Predicate = _interopRequireWildcard(require("effect/Predicate"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/** @internal */
+const ProviderMetadataKey = exports.ProviderMetadataKey = "@effect/ai-anthropic/AnthropicLanguageModel/ProviderMetadata";
+const finishReasonMap = {
+  end_turn: "stop",
+  max_tokens: "length",
+  stop_sequence: "stop",
+  tool_use: "tool-calls"
+};
+/** @internal */
+const resolveFinishReason = finishReason => {
+  const reason = finishReasonMap[finishReason];
+  return Predicate.isUndefined(reason) ? "unknown" : reason;
+};
+exports.resolveFinishReason = resolveFinishReason;
+//# sourceMappingURL=utilities.js.map
\ No newline at end of file
diff --git a/dist/dist/cjs/internal/utilities.js.map b/dist/dist/cjs/internal/utilities.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..798016cd1562c720e9d894ae9d3bf8f427bcd6b1
--- /dev/null
+++ b/dist/dist/cjs/internal/utilities.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utilities.js","names":["Predicate","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ProviderMetadataKey","exports","finishReasonMap","end_turn","max_tokens","stop_sequence","tool_use","resolveFinishReason","finishReason","reason","isUndefined"],"sources":["../../../src/internal/utilities.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,IAAAA,SAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA6C,SAAAD,wBAAAE,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAJ,uBAAA,YAAAA,CAAAE,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAE7C;AACO,MAAMkB,mBAAmB,GAAAC,OAAA,CAAAD,mBAAA,GAAG,8DAA8D;AAEjG,MAAME,eAAe,GAA4C;EAC/DC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,QAAQ;EACpBC,aAAa,EAAE,MAAM;EACrBC,QAAQ,EAAE;CACX;AAED;AACO,MAAMC,mBAAmB,GAAIC,YAAoB,IAA6B;EACnF,MAAMC,MAAM,GAAGP,eAAe,CAACM,YAAY,CAAC;EAC5C,OAAO9B,SAAS,CAACgC,WAAW,CAACD,MAAM,CAAC,GAAG,SAAS,GAAGA,MAAM;AAC3D,CAAC;AAAAR,OAAA,CAAAM,mBAAA,GAAAA,mBAAA","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/AnthropicClient.js b/dist/dist/dist/cjs/AnthropicClient.js
new file mode 100644
index 0000000000000000000000000000000000000000..8016d4656566a781ff6c93f339c37806d4c48a1f
--- /dev/null
+++ b/dist/dist/dist/cjs/AnthropicClient.js
@@ -0,0 +1,259 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.make = exports.layerConfig = exports.layer = exports.AnthropicClient = void 0;
+var AiError = _interopRequireWildcard(require("@effect/ai/AiError"));
+var AiInput = _interopRequireWildcard(require("@effect/ai/AiInput"));
+var AiResponse = _interopRequireWildcard(require("@effect/ai/AiResponse"));
+var Sse = _interopRequireWildcard(require("@effect/experimental/Sse"));
+var HttpBody = _interopRequireWildcard(require("@effect/platform/HttpBody"));
+var HttpClient = _interopRequireWildcard(require("@effect/platform/HttpClient"));
+var HttpClientRequest = _interopRequireWildcard(require("@effect/platform/HttpClientRequest"));
+var Config = _interopRequireWildcard(require("effect/Config"));
+var Context = _interopRequireWildcard(require("effect/Context"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var _Function = require("effect/Function");
+var Layer = _interopRequireWildcard(require("effect/Layer"));
+var Option = _interopRequireWildcard(require("effect/Option"));
+var Predicate = _interopRequireWildcard(require("effect/Predicate"));
+var Redacted = _interopRequireWildcard(require("effect/Redacted"));
+var Stream = _interopRequireWildcard(require("effect/Stream"));
+var _AnthropicConfig = require("./AnthropicConfig.js");
+var Generated = _interopRequireWildcard(require("./Generated.js"));
+var InternalUtilities = _interopRequireWildcard(require("./internal/utilities.js"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/**
+ * @since 1.0.0
+ */
+
+const constDisableValidation = {
+  disableValidation: true
+};
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+class AnthropicClient extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicClient")() {}
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+exports.AnthropicClient = AnthropicClient;
+const make = options => Effect.gen(function* () {
+  const httpClient = (yield* HttpClient.HttpClient).pipe(HttpClient.mapRequest(request => request.pipe(HttpClientRequest.prependUrl(options.apiUrl ?? "https://api.anthropic.com"), options.apiKey ? HttpClientRequest.setHeader("x-api-key", Redacted.value(options.apiKey)) : _Function.identity, HttpClientRequest.setHeader("anthropic-version", options.anthropicVersion ?? "2023-06-01"), HttpClientRequest.acceptJson)), options.transformClient ? options.transformClient : _Function.identity);
+  const httpClientOk = HttpClient.filterStatusOk(httpClient);
+  const client = Generated.make(httpClient, {
+    transformClient: client => _AnthropicConfig.AnthropicConfig.getOrUndefined.pipe(Effect.map(config => config?.transformClient ? config.transformClient(client) : client))
+  });
+  const streamRequest = request => httpClientOk.execute(request).pipe(Effect.map(r => r.stream), Stream.unwrapScoped, Stream.decodeText(), Stream.pipeThroughChannel(Sse.makeChannel()), Stream.takeUntil(event => event.event === "message_stop"), Stream.map(event => JSON.parse(event.data)));
+  const stream = request => Stream.suspend(() => {
+    const toolCalls = {};
+    let finishReason = "unknown";
+    let reasoning = undefined;
+    let usage = {
+      inputTokens: 0,
+      outputTokens: 0,
+      totalTokens: 0,
+      reasoningTokens: 0,
+      cacheReadInputTokens: 0,
+      cacheWriteInputTokens: 0
+    };
+    const metadata = {};
+    return streamRequest(HttpClientRequest.post("/v1/messages", {
+      body: HttpBody.unsafeJson({
+        ...request,
+        stream: true
+      })
+    })).pipe(Stream.filterMapEffect(chunk => {
+      const parts = [];
+      switch (chunk.type) {
+        case "message_start":
+          {
+            usage = {
+              inputTokens: chunk.message.usage.input_tokens,
+              outputTokens: chunk.message.usage.output_tokens,
+              totalTokens: chunk.message.usage.input_tokens + chunk.message.usage.output_tokens,
+              reasoningTokens: 0,
+              cacheWriteInputTokens: chunk.message.usage.cache_creation_input_tokens ?? 0,
+              cacheReadInputTokens: chunk.message.usage.cache_read_input_tokens ?? 0
+            };
+            console.error("message_start", JSON.stringify(usage, null, 2));
+            parts.push(new AiResponse.MetadataPart({
+              id: chunk.message.id,
+              model: chunk.message.model
+            }, constDisableValidation));
+            break;
+          }
+        case "message_delta":
+          {
+            usage = {
+              ...usage,
+              outputTokens: chunk.usage.output_tokens,
+              totalTokens: usage.inputTokens + chunk.usage.output_tokens
+            };
+            console.error("message_delta", JSON.stringify(usage, null, 2));
+            if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
+              metadata.stopSequence = chunk.delta.stop_sequence;
+            }
+            finishReason = InternalUtilities.resolveFinishReason(chunk.delta.stop_reason);
+            break;
+          }
+        case "message_stop":
+          {
+            parts.push(new AiResponse.FinishPart({
+              usage,
+              reason: finishReason,
+              providerMetadata: {
+                [InternalUtilities.ProviderMetadataKey]: metadata
+              }
+            }, constDisableValidation));
+            break;
+          }
+        case "content_block_start":
+          {
+            const content = chunk.content_block;
+            switch (content.type) {
+              case "text":
+                {
+                  break;
+                }
+              case "thinking":
+                {
+                  reasoning = {
+                    content: [content.thinking]
+                  };
+                  break;
+                }
+              case "tool_use":
+                {
+                  toolCalls[chunk.index] = {
+                    id: content.id,
+                    name: content.name,
+                    params: ""
+                  };
+                  break;
+                }
+              case "redacted_thinking":
+                {
+                  parts.push(new AiResponse.RedactedReasoningPart({
+                    redactedText: content.data
+                  }, constDisableValidation));
+                  break;
+                }
+            }
+            break;
+          }
+        case "content_block_delta":
+          {
+            switch (chunk.delta.type) {
+              case "text_delta":
+                {
+                  parts.push(new AiResponse.TextPart({
+                    text: chunk.delta.text
+                  }, constDisableValidation));
+                  break;
+                }
+              case "thinking_delta":
+                {
+                  if (Predicate.isNotUndefined(reasoning)) {
+                    reasoning.content.push(chunk.delta.thinking);
+                  }
+                  break;
+                }
+              case "signature_delta":
+                {
+                  if (Predicate.isNotUndefined(reasoning)) {
+                    reasoning = {
+                      ...reasoning,
+                      signature: chunk.delta.signature
+                    };
+                  }
+                  break;
+                }
+              case "input_json_delta":
+                {
+                  const tool = toolCalls[chunk.index];
+                  if (Predicate.isNotUndefined(tool)) {
+                    tool.params += chunk.delta.partial_json;
+                  }
+                  break;
+                }
+              // TODO: add support for citations (?)
+              case "citations_delta":
+                {
+                  break;
+                }
+            }
+            break;
+          }
+        case "content_block_stop":
+          {
+            if (Predicate.isNotUndefined(toolCalls[chunk.index])) {
+              const tool = toolCalls[chunk.index];
+              try {
+                // If the tool call has no parameters, the model sends an empty string.
+                const inputJson = tool.params === "" ? "{}" : tool.params;
+                const params = JSON.parse(inputJson);
+                parts.push(new AiResponse.ToolCallPart({
+                  id: AiInput.ToolCallId.make(tool.id, constDisableValidation),
+                  name: tool.name,
+                  params
+                }, constDisableValidation));
+                delete toolCalls[chunk.index];
+                // eslint-disable-next-line no-empty
+              } catch {}
+            }
+            if (Predicate.isNotUndefined(reasoning)) {
+              parts.push(new AiResponse.ReasoningPart({
+                reasoningText: reasoning.content.join(""),
+                signature: reasoning.signature
+              }, constDisableValidation));
+              reasoning = undefined;
+            }
+            break;
+          }
+        case "error":
+          {
+            return Option.some(Effect.die(new AiError.AiError({
+              module: "AnthropicClient",
+              method: "stream",
+              description: `${chunk.error.type}: ${chunk.error.message}`
+            })));
+          }
+      }
+      return parts.length === 0 ? Option.none() : Option.some(Effect.succeed(AiResponse.AiResponse.make({
+        parts
+      }, constDisableValidation)));
+    }));
+  });
+  return AnthropicClient.of({
+    client,
+    streamRequest,
+    stream
+  });
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+exports.make = make;
+const layer = options => Layer.effect(AnthropicClient, make(options));
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+exports.layer = layer;
+const layerConfig = options => {
+  const {
+    transformClient,
+    ...configs
+  } = options;
+  return Config.all(configs).pipe(Effect.flatMap(configs => make({
+    ...configs,
+    transformClient
+  })), Layer.effect(AnthropicClient));
+};
+exports.layerConfig = layerConfig;
+//# sourceMappingURL=AnthropicClient.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/AnthropicClient.js.map b/dist/dist/dist/cjs/AnthropicClient.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..65e8b59c0eebbf8e5d989616c9eebef01546b74d
--- /dev/null
+++ b/dist/dist/dist/cjs/AnthropicClient.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicClient.js","names":["AiError","_interopRequireWildcard","require","AiInput","AiResponse","Sse","HttpBody","HttpClient","HttpClientRequest","Config","Context","Effect","_Function","Layer","Option","Predicate","Redacted","Stream","_AnthropicConfig","Generated","InternalUtilities","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","constDisableValidation","disableValidation","AnthropicClient","Tag","exports","make","options","gen","httpClient","pipe","mapRequest","request","prependUrl","apiUrl","apiKey","setHeader","value","identity","anthropicVersion","acceptJson","transformClient","httpClientOk","filterStatusOk","client","AnthropicConfig","getOrUndefined","map","config","streamRequest","execute","stream","unwrapScoped","decodeText","pipeThroughChannel","makeChannel","takeUntil","event","JSON","parse","data","suspend","toolCalls","finishReason","reasoning","undefined","usage","inputTokens","outputTokens","totalTokens","reasoningTokens","cacheReadInputTokens","cacheWriteInputTokens","metadata","post","body","unsafeJson","filterMapEffect","chunk","parts","type","message","input_tokens","output_tokens","cache_creation_input_tokens","cache_read_input_tokens","console","error","stringify","push","MetadataPart","id","model","isNotNullable","delta","stop_sequence","stopSequence","resolveFinishReason","stop_reason","FinishPart","reason","providerMetadata","ProviderMetadataKey","content","content_block","thinking","index","name","params","RedactedReasoningPart","redactedText","TextPart","text","isNotUndefined","signature","tool","partial_json","inputJson","ToolCallPart","ToolCallId","ReasoningPart","reasoningText","join","some","die","module","method","description","length","none","succeed","of","layer","effect","layerConfig","configs","all","flatMap"],"sources":["../../src/AnthropicClient.ts"],"sourcesContent":[null],"mappings":";;;;;;AAGA,IAAAA,OAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAH,uBAAA,CAAAC,OAAA;AACA,IAAAG,GAAA,GAAAJ,uBAAA,CAAAC,OAAA;AACA,IAAAI,QAAA,GAAAL,uBAAA,CAAAC,OAAA;AACA,IAAAK,UAAA,GAAAN,uBAAA,CAAAC,OAAA;AAEA,IAAAM,iBAAA,GAAAP,uBAAA,CAAAC,OAAA;AACA,IAAAO,MAAA,GAAAR,uBAAA,CAAAC,OAAA;AAEA,IAAAQ,OAAA,GAAAT,uBAAA,CAAAC,OAAA;AACA,IAAAS,MAAA,GAAAV,uBAAA,CAAAC,OAAA;AACA,IAAAU,SAAA,GAAAV,OAAA;AACA,IAAAW,KAAA,GAAAZ,uBAAA,CAAAC,OAAA;AACA,IAAAY,MAAA,GAAAb,uBAAA,CAAAC,OAAA;AACA,IAAAa,SAAA,GAAAd,uBAAA,CAAAC,OAAA;AACA,IAAAc,QAAA,GAAAf,uBAAA,CAAAC,OAAA;AACA,IAAAe,MAAA,GAAAhB,uBAAA,CAAAC,OAAA;AACA,IAAAgB,gBAAA,GAAAhB,OAAA;AACA,IAAAiB,SAAA,GAAAlB,uBAAA,CAAAC,OAAA;AACA,IAAAkB,iBAAA,GAAAnB,uBAAA,CAAAC,OAAA;AAA4D,SAAAD,wBAAAoB,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAtB,uBAAA,YAAAA,CAAAoB,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAvB5D;;;;AAyBA,MAAMkB,sBAAsB,GAAG;EAAEC,iBAAiB,EAAE;AAAI,CAAW;AAEnE;;;;AAIM,MAAOC,eAAgB,sBAAQhC,OAAO,CAACiC,GAAG,CAC9C,sCAAsC,CACvC,EAA4C;AAqB7C;;;;AAAAC,OAAA,CAAAF,eAAA,GAAAA,eAAA;AAIO,MAAMG,IAAI,GAAIC,OAOpB,IACCnC,MAAM,CAACoC,GAAG,CAAC,aAAS;EAClB,MAAMC,UAAU,GAAG,CAAC,OAAOzC,UAAU,CAACA,UAAU,EAAE0C,IAAI,CACpD1C,UAAU,CAAC2C,UAAU,CAAEC,OAAO,IAC5BA,OAAO,CAACF,IAAI,CACVzC,iBAAiB,CAAC4C,UAAU,CAC1BN,OAAO,CAACO,MAAM,IAAI,2BAA2B,CAC9C,EACDP,OAAO,CAACQ,MAAM,GACV9C,iBAAiB,CAAC+C,SAAS,CAC3B,WAAW,EACXvC,QAAQ,CAACwC,KAAK,CAACV,OAAO,CAACQ,MAAM,CAAC,CAC/B,GACCG,kBAAQ,EACZjD,iBAAiB,CAAC+C,SAAS,CACzB,mBAAmB,EACnBT,OAAO,CAACY,gBAAgB,IAAI,YAAY,CACzC,EACDlD,iBAAiB,CAACmD,UAAU,CAC7B,CACF,EACDb,OAAO,CAACc,eAAe,GAAGd,OAAO,CAACc,eAAe,GAAGH,kBAAQ,CAC7D;EACD,MAAMI,YAAY,GAAGtD,UAAU,CAACuD,cAAc,CAACd,UAAU,CAAC;EAC1D,MAAMe,MAAM,GAAG5C,SAAS,CAAC0B,IAAI,CAACG,UAAU,EAAE;IACxCY,eAAe,EAAGG,MAAM,IACtBC,gCAAe,CAACC,cAAc,CAAChB,IAAI,CACjCtC,MAAM,CAACuD,GAAG,CAAEC,MAAM,IAAKA,MAAM,EAAEP,eAAe,GAAGO,MAAM,CAACP,eAAe,CAACG,MAAM,CAAC,GAAGA,MAAM,CAAC;GAE9F,CAAC;EACF,MAAMK,aAAa,GACjBjB,OAA4C,IAE5CU,YAAY,CAACQ,OAAO,CAAClB,OAAO,CAAC,CAACF,IAAI,CAChCtC,MAAM,CAACuD,GAAG,CAAE1C,CAAC,IAAKA,CAAC,CAAC8C,MAAM,CAAC,EAC3BrD,MAAM,CAACsD,YAAY,EACnBtD,MAAM,CAACuD,UAAU,EAAE,EACnBvD,MAAM,CAACwD,kBAAkB,CAACpE,GAAG,CAACqE,WAAW,EAAE,CAAC,EAC5CzD,MAAM,CAAC0D,SAAS,CAAEC,KAAK,IAAKA,KAAK,CAACA,KAAK,KAAK,cAAc,CAAC,EAC3D3D,MAAM,CAACiD,GAAG,CAAEU,KAAK,IAAKC,IAAI,CAACC,KAAK,CAACF,KAAK,CAACG,IAAI,CAAM,CAAC,CACnD;EACH,MAAMT,MAAM,GAAInB,OAAgC,IAC9ClC,MAAM,CAAC+D,OAAO,CAAC,MAAK;IAClB,MAAMC,SAAS,GAAG,EAAiC;IACnD,IAAIC,YAAY,GAA4B,SAAS;IACrD,IAAIC,SAAS,GAKGC,SAAS;IACzB,IAAIC,KAAK,GAAqB;MAC5BC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,CAAC;MACfC,WAAW,EAAE,CAAC;MACdC,eAAe,EAAE,CAAC;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,qBAAqB,EAAE;KACxB;IACD,MAAMC,QAAQ,GAA4B,EAAE;IAC5C,OAAOxB,aAAa,CAClB5D,iBAAiB,CAACqF,IAAI,CAAC,cAAc,EAAE;MACrCC,IAAI,EAAExF,QAAQ,CAACyF,UAAU,CAAC;QAAE,GAAG5C,OAAO;QAAEmB,MAAM,EAAE;MAAI,CAAE;KACvD,CAAC,CACH,CAACrB,IAAI,CACJhC,MAAM,CAAC+E,eAAe,CAAEC,KAAK,IAAI;MAC/B,MAAMC,KAAK,GAA2B,EAAE;MACxC,QAAQD,KAAK,CAACE,IAAI;QAChB,KAAK,eAAe;UAAE;YACpBd,KAAK,GAAG;cACNC,WAAW,EAAEW,KAAK,CAACG,OAAO,CAACf,KAAK,CAACgB,YAAY;cAC7Cd,YAAY,EAAEU,KAAK,CAACG,OAAO,CAACf,KAAK,CAACiB,aAAa;cAC/Cd,WAAW,EAAES,KAAK,CAACG,OAAO,CAACf,KAAK,CAACgB,YAAY,GAC3CJ,KAAK,CAACG,OAAO,CAACf,KAAK,CAACiB,aAAa;cACnCb,eAAe,EAAE,CAAC;cAClBE,qBAAqB,EAAEM,KAAK,CAACG,OAAO,CAACf,KAAK,CAACkB,2BAA2B,IAAI,CAAC;cAC3Eb,oBAAoB,EAAEO,KAAK,CAACG,OAAO,CAACf,KAAK,CAACmB,uBAAuB,IAAI;aACtE;YACDC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAE7B,IAAI,CAAC8B,SAAS,CAACtB,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC9Da,KAAK,CAACU,IAAI,CACR,IAAIxG,UAAU,CAACyG,YAAY,CACzB;cACEC,EAAE,EAAEb,KAAK,CAACG,OAAO,CAACU,EAAE;cACpBC,KAAK,EAAEd,KAAK,CAACG,OAAO,CAACW;aACtB,EACDvE,sBAAsB,CACvB,CACF;YACD;UACF;QACA,KAAK,eAAe;UAAE;YACpB6C,KAAK,GAAG;cACN,GAAGA,KAAK;cACRE,YAAY,EAAEU,KAAK,CAACZ,KAAK,CAACiB,aAAa;cACvCd,WAAW,EAAEH,KAAK,CAACC,WAAW,GAAGW,KAAK,CAACZ,KAAK,CAACiB;aAC9C;YACDG,OAAO,CAACC,KAAK,CAAC,eAAe,EAAE7B,IAAI,CAAC8B,SAAS,CAACtB,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC9D,IAAItE,SAAS,CAACiG,aAAa,CAACf,KAAK,CAACgB,KAAK,CAACC,aAAa,CAAC,EAAE;cACtDtB,QAAQ,CAACuB,YAAY,GAAGlB,KAAK,CAACgB,KAAK,CAACC,aAAa;YACnD;YACAhC,YAAY,GAAG9D,iBAAiB,CAACgG,mBAAmB,CAACnB,KAAK,CAACgB,KAAK,CAACI,WAAW,CAAC;YAC7E;UACF;QACA,KAAK,cAAc;UAAE;YACnBnB,KAAK,CAACU,IAAI,CACR,IAAIxG,UAAU,CAACkH,UAAU,CAAC;cACxBjC,KAAK;cACLkC,MAAM,EAAErC,YAAY;cACpBsC,gBAAgB,EAAE;gBAAE,CAACpG,iBAAiB,CAACqG,mBAAmB,GAAG7B;cAAQ;aACtE,EAAEpD,sBAAsB,CAAC,CAC3B;YACD;UACF;QACA,KAAK,qBAAqB;UAAE;YAC1B,MAAMkF,OAAO,GAAGzB,KAAK,CAAC0B,aAAa;YACnC,QAAQD,OAAO,CAACvB,IAAI;cAClB,KAAK,MAAM;gBAAE;kBACX;gBACF;cACA,KAAK,UAAU;gBAAE;kBACfhB,SAAS,GAAG;oBAAEuC,OAAO,EAAE,CAACA,OAAO,CAACE,QAAQ;kBAAC,CAAE;kBAC3C;gBACF;cACA,KAAK,UAAU;gBAAE;kBACf3C,SAAS,CAACgB,KAAK,CAAC4B,KAAK,CAAC,GAAG;oBACvBf,EAAE,EAAEY,OAAO,CAACZ,EAAE;oBACdgB,IAAI,EAAEJ,OAAO,CAACI,IAAI;oBAClBC,MAAM,EAAE;mBACT;kBACD;gBACF;cACA,KAAK,mBAAmB;gBAAE;kBACxB7B,KAAK,CAACU,IAAI,CACR,IAAIxG,UAAU,CAAC4H,qBAAqB,CAClC;oBAAEC,YAAY,EAAEP,OAAO,CAAC3C;kBAAI,CAAE,EAC9BvC,sBAAsB,CACvB,CACF;kBACD;gBACF;YACF;YACA;UACF;QACA,KAAK,qBAAqB;UAAE;YAC1B,QAAQyD,KAAK,CAACgB,KAAK,CAACd,IAAI;cACtB,KAAK,YAAY;gBAAE;kBACjBD,KAAK,CAACU,IAAI,CACR,IAAIxG,UAAU,CAAC8H,QAAQ,CACrB;oBAAEC,IAAI,EAAElC,KAAK,CAACgB,KAAK,CAACkB;kBAAI,CAAE,EAC1B3F,sBAAsB,CACvB,CACF;kBACD;gBACF;cACA,KAAK,gBAAgB;gBAAE;kBACrB,IAAIzB,SAAS,CAACqH,cAAc,CAACjD,SAAS,CAAC,EAAE;oBACvCA,SAAS,CAACuC,OAAO,CAACd,IAAI,CAACX,KAAK,CAACgB,KAAK,CAACW,QAAQ,CAAC;kBAC9C;kBACA;gBACF;cACA,KAAK,iBAAiB;gBAAE;kBACtB,IAAI7G,SAAS,CAACqH,cAAc,CAACjD,SAAS,CAAC,EAAE;oBACvCA,SAAS,GAAG;sBACV,GAAGA,SAAS;sBACZkD,SAAS,EAAEpC,KAAK,CAACgB,KAAK,CAACoB;qBACxB;kBACH;kBACA;gBACF;cACA,KAAK,kBAAkB;gBAAE;kBACvB,MAAMC,IAAI,GAAGrD,SAAS,CAACgB,KAAK,CAAC4B,KAAK,CAAC;kBACnC,IAAI9G,SAAS,CAACqH,cAAc,CAACE,IAAI,CAAC,EAAE;oBAClCA,IAAI,CAACP,MAAM,IAAI9B,KAAK,CAACgB,KAAK,CAACsB,YAAY;kBACzC;kBACA;gBACF;cACA;cACA,KAAK,iBAAiB;gBAAE;kBACtB;gBACF;YACF;YACA;UACF;QACA,KAAK,oBAAoB;UAAE;YACzB,IAAIxH,SAAS,CAACqH,cAAc,CAACnD,SAAS,CAACgB,KAAK,CAAC4B,KAAK,CAAC,CAAC,EAAE;cACpD,MAAMS,IAAI,GAAGrD,SAAS,CAACgB,KAAK,CAAC4B,KAAK,CAAC;cACnC,IAAI;gBACF;gBACA,MAAMW,SAAS,GAAGF,IAAI,CAACP,MAAM,KAAK,EAAE,GAAG,IAAI,GAAGO,IAAI,CAACP,MAAM;gBACzD,MAAMA,MAAM,GAAGlD,IAAI,CAACC,KAAK,CAAC0D,SAAS,CAAC;gBACpCtC,KAAK,CAACU,IAAI,CACR,IAAIxG,UAAU,CAACqI,YAAY,CAAC;kBAC1B3B,EAAE,EAAE3G,OAAO,CAACuI,UAAU,CAAC7F,IAAI,CAACyF,IAAI,CAACxB,EAAE,EAAEtE,sBAAsB,CAAC;kBAC5DsF,IAAI,EAAEQ,IAAI,CAACR,IAAI;kBACfC;iBACD,EAAEvF,sBAAsB,CAAC,CAC3B;gBACD,OAAOyC,SAAS,CAACgB,KAAK,CAAC4B,KAAK,CAAC;gBAC7B;cACF,CAAC,CAAC,MAAM,CAAC;YACX;YACA,IAAI9G,SAAS,CAACqH,cAAc,CAACjD,SAAS,CAAC,EAAE;cACvCe,KAAK,CAACU,IAAI,CACR,IAAIxG,UAAU,CAACuI,aAAa,CAAC;gBAC3BC,aAAa,EAAEzD,SAAS,CAACuC,OAAO,CAACmB,IAAI,CAAC,EAAE,CAAC;gBACzCR,SAAS,EAAElD,SAAS,CAACkD;eACtB,EAAE7F,sBAAsB,CAAC,CAC3B;cACD2C,SAAS,GAAGC,SAAS;YACvB;YACA;UACF;QACA,KAAK,OAAO;UAAE;YACZ,OAAOtE,MAAM,CAACgI,IAAI,CAChBnI,MAAM,CAACoI,GAAG,CACR,IAAI/I,OAAO,CAACA,OAAO,CAAC;cAClBgJ,MAAM,EAAE,iBAAiB;cACzBC,MAAM,EAAE,QAAQ;cAChBC,WAAW,EAAE,GAAGjD,KAAK,CAACS,KAAK,CAACP,IAAI,KAAKF,KAAK,CAACS,KAAK,CAACN,OAAO;aACzD,CAAC,CACH,CACF;UACH;MACF;MACA,OAAOF,KAAK,CAACiD,MAAM,KAAK,CAAC,GACrBrI,MAAM,CAACsI,IAAI,EAAE,GACbtI,MAAM,CAACgI,IAAI,CACXnI,MAAM,CAAC0I,OAAO,CACZjJ,UAAU,CAACA,UAAU,CAACyC,IAAI,CACxB;QAAEqD;MAAK,CAAE,EACT1D,sBAAsB,CACvB,CACF,CACF;IACL,CAAC,CAAC,CACH;EACH,CAAC,CAAC;EACJ,OAAOE,eAAe,CAAC4G,EAAE,CAAC;IAAEvF,MAAM;IAAEK,aAAa;IAAEE;EAAM,CAAE,CAAC;AAC9D,CAAC,CAAC;AAEJ;;;;AAAA1B,OAAA,CAAAC,IAAA,GAAAA,IAAA;AAIO,MAAM0G,KAAK,GAAIzG,OAKrB,IAAiEjC,KAAK,CAAC2I,MAAM,CAAC9G,eAAe,EAAEG,IAAI,CAACC,OAAO,CAAC,CAAC;AAE9G;;;;AAAAF,OAAA,CAAA2G,KAAA,GAAAA,KAAA;AAIO,MAAME,WAAW,GACtB3G,OAKC,IACmE;EACpE,MAAM;IAAEc,eAAe;IAAE,GAAG8F;EAAO,CAAE,GAAG5G,OAAO;EAC/C,OAAOrC,MAAM,CAACkJ,GAAG,CAACD,OAAO,CAAC,CAACzG,IAAI,CAC7BtC,MAAM,CAACiJ,OAAO,CAAEF,OAAO,IAAK7G,IAAI,CAAC;IAAE,GAAG6G,OAAO;IAAE9F;EAAe,CAAE,CAAC,CAAC,EAClE/C,KAAK,CAAC2I,MAAM,CAAC9G,eAAe,CAAC,CAC9B;AACH,CAAC;AAAAE,OAAA,CAAA6G,WAAA,GAAAA,WAAA","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/AnthropicConfig.js b/dist/dist/dist/cjs/AnthropicConfig.js
new file mode 100644
index 0000000000000000000000000000000000000000..fce941d92b245eb67f73c97d07a77532cb484ca2
--- /dev/null
+++ b/dist/dist/dist/cjs/AnthropicConfig.js
@@ -0,0 +1,30 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.withClientTransform = exports.AnthropicConfig = void 0;
+var Context = _interopRequireWildcard(require("effect/Context"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var _Function = require("effect/Function");
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+class AnthropicConfig extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicConfig")() {
+  /**
+   * @since 1.0.0
+   */
+  static getOrUndefined = /*#__PURE__*/Effect.map(/*#__PURE__*/Effect.context(), context => context.unsafeMap.get(AnthropicConfig.key));
+}
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+exports.AnthropicConfig = AnthropicConfig;
+const withClientTransform = exports.withClientTransform = /*#__PURE__*/(0, _Function.dual)(2, (self, transformClient) => Effect.flatMap(AnthropicConfig.getOrUndefined, config => Effect.provideService(self, AnthropicConfig, {
+  ...config,
+  transformClient
+})));
+//# sourceMappingURL=AnthropicConfig.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/AnthropicConfig.js.map b/dist/dist/dist/cjs/AnthropicConfig.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..a4d2c84593958b26c624574bf382dc94364b241b
--- /dev/null
+++ b/dist/dist/dist/cjs/AnthropicConfig.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicConfig.js","names":["Context","_interopRequireWildcard","require","Effect","_Function","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","AnthropicConfig","Tag","getOrUndefined","map","context","unsafeMap","key","exports","withClientTransform","dual","self","transformClient","flatMap","config","provideService"],"sources":["../../src/AnthropicConfig.ts"],"sourcesContent":[null],"mappings":";;;;;;AAIA,IAAAA,OAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,uBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAAsC,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,CAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAEtC;;;;AAIM,MAAOkB,eAAgB,sBAAQxB,OAAO,CAACyB,GAAG,CAAC,sCAAsC,CAAC,EAGrF;EACD;;;EAGA,OAAgBC,cAAc,gBAA8DvB,MAAM,CAACwB,GAAG,cACpGxB,MAAM,CAACyB,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACZ,GAAG,CAACO,eAAe,CAACM,GAAG,CAAC,CACxD;;AAgBH;;;;AAAAC,OAAA,CAAAP,eAAA,GAAAA,eAAA;AAIO,MAAMQ,mBAAmB,GAAAD,OAAA,CAAAC,mBAAA,gBAG5B,IAAAC,cAAI,EAIN,CAAC,EACD,CAACC,IAAI,EAAEC,eAAe,KACpBhC,MAAM,CAACiC,OAAO,CACZZ,eAAe,CAACE,cAAc,EAC7BW,MAAM,IAAKlC,MAAM,CAACmC,cAAc,CAACJ,IAAI,EAAEV,eAAe,EAAE;EAAE,GAAGa,MAAM;EAAEF;AAAe,CAAE,CAAC,CACzF,CACJ","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/AnthropicLanguageModel.js b/dist/dist/dist/cjs/AnthropicLanguageModel.js
new file mode 100644
index 0000000000000000000000000000000000000000..0e440c7396397c1a0aaa89b3c2c3fa9b79dfd124
--- /dev/null
+++ b/dist/dist/dist/cjs/AnthropicLanguageModel.js
@@ -0,0 +1,496 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.withConfigOverride = exports.modelWithTokenizer = exports.model = exports.make = exports.layerWithTokenizer = exports.layer = exports.ProviderMetadata = exports.Config = void 0;
+var _AiError = require("@effect/ai/AiError");
+var AiLanguageModel = _interopRequireWildcard(require("@effect/ai/AiLanguageModel"));
+var AiModel = _interopRequireWildcard(require("@effect/ai/AiModel"));
+var AiResponse = _interopRequireWildcard(require("@effect/ai/AiResponse"));
+var _AiTelemetry = require("@effect/ai/AiTelemetry");
+var Arr = _interopRequireWildcard(require("effect/Array"));
+var Context = _interopRequireWildcard(require("effect/Context"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var Encoding = _interopRequireWildcard(require("effect/Encoding"));
+var _Function = require("effect/Function");
+var Layer = _interopRequireWildcard(require("effect/Layer"));
+var Option = _interopRequireWildcard(require("effect/Option"));
+var Predicate = _interopRequireWildcard(require("effect/Predicate"));
+var Stream = _interopRequireWildcard(require("effect/Stream"));
+var _AnthropicClient = require("./AnthropicClient.js");
+var AnthropicTokenizer = _interopRequireWildcard(require("./AnthropicTokenizer.js"));
+var InternalUtilities = _interopRequireWildcard(require("./internal/utilities.js"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/**
+ * @since 1.0.0
+ */
+
+const constDisableValidation = {
+  disableValidation: true
+};
+// =============================================================================
+// Configuration
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+class Config extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicLanguageModel/Config")() {
+  /**
+   * @since 1.0.0
+   */
+  static getOrUndefined = /*#__PURE__*/Effect.map(/*#__PURE__*/Effect.context(), context => context.unsafeMap.get(Config.key));
+}
+// =============================================================================
+// Anthropic Provider Metadata
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+exports.Config = Config;
+class ProviderMetadata extends /*#__PURE__*/Context.Tag(InternalUtilities.ProviderMetadataKey)() {}
+// =============================================================================
+// Anthropic Language Model
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+exports.ProviderMetadata = ProviderMetadata;
+const model = (model, config) => AiModel.make(layer({
+  model,
+  config
+}));
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+exports.model = model;
+const modelWithTokenizer = (model, config) => AiModel.make(layerWithTokenizer({
+  model,
+  config
+}));
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+exports.modelWithTokenizer = modelWithTokenizer;
+const make = exports.make = /*#__PURE__*/Effect.fnUntraced(function* (options) {
+  const client = yield* _AnthropicClient.AnthropicClient;
+  const makeRequest = Effect.fnUntraced(function* (method, {
+    prompt,
+    system,
+    toolChoice,
+    tools
+  }) {
+    const context = yield* Effect.context();
+    const useStructured = tools.length === 1 && tools[0].structured;
+    let tool_choice = undefined;
+    if (useStructured) {
+      tool_choice = {
+        type: "tool",
+        name: tools[0].name
+      };
+    } else if (tools.length > 0) {
+      if (toolChoice === "required") {
+        tool_choice = {
+          type: "any"
+        };
+      } else if (typeof toolChoice === "object") {
+        tool_choice = {
+          type: "tool",
+          name: toolChoice.tool
+        };
+      } else {
+        tool_choice = {
+          type: toolChoice
+        };
+      }
+    }
+    const messages = yield* makeMessages(method, prompt);
+    return {
+      model: options.model,
+      max_tokens: 4096,
+      ...options.config,
+      ...context.unsafeMap.get(Config.key),
+      // TODO: re-evaluate a better way to do this
+      system: Option.getOrUndefined(system),
+      messages,
+      tools: tools.length === 0 ? undefined : tools.map(tool => ({
+        name: tool.name,
+        description: tool.description,
+        input_schema: tool.parameters
+      })),
+      tool_choice
+    };
+  });
+  return yield* AiLanguageModel.make({
+    generateText: Effect.fnUntraced(function* (options) {
+      const request = yield* makeRequest("generateText", options);
+      annotateRequest(options.span, request);
+      const rawResponse = yield* client.client.messagesPost({
+        params: {},
+        payload: request
+      });
+      annotateChatResponse(options.span, rawResponse);
+      const response = yield* makeResponse(rawResponse);
+      return response;
+    }, Effect.catchAll(cause => _AiError.AiError.is(cause) ? cause : new _AiError.AiError({
+      module: "AnthropicLanguageModel",
+      method: "generateText",
+      description: "An error occurred",
+      cause
+    }))),
+    streamText(options) {
+      return makeRequest("streamText", options).pipe(Effect.tap(request => annotateRequest(options.span, request)), Effect.map(client.stream), Stream.unwrap, Stream.map(response => {
+        annotateStreamResponse(options.span, response);
+        return response;
+      }), Stream.catchAll(cause => _AiError.AiError.is(cause) ? Effect.fail(cause) : Effect.fail(new _AiError.AiError({
+        module: "AnthropicLanguageModel",
+        method: "streamText",
+        description: "An error occurred",
+        cause
+      }))));
+    }
+  });
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+const layer = options => Layer.effect(AiLanguageModel.AiLanguageModel, make({
+  model: options.model,
+  config: options.config
+}));
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+exports.layer = layer;
+const layerWithTokenizer = options => Layer.merge(layer(options), AnthropicTokenizer.layer);
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+exports.layerWithTokenizer = layerWithTokenizer;
+const withConfigOverride = exports.withConfigOverride = /*#__PURE__*/(0, _Function.dual)(2, (self, overrides) => Effect.flatMap(Config.getOrUndefined, config => Effect.provideService(self, Config, {
+  ...config,
+  ...overrides
+})));
+const groupMessages = prompt => {
+  const messages = [];
+  let current = undefined;
+  for (const message of prompt.messages) {
+    switch (message._tag) {
+      case "AssistantMessage":
+        {
+          if (current?.type !== "assistant") {
+            current = {
+              type: "assistant",
+              messages: []
+            };
+            messages.push(current);
+          }
+          current.messages.push(message);
+          break;
+        }
+      case "ToolMessage":
+      case "UserMessage":
+        {
+          if (current?.type !== "user") {
+            current = {
+              type: "user",
+              messages: []
+            };
+            messages.push(current);
+          }
+          current.messages.push(message);
+          break;
+        }
+    }
+  }
+  return messages;
+};
+const makeMessages = /*#__PURE__*/Effect.fnUntraced(function* (method, prompt) {
+  const messages = [];
+  const groups = groupMessages(prompt);
+  for (let i = 0; i < groups.length; i++) {
+    const group = groups[i];
+    const isLastGroup = i === groups.length - 1;
+    switch (group.type) {
+      case "assistant":
+        {
+          const content = [];
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j];
+            const isLastMessage = j === group.messages.length - 1;
+            for (let k = 0; k < message.parts.length; k++) {
+              const part = message.parts[k];
+              const isLastPart = k === message.parts.length - 1;
+              switch (part._tag) {
+                case "ReasoningPart":
+                  {
+                    content.push({
+                      type: "thinking",
+                      thinking: part.reasoningText,
+                      signature: part.signature
+                    });
+                    break;
+                  }
+                case "RedactedReasoningPart":
+                  {
+                    content.push({
+                      type: "redacted_thinking",
+                      data: part.redactedText
+                    });
+                    break;
+                  }
+                case "TextPart":
+                  {
+                    content.push({
+                      type: "text",
+                      text:
+                      // Anthropic does not allow trailing whitespace in assistant
+                      // content blocks
+                      isLastGroup && isLastMessage && isLastPart ? part.text.trim() : part.text
+                    });
+                    break;
+                  }
+                case "ToolCallPart":
+                  {
+                    content.push({
+                      type: "tool_use",
+                      id: part.id,
+                      name: part.name,
+                      input: part.params
+                    });
+                    break;
+                  }
+              }
+            }
+          }
+          messages.push({
+            role: "assistant",
+            content
+          });
+          break;
+        }
+      case "user":
+        {
+          const content = [];
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j];
+            switch (message._tag) {
+              case "ToolMessage":
+                {
+                  for (let k = 0; k < message.parts.length; k++) {
+                    const part = message.parts[k];
+                    // TODO: support advanced tool result content parts
+                    content.push({
+                      type: "tool_result",
+                      tool_use_id: part.id,
+                      content: JSON.stringify(part.result)
+                    });
+                  }
+                  break;
+                }
+              case "UserMessage":
+                {
+                  for (let k = 0; k < message.parts.length; k++) {
+                    const part = message.parts[k];
+                    switch (part._tag) {
+                      case "FilePart":
+                        {
+                          if (Predicate.isUndefined(part.mediaType) || part.mediaType !== "application/pdf") {
+                            return yield* new _AiError.AiError({
+                              module: "AnthropicLanguageModel",
+                              method,
+                              description: "AnthropicLanguageModel only supports PDF file inputs"
+                            });
+                          }
+                          content.push({
+                            type: "document",
+                            source: {
+                              type: "base64",
+                              media_type: "application/pdf",
+                              data: Encoding.encodeBase64(part.data)
+                            }
+                          });
+                          break;
+                        }
+                      case "FileUrlPart":
+                        {
+                          content.push({
+                            type: "document",
+                            source: {
+                              type: "url",
+                              url: part.url.toString()
+                            }
+                          });
+                          break;
+                        }
+                      case "TextPart":
+                        {
+                          content.push({
+                            type: "text",
+                            text: part.text
+                          });
+                          break;
+                        }
+                      case "ImagePart":
+                        {
+                          content.push({
+                            type: "image",
+                            source: {
+                              type: "base64",
+                              media_type: part.mediaType ?? "image/jpeg",
+                              data: Encoding.encodeBase64(part.data)
+                            }
+                          });
+                          break;
+                        }
+                      case "ImageUrlPart":
+                        {
+                          content.push({
+                            type: "image",
+                            source: {
+                              type: "url",
+                              url: part.url.toString()
+                            }
+                          });
+                          break;
+                        }
+                    }
+                  }
+                  break;
+                }
+            }
+          }
+          messages.push({
+            role: "user",
+            content
+          });
+          break;
+        }
+    }
+  }
+  if (Arr.isNonEmptyReadonlyArray(messages)) {
+    return messages;
+  }
+  return yield* new _AiError.AiError({
+    module: "AnthropicLanguageModel",
+    method,
+    description: "Prompt contained no messages"
+  });
+});
+const makeResponse = /*#__PURE__*/Effect.fnUntraced(function* (response) {
+  const parts = [];
+  parts.push(new AiResponse.MetadataPart({
+    id: response.id,
+    model: response.model
+  }, constDisableValidation));
+  for (const part of response.content) {
+    switch (part.type) {
+      case "text":
+        {
+          parts.push(new AiResponse.TextPart({
+            text: part.text
+          }, constDisableValidation));
+          break;
+        }
+      case "tool_use":
+        {
+          parts.push(AiResponse.ToolCallPart.fromUnknown({
+            id: part.id,
+            name: part.name,
+            params: part.input
+          }));
+          break;
+        }
+      case "thinking":
+        {
+          parts.push(new AiResponse.ReasoningPart({
+            reasoningText: part.thinking,
+            signature: part.signature
+          }, constDisableValidation));
+          break;
+        }
+      case "redacted_thinking":
+        {
+          parts.push(new AiResponse.RedactedReasoningPart({
+            redactedText: part.data
+          }, constDisableValidation));
+          break;
+        }
+    }
+  }
+  const metadata = {};
+  if (response.stop_sequence !== null) {
+    metadata.stopSequence = response.stop_sequence;
+  }
+  parts.push(new AiResponse.FinishPart({
+    // Anthropic always returns a non-null `stop_reason` for non-streaming responses
+    reason: InternalUtilities.resolveFinishReason(response.stop_reason),
+    usage: new AiResponse.Usage({
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens,
+      totalTokens: response.usage.input_tokens + response.usage.output_tokens,
+      reasoningTokens: 0,
+      cacheReadInputTokens: response.usage.cache_read_input_tokens ?? 0,
+      cacheWriteInputTokens: response.usage.cache_creation_input_tokens ?? 0
+    }),
+    providerMetadata: {
+      [InternalUtilities.ProviderMetadataKey]: metadata
+    }
+  }, constDisableValidation));
+  return new AiResponse.AiResponse({
+    parts
+  }, constDisableValidation);
+});
+const annotateRequest = (span, request) => {
+  (0, _AiTelemetry.addGenAIAnnotations)(span, {
+    system: "anthropic",
+    operation: {
+      name: "chat"
+    },
+    request: {
+      model: request.model,
+      temperature: request.temperature,
+      topK: request.top_k,
+      topP: request.top_p,
+      maxTokens: request.max_tokens,
+      stopSequences: Arr.ensure(request.stop_sequences).filter(Predicate.isNotNullable)
+    }
+  });
+};
+const annotateChatResponse = (span, response) => {
+  (0, _AiTelemetry.addGenAIAnnotations)(span, {
+    response: {
+      id: response.id,
+      model: response.model,
+      finishReasons: response.stop_reason ? [response.stop_reason] : undefined
+    },
+    usage: {
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens
+    }
+  });
+};
+const annotateStreamResponse = (span, response) => {
+  const metadataPart = response.parts.find(part => part._tag === "MetadataPart");
+  const finishPart = response.parts.find(part => part._tag === "FinishPart");
+  (0, _AiTelemetry.addGenAIAnnotations)(span, {
+    response: {
+      id: metadataPart?.id,
+      model: metadataPart?.model,
+      finishReasons: finishPart?.reason ? [finishPart.reason] : undefined
+    },
+    usage: {
+      inputTokens: finishPart?.usage.inputTokens,
+      outputTokens: finishPart?.usage.outputTokens
+    }
+  });
+};
+//# sourceMappingURL=AnthropicLanguageModel.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/AnthropicLanguageModel.js.map b/dist/dist/dist/cjs/AnthropicLanguageModel.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..253c5bcaf215cc61590ad27df04a9063e1a691ba
--- /dev/null
+++ b/dist/dist/dist/cjs/AnthropicLanguageModel.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicLanguageModel.js","names":["_AiError","require","AiLanguageModel","_interopRequireWildcard","AiModel","AiResponse","_AiTelemetry","Arr","Context","Effect","Encoding","_Function","Layer","Option","Predicate","Stream","_AnthropicClient","AnthropicTokenizer","InternalUtilities","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","constDisableValidation","disableValidation","Config","Tag","getOrUndefined","map","context","unsafeMap","key","exports","ProviderMetadata","ProviderMetadataKey","model","config","make","layer","modelWithTokenizer","layerWithTokenizer","fnUntraced","options","client","AnthropicClient","makeRequest","method","prompt","system","toolChoice","tools","useStructured","length","structured","tool_choice","undefined","type","name","tool","messages","makeMessages","max_tokens","description","input_schema","parameters","generateText","request","annotateRequest","span","rawResponse","messagesPost","params","payload","annotateChatResponse","response","makeResponse","catchAll","cause","AiError","is","module","streamText","pipe","tap","stream","unwrap","annotateStreamResponse","fail","effect","merge","withConfigOverride","dual","self","overrides","flatMap","provideService","groupMessages","current","message","_tag","push","groups","group","isLastGroup","content","j","isLastMessage","k","parts","part","isLastPart","thinking","reasoningText","signature","data","redactedText","text","trim","id","input","role","tool_use_id","JSON","stringify","result","isUndefined","mediaType","source","media_type","encodeBase64","url","toString","isNonEmptyReadonlyArray","MetadataPart","TextPart","ToolCallPart","fromUnknown","ReasoningPart","RedactedReasoningPart","metadata","stop_sequence","stopSequence","FinishPart","reason","resolveFinishReason","stop_reason","usage","Usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","reasoningTokens","cacheReadInputTokens","cache_read_input_tokens","cacheWriteInputTokens","cache_creation_input_tokens","providerMetadata","addGenAIAnnotations","operation","temperature","topK","top_k","topP","top_p","maxTokens","stopSequences","ensure","stop_sequences","filter","isNotNullable","finishReasons","metadataPart","find","finishPart"],"sources":["../../src/AnthropicLanguageModel.ts"],"sourcesContent":[null],"mappings":";;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AAEA,IAAAC,eAAA,GAAAC,uBAAA,CAAAF,OAAA;AACA,IAAAG,OAAA,GAAAD,uBAAA,CAAAF,OAAA;AACA,IAAAI,UAAA,GAAAF,uBAAA,CAAAF,OAAA;AACA,IAAAK,YAAA,GAAAL,OAAA;AAEA,IAAAM,GAAA,GAAAJ,uBAAA,CAAAF,OAAA;AACA,IAAAO,OAAA,GAAAL,uBAAA,CAAAF,OAAA;AACA,IAAAQ,MAAA,GAAAN,uBAAA,CAAAF,OAAA;AACA,IAAAS,QAAA,GAAAP,uBAAA,CAAAF,OAAA;AACA,IAAAU,SAAA,GAAAV,OAAA;AACA,IAAAW,KAAA,GAAAT,uBAAA,CAAAF,OAAA;AACA,IAAAY,MAAA,GAAAV,uBAAA,CAAAF,OAAA;AACA,IAAAa,SAAA,GAAAX,uBAAA,CAAAF,OAAA;AACA,IAAAc,MAAA,GAAAZ,uBAAA,CAAAF,OAAA;AAGA,IAAAe,gBAAA,GAAAf,OAAA;AACA,IAAAgB,kBAAA,GAAAd,uBAAA,CAAAF,OAAA;AAEA,IAAAiB,iBAAA,GAAAf,uBAAA,CAAAF,OAAA;AAA4D,SAAAE,wBAAAgB,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAlB,uBAAA,YAAAA,CAAAgB,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAxB5D;;;;AA0BA,MAAMkB,sBAAsB,GAAG;EAAEC,iBAAiB,EAAE;AAAI,CAAW;AAQnE;AACA;AACA;AAEA;;;;AAIM,MAAOC,MAAO,sBAAQhC,OAAO,CAACiC,GAAG,CAAC,oDAAoD,CAAC,EAG1F;EACD;;;EAGA,OAAgBC,cAAc,gBAAqDjC,MAAM,CAACkC,GAAG,cAC3FlC,MAAM,CAACmC,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACd,GAAG,CAACS,MAAM,CAACM,GAAG,CAAC,CAC/C;;AAuBH;AACA;AACA;AAEA;;;;AAAAC,OAAA,CAAAP,MAAA,GAAAA,MAAA;AAIM,MAAOQ,gBAAiB,sBAAQxC,OAAO,CAACiC,GAAG,CAACvB,iBAAiB,CAAC+B,mBAAmB,CAAC,EAGrF;AAqBH;AACA;AACA;AAEA;;;;AAAAF,OAAA,CAAAC,gBAAA,GAAAA,gBAAA;AAIO,MAAME,KAAK,GAAGA,CACnBA,KAA4B,EAC5BC,MAAsC,KACgC/C,OAAO,CAACgD,IAAI,CAACC,KAAK,CAAC;EAAEH,KAAK;EAAEC;AAAM,CAAE,CAAC,CAAC;AAE9G;;;;AAAAJ,OAAA,CAAAG,KAAA,GAAAA,KAAA;AAIO,MAAMI,kBAAkB,GAAGA,CAChCJ,KAA4B,EAC5BC,MAAsC,KAEtC/C,OAAO,CAACgD,IAAI,CAACG,kBAAkB,CAAC;EAAEL,KAAK;EAAEC;AAAM,CAAE,CAAC,CAAC;AAErD;;;;AAAAJ,OAAA,CAAAO,kBAAA,GAAAA,kBAAA;AAIO,MAAMF,IAAI,GAAAL,OAAA,CAAAK,IAAA,gBAAG3C,MAAM,CAAC+C,UAAU,CAAC,WAAUC,OAG/C;EACC,MAAMC,MAAM,GAAG,OAAOC,gCAAe;EAErC,MAAMC,WAAW,GAAGnD,MAAM,CAAC+C,UAAU,CACnC,WAAUK,MAAc,EAAE;IAAEC,MAAM;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAK,CAA0C;IACrG,MAAMrB,OAAO,GAAG,OAAOnC,MAAM,CAACmC,OAAO,EAAS;IAC9C,MAAMsB,aAAa,GAAGD,KAAK,CAACE,MAAM,KAAK,CAAC,IAAIF,KAAK,CAAC,CAAC,CAAC,CAACG,UAAU;IAC/D,IAAIC,WAAW,GAAoDC,SAAS;IAC5E,IAAIJ,aAAa,EAAE;MACjBG,WAAW,GAAG;QAAEE,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAEP,KAAK,CAAC,CAAC,CAAC,CAACO;MAAI,CAAE;IACrD,CAAC,MAAM,IAAIP,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAIH,UAAU,KAAK,UAAU,EAAE;QAC7BK,WAAW,GAAG;UAAEE,IAAI,EAAE;QAAK,CAAE;MAC/B,CAAC,MAAM,IAAI,OAAOP,UAAU,KAAK,QAAQ,EAAE;QACzCK,WAAW,GAAG;UAAEE,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAER,UAAU,CAACS;QAAI,CAAE;MACvD,CAAC,MAAM;QACLJ,WAAW,GAAG;UAAEE,IAAI,EAAEP;QAAU,CAAE;MACpC;IACF;IACA,MAAMU,QAAQ,GAAG,OAAOC,YAAY,CAACd,MAAM,EAAEC,MAAM,CAAC;IACpD,OAAO;MACLZ,KAAK,EAAEO,OAAO,CAACP,KAAK;MACpB0B,UAAU,EAAE,IAAI;MAChB,GAAGnB,OAAO,CAACN,MAAM;MACjB,GAAGP,OAAO,CAACC,SAAS,CAACd,GAAG,CAACS,MAAM,CAACM,GAAG,CAAC;MACpC;MACAiB,MAAM,EAAElD,MAAM,CAAC6B,cAAc,CAACqB,MAAM,CAAC;MACrCW,QAAQ;MACRT,KAAK,EAAEA,KAAK,CAACE,MAAM,KAAK,CAAC,GAAGG,SAAS,GAAGL,KAAK,CAACtB,GAAG,CAAE8B,IAAI,KAAM;QAC3DD,IAAI,EAAEC,IAAI,CAACD,IAAI;QACfK,WAAW,EAAEJ,IAAI,CAACI,WAAW;QAC7BC,YAAY,EAAEL,IAAI,CAACM;OACpB,CAAC,CAAC;MACHV;KACsD;EAC1D,CAAC,CACF;EAED,OAAO,OAAOnE,eAAe,CAACkD,IAAI,CAAC;IACjC4B,YAAY,EAAEvE,MAAM,CAAC+C,UAAU,CAC7B,WAAUC,OAAO;MACf,MAAMwB,OAAO,GAAG,OAAOrB,WAAW,CAAC,cAAc,EAAEH,OAAO,CAAC;MAC3DyB,eAAe,CAACzB,OAAO,CAAC0B,IAAI,EAAEF,OAAO,CAAC;MACtC,MAAMG,WAAW,GAAG,OAAO1B,MAAM,CAACA,MAAM,CAAC2B,YAAY,CAAC;QAAEC,MAAM,EAAE,EAAE;QAAEC,OAAO,EAAEN;MAAO,CAAE,CAAC;MACvFO,oBAAoB,CAAC/B,OAAO,CAAC0B,IAAI,EAAEC,WAAW,CAAC;MAC/C,MAAMK,QAAQ,GAAG,OAAOC,YAAY,CAACN,WAAW,CAAC;MACjD,OAAOK,QAAQ;IACjB,CAAC,EACDhF,MAAM,CAACkF,QAAQ,CAAEC,KAAK,IACpBC,gBAAO,CAACC,EAAE,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,IAAIC,gBAAO,CAAC;MACtCE,MAAM,EAAE,wBAAwB;MAChClC,MAAM,EAAE,cAAc;MACtBgB,WAAW,EAAE,mBAAmB;MAChCe;KACD,CAAC,CACH,CACF;IACDI,UAAUA,CAACvC,OAAO;MAChB,OAAOG,WAAW,CAAC,YAAY,EAAEH,OAAO,CAAC,CAACwC,IAAI,CAC5CxF,MAAM,CAACyF,GAAG,CAAEjB,OAAO,IAAKC,eAAe,CAACzB,OAAO,CAAC0B,IAAI,EAAEF,OAAO,CAAC,CAAC,EAC/DxE,MAAM,CAACkC,GAAG,CAACe,MAAM,CAACyC,MAAM,CAAC,EACzBpF,MAAM,CAACqF,MAAM,EACbrF,MAAM,CAAC4B,GAAG,CAAE8C,QAAQ,IAAI;QACtBY,sBAAsB,CAAC5C,OAAO,CAAC0B,IAAI,EAAEM,QAAQ,CAAC;QAC9C,OAAOA,QAAQ;MACjB,CAAC,CAAC,EACF1E,MAAM,CAAC4E,QAAQ,CAAEC,KAAK,IACpBC,gBAAO,CAACC,EAAE,CAACF,KAAK,CAAC,GAAGnF,MAAM,CAAC6F,IAAI,CAACV,KAAK,CAAC,GAAGnF,MAAM,CAAC6F,IAAI,CAClD,IAAIT,gBAAO,CAAC;QACVE,MAAM,EAAE,wBAAwB;QAChClC,MAAM,EAAE,YAAY;QACpBgB,WAAW,EAAE,mBAAmB;QAChCe;OACD,CAAC,CACH,CACF,CACF;IACH;GACD,CAAC;AACJ,CAAC,CAAC;AAEF;;;;AAIO,MAAMvC,KAAK,GAAII,OAGrB,IACC7C,KAAK,CAAC2F,MAAM,CAACrG,eAAe,CAACA,eAAe,EAAEkD,IAAI,CAAC;EAAEF,KAAK,EAAEO,OAAO,CAACP,KAAK;EAAEC,MAAM,EAAEM,OAAO,CAACN;AAAM,CAAE,CAAC,CAAC;AAEvG;;;;AAAAJ,OAAA,CAAAM,KAAA,GAAAA,KAAA;AAIO,MAAME,kBAAkB,GAAIE,OAGlC,IACC7C,KAAK,CAAC4F,KAAK,CAACnD,KAAK,CAACI,OAAO,CAAC,EAAExC,kBAAkB,CAACoC,KAAK,CAAC;AAEvD;;;;AAAAN,OAAA,CAAAQ,kBAAA,GAAAA,kBAAA;AAIO,MAAMkD,kBAAkB,GAAA1D,OAAA,CAAA0D,kBAAA,gBAG3B,IAAAC,cAAI,EAGN,CAAC,EAAE,CAACC,IAAI,EAAEC,SAAS,KACnBnG,MAAM,CAACoG,OAAO,CACZrE,MAAM,CAACE,cAAc,EACpBS,MAAM,IAAK1C,MAAM,CAACqG,cAAc,CAACH,IAAI,EAAEnE,MAAM,EAAE;EAAE,GAAGW,MAAM;EAAE,GAAGyD;AAAS,CAAE,CAAC,CAC7E,CAAC;AAkBJ,MAAMG,aAAa,GAAIjD,MAAuB,IAAyB;EACrE,MAAMY,QAAQ,GAAwB,EAAE;EACxC,IAAIsC,OAAO,GAA6B1C,SAAS;EACjD,KAAK,MAAM2C,OAAO,IAAInD,MAAM,CAACY,QAAQ,EAAE;IACrC,QAAQuC,OAAO,CAACC,IAAI;MAClB,KAAK,kBAAkB;QAAE;UACvB,IAAIF,OAAO,EAAEzC,IAAI,KAAK,WAAW,EAAE;YACjCyC,OAAO,GAAG;cAAEzC,IAAI,EAAE,WAAW;cAAEG,QAAQ,EAAE;YAAE,CAAE;YAC7CA,QAAQ,CAACyC,IAAI,CAACH,OAAO,CAAC;UACxB;UACAA,OAAO,CAACtC,QAAQ,CAACyC,IAAI,CAACF,OAAO,CAAC;UAC9B;QACF;MACA,KAAK,aAAa;MAClB,KAAK,aAAa;QAAE;UAClB,IAAID,OAAO,EAAEzC,IAAI,KAAK,MAAM,EAAE;YAC5ByC,OAAO,GAAG;cAAEzC,IAAI,EAAE,MAAM;cAAEG,QAAQ,EAAE;YAAE,CAAE;YACxCA,QAAQ,CAACyC,IAAI,CAACH,OAAO,CAAC;UACxB;UACAA,OAAO,CAACtC,QAAQ,CAACyC,IAAI,CAACF,OAAO,CAAC;UAC9B;QACF;IACF;EACF;EACA,OAAOvC,QAAQ;AACjB,CAAC;AAED,MAAMC,YAAY,gBAAGlE,MAAM,CAAC+C,UAAU,CACpC,WAAUK,MAAc,EAAEC,MAAuB;EAC/C,MAAMY,QAAQ,GAAiD,EAAE;EACjE,MAAM0C,MAAM,GAAGL,aAAa,CAACjD,MAAM,CAAC;EACpC,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0F,MAAM,CAACjD,MAAM,EAAEzC,CAAC,EAAE,EAAE;IACtC,MAAM2F,KAAK,GAAGD,MAAM,CAAC1F,CAAC,CAAC;IACvB,MAAM4F,WAAW,GAAG5F,CAAC,KAAK0F,MAAM,CAACjD,MAAM,GAAG,CAAC;IAC3C,QAAQkD,KAAK,CAAC9C,IAAI;MAChB,KAAK,WAAW;QAAE;UAChB,MAAMgD,OAAO,GAAsD,EAAE;UACrE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAAC3C,QAAQ,CAACP,MAAM,EAAEqD,CAAC,EAAE,EAAE;YAC9C,MAAMP,OAAO,GAAGI,KAAK,CAAC3C,QAAQ,CAAC8C,CAAC,CAAC;YACjC,MAAMC,aAAa,GAAGD,CAAC,KAAKH,KAAK,CAAC3C,QAAQ,CAACP,MAAM,GAAG,CAAC;YACrD,KAAK,IAAIuD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,OAAO,CAACU,KAAK,CAACxD,MAAM,EAAEuD,CAAC,EAAE,EAAE;cAC7C,MAAME,IAAI,GAAGX,OAAO,CAACU,KAAK,CAACD,CAAC,CAAC;cAC7B,MAAMG,UAAU,GAAGH,CAAC,KAAKT,OAAO,CAACU,KAAK,CAACxD,MAAM,GAAG,CAAC;cACjD,QAAQyD,IAAI,CAACV,IAAI;gBACf,KAAK,eAAe;kBAAE;oBACpBK,OAAO,CAACJ,IAAI,CAAC;sBACX5C,IAAI,EAAE,UAAU;sBAChBuD,QAAQ,EAAEF,IAAI,CAACG,aAAa;sBAC5BC,SAAS,EAAEJ,IAAI,CAACI;qBACjB,CAAC;oBACF;kBACF;gBACA,KAAK,uBAAuB;kBAAE;oBAC5BT,OAAO,CAACJ,IAAI,CAAC;sBACX5C,IAAI,EAAE,mBAAmB;sBACzB0D,IAAI,EAAEL,IAAI,CAACM;qBACZ,CAAC;oBACF;kBACF;gBACA,KAAK,UAAU;kBAAE;oBACfX,OAAO,CAACJ,IAAI,CAAC;sBACX5C,IAAI,EAAE,MAAM;sBACZ4D,IAAI;sBACF;sBACA;sBACAb,WAAW,IAAIG,aAAa,IAAII,UAAU,GACtCD,IAAI,CAACO,IAAI,CAACC,IAAI,EAAE,GAChBR,IAAI,CAACO;qBACZ,CAAC;oBACF;kBACF;gBACA,KAAK,cAAc;kBAAE;oBACnBZ,OAAO,CAACJ,IAAI,CAAC;sBACX5C,IAAI,EAAE,UAAU;sBAChB8D,EAAE,EAAET,IAAI,CAACS,EAAE;sBACX7D,IAAI,EAAEoD,IAAI,CAACpD,IAAI;sBACf8D,KAAK,EAAEV,IAAI,CAACtC;qBACb,CAAC;oBACF;kBACF;cACF;YACF;UACF;UACAZ,QAAQ,CAACyC,IAAI,CAAC;YAAEoB,IAAI,EAAE,WAAW;YAAEhB;UAAO,CAAE,CAAC;UAC7C;QACF;MACA,KAAK,MAAM;QAAE;UACX,MAAMA,OAAO,GAAsD,EAAE;UACrE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAAC3C,QAAQ,CAACP,MAAM,EAAEqD,CAAC,EAAE,EAAE;YAC9C,MAAMP,OAAO,GAAGI,KAAK,CAAC3C,QAAQ,CAAC8C,CAAC,CAAC;YACjC,QAAQP,OAAO,CAACC,IAAI;cAClB,KAAK,aAAa;gBAAE;kBAClB,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,OAAO,CAACU,KAAK,CAACxD,MAAM,EAAEuD,CAAC,EAAE,EAAE;oBAC7C,MAAME,IAAI,GAAGX,OAAO,CAACU,KAAK,CAACD,CAAC,CAAC;oBAC7B;oBACAH,OAAO,CAACJ,IAAI,CAAC;sBACX5C,IAAI,EAAE,aAAa;sBACnBiE,WAAW,EAAEZ,IAAI,CAACS,EAAE;sBACpBd,OAAO,EAAEkB,IAAI,CAACC,SAAS,CAACd,IAAI,CAACe,MAAM;qBACpC,CAAC;kBACJ;kBACA;gBACF;cACA,KAAK,aAAa;gBAAE;kBAClB,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,OAAO,CAACU,KAAK,CAACxD,MAAM,EAAEuD,CAAC,EAAE,EAAE;oBAC7C,MAAME,IAAI,GAAGX,OAAO,CAACU,KAAK,CAACD,CAAC,CAAC;oBAC7B,QAAQE,IAAI,CAACV,IAAI;sBACf,KAAK,UAAU;wBAAE;0BACf,IAAIpG,SAAS,CAAC8H,WAAW,CAAChB,IAAI,CAACiB,SAAS,CAAC,IAAIjB,IAAI,CAACiB,SAAS,KAAK,iBAAiB,EAAE;4BACjF,OAAO,OAAO,IAAIhD,gBAAO,CAAC;8BACxBE,MAAM,EAAE,wBAAwB;8BAChClC,MAAM;8BACNgB,WAAW,EAAE;6BACd,CAAC;0BACJ;0BACA0C,OAAO,CAACJ,IAAI,CAAC;4BACX5C,IAAI,EAAE,UAAU;4BAChBuE,MAAM,EAAE;8BACNvE,IAAI,EAAE,QAAQ;8BACdwE,UAAU,EAAE,iBAAiB;8BAC7Bd,IAAI,EAAEvH,QAAQ,CAACsI,YAAY,CAACpB,IAAI,CAACK,IAAI;;2BAExC,CAAC;0BACF;wBACF;sBACA,KAAK,aAAa;wBAAE;0BAClBV,OAAO,CAACJ,IAAI,CAAC;4BACX5C,IAAI,EAAE,UAAU;4BAChBuE,MAAM,EAAE;8BACNvE,IAAI,EAAE,KAAK;8BACX0E,GAAG,EAAErB,IAAI,CAACqB,GAAG,CAACC,QAAQ;;2BAEzB,CAAC;0BACF;wBACF;sBACA,KAAK,UAAU;wBAAE;0BACf3B,OAAO,CAACJ,IAAI,CAAC;4BACX5C,IAAI,EAAE,MAAM;4BACZ4D,IAAI,EAAEP,IAAI,CAACO;2BACZ,CAAC;0BACF;wBACF;sBACA,KAAK,WAAW;wBAAE;0BAChBZ,OAAO,CAACJ,IAAI,CAAC;4BACX5C,IAAI,EAAE,OAAO;4BACbuE,MAAM,EAAE;8BACNvE,IAAI,EAAE,QAAQ;8BACdwE,UAAU,EAAEnB,IAAI,CAACiB,SAAS,IAAI,YAAmB;8BACjDZ,IAAI,EAAEvH,QAAQ,CAACsI,YAAY,CAACpB,IAAI,CAACK,IAAI;;2BAExC,CAAC;0BACF;wBACF;sBACA,KAAK,cAAc;wBAAE;0BACnBV,OAAO,CAACJ,IAAI,CAAC;4BACX5C,IAAI,EAAE,OAAO;4BACbuE,MAAM,EAAE;8BACNvE,IAAI,EAAE,KAAK;8BACX0E,GAAG,EAAErB,IAAI,CAACqB,GAAG,CAACC,QAAQ;;2BAEzB,CAAC;0BACF;wBACF;oBACF;kBACF;kBACA;gBACF;YACF;UACF;UACAxE,QAAQ,CAACyC,IAAI,CAAC;YAAEoB,IAAI,EAAE,MAAM;YAAEhB;UAAO,CAAE,CAAC;UACxC;QACF;IACF;EACF;EACA,IAAIhH,GAAG,CAAC4I,uBAAuB,CAACzE,QAAQ,CAAC,EAAE;IACzC,OAAOA,QAAQ;EACjB;EACA,OAAO,OAAO,IAAImB,gBAAO,CAAC;IACxBE,MAAM,EAAE,wBAAwB;IAChClC,MAAM;IACNgB,WAAW,EAAE;GACd,CAAC;AACJ,CAAC,CACF;AAED,MAAMa,YAAY,gBAAGjF,MAAM,CAAC+C,UAAU,CACpC,WAAUiC,QAA2B;EACnC,MAAMkC,KAAK,GAA2B,EAAE;EACxCA,KAAK,CAACR,IAAI,CACR,IAAI9G,UAAU,CAAC+I,YAAY,CAAC;IAC1Bf,EAAE,EAAE5C,QAAQ,CAAC4C,EAAE;IACfnF,KAAK,EAAEuC,QAAQ,CAACvC;GACjB,EAAEZ,sBAAsB,CAAC,CAC3B;EACD,KAAK,MAAMsF,IAAI,IAAInC,QAAQ,CAAC8B,OAAO,EAAE;IACnC,QAAQK,IAAI,CAACrD,IAAI;MACf,KAAK,MAAM;QAAE;UACXoD,KAAK,CAACR,IAAI,CACR,IAAI9G,UAAU,CAACgJ,QAAQ,CAAC;YACtBlB,IAAI,EAAEP,IAAI,CAACO;WACZ,EAAE7F,sBAAsB,CAAC,CAC3B;UACD;QACF;MACA,KAAK,UAAU;QAAE;UACfqF,KAAK,CAACR,IAAI,CACR9G,UAAU,CAACiJ,YAAY,CAACC,WAAW,CAAC;YAClClB,EAAE,EAAET,IAAI,CAACS,EAAE;YACX7D,IAAI,EAAEoD,IAAI,CAACpD,IAAI;YACfc,MAAM,EAAEsC,IAAI,CAACU;WACd,CAAC,CACH;UACD;QACF;MACA,KAAK,UAAU;QAAE;UACfX,KAAK,CAACR,IAAI,CACR,IAAI9G,UAAU,CAACmJ,aAAa,CAAC;YAC3BzB,aAAa,EAAEH,IAAI,CAACE,QAAQ;YAC5BE,SAAS,EAAEJ,IAAI,CAACI;WACjB,EAAE1F,sBAAsB,CAAC,CAC3B;UACD;QACF;MACA,KAAK,mBAAmB;QAAE;UACxBqF,KAAK,CAACR,IAAI,CACR,IAAI9G,UAAU,CAACoJ,qBAAqB,CAAC;YACnCvB,YAAY,EAAEN,IAAI,CAACK;WACpB,EAAE3F,sBAAsB,CAAC,CAC3B;UACD;QACF;IACF;EACF;EACA,MAAMoH,QAAQ,GAAsC,EAAE;EACtD,IAAIjE,QAAQ,CAACkE,aAAa,KAAK,IAAI,EAAE;IACnCD,QAAQ,CAACE,YAAY,GAAGnE,QAAQ,CAACkE,aAAa;EAChD;EACAhC,KAAK,CAACR,IAAI,CACR,IAAI9G,UAAU,CAACwJ,UAAU,CAAC;IACxB;IACAC,MAAM,EAAE5I,iBAAiB,CAAC6I,mBAAmB,CAACtE,QAAQ,CAACuE,WAAY,CAAC;IACpEC,KAAK,EAAE,IAAI5J,UAAU,CAAC6J,KAAK,CAAC;MAC1BC,WAAW,EAAE1E,QAAQ,CAACwE,KAAK,CAACG,YAAY;MACxCC,YAAY,EAAE5E,QAAQ,CAACwE,KAAK,CAACK,aAAa;MAC1CC,WAAW,EAAE9E,QAAQ,CAACwE,KAAK,CAACG,YAAY,GAAG3E,QAAQ,CAACwE,KAAK,CAACK,aAAa;MACvEE,eAAe,EAAE,CAAC;MAClBC,oBAAoB,EAAEhF,QAAQ,CAACwE,KAAK,CAACS,uBAAuB,IAAI,CAAC;MACjEC,qBAAqB,EAAElF,QAAQ,CAACwE,KAAK,CAACW,2BAA2B,IAAI;KACtE,CAAC;IACFC,gBAAgB,EAAE;MAAE,CAAC3J,iBAAiB,CAAC+B,mBAAmB,GAAGyG;IAAQ;GACtE,EAAEpH,sBAAsB,CAAC,CAC3B;EACD,OAAO,IAAIjC,UAAU,CAACA,UAAU,CAAC;IAC/BsH;GACD,EAAErF,sBAAsB,CAAC;AAC5B,CAAC,CACF;AAED,MAAM4C,eAAe,GAAGA,CACtBC,IAAU,EACVF,OAAqD,KAC7C;EACR,IAAA6F,gCAAmB,EAAC3F,IAAI,EAAE;IACxBpB,MAAM,EAAE,WAAW;IACnBgH,SAAS,EAAE;MAAEvG,IAAI,EAAE;IAAM,CAAE;IAC3BS,OAAO,EAAE;MACP/B,KAAK,EAAE+B,OAAO,CAAC/B,KAAK;MACpB8H,WAAW,EAAE/F,OAAO,CAAC+F,WAAW;MAChCC,IAAI,EAAEhG,OAAO,CAACiG,KAAK;MACnBC,IAAI,EAAElG,OAAO,CAACmG,KAAK;MACnBC,SAAS,EAAEpG,OAAO,CAACL,UAAU;MAC7B0G,aAAa,EAAE/K,GAAG,CAACgL,MAAM,CAACtG,OAAO,CAACuG,cAAc,CAAC,CAACC,MAAM,CACtD3K,SAAS,CAAC4K,aAAa;;GAG5B,CAAC;AACJ,CAAC;AAED,MAAMlG,oBAAoB,GAAGA,CAC3BL,IAAU,EACVM,QAA0C,KAClC;EACR,IAAAqF,gCAAmB,EAAC3F,IAAI,EAAE;IACxBM,QAAQ,EAAE;MACR4C,EAAE,EAAE5C,QAAQ,CAAC4C,EAAE;MACfnF,KAAK,EAAEuC,QAAQ,CAACvC,KAAK;MACrByI,aAAa,EAAElG,QAAQ,CAACuE,WAAW,GAAG,CAACvE,QAAQ,CAACuE,WAAW,CAAC,GAAG1F;KAChE;IACD2F,KAAK,EAAE;MACLE,WAAW,EAAE1E,QAAQ,CAACwE,KAAK,CAACG,YAAY;MACxCC,YAAY,EAAE5E,QAAQ,CAACwE,KAAK,CAACK;;GAEhC,CAAC;AACJ,CAAC;AAED,MAAMjE,sBAAsB,GAAGA,CAC7BlB,IAAU,EACVM,QAA+B,KAC7B;EACF,MAAMmG,YAAY,GAAGnG,QAAQ,CAACkC,KAAK,CAACkE,IAAI,CAAEjE,IAAI,IAAKA,IAAI,CAACV,IAAI,KAAK,cAAc,CAAC;EAChF,MAAM4E,UAAU,GAAGrG,QAAQ,CAACkC,KAAK,CAACkE,IAAI,CAAEjE,IAAI,IAAKA,IAAI,CAACV,IAAI,KAAK,YAAY,CAAC;EAC5E,IAAA4D,gCAAmB,EAAC3F,IAAI,EAAE;IACxBM,QAAQ,EAAE;MACR4C,EAAE,EAAEuD,YAAY,EAAEvD,EAAE;MACpBnF,KAAK,EAAE0I,YAAY,EAAE1I,KAAK;MAC1ByI,aAAa,EAAEG,UAAU,EAAEhC,MAAM,GAAG,CAACgC,UAAU,CAAChC,MAAM,CAAC,GAAGxF;KAC3D;IACD2F,KAAK,EAAE;MACLE,WAAW,EAAE2B,UAAU,EAAE7B,KAAK,CAACE,WAAW;MAC1CE,YAAY,EAAEyB,UAAU,EAAE7B,KAAK,CAACI;;GAEnC,CAAC;AACJ,CAAC","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/AnthropicTokenizer.js b/dist/dist/dist/cjs/AnthropicTokenizer.js
new file mode 100644
index 0000000000000000000000000000000000000000..1c42763b11c30784061a768f072d15b1d3f884b9
--- /dev/null
+++ b/dist/dist/dist/cjs/AnthropicTokenizer.js
@@ -0,0 +1,50 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.make = exports.layer = void 0;
+var _tokenizer = require("@anthropic-ai/tokenizer");
+var _AiError = require("@effect/ai/AiError");
+var Tokenizer = _interopRequireWildcard(require("@effect/ai/Tokenizer"));
+var Arr = _interopRequireWildcard(require("effect/Array"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var Layer = _interopRequireWildcard(require("effect/Layer"));
+var Option = _interopRequireWildcard(require("effect/Option"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/**
+ * @since 1.0.0
+ */
+
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+const make = exports.make = /*#__PURE__*/Tokenizer.make({
+  tokenize(input) {
+    return Effect.try({
+      try: () => {
+        const tokenizer = (0, _tokenizer.getTokenizer)();
+        const text = Arr.flatMap(input.messages, message => Arr.filterMap(message.parts, part => {
+          if (part._tag === "FilePart" || part._tag === "FileUrlPart" || part._tag === "ImagePart" || part._tag === "ImageUrlPart" || part._tag === "ReasoningPart" || part._tag === "RedactedReasoningPart") return Option.none();
+          return Option.some(part._tag === "TextPart" ? part.text : JSON.stringify(part._tag === "ToolCallPart" ? part.params : part.result));
+        })).join("");
+        const encoded = tokenizer.encode(text.normalize("NFKC"), "all");
+        tokenizer.free();
+        return Array.from(encoded);
+      },
+      catch: cause => new _AiError.AiError({
+        module: "AnthropicTokenizer",
+        method: "tokenize",
+        description: "Could not tokenize",
+        cause
+      })
+    });
+  }
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+const layer = exports.layer = /*#__PURE__*/Layer.succeed(Tokenizer.Tokenizer, make);
+//# sourceMappingURL=AnthropicTokenizer.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/AnthropicTokenizer.js.map b/dist/dist/dist/cjs/AnthropicTokenizer.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..fa6f6b6923ae291a74628dd887531ec63e06d624
--- /dev/null
+++ b/dist/dist/dist/cjs/AnthropicTokenizer.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicTokenizer.js","names":["_tokenizer","require","_AiError","Tokenizer","_interopRequireWildcard","Arr","Effect","Layer","Option","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","make","exports","tokenize","input","try","tokenizer","getTokenizer","text","flatMap","messages","message","filterMap","parts","part","_tag","none","some","JSON","stringify","params","result","join","encoded","encode","normalize","free","Array","from","catch","cause","AiError","module","method","description","layer","succeed"],"sources":["../../src/AnthropicTokenizer.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/Generated.js b/dist/dist/dist/cjs/Generated.js
new file mode 100644
index 0000000000000000000000000000000000000000..3c63a9f50b91af7c6ba0e90e65d61cd13fb75460
--- /dev/null
+++ b/dist/dist/dist/cjs/Generated.js
@@ -0,0 +1,2589 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.BetaModelInfoType = exports.BetaModelInfo = exports.BetaMetadata = exports.BetaMessagesPostParams = exports.BetaMessagesCountTokensPostParams = exports.BetaMessageType = exports.BetaMessageRole = exports.BetaMessageBatchesRetrieveParams = exports.BetaMessageBatchesResultsParams = exports.BetaMessageBatchesPostParams = exports.BetaMessageBatchesListParams = exports.BetaMessageBatchesDeleteParams = exports.BetaMessageBatchesCancelParams = exports.BetaMessageBatchType = exports.BetaMessageBatchProcessingStatus = exports.BetaMessageBatchIndividualRequestParams = exports.BetaMessageBatch = exports.BetaMessage = exports.BetaListResponseModelInfo = exports.BetaListResponseMessageBatch = exports.BetaListFilesV1FilesGetParams = exports.BetaInvalidRequestErrorType = exports.BetaInvalidRequestError = exports.BetaInputSchemaType = exports.BetaInputSchema = exports.BetaInputMessageRole = exports.BetaInputMessage = exports.BetaInputContentBlock = exports.BetaGetFileMetadataV1FilesFileIdGetParams = exports.BetaGatewayTimeoutErrorType = exports.BetaGatewayTimeoutError = exports.BetaFileMetadataSchemaType = exports.BetaFileMetadataSchema = exports.BetaFileListResponse = exports.BetaFileImageSourceType = exports.BetaFileImageSource = exports.BetaFileDocumentSourceType = exports.BetaFileDocumentSource = exports.BetaFileDeleteResponseType = exports.BetaFileDeleteResponse = exports.BetaErrorResponseType = exports.BetaErrorResponse = exports.BetaDownloadFileV1FilesFileIdContentGetParams = exports.BetaDeleteMessageBatchResponseType = exports.BetaDeleteMessageBatchResponse = exports.BetaDeleteFileV1FilesFileIdDeleteParams = exports.BetaCreateMessageParamsServiceTier = exports.BetaCreateMessageParams = exports.BetaCreateMessageBatchParams = exports.BetaCountMessageTokensResponse = exports.BetaCountMessageTokensParams = exports.BetaContentBlockSourceType = exports.BetaContentBlockSource = exports.BetaContentBlock = exports.BetaContainer = exports.BetaComputerUseTool20250124Type = exports.BetaComputerUseTool20250124Name = exports.BetaComputerUseTool20250124 = exports.BetaComputerUseTool20241022Type = exports.BetaComputerUseTool20241022Name = exports.BetaComputerUseTool20241022 = exports.BetaCodeExecutionToolResultErrorCode = exports.BetaCodeExecutionTool20250522Type = exports.BetaCodeExecutionTool20250522Name = exports.BetaCodeExecutionTool20250522 = exports.BetaCacheCreation = exports.BetaCacheControlEphemeralType = exports.BetaCacheControlEphemeralTtl = exports.BetaCacheControlEphemeral = exports.BetaBillingErrorType = exports.BetaBillingError = exports.BetaBashTool20250124Type = exports.BetaBashTool20250124Name = exports.BetaBashTool20250124 = exports.BetaBashTool20241022Type = exports.BetaBashTool20241022Name = exports.BetaBashTool20241022 = exports.BetaBase64PDFSourceType = exports.BetaBase64PDFSourceMediaType = exports.BetaBase64PDFSource = exports.BetaBase64ImageSourceType = exports.BetaBase64ImageSourceMediaType = exports.BetaBase64ImageSource = exports.BetaAuthenticationErrorType = exports.BetaAuthenticationError = exports.BetaAPIErrorType = exports.BetaAPIError = exports.BashTool20250124Type = exports.BashTool20250124Name = exports.BashTool20250124 = exports.Base64PDFSourceType = exports.Base64PDFSourceMediaType = exports.Base64PDFSource = exports.Base64ImageSourceType = exports.Base64ImageSourceMediaType = exports.Base64ImageSource = exports.AuthenticationErrorType = exports.AuthenticationError = exports.APIErrorType = exports.APIError = void 0;
+exports.BetaResponseWebSearchToolResultBlockType = exports.BetaResponseWebSearchToolResultBlock = exports.BetaResponseWebSearchResultLocationCitationType = exports.BetaResponseWebSearchResultLocationCitation = exports.BetaResponseWebSearchResultBlockType = exports.BetaResponseWebSearchResultBlock = exports.BetaResponseToolUseBlockType = exports.BetaResponseToolUseBlock = exports.BetaResponseThinkingBlockType = exports.BetaResponseThinkingBlock = exports.BetaResponseTextBlockType = exports.BetaResponseTextBlock = exports.BetaResponseServerToolUseBlockType = exports.BetaResponseServerToolUseBlockName = exports.BetaResponseServerToolUseBlock = exports.BetaResponseRedactedThinkingBlockType = exports.BetaResponseRedactedThinkingBlock = exports.BetaResponsePageLocationCitationType = exports.BetaResponsePageLocationCitation = exports.BetaResponseMCPToolUseBlockType = exports.BetaResponseMCPToolUseBlock = exports.BetaResponseMCPToolResultBlockType = exports.BetaResponseMCPToolResultBlock = exports.BetaResponseContentBlockLocationCitationType = exports.BetaResponseContentBlockLocationCitation = exports.BetaResponseContainerUploadBlockType = exports.BetaResponseContainerUploadBlock = exports.BetaResponseCodeExecutionToolResultErrorType = exports.BetaResponseCodeExecutionToolResultError = exports.BetaResponseCodeExecutionToolResultBlockType = exports.BetaResponseCodeExecutionToolResultBlock = exports.BetaResponseCodeExecutionResultBlockType = exports.BetaResponseCodeExecutionResultBlock = exports.BetaResponseCodeExecutionOutputBlockType = exports.BetaResponseCodeExecutionOutputBlock = exports.BetaResponseCharLocationCitationType = exports.BetaResponseCharLocationCitation = exports.BetaRequestWebSearchToolResultErrorType = exports.BetaRequestWebSearchToolResultError = exports.BetaRequestWebSearchToolResultBlockType = exports.BetaRequestWebSearchToolResultBlock = exports.BetaRequestWebSearchResultLocationCitationType = exports.BetaRequestWebSearchResultLocationCitation = exports.BetaRequestWebSearchResultBlockType = exports.BetaRequestWebSearchResultBlock = exports.BetaRequestToolUseBlockType = exports.BetaRequestToolUseBlock = exports.BetaRequestToolResultBlockType = exports.BetaRequestToolResultBlock = exports.BetaRequestThinkingBlockType = exports.BetaRequestThinkingBlock = exports.BetaRequestTextBlockType = exports.BetaRequestTextBlock = exports.BetaRequestServerToolUseBlockType = exports.BetaRequestServerToolUseBlockName = exports.BetaRequestServerToolUseBlock = exports.BetaRequestRedactedThinkingBlockType = exports.BetaRequestRedactedThinkingBlock = exports.BetaRequestPageLocationCitationType = exports.BetaRequestPageLocationCitation = exports.BetaRequestMCPToolUseBlockType = exports.BetaRequestMCPToolUseBlock = exports.BetaRequestMCPToolResultBlockType = exports.BetaRequestMCPToolResultBlock = exports.BetaRequestMCPServerURLDefinitionType = exports.BetaRequestMCPServerURLDefinition = exports.BetaRequestMCPServerToolConfiguration = exports.BetaRequestImageBlockType = exports.BetaRequestImageBlock = exports.BetaRequestDocumentBlockType = exports.BetaRequestDocumentBlock = exports.BetaRequestCounts = exports.BetaRequestContentBlockLocationCitationType = exports.BetaRequestContentBlockLocationCitation = exports.BetaRequestContainerUploadBlockType = exports.BetaRequestContainerUploadBlock = exports.BetaRequestCodeExecutionToolResultErrorType = exports.BetaRequestCodeExecutionToolResultError = exports.BetaRequestCodeExecutionToolResultBlockType = exports.BetaRequestCodeExecutionToolResultBlock = exports.BetaRequestCodeExecutionResultBlockType = exports.BetaRequestCodeExecutionResultBlock = exports.BetaRequestCodeExecutionOutputBlockType = exports.BetaRequestCodeExecutionOutputBlock = exports.BetaRequestCitationsConfig = exports.BetaRequestCharLocationCitationType = exports.BetaRequestCharLocationCitation = exports.BetaRateLimitErrorType = exports.BetaRateLimitError = exports.BetaPlainTextSourceType = exports.BetaPlainTextSourceMediaType = exports.BetaPlainTextSource = exports.BetaPermissionErrorType = exports.BetaPermissionError = exports.BetaOverloadedErrorType = exports.BetaOverloadedError = exports.BetaNotFoundErrorType = exports.BetaNotFoundError = exports.BetaModelsListParams = exports.BetaModelsGetParams = void 0;
+exports.ModelInfo = exports.Model = exports.Metadata = exports.MessagesPostParams = exports.MessagesCountTokensPostParams = exports.MessageType = exports.MessageRole = exports.MessageBatchesRetrieveParams = exports.MessageBatchesResultsParams = exports.MessageBatchesPostParams = exports.MessageBatchesListParams = exports.MessageBatchesDeleteParams = exports.MessageBatchesCancelParams = exports.MessageBatchType = exports.MessageBatchProcessingStatus = exports.MessageBatchIndividualRequestParams = exports.MessageBatch = exports.Message = exports.ListResponseModelInfo = exports.ListResponseMessageBatch = exports.ListFilesV1FilesGetParams = exports.InvalidRequestErrorType = exports.InvalidRequestError = exports.InputSchemaType = exports.InputSchema = exports.InputMessageRole = exports.InputMessage = exports.InputContentBlock = exports.GetFileMetadataV1FilesFileIdGetParams = exports.GatewayTimeoutErrorType = exports.GatewayTimeoutError = exports.FileMetadataSchemaType = exports.FileMetadataSchema = exports.FileListResponse = exports.FileDeleteResponseType = exports.FileDeleteResponse = exports.ErrorResponseType = exports.ErrorResponse = exports.DownloadFileV1FilesFileIdContentGetParams = exports.DeleteMessageBatchResponseType = exports.DeleteMessageBatchResponse = exports.DeleteFileV1FilesFileIdDeleteParams = exports.CreateMessageParamsServiceTier = exports.CreateMessageParams = exports.CreateMessageBatchParams = exports.CountMessageTokensResponse = exports.CountMessageTokensParams = exports.ContentBlockSourceType = exports.ContentBlockSource = exports.ContentBlock = exports.CompletionResponseType = exports.CompletionResponse = exports.CompletionRequest = exports.CompletePostParams = exports.CacheControlEphemeralType = exports.CacheControlEphemeral = exports.BillingErrorType = exports.BillingError = exports.BetaWebSearchToolResultErrorCode = exports.BetaWebSearchTool20250305Type = exports.BetaWebSearchTool20250305Name = exports.BetaWebSearchTool20250305 = exports.BetaUserLocationType = exports.BetaUserLocation = exports.BetaUsageServiceTierEnum = exports.BetaUsage = exports.BetaUploadFileV1FilesPostParams = exports.BetaURLPDFSourceType = exports.BetaURLPDFSource = exports.BetaURLImageSourceType = exports.BetaURLImageSource = exports.BetaToolTypeEnum = exports.BetaToolChoiceToolType = exports.BetaToolChoiceTool = exports.BetaToolChoiceNoneType = exports.BetaToolChoiceNone = exports.BetaToolChoiceAutoType = exports.BetaToolChoiceAuto = exports.BetaToolChoiceAnyType = exports.BetaToolChoiceAny = exports.BetaToolChoice = exports.BetaTool = exports.BetaThinkingConfigParam = exports.BetaThinkingConfigEnabledType = exports.BetaThinkingConfigEnabled = exports.BetaThinkingConfigDisabledType = exports.BetaThinkingConfigDisabled = exports.BetaTextEditor20250429Type = exports.BetaTextEditor20250429Name = exports.BetaTextEditor20250429 = exports.BetaTextEditor20250124Type = exports.BetaTextEditor20250124Name = exports.BetaTextEditor20250124 = exports.BetaTextEditor20241022Type = exports.BetaTextEditor20241022Name = exports.BetaTextEditor20241022 = exports.BetaStopReason = exports.BetaServerToolUsage = exports.BetaResponseWebSearchToolResultErrorType = exports.BetaResponseWebSearchToolResultError = void 0;
+exports.URLPDFSourceType = exports.URLPDFSource = exports.URLImageSourceType = exports.URLImageSource = exports.ToolTypeEnum = exports.ToolChoiceToolType = exports.ToolChoiceTool = exports.ToolChoiceNoneType = exports.ToolChoiceNone = exports.ToolChoiceAutoType = exports.ToolChoiceAuto = exports.ToolChoiceAnyType = exports.ToolChoiceAny = exports.ToolChoice = exports.Tool = exports.ThinkingConfigParam = exports.ThinkingConfigEnabledType = exports.ThinkingConfigEnabled = exports.ThinkingConfigDisabledType = exports.ThinkingConfigDisabled = exports.TextEditor20250429Type = exports.TextEditor20250429Name = exports.TextEditor20250429 = exports.TextEditor20250124Type = exports.TextEditor20250124Name = exports.TextEditor20250124 = exports.StopReason = exports.ServerToolUsage = exports.ResponseWebSearchToolResultErrorType = exports.ResponseWebSearchToolResultError = exports.ResponseWebSearchToolResultBlockType = exports.ResponseWebSearchToolResultBlock = exports.ResponseWebSearchResultLocationCitationType = exports.ResponseWebSearchResultLocationCitation = exports.ResponseWebSearchResultBlockType = exports.ResponseWebSearchResultBlock = exports.ResponseToolUseBlockType = exports.ResponseToolUseBlock = exports.ResponseThinkingBlockType = exports.ResponseThinkingBlock = exports.ResponseTextBlockType = exports.ResponseTextBlock = exports.ResponseServerToolUseBlockType = exports.ResponseServerToolUseBlockName = exports.ResponseServerToolUseBlock = exports.ResponseRedactedThinkingBlockType = exports.ResponseRedactedThinkingBlock = exports.ResponsePageLocationCitationType = exports.ResponsePageLocationCitation = exports.ResponseContentBlockLocationCitationType = exports.ResponseContentBlockLocationCitation = exports.ResponseCharLocationCitationType = exports.ResponseCharLocationCitation = exports.RequestWebSearchToolResultErrorType = exports.RequestWebSearchToolResultError = exports.RequestWebSearchToolResultBlockType = exports.RequestWebSearchToolResultBlock = exports.RequestWebSearchResultLocationCitationType = exports.RequestWebSearchResultLocationCitation = exports.RequestWebSearchResultBlockType = exports.RequestWebSearchResultBlock = exports.RequestToolUseBlockType = exports.RequestToolUseBlock = exports.RequestToolResultBlockType = exports.RequestToolResultBlock = exports.RequestThinkingBlockType = exports.RequestThinkingBlock = exports.RequestTextBlockType = exports.RequestTextBlock = exports.RequestServerToolUseBlockType = exports.RequestServerToolUseBlockName = exports.RequestServerToolUseBlock = exports.RequestRedactedThinkingBlockType = exports.RequestRedactedThinkingBlock = exports.RequestPageLocationCitationType = exports.RequestPageLocationCitation = exports.RequestImageBlockType = exports.RequestImageBlock = exports.RequestDocumentBlockType = exports.RequestDocumentBlock = exports.RequestCounts = exports.RequestContentBlockLocationCitationType = exports.RequestContentBlockLocationCitation = exports.RequestCitationsConfig = exports.RequestCharLocationCitationType = exports.RequestCharLocationCitation = exports.RateLimitErrorType = exports.RateLimitError = exports.PlainTextSourceType = exports.PlainTextSourceMediaType = exports.PlainTextSource = exports.PermissionErrorType = exports.PermissionError = exports.OverloadedErrorType = exports.OverloadedError = exports.NotFoundErrorType = exports.NotFoundError = exports.ModelsListParams = exports.ModelsGetParams = exports.ModelInfoType = void 0;
+exports.make = exports.WebSearchToolResultErrorCode = exports.WebSearchTool20250305Type = exports.WebSearchTool20250305Name = exports.WebSearchTool20250305 = exports.UserLocationType = exports.UserLocation = exports.UsageServiceTierEnum = exports.Usage = exports.UploadFileV1FilesPostParams = void 0;
+var HttpClientError = _interopRequireWildcard(require("@effect/platform/HttpClientError"));
+var HttpClientRequest = _interopRequireWildcard(require("@effect/platform/HttpClientRequest"));
+var HttpClientResponse = _interopRequireWildcard(require("@effect/platform/HttpClientResponse"));
+var Effect = _interopRequireWildcard(require("effect/Effect"));
+var S = _interopRequireWildcard(require("effect/Schema"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+class MessagesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessagesPostParams = MessagesPostParams;
+class Model extends /*#__PURE__*/S.Literal("claude-3-7-sonnet-latest", "claude-3-7-sonnet-20250219", "claude-3-5-haiku-latest", "claude-3-5-haiku-20241022", "claude-sonnet-4-20250514", "claude-sonnet-4-0", "claude-4-sonnet-20250514", "claude-3-5-sonnet-latest", "claude-3-5-sonnet-20241022", "claude-3-5-sonnet-20240620", "claude-opus-4-0", "claude-opus-4-20250514", "claude-4-opus-20250514", "claude-3-opus-latest", "claude-3-opus-20240229", "claude-3-sonnet-20240229", "claude-3-haiku-20240307", "claude-2.1", "claude-2.0") {}
+exports.Model = Model;
+class CacheControlEphemeralType extends /*#__PURE__*/S.Literal("ephemeral") {}
+exports.CacheControlEphemeralType = CacheControlEphemeralType;
+class CacheControlEphemeral extends /*#__PURE__*/S.Struct({
+  "type": CacheControlEphemeralType
+}) {}
+exports.CacheControlEphemeral = CacheControlEphemeral;
+class RequestServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search") {}
+exports.RequestServerToolUseBlockName = RequestServerToolUseBlockName;
+class RequestServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+exports.RequestServerToolUseBlockType = RequestServerToolUseBlockType;
+class RequestServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": RequestServerToolUseBlockName,
+  "type": RequestServerToolUseBlockType
+}) {}
+exports.RequestServerToolUseBlock = RequestServerToolUseBlock;
+class RequestWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+exports.RequestWebSearchResultBlockType = RequestWebSearchResultBlockType;
+class RequestWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "title": S.String,
+  "type": RequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+exports.RequestWebSearchResultBlock = RequestWebSearchResultBlock;
+class WebSearchToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long") {}
+exports.WebSearchToolResultErrorCode = WebSearchToolResultErrorCode;
+class RequestWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+exports.RequestWebSearchToolResultErrorType = RequestWebSearchToolResultErrorType;
+class RequestWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": RequestWebSearchToolResultErrorType
+}) {}
+exports.RequestWebSearchToolResultError = RequestWebSearchToolResultError;
+class RequestWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+exports.RequestWebSearchToolResultBlockType = RequestWebSearchToolResultBlockType;
+class RequestWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(/*#__PURE__*/S.Array(RequestWebSearchResultBlock), RequestWebSearchToolResultError),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": RequestWebSearchToolResultBlockType
+}) {}
+exports.RequestWebSearchToolResultBlock = RequestWebSearchToolResultBlock;
+class RequestCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+exports.RequestCharLocationCitationType = RequestCharLocationCitationType;
+class RequestCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": RequestCharLocationCitationType
+}) {}
+exports.RequestCharLocationCitation = RequestCharLocationCitation;
+class RequestPageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+exports.RequestPageLocationCitationType = RequestPageLocationCitationType;
+class RequestPageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": RequestPageLocationCitationType
+}) {}
+exports.RequestPageLocationCitation = RequestPageLocationCitation;
+class RequestContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+exports.RequestContentBlockLocationCitationType = RequestContentBlockLocationCitationType;
+class RequestContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": RequestContentBlockLocationCitationType
+}) {}
+exports.RequestContentBlockLocationCitation = RequestContentBlockLocationCitation;
+class RequestWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+exports.RequestWebSearchResultLocationCitationType = RequestWebSearchResultLocationCitationType;
+class RequestWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "type": RequestWebSearchResultLocationCitationType,
+  "url": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(2048))
+}) {}
+exports.RequestWebSearchResultLocationCitation = RequestWebSearchResultLocationCitation;
+class RequestTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+exports.RequestTextBlockType = RequestTextBlockType;
+class RequestTextBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestCharLocationCitation, RequestPageLocationCitation, RequestContentBlockLocationCitation, RequestWebSearchResultLocationCitation)), S.Null), {
+    nullable: true
+  }),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": RequestTextBlockType
+}) {}
+exports.RequestTextBlock = RequestTextBlock;
+class Base64ImageSourceMediaType extends /*#__PURE__*/S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+exports.Base64ImageSourceMediaType = Base64ImageSourceMediaType;
+class Base64ImageSourceType extends /*#__PURE__*/S.Literal("base64") {}
+exports.Base64ImageSourceType = Base64ImageSourceType;
+class Base64ImageSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": Base64ImageSourceMediaType,
+  "type": Base64ImageSourceType
+}) {}
+exports.Base64ImageSource = Base64ImageSource;
+class URLImageSourceType extends /*#__PURE__*/S.Literal("url") {}
+exports.URLImageSourceType = URLImageSourceType;
+class URLImageSource extends /*#__PURE__*/S.Struct({
+  "type": URLImageSourceType,
+  "url": S.String
+}) {}
+exports.URLImageSource = URLImageSource;
+class RequestImageBlockType extends /*#__PURE__*/S.Literal("image") {}
+exports.RequestImageBlockType = RequestImageBlockType;
+class RequestImageBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(Base64ImageSource, URLImageSource),
+  "type": RequestImageBlockType
+}) {}
+exports.RequestImageBlock = RequestImageBlock;
+class RequestToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+exports.RequestToolUseBlockType = RequestToolUseBlockType;
+class RequestToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(200)),
+  "type": RequestToolUseBlockType
+}) {}
+exports.RequestToolUseBlock = RequestToolUseBlock;
+class RequestToolResultBlockType extends /*#__PURE__*/S.Literal("tool_result") {}
+exports.RequestToolResultBlockType = RequestToolResultBlockType;
+class RequestToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestTextBlock, RequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": RequestToolResultBlockType
+}) {}
+exports.RequestToolResultBlock = RequestToolResultBlock;
+class RequestCitationsConfig extends /*#__PURE__*/S.Struct({
+  "enabled": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+exports.RequestCitationsConfig = RequestCitationsConfig;
+class Base64PDFSourceMediaType extends /*#__PURE__*/S.Literal("application/pdf") {}
+exports.Base64PDFSourceMediaType = Base64PDFSourceMediaType;
+class Base64PDFSourceType extends /*#__PURE__*/S.Literal("base64") {}
+exports.Base64PDFSourceType = Base64PDFSourceType;
+class Base64PDFSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": Base64PDFSourceMediaType,
+  "type": Base64PDFSourceType
+}) {}
+exports.Base64PDFSource = Base64PDFSource;
+class PlainTextSourceMediaType extends /*#__PURE__*/S.Literal("text/plain") {}
+exports.PlainTextSourceMediaType = PlainTextSourceMediaType;
+class PlainTextSourceType extends /*#__PURE__*/S.Literal("text") {}
+exports.PlainTextSourceType = PlainTextSourceType;
+class PlainTextSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": PlainTextSourceMediaType,
+  "type": PlainTextSourceType
+}) {}
+exports.PlainTextSource = PlainTextSource;
+class ContentBlockSourceType extends /*#__PURE__*/S.Literal("content") {}
+exports.ContentBlockSourceType = ContentBlockSourceType;
+class ContentBlockSource extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestTextBlock, RequestImageBlock))),
+  "type": ContentBlockSourceType
+}) {}
+exports.ContentBlockSource = ContentBlockSource;
+class URLPDFSourceType extends /*#__PURE__*/S.Literal("url") {}
+exports.URLPDFSourceType = URLPDFSourceType;
+class URLPDFSource extends /*#__PURE__*/S.Struct({
+  "type": URLPDFSourceType,
+  "url": S.String
+}) {}
+exports.URLPDFSource = URLPDFSource;
+class RequestDocumentBlockType extends /*#__PURE__*/S.Literal("document") {}
+exports.RequestDocumentBlockType = RequestDocumentBlockType;
+class RequestDocumentBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(RequestCitationsConfig, {
+    nullable: true
+  }),
+  "context": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)), S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(Base64PDFSource, PlainTextSource, ContentBlockSource, URLPDFSource),
+  "title": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)), S.Null), {
+    nullable: true
+  }),
+  "type": RequestDocumentBlockType
+}) {}
+exports.RequestDocumentBlock = RequestDocumentBlock;
+class RequestThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+exports.RequestThinkingBlockType = RequestThinkingBlockType;
+class RequestThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": RequestThinkingBlockType
+}) {}
+exports.RequestThinkingBlock = RequestThinkingBlock;
+class RequestRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+exports.RequestRedactedThinkingBlockType = RequestRedactedThinkingBlockType;
+class RequestRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": RequestRedactedThinkingBlockType
+}) {}
+exports.RequestRedactedThinkingBlock = RequestRedactedThinkingBlock;
+class InputContentBlock extends /*#__PURE__*/S.Union(RequestServerToolUseBlock, RequestWebSearchToolResultBlock, RequestTextBlock, RequestImageBlock, RequestToolUseBlock, RequestToolResultBlock, RequestDocumentBlock, RequestThinkingBlock, RequestRedactedThinkingBlock) {}
+exports.InputContentBlock = InputContentBlock;
+class InputMessageRole extends /*#__PURE__*/S.Literal("user", "assistant") {}
+exports.InputMessageRole = InputMessageRole;
+class InputMessage extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(InputContentBlock)),
+  "role": InputMessageRole
+}) {}
+exports.InputMessage = InputMessage;
+class Metadata extends /*#__PURE__*/S.Struct({
+  "user_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.maxLength(256)), S.Null), {
+    nullable: true
+  })
+}) {}
+exports.Metadata = Metadata;
+class CreateMessageParamsServiceTier extends /*#__PURE__*/S.Literal("auto", "standard_only") {}
+exports.CreateMessageParamsServiceTier = CreateMessageParamsServiceTier;
+class ThinkingConfigEnabledType extends /*#__PURE__*/S.Literal("enabled") {}
+exports.ThinkingConfigEnabledType = ThinkingConfigEnabledType;
+class ThinkingConfigEnabled extends /*#__PURE__*/S.Struct({
+  "budget_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1024)),
+  "type": ThinkingConfigEnabledType
+}) {}
+exports.ThinkingConfigEnabled = ThinkingConfigEnabled;
+class ThinkingConfigDisabledType extends /*#__PURE__*/S.Literal("disabled") {}
+exports.ThinkingConfigDisabledType = ThinkingConfigDisabledType;
+class ThinkingConfigDisabled extends /*#__PURE__*/S.Struct({
+  "type": ThinkingConfigDisabledType
+}) {}
+exports.ThinkingConfigDisabled = ThinkingConfigDisabled;
+class ThinkingConfigParam extends /*#__PURE__*/S.Union(ThinkingConfigEnabled, ThinkingConfigDisabled) {}
+exports.ThinkingConfigParam = ThinkingConfigParam;
+class ToolChoiceAutoType extends /*#__PURE__*/S.Literal("auto") {}
+exports.ToolChoiceAutoType = ToolChoiceAutoType;
+class ToolChoiceAuto extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": ToolChoiceAutoType
+}) {}
+exports.ToolChoiceAuto = ToolChoiceAuto;
+class ToolChoiceAnyType extends /*#__PURE__*/S.Literal("any") {}
+exports.ToolChoiceAnyType = ToolChoiceAnyType;
+class ToolChoiceAny extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": ToolChoiceAnyType
+}) {}
+exports.ToolChoiceAny = ToolChoiceAny;
+class ToolChoiceToolType extends /*#__PURE__*/S.Literal("tool") {}
+exports.ToolChoiceToolType = ToolChoiceToolType;
+class ToolChoiceTool extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "name": S.String,
+  "type": ToolChoiceToolType
+}) {}
+exports.ToolChoiceTool = ToolChoiceTool;
+class ToolChoiceNoneType extends /*#__PURE__*/S.Literal("none") {}
+exports.ToolChoiceNoneType = ToolChoiceNoneType;
+class ToolChoiceNone extends /*#__PURE__*/S.Struct({
+  "type": ToolChoiceNoneType
+}) {}
+exports.ToolChoiceNone = ToolChoiceNone;
+class ToolChoice extends /*#__PURE__*/S.Union(ToolChoiceAuto, ToolChoiceAny, ToolChoiceTool, ToolChoiceNone) {}
+exports.ToolChoice = ToolChoice;
+class ToolTypeEnum extends /*#__PURE__*/S.Literal("custom") {}
+exports.ToolTypeEnum = ToolTypeEnum;
+class InputSchemaType extends /*#__PURE__*/S.Literal("object") {}
+exports.InputSchemaType = InputSchemaType;
+class InputSchema extends /*#__PURE__*/S.Struct({
+  "properties": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }), S.Null), {
+    nullable: true
+  }),
+  "required": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "type": InputSchemaType
+}) {}
+exports.InputSchema = InputSchema;
+class Tool extends /*#__PURE__*/S.Struct({
+  "type": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Null, ToolTypeEnum), {
+    nullable: true
+  }),
+  "description": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": InputSchema,
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.Tool = Tool;
+class BashTool20250124Name extends /*#__PURE__*/S.Literal("bash") {}
+exports.BashTool20250124Name = BashTool20250124Name;
+class BashTool20250124Type extends /*#__PURE__*/S.Literal("bash_20250124") {}
+exports.BashTool20250124Type = BashTool20250124Type;
+class BashTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BashTool20250124Name,
+  "type": BashTool20250124Type
+}) {}
+exports.BashTool20250124 = BashTool20250124;
+class TextEditor20250124Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+exports.TextEditor20250124Name = TextEditor20250124Name;
+class TextEditor20250124Type extends /*#__PURE__*/S.Literal("text_editor_20250124") {}
+exports.TextEditor20250124Type = TextEditor20250124Type;
+class TextEditor20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": TextEditor20250124Name,
+  "type": TextEditor20250124Type
+}) {}
+exports.TextEditor20250124 = TextEditor20250124;
+class TextEditor20250429Name extends /*#__PURE__*/S.Literal("str_replace_based_edit_tool") {}
+exports.TextEditor20250429Name = TextEditor20250429Name;
+class TextEditor20250429Type extends /*#__PURE__*/S.Literal("text_editor_20250429") {}
+exports.TextEditor20250429Type = TextEditor20250429Type;
+class TextEditor20250429 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": TextEditor20250429Name,
+  "type": TextEditor20250429Type
+}) {}
+exports.TextEditor20250429 = TextEditor20250429;
+class WebSearchTool20250305Name extends /*#__PURE__*/S.Literal("web_search") {}
+exports.WebSearchTool20250305Name = WebSearchTool20250305Name;
+class WebSearchTool20250305Type extends /*#__PURE__*/S.Literal("web_search_20250305") {}
+exports.WebSearchTool20250305Type = WebSearchTool20250305Type;
+class UserLocationType extends /*#__PURE__*/S.Literal("approximate") {}
+exports.UserLocationType = UserLocationType;
+class UserLocation extends /*#__PURE__*/S.Struct({
+  "city": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "country": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(2), /*#__PURE__*/S.maxLength(2)), S.Null), {
+    nullable: true
+  }),
+  "region": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "timezone": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "type": UserLocationType
+}) {}
+exports.UserLocation = UserLocation;
+class WebSearchTool20250305 extends /*#__PURE__*/S.Struct({
+  "allowed_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "blocked_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "max_uses": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThan(0)), S.Null), {
+    nullable: true
+  }),
+  "name": WebSearchTool20250305Name,
+  "type": WebSearchTool20250305Type,
+  "user_location": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(UserLocation, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.WebSearchTool20250305 = WebSearchTool20250305;
+class CreateMessageParams extends /*#__PURE__*/S.Class("CreateMessageParams")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "messages": /*#__PURE__*/S.Array(InputMessage),
+  "max_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "metadata": /*#__PURE__*/S.optionalWith(Metadata, {
+    nullable: true
+  }),
+  "service_tier": /*#__PURE__*/S.optionalWith(CreateMessageParamsServiceTier, {
+    nullable: true
+  }),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(RequestTextBlock)), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(ThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(ToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  })
+}) {}
+exports.CreateMessageParams = CreateMessageParams;
+class MessageType extends /*#__PURE__*/S.Literal("message") {}
+exports.MessageType = MessageType;
+class MessageRole extends /*#__PURE__*/S.Literal("assistant") {}
+exports.MessageRole = MessageRole;
+class ResponseCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+exports.ResponseCharLocationCitationType = ResponseCharLocationCitationType;
+class ResponseCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": ResponseCharLocationCitationType
+}) {}
+exports.ResponseCharLocationCitation = ResponseCharLocationCitation;
+class ResponsePageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+exports.ResponsePageLocationCitationType = ResponsePageLocationCitationType;
+class ResponsePageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": ResponsePageLocationCitationType
+}) {}
+exports.ResponsePageLocationCitation = ResponsePageLocationCitation;
+class ResponseContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+exports.ResponseContentBlockLocationCitationType = ResponseContentBlockLocationCitationType;
+class ResponseContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": ResponseContentBlockLocationCitationType
+}) {}
+exports.ResponseContentBlockLocationCitation = ResponseContentBlockLocationCitation;
+class ResponseWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+exports.ResponseWebSearchResultLocationCitationType = ResponseWebSearchResultLocationCitationType;
+class ResponseWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": ResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+exports.ResponseWebSearchResultLocationCitation = ResponseWebSearchResultLocationCitation;
+class ResponseTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+exports.ResponseTextBlockType = ResponseTextBlockType;
+class ResponseTextBlock extends /*#__PURE__*/S.Struct({
+  "citations": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(ResponseCharLocationCitation, ResponsePageLocationCitation, ResponseContentBlockLocationCitation, ResponseWebSearchResultLocationCitation)))),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(0), /*#__PURE__*/S.maxLength(5000000)),
+  "type": ResponseTextBlockType
+}) {}
+exports.ResponseTextBlock = ResponseTextBlock;
+class ResponseToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+exports.ResponseToolUseBlockType = ResponseToolUseBlockType;
+class ResponseToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": ResponseToolUseBlockType
+}) {}
+exports.ResponseToolUseBlock = ResponseToolUseBlock;
+class ResponseServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search") {}
+exports.ResponseServerToolUseBlockName = ResponseServerToolUseBlockName;
+class ResponseServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+exports.ResponseServerToolUseBlockType = ResponseServerToolUseBlockType;
+class ResponseServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": ResponseServerToolUseBlockName,
+  "type": ResponseServerToolUseBlockType
+}) {}
+exports.ResponseServerToolUseBlock = ResponseServerToolUseBlock;
+class ResponseWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+exports.ResponseWebSearchToolResultErrorType = ResponseWebSearchToolResultErrorType;
+class ResponseWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": ResponseWebSearchToolResultErrorType
+}) {}
+exports.ResponseWebSearchToolResultError = ResponseWebSearchToolResultError;
+class ResponseWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+exports.ResponseWebSearchResultBlockType = ResponseWebSearchResultBlockType;
+class ResponseWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": ResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+exports.ResponseWebSearchResultBlock = ResponseWebSearchResultBlock;
+class ResponseWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+exports.ResponseWebSearchToolResultBlockType = ResponseWebSearchToolResultBlockType;
+class ResponseWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(ResponseWebSearchToolResultError, /*#__PURE__*/S.Array(ResponseWebSearchResultBlock)),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": ResponseWebSearchToolResultBlockType
+}) {}
+exports.ResponseWebSearchToolResultBlock = ResponseWebSearchToolResultBlock;
+class ResponseThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+exports.ResponseThinkingBlockType = ResponseThinkingBlockType;
+class ResponseThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": ResponseThinkingBlockType
+}) {}
+exports.ResponseThinkingBlock = ResponseThinkingBlock;
+class ResponseRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+exports.ResponseRedactedThinkingBlockType = ResponseRedactedThinkingBlockType;
+class ResponseRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": ResponseRedactedThinkingBlockType
+}) {}
+exports.ResponseRedactedThinkingBlock = ResponseRedactedThinkingBlock;
+class ContentBlock extends /*#__PURE__*/S.Union(ResponseTextBlock, ResponseToolUseBlock, ResponseServerToolUseBlock, ResponseWebSearchToolResultBlock, ResponseThinkingBlock, ResponseRedactedThinkingBlock) {}
+exports.ContentBlock = ContentBlock;
+class StopReason extends /*#__PURE__*/S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal") {}
+exports.StopReason = StopReason;
+class ServerToolUsage extends /*#__PURE__*/S.Struct({
+  "web_search_requests": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+exports.ServerToolUsage = ServerToolUsage;
+class UsageServiceTierEnum extends /*#__PURE__*/S.Literal("standard", "priority", "batch") {}
+exports.UsageServiceTierEnum = UsageServiceTierEnum;
+class Usage extends /*#__PURE__*/S.Struct({
+  "cache_creation_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "output_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "server_tool_use": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(ServerToolUsage)),
+  "service_tier": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(UsageServiceTierEnum, S.Null))
+}) {}
+exports.Usage = Usage;
+class Message extends /*#__PURE__*/S.Class("Message")({
+  "id": S.String,
+  "type": MessageType,
+  "role": MessageRole,
+  "content": /*#__PURE__*/S.Array(ContentBlock),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(StopReason, S.Null),
+  "stop_sequence": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "usage": Usage
+}) {}
+exports.Message = Message;
+class InvalidRequestErrorType extends /*#__PURE__*/S.Literal("invalid_request_error") {}
+exports.InvalidRequestErrorType = InvalidRequestErrorType;
+class InvalidRequestError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": InvalidRequestErrorType
+}) {}
+exports.InvalidRequestError = InvalidRequestError;
+class AuthenticationErrorType extends /*#__PURE__*/S.Literal("authentication_error") {}
+exports.AuthenticationErrorType = AuthenticationErrorType;
+class AuthenticationError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": AuthenticationErrorType
+}) {}
+exports.AuthenticationError = AuthenticationError;
+class BillingErrorType extends /*#__PURE__*/S.Literal("billing_error") {}
+exports.BillingErrorType = BillingErrorType;
+class BillingError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BillingErrorType
+}) {}
+exports.BillingError = BillingError;
+class PermissionErrorType extends /*#__PURE__*/S.Literal("permission_error") {}
+exports.PermissionErrorType = PermissionErrorType;
+class PermissionError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": PermissionErrorType
+}) {}
+exports.PermissionError = PermissionError;
+class NotFoundErrorType extends /*#__PURE__*/S.Literal("not_found_error") {}
+exports.NotFoundErrorType = NotFoundErrorType;
+class NotFoundError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": NotFoundErrorType
+}) {}
+exports.NotFoundError = NotFoundError;
+class RateLimitErrorType extends /*#__PURE__*/S.Literal("rate_limit_error") {}
+exports.RateLimitErrorType = RateLimitErrorType;
+class RateLimitError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": RateLimitErrorType
+}) {}
+exports.RateLimitError = RateLimitError;
+class GatewayTimeoutErrorType extends /*#__PURE__*/S.Literal("timeout_error") {}
+exports.GatewayTimeoutErrorType = GatewayTimeoutErrorType;
+class GatewayTimeoutError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": GatewayTimeoutErrorType
+}) {}
+exports.GatewayTimeoutError = GatewayTimeoutError;
+class APIErrorType extends /*#__PURE__*/S.Literal("api_error") {}
+exports.APIErrorType = APIErrorType;
+class APIError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": APIErrorType
+}) {}
+exports.APIError = APIError;
+class OverloadedErrorType extends /*#__PURE__*/S.Literal("overloaded_error") {}
+exports.OverloadedErrorType = OverloadedErrorType;
+class OverloadedError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": OverloadedErrorType
+}) {}
+exports.OverloadedError = OverloadedError;
+class ErrorResponseType extends /*#__PURE__*/S.Literal("error") {}
+exports.ErrorResponseType = ErrorResponseType;
+class ErrorResponse extends /*#__PURE__*/S.Class("ErrorResponse")({
+  "error": /*#__PURE__*/S.Union(InvalidRequestError, AuthenticationError, BillingError, PermissionError, NotFoundError, RateLimitError, GatewayTimeoutError, APIError, OverloadedError),
+  "type": ErrorResponseType
+}) {}
+exports.ErrorResponse = ErrorResponse;
+class CompletePostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.CompletePostParams = CompletePostParams;
+class CompletionRequest extends /*#__PURE__*/S.Class("CompletionRequest")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "prompt": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "max_tokens_to_sample": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "metadata": /*#__PURE__*/S.optionalWith(Metadata, {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+exports.CompletionRequest = CompletionRequest;
+class CompletionResponseType extends /*#__PURE__*/S.Literal("completion") {}
+exports.CompletionResponseType = CompletionResponseType;
+class CompletionResponse extends /*#__PURE__*/S.Class("CompletionResponse")({
+  "completion": S.String,
+  "id": S.String,
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": CompletionResponseType
+}) {}
+exports.CompletionResponse = CompletionResponse;
+class ModelsListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.ModelsListParams = ModelsListParams;
+class ModelInfoType extends /*#__PURE__*/S.Literal("model") {}
+exports.ModelInfoType = ModelInfoType;
+class ModelInfo extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": ModelInfoType
+}) {}
+exports.ModelInfo = ModelInfo;
+class ListResponseModelInfo extends /*#__PURE__*/S.Class("ListResponseModelInfo")({
+  "data": /*#__PURE__*/S.Array(ModelInfo),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+exports.ListResponseModelInfo = ListResponseModelInfo;
+class ModelsGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.ModelsGetParams = ModelsGetParams;
+class MessageBatchesListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesListParams = MessageBatchesListParams;
+class MessageBatchProcessingStatus extends /*#__PURE__*/S.Literal("in_progress", "canceling", "ended") {}
+exports.MessageBatchProcessingStatus = MessageBatchProcessingStatus;
+class RequestCounts extends /*#__PURE__*/S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+exports.RequestCounts = RequestCounts;
+class MessageBatchType extends /*#__PURE__*/S.Literal("message_batch") {}
+exports.MessageBatchType = MessageBatchType;
+class MessageBatch extends /*#__PURE__*/S.Struct({
+  "archived_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "cancel_initiated_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": MessageBatchProcessingStatus,
+  "request_counts": RequestCounts,
+  "results_url": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": MessageBatchType
+}) {}
+exports.MessageBatch = MessageBatch;
+class ListResponseMessageBatch extends /*#__PURE__*/S.Class("ListResponseMessageBatch")({
+  "data": /*#__PURE__*/S.Array(MessageBatch),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+exports.ListResponseMessageBatch = ListResponseMessageBatch;
+class MessageBatchesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesPostParams = MessageBatchesPostParams;
+class MessageBatchIndividualRequestParams extends /*#__PURE__*/S.Struct({
+  "custom_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": CreateMessageParams
+}) {}
+exports.MessageBatchIndividualRequestParams = MessageBatchIndividualRequestParams;
+class CreateMessageBatchParams extends /*#__PURE__*/S.Class("CreateMessageBatchParams")({
+  "requests": /*#__PURE__*/S.Array(MessageBatchIndividualRequestParams).pipe(/*#__PURE__*/S.minItems(1), /*#__PURE__*/S.maxItems(10000))
+}) {}
+exports.CreateMessageBatchParams = CreateMessageBatchParams;
+class MessageBatchesRetrieveParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesRetrieveParams = MessageBatchesRetrieveParams;
+class MessageBatchesDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesDeleteParams = MessageBatchesDeleteParams;
+class DeleteMessageBatchResponseType extends /*#__PURE__*/S.Literal("message_batch_deleted") {}
+exports.DeleteMessageBatchResponseType = DeleteMessageBatchResponseType;
+class DeleteMessageBatchResponse extends /*#__PURE__*/S.Class("DeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": DeleteMessageBatchResponseType
+}) {}
+exports.DeleteMessageBatchResponse = DeleteMessageBatchResponse;
+class MessageBatchesCancelParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesCancelParams = MessageBatchesCancelParams;
+class MessageBatchesResultsParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessageBatchesResultsParams = MessageBatchesResultsParams;
+class MessagesCountTokensPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.MessagesCountTokensPostParams = MessagesCountTokensPostParams;
+class CountMessageTokensParams extends /*#__PURE__*/S.Class("CountMessageTokensParams")({
+  "messages": /*#__PURE__*/S.Array(InputMessage),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(RequestTextBlock)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(ThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(ToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)), {
+    nullable: true
+  })
+}) {}
+exports.CountMessageTokensParams = CountMessageTokensParams;
+class CountMessageTokensResponse extends /*#__PURE__*/S.Class("CountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+exports.CountMessageTokensResponse = CountMessageTokensResponse;
+class ListFilesV1FilesGetParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.ListFilesV1FilesGetParams = ListFilesV1FilesGetParams;
+class FileMetadataSchemaType extends /*#__PURE__*/S.Literal("file") {}
+exports.FileMetadataSchemaType = FileMetadataSchemaType;
+class FileMetadataSchema extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "downloadable": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "filename": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)),
+  "id": S.String,
+  "mime_type": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)),
+  "size_bytes": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": FileMetadataSchemaType
+}) {}
+exports.FileMetadataSchema = FileMetadataSchema;
+class FileListResponse extends /*#__PURE__*/S.Class("FileListResponse")({
+  "data": /*#__PURE__*/S.Array(FileMetadataSchema),
+  "first_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "has_more": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "last_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.FileListResponse = FileListResponse;
+class UploadFileV1FilesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.UploadFileV1FilesPostParams = UploadFileV1FilesPostParams;
+class GetFileMetadataV1FilesFileIdGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.GetFileMetadataV1FilesFileIdGetParams = GetFileMetadataV1FilesFileIdGetParams;
+class DeleteFileV1FilesFileIdDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.DeleteFileV1FilesFileIdDeleteParams = DeleteFileV1FilesFileIdDeleteParams;
+class FileDeleteResponseType extends /*#__PURE__*/S.Literal("file_deleted") {}
+exports.FileDeleteResponseType = FileDeleteResponseType;
+class FileDeleteResponse extends /*#__PURE__*/S.Class("FileDeleteResponse")({
+  "id": S.String,
+  "type": /*#__PURE__*/S.optionalWith(FileDeleteResponseType, {
+    nullable: true
+  })
+}) {}
+exports.FileDeleteResponse = FileDeleteResponse;
+class DownloadFileV1FilesFileIdContentGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.DownloadFileV1FilesFileIdContentGetParams = DownloadFileV1FilesFileIdContentGetParams;
+class BetaMessagesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessagesPostParams = BetaMessagesPostParams;
+class BetaCacheControlEphemeralTtl extends /*#__PURE__*/S.Literal("5m", "1h") {}
+exports.BetaCacheControlEphemeralTtl = BetaCacheControlEphemeralTtl;
+class BetaCacheControlEphemeralType extends /*#__PURE__*/S.Literal("ephemeral") {}
+exports.BetaCacheControlEphemeralType = BetaCacheControlEphemeralType;
+class BetaCacheControlEphemeral extends /*#__PURE__*/S.Struct({
+  "ttl": /*#__PURE__*/S.optionalWith(BetaCacheControlEphemeralTtl, {
+    nullable: true
+  }),
+  "type": BetaCacheControlEphemeralType
+}) {}
+exports.BetaCacheControlEphemeral = BetaCacheControlEphemeral;
+class BetaRequestServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search", "code_execution") {}
+exports.BetaRequestServerToolUseBlockName = BetaRequestServerToolUseBlockName;
+class BetaRequestServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+exports.BetaRequestServerToolUseBlockType = BetaRequestServerToolUseBlockType;
+class BetaRequestServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": BetaRequestServerToolUseBlockName,
+  "type": BetaRequestServerToolUseBlockType
+}) {}
+exports.BetaRequestServerToolUseBlock = BetaRequestServerToolUseBlock;
+class BetaRequestWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+exports.BetaRequestWebSearchResultBlockType = BetaRequestWebSearchResultBlockType;
+class BetaRequestWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "title": S.String,
+  "type": BetaRequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+exports.BetaRequestWebSearchResultBlock = BetaRequestWebSearchResultBlock;
+class BetaWebSearchToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long") {}
+exports.BetaWebSearchToolResultErrorCode = BetaWebSearchToolResultErrorCode;
+class BetaRequestWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+exports.BetaRequestWebSearchToolResultErrorType = BetaRequestWebSearchToolResultErrorType;
+class BetaRequestWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaRequestWebSearchToolResultErrorType
+}) {}
+exports.BetaRequestWebSearchToolResultError = BetaRequestWebSearchToolResultError;
+class BetaRequestWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+exports.BetaRequestWebSearchToolResultBlockType = BetaRequestWebSearchToolResultBlockType;
+class BetaRequestWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(/*#__PURE__*/S.Array(BetaRequestWebSearchResultBlock), BetaRequestWebSearchToolResultError),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestWebSearchToolResultBlockType
+}) {}
+exports.BetaRequestWebSearchToolResultBlock = BetaRequestWebSearchToolResultBlock;
+class BetaCodeExecutionToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "too_many_requests", "execution_time_exceeded") {}
+exports.BetaCodeExecutionToolResultErrorCode = BetaCodeExecutionToolResultErrorCode;
+class BetaRequestCodeExecutionToolResultErrorType extends /*#__PURE__*/S.Literal("code_execution_tool_result_error") {}
+exports.BetaRequestCodeExecutionToolResultErrorType = BetaRequestCodeExecutionToolResultErrorType;
+class BetaRequestCodeExecutionToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaRequestCodeExecutionToolResultErrorType
+}) {}
+exports.BetaRequestCodeExecutionToolResultError = BetaRequestCodeExecutionToolResultError;
+class BetaRequestCodeExecutionOutputBlockType extends /*#__PURE__*/S.Literal("code_execution_output") {}
+exports.BetaRequestCodeExecutionOutputBlockType = BetaRequestCodeExecutionOutputBlockType;
+class BetaRequestCodeExecutionOutputBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaRequestCodeExecutionOutputBlockType
+}) {}
+exports.BetaRequestCodeExecutionOutputBlock = BetaRequestCodeExecutionOutputBlock;
+class BetaRequestCodeExecutionResultBlockType extends /*#__PURE__*/S.Literal("code_execution_result") {}
+exports.BetaRequestCodeExecutionResultBlockType = BetaRequestCodeExecutionResultBlockType;
+class BetaRequestCodeExecutionResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Array(BetaRequestCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaRequestCodeExecutionResultBlockType
+}) {}
+exports.BetaRequestCodeExecutionResultBlock = BetaRequestCodeExecutionResultBlock;
+class BetaRequestCodeExecutionToolResultBlockType extends /*#__PURE__*/S.Literal("code_execution_tool_result") {}
+exports.BetaRequestCodeExecutionToolResultBlockType = BetaRequestCodeExecutionToolResultBlockType;
+class BetaRequestCodeExecutionToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(BetaRequestCodeExecutionToolResultError, BetaRequestCodeExecutionResultBlock),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestCodeExecutionToolResultBlockType
+}) {}
+exports.BetaRequestCodeExecutionToolResultBlock = BetaRequestCodeExecutionToolResultBlock;
+class BetaRequestMCPToolUseBlockType extends /*#__PURE__*/S.Literal("mcp_tool_use") {}
+exports.BetaRequestMCPToolUseBlockType = BetaRequestMCPToolUseBlockType;
+class BetaRequestMCPToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaRequestMCPToolUseBlockType
+}) {}
+exports.BetaRequestMCPToolUseBlock = BetaRequestMCPToolUseBlock;
+class BetaRequestCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+exports.BetaRequestCharLocationCitationType = BetaRequestCharLocationCitationType;
+class BetaRequestCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestCharLocationCitationType
+}) {}
+exports.BetaRequestCharLocationCitation = BetaRequestCharLocationCitation;
+class BetaRequestPageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+exports.BetaRequestPageLocationCitationType = BetaRequestPageLocationCitationType;
+class BetaRequestPageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": BetaRequestPageLocationCitationType
+}) {}
+exports.BetaRequestPageLocationCitation = BetaRequestPageLocationCitation;
+class BetaRequestContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+exports.BetaRequestContentBlockLocationCitationType = BetaRequestContentBlockLocationCitationType;
+class BetaRequestContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestContentBlockLocationCitationType
+}) {}
+exports.BetaRequestContentBlockLocationCitation = BetaRequestContentBlockLocationCitation;
+class BetaRequestWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+exports.BetaRequestWebSearchResultLocationCitationType = BetaRequestWebSearchResultLocationCitationType;
+class BetaRequestWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "type": BetaRequestWebSearchResultLocationCitationType,
+  "url": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(2048))
+}) {}
+exports.BetaRequestWebSearchResultLocationCitation = BetaRequestWebSearchResultLocationCitation;
+class BetaRequestTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+exports.BetaRequestTextBlockType = BetaRequestTextBlockType;
+class BetaRequestTextBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestCharLocationCitation, BetaRequestPageLocationCitation, BetaRequestContentBlockLocationCitation, BetaRequestWebSearchResultLocationCitation)), S.Null), {
+    nullable: true
+  }),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": BetaRequestTextBlockType
+}) {}
+exports.BetaRequestTextBlock = BetaRequestTextBlock;
+class BetaRequestMCPToolResultBlockType extends /*#__PURE__*/S.Literal("mcp_tool_result") {}
+exports.BetaRequestMCPToolResultBlockType = BetaRequestMCPToolResultBlockType;
+class BetaRequestMCPToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestMCPToolResultBlockType
+}) {}
+exports.BetaRequestMCPToolResultBlock = BetaRequestMCPToolResultBlock;
+class BetaBase64ImageSourceMediaType extends /*#__PURE__*/S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+exports.BetaBase64ImageSourceMediaType = BetaBase64ImageSourceMediaType;
+class BetaBase64ImageSourceType extends /*#__PURE__*/S.Literal("base64") {}
+exports.BetaBase64ImageSourceType = BetaBase64ImageSourceType;
+class BetaBase64ImageSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64ImageSourceMediaType,
+  "type": BetaBase64ImageSourceType
+}) {}
+exports.BetaBase64ImageSource = BetaBase64ImageSource;
+class BetaURLImageSourceType extends /*#__PURE__*/S.Literal("url") {}
+exports.BetaURLImageSourceType = BetaURLImageSourceType;
+class BetaURLImageSource extends /*#__PURE__*/S.Struct({
+  "type": BetaURLImageSourceType,
+  "url": S.String
+}) {}
+exports.BetaURLImageSource = BetaURLImageSource;
+class BetaFileImageSourceType extends /*#__PURE__*/S.Literal("file") {}
+exports.BetaFileImageSourceType = BetaFileImageSourceType;
+class BetaFileImageSource extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaFileImageSourceType
+}) {}
+exports.BetaFileImageSource = BetaFileImageSource;
+class BetaRequestImageBlockType extends /*#__PURE__*/S.Literal("image") {}
+exports.BetaRequestImageBlockType = BetaRequestImageBlockType;
+class BetaRequestImageBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(BetaBase64ImageSource, BetaURLImageSource, BetaFileImageSource),
+  "type": BetaRequestImageBlockType
+}) {}
+exports.BetaRequestImageBlock = BetaRequestImageBlock;
+class BetaRequestToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+exports.BetaRequestToolUseBlockType = BetaRequestToolUseBlockType;
+class BetaRequestToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(200)),
+  "type": BetaRequestToolUseBlockType
+}) {}
+exports.BetaRequestToolUseBlock = BetaRequestToolUseBlock;
+class BetaRequestToolResultBlockType extends /*#__PURE__*/S.Literal("tool_result") {}
+exports.BetaRequestToolResultBlockType = BetaRequestToolResultBlockType;
+class BetaRequestToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestTextBlock, BetaRequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestToolResultBlockType
+}) {}
+exports.BetaRequestToolResultBlock = BetaRequestToolResultBlock;
+class BetaRequestCitationsConfig extends /*#__PURE__*/S.Struct({
+  "enabled": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+exports.BetaRequestCitationsConfig = BetaRequestCitationsConfig;
+class BetaBase64PDFSourceMediaType extends /*#__PURE__*/S.Literal("application/pdf") {}
+exports.BetaBase64PDFSourceMediaType = BetaBase64PDFSourceMediaType;
+class BetaBase64PDFSourceType extends /*#__PURE__*/S.Literal("base64") {}
+exports.BetaBase64PDFSourceType = BetaBase64PDFSourceType;
+class BetaBase64PDFSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64PDFSourceMediaType,
+  "type": BetaBase64PDFSourceType
+}) {}
+exports.BetaBase64PDFSource = BetaBase64PDFSource;
+class BetaPlainTextSourceMediaType extends /*#__PURE__*/S.Literal("text/plain") {}
+exports.BetaPlainTextSourceMediaType = BetaPlainTextSourceMediaType;
+class BetaPlainTextSourceType extends /*#__PURE__*/S.Literal("text") {}
+exports.BetaPlainTextSourceType = BetaPlainTextSourceType;
+class BetaPlainTextSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaPlainTextSourceMediaType,
+  "type": BetaPlainTextSourceType
+}) {}
+exports.BetaPlainTextSource = BetaPlainTextSource;
+class BetaContentBlockSourceType extends /*#__PURE__*/S.Literal("content") {}
+exports.BetaContentBlockSourceType = BetaContentBlockSourceType;
+class BetaContentBlockSource extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestTextBlock, BetaRequestImageBlock))),
+  "type": BetaContentBlockSourceType
+}) {}
+exports.BetaContentBlockSource = BetaContentBlockSource;
+class BetaURLPDFSourceType extends /*#__PURE__*/S.Literal("url") {}
+exports.BetaURLPDFSourceType = BetaURLPDFSourceType;
+class BetaURLPDFSource extends /*#__PURE__*/S.Struct({
+  "type": BetaURLPDFSourceType,
+  "url": S.String
+}) {}
+exports.BetaURLPDFSource = BetaURLPDFSource;
+class BetaFileDocumentSourceType extends /*#__PURE__*/S.Literal("file") {}
+exports.BetaFileDocumentSourceType = BetaFileDocumentSourceType;
+class BetaFileDocumentSource extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaFileDocumentSourceType
+}) {}
+exports.BetaFileDocumentSource = BetaFileDocumentSource;
+class BetaRequestDocumentBlockType extends /*#__PURE__*/S.Literal("document") {}
+exports.BetaRequestDocumentBlockType = BetaRequestDocumentBlockType;
+class BetaRequestDocumentBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(BetaRequestCitationsConfig, {
+    nullable: true
+  }),
+  "context": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)), S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(BetaBase64PDFSource, BetaPlainTextSource, BetaContentBlockSource, BetaURLPDFSource, BetaFileDocumentSource),
+  "title": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)), S.Null), {
+    nullable: true
+  }),
+  "type": BetaRequestDocumentBlockType
+}) {}
+exports.BetaRequestDocumentBlock = BetaRequestDocumentBlock;
+class BetaRequestThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+exports.BetaRequestThinkingBlockType = BetaRequestThinkingBlockType;
+class BetaRequestThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaRequestThinkingBlockType
+}) {}
+exports.BetaRequestThinkingBlock = BetaRequestThinkingBlock;
+class BetaRequestRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+exports.BetaRequestRedactedThinkingBlockType = BetaRequestRedactedThinkingBlockType;
+class BetaRequestRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": BetaRequestRedactedThinkingBlockType
+}) {}
+exports.BetaRequestRedactedThinkingBlock = BetaRequestRedactedThinkingBlock;
+class BetaRequestContainerUploadBlockType extends /*#__PURE__*/S.Literal("container_upload") {}
+exports.BetaRequestContainerUploadBlockType = BetaRequestContainerUploadBlockType;
+class BetaRequestContainerUploadBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "file_id": S.String,
+  "type": BetaRequestContainerUploadBlockType
+}) {}
+exports.BetaRequestContainerUploadBlock = BetaRequestContainerUploadBlock;
+class BetaInputContentBlock extends /*#__PURE__*/S.Union(BetaRequestServerToolUseBlock, BetaRequestWebSearchToolResultBlock, BetaRequestCodeExecutionToolResultBlock, BetaRequestMCPToolUseBlock, BetaRequestMCPToolResultBlock, BetaRequestTextBlock, BetaRequestImageBlock, BetaRequestToolUseBlock, BetaRequestToolResultBlock, BetaRequestDocumentBlock, BetaRequestThinkingBlock, BetaRequestRedactedThinkingBlock, BetaRequestContainerUploadBlock) {}
+exports.BetaInputContentBlock = BetaInputContentBlock;
+class BetaInputMessageRole extends /*#__PURE__*/S.Literal("user", "assistant") {}
+exports.BetaInputMessageRole = BetaInputMessageRole;
+class BetaInputMessage extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaInputContentBlock)),
+  "role": BetaInputMessageRole
+}) {}
+exports.BetaInputMessage = BetaInputMessage;
+class BetaRequestMCPServerToolConfiguration extends /*#__PURE__*/S.Struct({
+  "allowed_tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "enabled": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Boolean, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaRequestMCPServerToolConfiguration = BetaRequestMCPServerToolConfiguration;
+class BetaRequestMCPServerURLDefinitionType extends /*#__PURE__*/S.Literal("url") {}
+exports.BetaRequestMCPServerURLDefinitionType = BetaRequestMCPServerURLDefinitionType;
+class BetaRequestMCPServerURLDefinition extends /*#__PURE__*/S.Struct({
+  "authorization_token": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "name": S.String,
+  "tool_configuration": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaRequestMCPServerToolConfiguration, S.Null), {
+    nullable: true
+  }),
+  "type": BetaRequestMCPServerURLDefinitionType,
+  "url": S.String
+}) {}
+exports.BetaRequestMCPServerURLDefinition = BetaRequestMCPServerURLDefinition;
+class BetaMetadata extends /*#__PURE__*/S.Struct({
+  "user_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.maxLength(256)), S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaMetadata = BetaMetadata;
+class BetaCreateMessageParamsServiceTier extends /*#__PURE__*/S.Literal("auto", "standard_only") {}
+exports.BetaCreateMessageParamsServiceTier = BetaCreateMessageParamsServiceTier;
+class BetaThinkingConfigEnabledType extends /*#__PURE__*/S.Literal("enabled") {}
+exports.BetaThinkingConfigEnabledType = BetaThinkingConfigEnabledType;
+class BetaThinkingConfigEnabled extends /*#__PURE__*/S.Struct({
+  "budget_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1024)),
+  "type": BetaThinkingConfigEnabledType
+}) {}
+exports.BetaThinkingConfigEnabled = BetaThinkingConfigEnabled;
+class BetaThinkingConfigDisabledType extends /*#__PURE__*/S.Literal("disabled") {}
+exports.BetaThinkingConfigDisabledType = BetaThinkingConfigDisabledType;
+class BetaThinkingConfigDisabled extends /*#__PURE__*/S.Struct({
+  "type": BetaThinkingConfigDisabledType
+}) {}
+exports.BetaThinkingConfigDisabled = BetaThinkingConfigDisabled;
+class BetaThinkingConfigParam extends /*#__PURE__*/S.Union(BetaThinkingConfigEnabled, BetaThinkingConfigDisabled) {}
+exports.BetaThinkingConfigParam = BetaThinkingConfigParam;
+class BetaToolChoiceAutoType extends /*#__PURE__*/S.Literal("auto") {}
+exports.BetaToolChoiceAutoType = BetaToolChoiceAutoType;
+class BetaToolChoiceAuto extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": BetaToolChoiceAutoType
+}) {}
+exports.BetaToolChoiceAuto = BetaToolChoiceAuto;
+class BetaToolChoiceAnyType extends /*#__PURE__*/S.Literal("any") {}
+exports.BetaToolChoiceAnyType = BetaToolChoiceAnyType;
+class BetaToolChoiceAny extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": BetaToolChoiceAnyType
+}) {}
+exports.BetaToolChoiceAny = BetaToolChoiceAny;
+class BetaToolChoiceToolType extends /*#__PURE__*/S.Literal("tool") {}
+exports.BetaToolChoiceToolType = BetaToolChoiceToolType;
+class BetaToolChoiceTool extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "name": S.String,
+  "type": BetaToolChoiceToolType
+}) {}
+exports.BetaToolChoiceTool = BetaToolChoiceTool;
+class BetaToolChoiceNoneType extends /*#__PURE__*/S.Literal("none") {}
+exports.BetaToolChoiceNoneType = BetaToolChoiceNoneType;
+class BetaToolChoiceNone extends /*#__PURE__*/S.Struct({
+  "type": BetaToolChoiceNoneType
+}) {}
+exports.BetaToolChoiceNone = BetaToolChoiceNone;
+class BetaToolChoice extends /*#__PURE__*/S.Union(BetaToolChoiceAuto, BetaToolChoiceAny, BetaToolChoiceTool, BetaToolChoiceNone) {}
+exports.BetaToolChoice = BetaToolChoice;
+class BetaToolTypeEnum extends /*#__PURE__*/S.Literal("custom") {}
+exports.BetaToolTypeEnum = BetaToolTypeEnum;
+class BetaInputSchemaType extends /*#__PURE__*/S.Literal("object") {}
+exports.BetaInputSchemaType = BetaInputSchemaType;
+class BetaInputSchema extends /*#__PURE__*/S.Struct({
+  "properties": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }), S.Null), {
+    nullable: true
+  }),
+  "required": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "type": BetaInputSchemaType
+}) {}
+exports.BetaInputSchema = BetaInputSchema;
+class BetaTool extends /*#__PURE__*/S.Struct({
+  "type": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Null, BetaToolTypeEnum), {
+    nullable: true
+  }),
+  "description": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": BetaInputSchema,
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaTool = BetaTool;
+class BetaComputerUseTool20241022Name extends /*#__PURE__*/S.Literal("computer") {}
+exports.BetaComputerUseTool20241022Name = BetaComputerUseTool20241022Name;
+class BetaComputerUseTool20241022Type extends /*#__PURE__*/S.Literal("computer_20241022") {}
+exports.BetaComputerUseTool20241022Type = BetaComputerUseTool20241022Type;
+class BetaComputerUseTool20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "display_height_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "display_number": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null), {
+    nullable: true
+  }),
+  "display_width_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20241022Name,
+  "type": BetaComputerUseTool20241022Type
+}) {}
+exports.BetaComputerUseTool20241022 = BetaComputerUseTool20241022;
+class BetaBashTool20241022Name extends /*#__PURE__*/S.Literal("bash") {}
+exports.BetaBashTool20241022Name = BetaBashTool20241022Name;
+class BetaBashTool20241022Type extends /*#__PURE__*/S.Literal("bash_20241022") {}
+exports.BetaBashTool20241022Type = BetaBashTool20241022Type;
+class BetaBashTool20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaBashTool20241022Name,
+  "type": BetaBashTool20241022Type
+}) {}
+exports.BetaBashTool20241022 = BetaBashTool20241022;
+class BetaTextEditor20241022Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+exports.BetaTextEditor20241022Name = BetaTextEditor20241022Name;
+class BetaTextEditor20241022Type extends /*#__PURE__*/S.Literal("text_editor_20241022") {}
+exports.BetaTextEditor20241022Type = BetaTextEditor20241022Type;
+class BetaTextEditor20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20241022Name,
+  "type": BetaTextEditor20241022Type
+}) {}
+exports.BetaTextEditor20241022 = BetaTextEditor20241022;
+class BetaComputerUseTool20250124Name extends /*#__PURE__*/S.Literal("computer") {}
+exports.BetaComputerUseTool20250124Name = BetaComputerUseTool20250124Name;
+class BetaComputerUseTool20250124Type extends /*#__PURE__*/S.Literal("computer_20250124") {}
+exports.BetaComputerUseTool20250124Type = BetaComputerUseTool20250124Type;
+class BetaComputerUseTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "display_height_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "display_number": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null), {
+    nullable: true
+  }),
+  "display_width_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20250124Name,
+  "type": BetaComputerUseTool20250124Type
+}) {}
+exports.BetaComputerUseTool20250124 = BetaComputerUseTool20250124;
+class BetaBashTool20250124Name extends /*#__PURE__*/S.Literal("bash") {}
+exports.BetaBashTool20250124Name = BetaBashTool20250124Name;
+class BetaBashTool20250124Type extends /*#__PURE__*/S.Literal("bash_20250124") {}
+exports.BetaBashTool20250124Type = BetaBashTool20250124Type;
+class BetaBashTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaBashTool20250124Name,
+  "type": BetaBashTool20250124Type
+}) {}
+exports.BetaBashTool20250124 = BetaBashTool20250124;
+class BetaTextEditor20250124Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+exports.BetaTextEditor20250124Name = BetaTextEditor20250124Name;
+class BetaTextEditor20250124Type extends /*#__PURE__*/S.Literal("text_editor_20250124") {}
+exports.BetaTextEditor20250124Type = BetaTextEditor20250124Type;
+class BetaTextEditor20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20250124Name,
+  "type": BetaTextEditor20250124Type
+}) {}
+exports.BetaTextEditor20250124 = BetaTextEditor20250124;
+class BetaTextEditor20250429Name extends /*#__PURE__*/S.Literal("str_replace_based_edit_tool") {}
+exports.BetaTextEditor20250429Name = BetaTextEditor20250429Name;
+class BetaTextEditor20250429Type extends /*#__PURE__*/S.Literal("text_editor_20250429") {}
+exports.BetaTextEditor20250429Type = BetaTextEditor20250429Type;
+class BetaTextEditor20250429 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20250429Name,
+  "type": BetaTextEditor20250429Type
+}) {}
+exports.BetaTextEditor20250429 = BetaTextEditor20250429;
+class BetaWebSearchTool20250305Name extends /*#__PURE__*/S.Literal("web_search") {}
+exports.BetaWebSearchTool20250305Name = BetaWebSearchTool20250305Name;
+class BetaWebSearchTool20250305Type extends /*#__PURE__*/S.Literal("web_search_20250305") {}
+exports.BetaWebSearchTool20250305Type = BetaWebSearchTool20250305Type;
+class BetaUserLocationType extends /*#__PURE__*/S.Literal("approximate") {}
+exports.BetaUserLocationType = BetaUserLocationType;
+class BetaUserLocation extends /*#__PURE__*/S.Struct({
+  "city": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "country": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(2), /*#__PURE__*/S.maxLength(2)), S.Null), {
+    nullable: true
+  }),
+  "region": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "timezone": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "type": BetaUserLocationType
+}) {}
+exports.BetaUserLocation = BetaUserLocation;
+class BetaWebSearchTool20250305 extends /*#__PURE__*/S.Struct({
+  "allowed_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "blocked_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "max_uses": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThan(0)), S.Null), {
+    nullable: true
+  }),
+  "name": BetaWebSearchTool20250305Name,
+  "type": BetaWebSearchTool20250305Type,
+  "user_location": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaUserLocation, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaWebSearchTool20250305 = BetaWebSearchTool20250305;
+class BetaCodeExecutionTool20250522Name extends /*#__PURE__*/S.Literal("code_execution") {}
+exports.BetaCodeExecutionTool20250522Name = BetaCodeExecutionTool20250522Name;
+class BetaCodeExecutionTool20250522Type extends /*#__PURE__*/S.Literal("code_execution_20250522") {}
+exports.BetaCodeExecutionTool20250522Type = BetaCodeExecutionTool20250522Type;
+class BetaCodeExecutionTool20250522 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaCodeExecutionTool20250522Name,
+  "type": BetaCodeExecutionTool20250522Type
+}) {}
+exports.BetaCodeExecutionTool20250522 = BetaCodeExecutionTool20250522;
+class BetaCreateMessageParams extends /*#__PURE__*/S.Class("BetaCreateMessageParams")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "messages": /*#__PURE__*/S.Array(BetaInputMessage),
+  "container": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "max_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "mcp_servers": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(BetaRequestMCPServerURLDefinition).pipe(/*#__PURE__*/S.maxItems(20)), {
+    nullable: true
+  }),
+  "metadata": /*#__PURE__*/S.optionalWith(BetaMetadata, {
+    nullable: true
+  }),
+  "service_tier": /*#__PURE__*/S.optionalWith(BetaCreateMessageParamsServiceTier, {
+    nullable: true
+  }),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(BetaThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(BetaToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaTool, BetaComputerUseTool20241022, BetaBashTool20241022, BetaTextEditor20241022, BetaComputerUseTool20250124, BetaBashTool20250124, BetaTextEditor20250124, BetaTextEditor20250429, BetaWebSearchTool20250305, BetaCodeExecutionTool20250522)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  })
+}) {}
+exports.BetaCreateMessageParams = BetaCreateMessageParams;
+class BetaMessageType extends /*#__PURE__*/S.Literal("message") {}
+exports.BetaMessageType = BetaMessageType;
+class BetaMessageRole extends /*#__PURE__*/S.Literal("assistant") {}
+exports.BetaMessageRole = BetaMessageRole;
+class BetaResponseCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+exports.BetaResponseCharLocationCitationType = BetaResponseCharLocationCitationType;
+class BetaResponseCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseCharLocationCitationType
+}) {}
+exports.BetaResponseCharLocationCitation = BetaResponseCharLocationCitation;
+class BetaResponsePageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+exports.BetaResponsePageLocationCitationType = BetaResponsePageLocationCitationType;
+class BetaResponsePageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": BetaResponsePageLocationCitationType
+}) {}
+exports.BetaResponsePageLocationCitation = BetaResponsePageLocationCitation;
+class BetaResponseContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+exports.BetaResponseContentBlockLocationCitationType = BetaResponseContentBlockLocationCitationType;
+class BetaResponseContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseContentBlockLocationCitationType
+}) {}
+exports.BetaResponseContentBlockLocationCitation = BetaResponseContentBlockLocationCitation;
+class BetaResponseWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+exports.BetaResponseWebSearchResultLocationCitationType = BetaResponseWebSearchResultLocationCitationType;
+class BetaResponseWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": BetaResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+exports.BetaResponseWebSearchResultLocationCitation = BetaResponseWebSearchResultLocationCitation;
+class BetaResponseTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+exports.BetaResponseTextBlockType = BetaResponseTextBlockType;
+class BetaResponseTextBlock extends /*#__PURE__*/S.Struct({
+  "citations": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaResponseCharLocationCitation, BetaResponsePageLocationCitation, BetaResponseContentBlockLocationCitation, BetaResponseWebSearchResultLocationCitation)))),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(0), /*#__PURE__*/S.maxLength(5000000)),
+  "type": BetaResponseTextBlockType
+}) {}
+exports.BetaResponseTextBlock = BetaResponseTextBlock;
+class BetaResponseToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+exports.BetaResponseToolUseBlockType = BetaResponseToolUseBlockType;
+class BetaResponseToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": BetaResponseToolUseBlockType
+}) {}
+exports.BetaResponseToolUseBlock = BetaResponseToolUseBlock;
+class BetaResponseServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search", "code_execution") {}
+exports.BetaResponseServerToolUseBlockName = BetaResponseServerToolUseBlockName;
+class BetaResponseServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+exports.BetaResponseServerToolUseBlockType = BetaResponseServerToolUseBlockType;
+class BetaResponseServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": BetaResponseServerToolUseBlockName,
+  "type": BetaResponseServerToolUseBlockType
+}) {}
+exports.BetaResponseServerToolUseBlock = BetaResponseServerToolUseBlock;
+class BetaResponseWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+exports.BetaResponseWebSearchToolResultErrorType = BetaResponseWebSearchToolResultErrorType;
+class BetaResponseWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaResponseWebSearchToolResultErrorType
+}) {}
+exports.BetaResponseWebSearchToolResultError = BetaResponseWebSearchToolResultError;
+class BetaResponseWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+exports.BetaResponseWebSearchResultBlockType = BetaResponseWebSearchResultBlockType;
+class BetaResponseWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": BetaResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+exports.BetaResponseWebSearchResultBlock = BetaResponseWebSearchResultBlock;
+class BetaResponseWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+exports.BetaResponseWebSearchToolResultBlockType = BetaResponseWebSearchToolResultBlockType;
+class BetaResponseWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(BetaResponseWebSearchToolResultError, /*#__PURE__*/S.Array(BetaResponseWebSearchResultBlock)),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseWebSearchToolResultBlockType
+}) {}
+exports.BetaResponseWebSearchToolResultBlock = BetaResponseWebSearchToolResultBlock;
+class BetaResponseCodeExecutionToolResultErrorType extends /*#__PURE__*/S.Literal("code_execution_tool_result_error") {}
+exports.BetaResponseCodeExecutionToolResultErrorType = BetaResponseCodeExecutionToolResultErrorType;
+class BetaResponseCodeExecutionToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaResponseCodeExecutionToolResultErrorType
+}) {}
+exports.BetaResponseCodeExecutionToolResultError = BetaResponseCodeExecutionToolResultError;
+class BetaResponseCodeExecutionOutputBlockType extends /*#__PURE__*/S.Literal("code_execution_output") {}
+exports.BetaResponseCodeExecutionOutputBlockType = BetaResponseCodeExecutionOutputBlockType;
+class BetaResponseCodeExecutionOutputBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseCodeExecutionOutputBlockType
+}) {}
+exports.BetaResponseCodeExecutionOutputBlock = BetaResponseCodeExecutionOutputBlock;
+class BetaResponseCodeExecutionResultBlockType extends /*#__PURE__*/S.Literal("code_execution_result") {}
+exports.BetaResponseCodeExecutionResultBlockType = BetaResponseCodeExecutionResultBlockType;
+class BetaResponseCodeExecutionResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Array(BetaResponseCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaResponseCodeExecutionResultBlockType
+}) {}
+exports.BetaResponseCodeExecutionResultBlock = BetaResponseCodeExecutionResultBlock;
+class BetaResponseCodeExecutionToolResultBlockType extends /*#__PURE__*/S.Literal("code_execution_tool_result") {}
+exports.BetaResponseCodeExecutionToolResultBlockType = BetaResponseCodeExecutionToolResultBlockType;
+class BetaResponseCodeExecutionToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(BetaResponseCodeExecutionToolResultError, BetaResponseCodeExecutionResultBlock),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseCodeExecutionToolResultBlockType
+}) {}
+exports.BetaResponseCodeExecutionToolResultBlock = BetaResponseCodeExecutionToolResultBlock;
+class BetaResponseMCPToolUseBlockType extends /*#__PURE__*/S.Literal("mcp_tool_use") {}
+exports.BetaResponseMCPToolUseBlockType = BetaResponseMCPToolUseBlockType;
+class BetaResponseMCPToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaResponseMCPToolUseBlockType
+}) {}
+exports.BetaResponseMCPToolUseBlock = BetaResponseMCPToolUseBlock;
+class BetaResponseMCPToolResultBlockType extends /*#__PURE__*/S.Literal("mcp_tool_result") {}
+exports.BetaResponseMCPToolResultBlockType = BetaResponseMCPToolResultBlockType;
+class BetaResponseMCPToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaResponseTextBlock)),
+  "is_error": S.Boolean,
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaResponseMCPToolResultBlockType
+}) {}
+exports.BetaResponseMCPToolResultBlock = BetaResponseMCPToolResultBlock;
+class BetaResponseContainerUploadBlockType extends /*#__PURE__*/S.Literal("container_upload") {}
+exports.BetaResponseContainerUploadBlockType = BetaResponseContainerUploadBlockType;
+class BetaResponseContainerUploadBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseContainerUploadBlockType
+}) {}
+exports.BetaResponseContainerUploadBlock = BetaResponseContainerUploadBlock;
+class BetaResponseThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+exports.BetaResponseThinkingBlockType = BetaResponseThinkingBlockType;
+class BetaResponseThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaResponseThinkingBlockType
+}) {}
+exports.BetaResponseThinkingBlock = BetaResponseThinkingBlock;
+class BetaResponseRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+exports.BetaResponseRedactedThinkingBlockType = BetaResponseRedactedThinkingBlockType;
+class BetaResponseRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": BetaResponseRedactedThinkingBlockType
+}) {}
+exports.BetaResponseRedactedThinkingBlock = BetaResponseRedactedThinkingBlock;
+class BetaContentBlock extends /*#__PURE__*/S.Union(BetaResponseTextBlock, BetaResponseToolUseBlock, BetaResponseServerToolUseBlock, BetaResponseWebSearchToolResultBlock, BetaResponseCodeExecutionToolResultBlock, BetaResponseMCPToolUseBlock, BetaResponseMCPToolResultBlock, BetaResponseContainerUploadBlock, BetaResponseThinkingBlock, BetaResponseRedactedThinkingBlock) {}
+exports.BetaContentBlock = BetaContentBlock;
+class BetaStopReason extends /*#__PURE__*/S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal") {}
+exports.BetaStopReason = BetaStopReason;
+class BetaCacheCreation extends /*#__PURE__*/S.Struct({
+  "ephemeral_1h_input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "ephemeral_5m_input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+exports.BetaCacheCreation = BetaCacheCreation;
+class BetaServerToolUsage extends /*#__PURE__*/S.Struct({
+  "web_search_requests": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+exports.BetaServerToolUsage = BetaServerToolUsage;
+class BetaUsageServiceTierEnum extends /*#__PURE__*/S.Literal("standard", "priority", "batch") {}
+exports.BetaUsageServiceTierEnum = BetaUsageServiceTierEnum;
+class BetaUsage extends /*#__PURE__*/S.Struct({
+  "cache_creation": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaCacheCreation, S.Null)),
+  "cache_creation_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "output_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "server_tool_use": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(BetaServerToolUsage)),
+  "service_tier": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaUsageServiceTierEnum, S.Null))
+}) {}
+exports.BetaUsage = BetaUsage;
+class BetaContainer extends /*#__PURE__*/S.Struct({
+  "expires_at": S.String,
+  "id": S.String
+}) {}
+exports.BetaContainer = BetaContainer;
+class BetaMessage extends /*#__PURE__*/S.Class("BetaMessage")({
+  "id": S.String,
+  "type": BetaMessageType,
+  "role": BetaMessageRole,
+  "content": /*#__PURE__*/S.Array(BetaContentBlock),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(BetaStopReason, S.Null),
+  "stop_sequence": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "usage": BetaUsage,
+  "container": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaContainer, S.Null))
+}) {}
+exports.BetaMessage = BetaMessage;
+class BetaInvalidRequestErrorType extends /*#__PURE__*/S.Literal("invalid_request_error") {}
+exports.BetaInvalidRequestErrorType = BetaInvalidRequestErrorType;
+class BetaInvalidRequestError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaInvalidRequestErrorType
+}) {}
+exports.BetaInvalidRequestError = BetaInvalidRequestError;
+class BetaAuthenticationErrorType extends /*#__PURE__*/S.Literal("authentication_error") {}
+exports.BetaAuthenticationErrorType = BetaAuthenticationErrorType;
+class BetaAuthenticationError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaAuthenticationErrorType
+}) {}
+exports.BetaAuthenticationError = BetaAuthenticationError;
+class BetaBillingErrorType extends /*#__PURE__*/S.Literal("billing_error") {}
+exports.BetaBillingErrorType = BetaBillingErrorType;
+class BetaBillingError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaBillingErrorType
+}) {}
+exports.BetaBillingError = BetaBillingError;
+class BetaPermissionErrorType extends /*#__PURE__*/S.Literal("permission_error") {}
+exports.BetaPermissionErrorType = BetaPermissionErrorType;
+class BetaPermissionError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaPermissionErrorType
+}) {}
+exports.BetaPermissionError = BetaPermissionError;
+class BetaNotFoundErrorType extends /*#__PURE__*/S.Literal("not_found_error") {}
+exports.BetaNotFoundErrorType = BetaNotFoundErrorType;
+class BetaNotFoundError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaNotFoundErrorType
+}) {}
+exports.BetaNotFoundError = BetaNotFoundError;
+class BetaRateLimitErrorType extends /*#__PURE__*/S.Literal("rate_limit_error") {}
+exports.BetaRateLimitErrorType = BetaRateLimitErrorType;
+class BetaRateLimitError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaRateLimitErrorType
+}) {}
+exports.BetaRateLimitError = BetaRateLimitError;
+class BetaGatewayTimeoutErrorType extends /*#__PURE__*/S.Literal("timeout_error") {}
+exports.BetaGatewayTimeoutErrorType = BetaGatewayTimeoutErrorType;
+class BetaGatewayTimeoutError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaGatewayTimeoutErrorType
+}) {}
+exports.BetaGatewayTimeoutError = BetaGatewayTimeoutError;
+class BetaAPIErrorType extends /*#__PURE__*/S.Literal("api_error") {}
+exports.BetaAPIErrorType = BetaAPIErrorType;
+class BetaAPIError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaAPIErrorType
+}) {}
+exports.BetaAPIError = BetaAPIError;
+class BetaOverloadedErrorType extends /*#__PURE__*/S.Literal("overloaded_error") {}
+exports.BetaOverloadedErrorType = BetaOverloadedErrorType;
+class BetaOverloadedError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaOverloadedErrorType
+}) {}
+exports.BetaOverloadedError = BetaOverloadedError;
+class BetaErrorResponseType extends /*#__PURE__*/S.Literal("error") {}
+exports.BetaErrorResponseType = BetaErrorResponseType;
+class BetaErrorResponse extends /*#__PURE__*/S.Class("BetaErrorResponse")({
+  "error": /*#__PURE__*/S.Union(BetaInvalidRequestError, BetaAuthenticationError, BetaBillingError, BetaPermissionError, BetaNotFoundError, BetaRateLimitError, BetaGatewayTimeoutError, BetaAPIError, BetaOverloadedError),
+  "type": BetaErrorResponseType
+}) {}
+exports.BetaErrorResponse = BetaErrorResponse;
+class BetaModelsListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaModelsListParams = BetaModelsListParams;
+class BetaModelInfoType extends /*#__PURE__*/S.Literal("model") {}
+exports.BetaModelInfoType = BetaModelInfoType;
+class BetaModelInfo extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": BetaModelInfoType
+}) {}
+exports.BetaModelInfo = BetaModelInfo;
+class BetaListResponseModelInfo extends /*#__PURE__*/S.Class("BetaListResponseModelInfo")({
+  "data": /*#__PURE__*/S.Array(BetaModelInfo),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+exports.BetaListResponseModelInfo = BetaListResponseModelInfo;
+class BetaModelsGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaModelsGetParams = BetaModelsGetParams;
+class BetaMessageBatchesListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesListParams = BetaMessageBatchesListParams;
+class BetaMessageBatchProcessingStatus extends /*#__PURE__*/S.Literal("in_progress", "canceling", "ended") {}
+exports.BetaMessageBatchProcessingStatus = BetaMessageBatchProcessingStatus;
+class BetaRequestCounts extends /*#__PURE__*/S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+exports.BetaRequestCounts = BetaRequestCounts;
+class BetaMessageBatchType extends /*#__PURE__*/S.Literal("message_batch") {}
+exports.BetaMessageBatchType = BetaMessageBatchType;
+class BetaMessageBatch extends /*#__PURE__*/S.Struct({
+  "archived_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "cancel_initiated_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": BetaMessageBatchProcessingStatus,
+  "request_counts": BetaRequestCounts,
+  "results_url": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": BetaMessageBatchType
+}) {}
+exports.BetaMessageBatch = BetaMessageBatch;
+class BetaListResponseMessageBatch extends /*#__PURE__*/S.Class("BetaListResponseMessageBatch")({
+  "data": /*#__PURE__*/S.Array(BetaMessageBatch),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+exports.BetaListResponseMessageBatch = BetaListResponseMessageBatch;
+class BetaMessageBatchesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesPostParams = BetaMessageBatchesPostParams;
+class BetaMessageBatchIndividualRequestParams extends /*#__PURE__*/S.Struct({
+  "custom_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": BetaCreateMessageParams
+}) {}
+exports.BetaMessageBatchIndividualRequestParams = BetaMessageBatchIndividualRequestParams;
+class BetaCreateMessageBatchParams extends /*#__PURE__*/S.Class("BetaCreateMessageBatchParams")({
+  "requests": /*#__PURE__*/S.Array(BetaMessageBatchIndividualRequestParams).pipe(/*#__PURE__*/S.minItems(1), /*#__PURE__*/S.maxItems(10000))
+}) {}
+exports.BetaCreateMessageBatchParams = BetaCreateMessageBatchParams;
+class BetaMessageBatchesRetrieveParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesRetrieveParams = BetaMessageBatchesRetrieveParams;
+class BetaMessageBatchesDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesDeleteParams = BetaMessageBatchesDeleteParams;
+class BetaDeleteMessageBatchResponseType extends /*#__PURE__*/S.Literal("message_batch_deleted") {}
+exports.BetaDeleteMessageBatchResponseType = BetaDeleteMessageBatchResponseType;
+class BetaDeleteMessageBatchResponse extends /*#__PURE__*/S.Class("BetaDeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": BetaDeleteMessageBatchResponseType
+}) {}
+exports.BetaDeleteMessageBatchResponse = BetaDeleteMessageBatchResponse;
+class BetaMessageBatchesCancelParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesCancelParams = BetaMessageBatchesCancelParams;
+class BetaMessageBatchesResultsParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessageBatchesResultsParams = BetaMessageBatchesResultsParams;
+class BetaMessagesCountTokensPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaMessagesCountTokensPostParams = BetaMessagesCountTokensPostParams;
+class BetaCountMessageTokensParams extends /*#__PURE__*/S.Class("BetaCountMessageTokensParams")({
+  "mcp_servers": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(BetaRequestMCPServerURLDefinition).pipe(/*#__PURE__*/S.maxItems(20)), {
+    nullable: true
+  }),
+  "messages": /*#__PURE__*/S.Array(BetaInputMessage),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(BetaThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(BetaToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaTool, BetaComputerUseTool20241022, BetaBashTool20241022, BetaTextEditor20241022, BetaComputerUseTool20250124, BetaBashTool20250124, BetaTextEditor20250124, BetaTextEditor20250429, BetaWebSearchTool20250305, BetaCodeExecutionTool20250522)), {
+    nullable: true
+  })
+}) {}
+exports.BetaCountMessageTokensParams = BetaCountMessageTokensParams;
+class BetaCountMessageTokensResponse extends /*#__PURE__*/S.Class("BetaCountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+exports.BetaCountMessageTokensResponse = BetaCountMessageTokensResponse;
+class BetaListFilesV1FilesGetParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaListFilesV1FilesGetParams = BetaListFilesV1FilesGetParams;
+class BetaFileMetadataSchemaType extends /*#__PURE__*/S.Literal("file") {}
+exports.BetaFileMetadataSchemaType = BetaFileMetadataSchemaType;
+class BetaFileMetadataSchema extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "downloadable": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "filename": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)),
+  "id": S.String,
+  "mime_type": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)),
+  "size_bytes": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaFileMetadataSchemaType
+}) {}
+exports.BetaFileMetadataSchema = BetaFileMetadataSchema;
+class BetaFileListResponse extends /*#__PURE__*/S.Class("BetaFileListResponse")({
+  "data": /*#__PURE__*/S.Array(BetaFileMetadataSchema),
+  "first_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "has_more": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "last_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  })
+}) {}
+exports.BetaFileListResponse = BetaFileListResponse;
+class BetaUploadFileV1FilesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaUploadFileV1FilesPostParams = BetaUploadFileV1FilesPostParams;
+class BetaGetFileMetadataV1FilesFileIdGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaGetFileMetadataV1FilesFileIdGetParams = BetaGetFileMetadataV1FilesFileIdGetParams;
+class BetaDeleteFileV1FilesFileIdDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaDeleteFileV1FilesFileIdDeleteParams = BetaDeleteFileV1FilesFileIdDeleteParams;
+class BetaFileDeleteResponseType extends /*#__PURE__*/S.Literal("file_deleted") {}
+exports.BetaFileDeleteResponseType = BetaFileDeleteResponseType;
+class BetaFileDeleteResponse extends /*#__PURE__*/S.Class("BetaFileDeleteResponse")({
+  "id": S.String,
+  "type": /*#__PURE__*/S.optionalWith(BetaFileDeleteResponseType, {
+    nullable: true
+  })
+}) {}
+exports.BetaFileDeleteResponse = BetaFileDeleteResponse;
+class BetaDownloadFileV1FilesFileIdContentGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+exports.BetaDownloadFileV1FilesFileIdContentGetParams = BetaDownloadFileV1FilesFileIdContentGetParams;
+const make = (httpClient, options = {}) => {
+  const unexpectedStatus = (request, response) => Effect.flatMap(Effect.orElseSucceed(response.text, () => "Unexpected status code"), description => Effect.fail(new HttpClientError.ResponseError({
+    request,
+    response,
+    reason: "StatusCode",
+    description
+  })));
+  const applyClientTransform = client => options.transformClient ? options.transformClient(client) : Effect.succeed(client);
+  const decodeError = (response, schema) => Effect.flatMap(HttpClientResponse.schemaBodyJson(schema)(response), Effect.fail);
+  return {
+    httpClient,
+    "messagesPost": options => HttpClientRequest.make("POST")(`/v1/messages`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(Message)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "completePost": options => HttpClientRequest.make("POST")(`/v1/complete`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined,
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(CompletionResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "modelsList": options => HttpClientRequest.make("GET")(`/v1/models`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ListResponseModelInfo)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "modelsGet": (modelId, options) => HttpClientRequest.make("GET")(`/v1/models/${modelId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ModelInfo)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesList": options => HttpClientRequest.make("GET")(`/v1/messages/batches`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ListResponseMessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesPost": options => HttpClientRequest.make("POST")(`/v1/messages/batches`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesRetrieve": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesDelete": (messageBatchId, options) => HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(DeleteMessageBatchResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesCancel": (messageBatchId, options) => HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesResults": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messagesCountTokensPost": options => HttpClientRequest.make("POST")(`/v1/messages/count_tokens`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(CountMessageTokensResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "listFilesV1FilesGet": options => HttpClientRequest.make("GET")(`/v1/files`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileListResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "uploadFileV1FilesPost": options => HttpClientRequest.make("POST")(`/v1/files`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), HttpClientRequest.bodyFormData(options.payload), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "getFileMetadataV1FilesFileIdGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "deleteFileV1FilesFileIdDelete": (fileId, options) => HttpClientRequest.make("DELETE")(`/v1/files/${fileId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileDeleteResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "downloadFileV1FilesFileIdContentGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}/content`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessagesPost": options => HttpClientRequest.make("POST")(`/v1/messages?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessage)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaModelsList": options => HttpClientRequest.make("GET")(`/v1/models?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaListResponseModelInfo)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaModelsGet": (modelId, options) => HttpClientRequest.make("GET")(`/v1/models/${modelId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaModelInfo)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesList": options => HttpClientRequest.make("GET")(`/v1/messages/batches?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaListResponseMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesPost": options => HttpClientRequest.make("POST")(`/v1/messages/batches?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesRetrieve": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesDelete": (messageBatchId, options) => HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaDeleteMessageBatchResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesCancel": (messageBatchId, options) => HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesResults": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessagesCountTokensPost": options => HttpClientRequest.make("POST")(`/v1/messages/count_tokens?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaCountMessageTokensResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaListFilesV1FilesGet": options => HttpClientRequest.make("GET")(`/v1/files?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileListResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaUploadFileV1FilesPost": options => HttpClientRequest.make("POST")(`/v1/files?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), HttpClientRequest.bodyFormData(options.payload), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaGetFileMetadataV1FilesFileIdGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaDeleteFileV1FilesFileIdDelete": (fileId, options) => HttpClientRequest.make("DELETE")(`/v1/files/${fileId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileDeleteResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaDownloadFileV1FilesFileIdContentGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}/content?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      orElse: response => unexpectedStatus(request, response)
+    })))))
+  };
+};
+exports.make = make;
+//# sourceMappingURL=Generated.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/Generated.js.map b/dist/dist/dist/cjs/Generated.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..e36f51c7c1da6598fa468c2b030f59936c2c7695
--- /dev/null
+++ b/dist/dist/dist/cjs/Generated.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"Generated.js","names":["HttpClientError","_interopRequireWildcard","require","HttpClientRequest","HttpClientResponse","Effect","S","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","MessagesPostParams","Struct","optionalWith","String","nullable","exports","Model","Literal","CacheControlEphemeralType","CacheControlEphemeral","RequestServerToolUseBlockName","RequestServerToolUseBlockType","RequestServerToolUseBlock","Union","Null","pipe","pattern","RegExp","Record","key","value","Unknown","RequestWebSearchResultBlockType","RequestWebSearchResultBlock","WebSearchToolResultErrorCode","RequestWebSearchToolResultErrorType","RequestWebSearchToolResultError","RequestWebSearchToolResultBlockType","RequestWebSearchToolResultBlock","Array","RequestCharLocationCitationType","RequestCharLocationCitation","Int","greaterThanOrEqualTo","minLength","maxLength","RequestPageLocationCitationType","RequestPageLocationCitation","RequestContentBlockLocationCitationType","RequestContentBlockLocationCitation","RequestWebSearchResultLocationCitationType","RequestWebSearchResultLocationCitation","RequestTextBlockType","RequestTextBlock","Base64ImageSourceMediaType","Base64ImageSourceType","Base64ImageSource","URLImageSourceType","URLImageSource","RequestImageBlockType","RequestImageBlock","RequestToolUseBlockType","RequestToolUseBlock","RequestToolResultBlockType","RequestToolResultBlock","Boolean","RequestCitationsConfig","Base64PDFSourceMediaType","Base64PDFSourceType","Base64PDFSource","PlainTextSourceMediaType","PlainTextSourceType","PlainTextSource","ContentBlockSourceType","ContentBlockSource","URLPDFSourceType","URLPDFSource","RequestDocumentBlockType","RequestDocumentBlock","RequestThinkingBlockType","RequestThinkingBlock","RequestRedactedThinkingBlockType","RequestRedactedThinkingBlock","InputContentBlock","InputMessageRole","InputMessage","Metadata","CreateMessageParamsServiceTier","ThinkingConfigEnabledType","ThinkingConfigEnabled","ThinkingConfigDisabledType","ThinkingConfigDisabled","ThinkingConfigParam","ToolChoiceAutoType","ToolChoiceAuto","ToolChoiceAnyType","ToolChoiceAny","ToolChoiceToolType","ToolChoiceTool","ToolChoiceNoneType","ToolChoiceNone","ToolChoice","ToolTypeEnum","InputSchemaType","InputSchema","Tool","BashTool20250124Name","BashTool20250124Type","BashTool20250124","TextEditor20250124Name","TextEditor20250124Type","TextEditor20250124","TextEditor20250429Name","TextEditor20250429Type","TextEditor20250429","WebSearchTool20250305Name","WebSearchTool20250305Type","UserLocationType","UserLocation","WebSearchTool20250305","greaterThan","CreateMessageParams","Class","Number","lessThanOrEqualTo","MessageType","MessageRole","ResponseCharLocationCitationType","ResponseCharLocationCitation","ResponsePageLocationCitationType","ResponsePageLocationCitation","ResponseContentBlockLocationCitationType","ResponseContentBlockLocationCitation","ResponseWebSearchResultLocationCitationType","ResponseWebSearchResultLocationCitation","ResponseTextBlockType","ResponseTextBlock","optional","NullOr","ResponseToolUseBlockType","ResponseToolUseBlock","ResponseServerToolUseBlockName","ResponseServerToolUseBlockType","ResponseServerToolUseBlock","ResponseWebSearchToolResultErrorType","ResponseWebSearchToolResultError","ResponseWebSearchResultBlockType","ResponseWebSearchResultBlock","ResponseWebSearchToolResultBlockType","ResponseWebSearchToolResultBlock","ResponseThinkingBlockType","ResponseThinkingBlock","ResponseRedactedThinkingBlockType","ResponseRedactedThinkingBlock","ContentBlock","StopReason","ServerToolUsage","UsageServiceTierEnum","Usage","Message","InvalidRequestErrorType","InvalidRequestError","AuthenticationErrorType","AuthenticationError","BillingErrorType","BillingError","PermissionErrorType","PermissionError","NotFoundErrorType","NotFoundError","RateLimitErrorType","RateLimitError","GatewayTimeoutErrorType","GatewayTimeoutError","APIErrorType","APIError","OverloadedErrorType","OverloadedError","ErrorResponseType","ErrorResponse","CompletePostParams","CompletionRequest","CompletionResponseType","CompletionResponse","ModelsListParams","ModelInfoType","ModelInfo","ListResponseModelInfo","ModelsGetParams","MessageBatchesListParams","MessageBatchProcessingStatus","RequestCounts","MessageBatchType","MessageBatch","ListResponseMessageBatch","MessageBatchesPostParams","MessageBatchIndividualRequestParams","CreateMessageBatchParams","minItems","maxItems","MessageBatchesRetrieveParams","MessageBatchesDeleteParams","DeleteMessageBatchResponseType","DeleteMessageBatchResponse","MessageBatchesCancelParams","MessageBatchesResultsParams","MessagesCountTokensPostParams","CountMessageTokensParams","CountMessageTokensResponse","ListFilesV1FilesGetParams","FileMetadataSchemaType","FileMetadataSchema","FileListResponse","UploadFileV1FilesPostParams","GetFileMetadataV1FilesFileIdGetParams","DeleteFileV1FilesFileIdDeleteParams","FileDeleteResponseType","FileDeleteResponse","DownloadFileV1FilesFileIdContentGetParams","BetaMessagesPostParams","BetaCacheControlEphemeralTtl","BetaCacheControlEphemeralType","BetaCacheControlEphemeral","BetaRequestServerToolUseBlockName","BetaRequestServerToolUseBlockType","BetaRequestServerToolUseBlock","BetaRequestWebSearchResultBlockType","BetaRequestWebSearchResultBlock","BetaWebSearchToolResultErrorCode","BetaRequestWebSearchToolResultErrorType","BetaRequestWebSearchToolResultError","BetaRequestWebSearchToolResultBlockType","BetaRequestWebSearchToolResultBlock","BetaCodeExecutionToolResultErrorCode","BetaRequestCodeExecutionToolResultErrorType","BetaRequestCodeExecutionToolResultError","BetaRequestCodeExecutionOutputBlockType","BetaRequestCodeExecutionOutputBlock","BetaRequestCodeExecutionResultBlockType","BetaRequestCodeExecutionResultBlock","BetaRequestCodeExecutionToolResultBlockType","BetaRequestCodeExecutionToolResultBlock","BetaRequestMCPToolUseBlockType","BetaRequestMCPToolUseBlock","BetaRequestCharLocationCitationType","BetaRequestCharLocationCitation","BetaRequestPageLocationCitationType","BetaRequestPageLocationCitation","BetaRequestContentBlockLocationCitationType","BetaRequestContentBlockLocationCitation","BetaRequestWebSearchResultLocationCitationType","BetaRequestWebSearchResultLocationCitation","BetaRequestTextBlockType","BetaRequestTextBlock","BetaRequestMCPToolResultBlockType","BetaRequestMCPToolResultBlock","BetaBase64ImageSourceMediaType","BetaBase64ImageSourceType","BetaBase64ImageSource","BetaURLImageSourceType","BetaURLImageSource","BetaFileImageSourceType","BetaFileImageSource","BetaRequestImageBlockType","BetaRequestImageBlock","BetaRequestToolUseBlockType","BetaRequestToolUseBlock","BetaRequestToolResultBlockType","BetaRequestToolResultBlock","BetaRequestCitationsConfig","BetaBase64PDFSourceMediaType","BetaBase64PDFSourceType","BetaBase64PDFSource","BetaPlainTextSourceMediaType","BetaPlainTextSourceType","BetaPlainTextSource","BetaContentBlockSourceType","BetaContentBlockSource","BetaURLPDFSourceType","BetaURLPDFSource","BetaFileDocumentSourceType","BetaFileDocumentSource","BetaRequestDocumentBlockType","BetaRequestDocumentBlock","BetaRequestThinkingBlockType","BetaRequestThinkingBlock","BetaRequestRedactedThinkingBlockType","BetaRequestRedactedThinkingBlock","BetaRequestContainerUploadBlockType","BetaRequestContainerUploadBlock","BetaInputContentBlock","BetaInputMessageRole","BetaInputMessage","BetaRequestMCPServerToolConfiguration","BetaRequestMCPServerURLDefinitionType","BetaRequestMCPServerURLDefinition","BetaMetadata","BetaCreateMessageParamsServiceTier","BetaThinkingConfigEnabledType","BetaThinkingConfigEnabled","BetaThinkingConfigDisabledType","BetaThinkingConfigDisabled","BetaThinkingConfigParam","BetaToolChoiceAutoType","BetaToolChoiceAuto","BetaToolChoiceAnyType","BetaToolChoiceAny","BetaToolChoiceToolType","BetaToolChoiceTool","BetaToolChoiceNoneType","BetaToolChoiceNone","BetaToolChoice","BetaToolTypeEnum","BetaInputSchemaType","BetaInputSchema","BetaTool","BetaComputerUseTool20241022Name","BetaComputerUseTool20241022Type","BetaComputerUseTool20241022","BetaBashTool20241022Name","BetaBashTool20241022Type","BetaBashTool20241022","BetaTextEditor20241022Name","BetaTextEditor20241022Type","BetaTextEditor20241022","BetaComputerUseTool20250124Name","BetaComputerUseTool20250124Type","BetaComputerUseTool20250124","BetaBashTool20250124Name","BetaBashTool20250124Type","BetaBashTool20250124","BetaTextEditor20250124Name","BetaTextEditor20250124Type","BetaTextEditor20250124","BetaTextEditor20250429Name","BetaTextEditor20250429Type","BetaTextEditor20250429","BetaWebSearchTool20250305Name","BetaWebSearchTool20250305Type","BetaUserLocationType","BetaUserLocation","BetaWebSearchTool20250305","BetaCodeExecutionTool20250522Name","BetaCodeExecutionTool20250522Type","BetaCodeExecutionTool20250522","BetaCreateMessageParams","BetaMessageType","BetaMessageRole","BetaResponseCharLocationCitationType","BetaResponseCharLocationCitation","BetaResponsePageLocationCitationType","BetaResponsePageLocationCitation","BetaResponseContentBlockLocationCitationType","BetaResponseContentBlockLocationCitation","BetaResponseWebSearchResultLocationCitationType","BetaResponseWebSearchResultLocationCitation","BetaResponseTextBlockType","BetaResponseTextBlock","BetaResponseToolUseBlockType","BetaResponseToolUseBlock","BetaResponseServerToolUseBlockName","BetaResponseServerToolUseBlockType","BetaResponseServerToolUseBlock","BetaResponseWebSearchToolResultErrorType","BetaResponseWebSearchToolResultError","BetaResponseWebSearchResultBlockType","BetaResponseWebSearchResultBlock","BetaResponseWebSearchToolResultBlockType","BetaResponseWebSearchToolResultBlock","BetaResponseCodeExecutionToolResultErrorType","BetaResponseCodeExecutionToolResultError","BetaResponseCodeExecutionOutputBlockType","BetaResponseCodeExecutionOutputBlock","BetaResponseCodeExecutionResultBlockType","BetaResponseCodeExecutionResultBlock","BetaResponseCodeExecutionToolResultBlockType","BetaResponseCodeExecutionToolResultBlock","BetaResponseMCPToolUseBlockType","BetaResponseMCPToolUseBlock","BetaResponseMCPToolResultBlockType","BetaResponseMCPToolResultBlock","BetaResponseContainerUploadBlockType","BetaResponseContainerUploadBlock","BetaResponseThinkingBlockType","BetaResponseThinkingBlock","BetaResponseRedactedThinkingBlockType","BetaResponseRedactedThinkingBlock","BetaContentBlock","BetaStopReason","BetaCacheCreation","BetaServerToolUsage","BetaUsageServiceTierEnum","BetaUsage","BetaContainer","BetaMessage","BetaInvalidRequestErrorType","BetaInvalidRequestError","BetaAuthenticationErrorType","BetaAuthenticationError","BetaBillingErrorType","BetaBillingError","BetaPermissionErrorType","BetaPermissionError","BetaNotFoundErrorType","BetaNotFoundError","BetaRateLimitErrorType","BetaRateLimitError","BetaGatewayTimeoutErrorType","BetaGatewayTimeoutError","BetaAPIErrorType","BetaAPIError","BetaOverloadedErrorType","BetaOverloadedError","BetaErrorResponseType","BetaErrorResponse","BetaModelsListParams","BetaModelInfoType","BetaModelInfo","BetaListResponseModelInfo","BetaModelsGetParams","BetaMessageBatchesListParams","BetaMessageBatchProcessingStatus","BetaRequestCounts","BetaMessageBatchType","BetaMessageBatch","BetaListResponseMessageBatch","BetaMessageBatchesPostParams","BetaMessageBatchIndividualRequestParams","BetaCreateMessageBatchParams","BetaMessageBatchesRetrieveParams","BetaMessageBatchesDeleteParams","BetaDeleteMessageBatchResponseType","BetaDeleteMessageBatchResponse","BetaMessageBatchesCancelParams","BetaMessageBatchesResultsParams","BetaMessagesCountTokensPostParams","BetaCountMessageTokensParams","BetaCountMessageTokensResponse","BetaListFilesV1FilesGetParams","BetaFileMetadataSchemaType","BetaFileMetadataSchema","BetaFileListResponse","BetaUploadFileV1FilesPostParams","BetaGetFileMetadataV1FilesFileIdGetParams","BetaDeleteFileV1FilesFileIdDeleteParams","BetaFileDeleteResponseType","BetaFileDeleteResponse","BetaDownloadFileV1FilesFileIdContentGetParams","make","httpClient","options","unexpectedStatus","request","response","flatMap","orElseSucceed","text","description","fail","ResponseError","reason","applyClientTransform","client","transformClient","succeed","decodeError","schema","schemaBodyJson","setHeaders","params","undefined","req","orDie","bodyJson","payload","execute","matchStatus","orElse","setUrlParams","modelsGet","modelId","messageBatchesRetrieve","messageBatchId","messageBatchesDelete","messageBatchesCancel","messageBatchesResults","bodyFormData","getFileMetadataV1FilesFileIdGet","fileId","deleteFileV1FilesFileIdDelete","downloadFileV1FilesFileIdContentGet","betaModelsGet","betaMessageBatchesRetrieve","betaMessageBatchesDelete","betaMessageBatchesCancel","betaMessageBatchesResults","betaGetFileMetadataV1FilesFileIdGet","betaDeleteFileV1FilesFileIdDelete","betaDownloadFileV1FilesFileIdContentGet"],"sources":["../../src/Generated.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/index.js b/dist/dist/dist/cjs/index.js
new file mode 100644
index 0000000000000000000000000000000000000000..21216a943d8b1a9928f67af07be7bda2df991cbd
--- /dev/null
+++ b/dist/dist/dist/cjs/index.js
@@ -0,0 +1,18 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.Generated = exports.AnthropicTokenizer = exports.AnthropicLanguageModel = exports.AnthropicConfig = exports.AnthropicClient = void 0;
+var _AnthropicClient = _interopRequireWildcard(require("./AnthropicClient.js"));
+exports.AnthropicClient = _AnthropicClient;
+var _AnthropicConfig = _interopRequireWildcard(require("./AnthropicConfig.js"));
+exports.AnthropicConfig = _AnthropicConfig;
+var _AnthropicLanguageModel = _interopRequireWildcard(require("./AnthropicLanguageModel.js"));
+exports.AnthropicLanguageModel = _AnthropicLanguageModel;
+var _AnthropicTokenizer = _interopRequireWildcard(require("./AnthropicTokenizer.js"));
+exports.AnthropicTokenizer = _AnthropicTokenizer;
+var _Generated = _interopRequireWildcard(require("./Generated.js"));
+exports.Generated = _Generated;
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/index.js.map b/dist/dist/dist/cjs/index.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..3b50aad9d52aac38d09d57e4e4856ac4896f9680
--- /dev/null
+++ b/dist/dist/dist/cjs/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","names":[],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/internal/utilities.js b/dist/dist/dist/cjs/internal/utilities.js
new file mode 100644
index 0000000000000000000000000000000000000000..7555dc3c14b0426e1b0e7b71de155a9ab9e7cc2d
--- /dev/null
+++ b/dist/dist/dist/cjs/internal/utilities.js
@@ -0,0 +1,23 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.resolveFinishReason = exports.ProviderMetadataKey = void 0;
+var Predicate = _interopRequireWildcard(require("effect/Predicate"));
+function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
+/** @internal */
+const ProviderMetadataKey = exports.ProviderMetadataKey = "@effect/ai-anthropic/AnthropicLanguageModel/ProviderMetadata";
+const finishReasonMap = {
+  end_turn: "stop",
+  max_tokens: "length",
+  stop_sequence: "stop",
+  tool_use: "tool-calls"
+};
+/** @internal */
+const resolveFinishReason = finishReason => {
+  const reason = finishReasonMap[finishReason];
+  return Predicate.isUndefined(reason) ? "unknown" : reason;
+};
+exports.resolveFinishReason = resolveFinishReason;
+//# sourceMappingURL=utilities.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/cjs/internal/utilities.js.map b/dist/dist/dist/cjs/internal/utilities.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..798016cd1562c720e9d894ae9d3bf8f427bcd6b1
--- /dev/null
+++ b/dist/dist/dist/cjs/internal/utilities.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utilities.js","names":["Predicate","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ProviderMetadataKey","exports","finishReasonMap","end_turn","max_tokens","stop_sequence","tool_use","resolveFinishReason","finishReason","reason","isUndefined"],"sources":["../../../src/internal/utilities.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,IAAAA,SAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA6C,SAAAD,wBAAAE,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAJ,uBAAA,YAAAA,CAAAE,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAE7C;AACO,MAAMkB,mBAAmB,GAAAC,OAAA,CAAAD,mBAAA,GAAG,8DAA8D;AAEjG,MAAME,eAAe,GAA4C;EAC/DC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,QAAQ;EACpBC,aAAa,EAAE,MAAM;EACrBC,QAAQ,EAAE;CACX;AAED;AACO,MAAMC,mBAAmB,GAAIC,YAAoB,IAA6B;EACnF,MAAMC,MAAM,GAAGP,eAAe,CAACM,YAAY,CAAC;EAC5C,OAAO9B,SAAS,CAACgC,WAAW,CAACD,MAAM,CAAC,GAAG,SAAS,GAAGA,MAAM;AAC3D,CAAC;AAAAR,OAAA,CAAAM,mBAAA,GAAAA,mBAAA","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/dts/AnthropicClient.d.ts b/dist/dist/dist/dts/AnthropicClient.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fee7418fe2e70b0803d9bb33602f00004b4cbd60
--- /dev/null
+++ b/dist/dist/dist/dts/AnthropicClient.d.ts
@@ -0,0 +1,72 @@
+import * as AiResponse from "@effect/ai/AiResponse";
+import * as HttpClient from "@effect/platform/HttpClient";
+import type * as HttpClientError from "@effect/platform/HttpClientError";
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest";
+import * as Config from "effect/Config";
+import type { ConfigError } from "effect/ConfigError";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import * as Layer from "effect/Layer";
+import * as Redacted from "effect/Redacted";
+import * as Stream from "effect/Stream";
+import * as Generated from "./Generated.js";
+declare const AnthropicClient_base: Context.TagClass<AnthropicClient, "@effect/ai-anthropic/AnthropicClient", AnthropicClient.Service>;
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export declare class AnthropicClient extends AnthropicClient_base {
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace AnthropicClient {
+    /**
+     * @since 1.0.0
+     * @category Models
+     */
+    interface Service {
+        readonly client: Generated.Client;
+        readonly streamRequest: <A>(request: HttpClientRequest.HttpClientRequest) => Stream.Stream<A, HttpClientError.HttpClientError>;
+        readonly stream: (request: StreamCompletionRequest) => Stream.Stream<AiResponse.AiResponse, HttpClientError.HttpClientError>;
+    }
+}
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export declare const make: (options: {
+    readonly apiKey?: Redacted.Redacted | undefined;
+    readonly apiUrl?: string | undefined;
+    readonly anthropicVersion?: string | undefined;
+    readonly organizationId?: Redacted.Redacted | undefined;
+    readonly projectId?: Redacted.Redacted | undefined;
+    readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined;
+}) => Effect.Effect<AnthropicClient.Service, never, HttpClient.HttpClient>;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layer: (options: {
+    readonly apiKey?: Redacted.Redacted | undefined;
+    readonly apiUrl?: string | undefined;
+    readonly anthropicVersion?: string | undefined;
+    readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined;
+}) => Layer.Layer<AnthropicClient, never, HttpClient.HttpClient>;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layerConfig: (options: {
+    readonly apiKey?: Config.Config<Redacted.Redacted | undefined> | undefined;
+    readonly apiUrl?: Config.Config<string | undefined> | undefined;
+    readonly anthropicVersion?: Config.Config<string | undefined> | undefined;
+    readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined;
+}) => Layer.Layer<AnthropicClient, ConfigError, HttpClient.HttpClient>;
+/**
+ * @since 1.0.0
+ * @category Models
+ */
+export type StreamCompletionRequest = Omit<typeof Generated.CreateMessageParams.Encoded, "stream">;
+export {};
+//# sourceMappingURL=AnthropicClient.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dist/dts/AnthropicClient.d.ts.map b/dist/dist/dist/dts/AnthropicClient.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..6aa8ecf5286cb6036617cb6e8c402fe97eb412b5
--- /dev/null
+++ b/dist/dist/dist/dts/AnthropicClient.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicClient.d.ts","sourceRoot":"","sources":["../../src/AnthropicClient.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dist/dist/dts/AnthropicConfig.d.ts b/dist/dist/dist/dts/AnthropicConfig.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..bcdc9c2f105450fbf533c1c3d94a6215129ae59a
--- /dev/null
+++ b/dist/dist/dist/dts/AnthropicConfig.d.ts
@@ -0,0 +1,39 @@
+/**
+ * @since 1.0.0
+ */
+import type { HttpClient } from "@effect/platform/HttpClient";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+declare const AnthropicConfig_base: Context.TagClass<AnthropicConfig, "@effect/ai-anthropic/AnthropicConfig", AnthropicConfig.Service>;
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export declare class AnthropicConfig extends AnthropicConfig_base {
+    /**
+     * @since 1.0.0
+     */
+    static readonly getOrUndefined: Effect.Effect<typeof AnthropicConfig.Service | undefined>;
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace AnthropicConfig {
+    /**
+     * @since 1.0.0
+     * @category Models
+     */
+    interface Service {
+        readonly transformClient?: (client: HttpClient) => HttpClient;
+    }
+}
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export declare const withClientTransform: {
+    (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>;
+    <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>;
+};
+export {};
+//# sourceMappingURL=AnthropicConfig.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dist/dts/AnthropicConfig.d.ts.map b/dist/dist/dist/dts/AnthropicConfig.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..3bc94d002522908b156f4992d471690284a9f619
--- /dev/null
+++ b/dist/dist/dist/dts/AnthropicConfig.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicConfig.d.ts","sourceRoot":"","sources":["../../src/AnthropicConfig.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAA;AAC7D,OAAO,KAAK,OAAO,MAAM,gBAAgB,CAAA;AACzC,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;;AAGvC;;;GAGG;AACH,qBAAa,eAAgB,SAAQ,oBAGlC;IACD;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,eAAe,CAAC,OAAO,GAAG,SAAS,CAAC,CAGxF;CACF;AAED;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,eAAe,CAAC;IACvC;;;OAGG;IACH,UAAiB,OAAO;QACtB,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,CAAA;KAC9D;CACF;AAED;;;GAGG;AACH,eAAO,MAAM,mBAAmB,EAAE;IAChC,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClH,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CAW/G,CAAA"}
\ No newline at end of file
diff --git a/dist/dist/dist/dts/AnthropicLanguageModel.d.ts b/dist/dist/dist/dts/AnthropicLanguageModel.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..e2c015069f729ed1619d990aaea616fe79f35a06
--- /dev/null
+++ b/dist/dist/dist/dts/AnthropicLanguageModel.d.ts
@@ -0,0 +1,105 @@
+import * as AiLanguageModel from "@effect/ai/AiLanguageModel";
+import * as AiModel from "@effect/ai/AiModel";
+import type * as Tokenizer from "@effect/ai/Tokenizer";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import * as Layer from "effect/Layer";
+import type { Simplify } from "effect/Types";
+import { AnthropicClient } from "./AnthropicClient.js";
+import type * as Generated from "./Generated.js";
+/**
+ * @since 1.0.0
+ * @category Models
+ */
+export type Model = typeof Generated.Model.Encoded;
+declare const Config_base: Context.TagClass<Config, "@effect/ai-anthropic/AnthropicLanguageModel/Config", Config.Service>;
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export declare class Config extends Config_base {
+    /**
+     * @since 1.0.0
+     */
+    static readonly getOrUndefined: Effect.Effect<typeof Config.Service | undefined>;
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace Config {
+    /**
+     * @since 1.0.0
+     * @category Configuration
+     */
+    interface Service extends Simplify<Partial<Omit<typeof Generated.CreateMessageParams.Encoded, "messages" | "tools" | "tool_choice" | "stream">>> {
+    }
+}
+declare const ProviderMetadata_base: Context.TagClass<ProviderMetadata, "@effect/ai-anthropic/AnthropicLanguageModel/ProviderMetadata", ProviderMetadata.Service>;
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export declare class ProviderMetadata extends ProviderMetadata_base {
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace ProviderMetadata {
+    /**
+     * @since 1.0.0
+     * @category Provider Metadata
+     */
+    interface Service {
+        /**
+         * Which custom stop sequence was generated, if any.
+         *
+         * Will be a non-null string if one of your custom stop sequences was
+         * generated.
+         */
+        readonly stopSequence?: string;
+    }
+}
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export declare const model: (model: (string & {}) | Model, config?: Omit<Config.Service, "model">) => AiModel.AiModel<AiLanguageModel.AiLanguageModel, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export declare const modelWithTokenizer: (model: (string & {}) | Model, config?: Omit<Config.Service, "model">) => AiModel.AiModel<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export declare const make: (options: {
+    readonly model: (string & {}) | Model;
+    readonly config?: Omit<Config.Service, "model">;
+}) => Effect.Effect<AiLanguageModel.AiLanguageModel.Service, never, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layer: (options: {
+    readonly model: (string & {}) | Model;
+    readonly config?: Omit<Config.Service, "model">;
+}) => Layer.Layer<AiLanguageModel.AiLanguageModel, never, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layerWithTokenizer: (options: {
+    readonly model: (string & {}) | Model;
+    readonly config?: Omit<Config.Service, "model">;
+}) => Layer.Layer<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, never, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export declare const withConfigOverride: {
+    (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>;
+    <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>;
+};
+export {};
+//# sourceMappingURL=AnthropicLanguageModel.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dist/dts/AnthropicLanguageModel.d.ts.map b/dist/dist/dist/dts/AnthropicLanguageModel.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..010e66ce6626a7016f3fe5020b094e147662e301
--- /dev/null
+++ b/dist/dist/dist/dts/AnthropicLanguageModel.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicLanguageModel.d.ts","sourceRoot":"","sources":["../../src/AnthropicLanguageModel.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dist/dist/dts/AnthropicTokenizer.d.ts b/dist/dist/dist/dts/AnthropicTokenizer.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..34dcde084bfb6bbff66c2cb05d07b83449882aeb
--- /dev/null
+++ b/dist/dist/dist/dts/AnthropicTokenizer.d.ts
@@ -0,0 +1,13 @@
+import * as Tokenizer from "@effect/ai/Tokenizer";
+import * as Layer from "effect/Layer";
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export declare const make: Tokenizer.Tokenizer.Service;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layer: Layer.Layer<Tokenizer.Tokenizer>;
+//# sourceMappingURL=AnthropicTokenizer.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dist/dts/AnthropicTokenizer.d.ts.map b/dist/dist/dist/dts/AnthropicTokenizer.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..d471a28d4e8a624e4ba2f5d2b2906712744d1e71
--- /dev/null
+++ b/dist/dist/dist/dts/AnthropicTokenizer.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicTokenizer.d.ts","sourceRoot":"","sources":["../../src/AnthropicTokenizer.ts"],"names":[],"mappings":"AAMA,OAAO,KAAK,SAAS,MAAM,sBAAsB,CAAA;AAGjD,OAAO,KAAK,KAAK,MAAM,cAAc,CAAA;AAGrC;;;GAGG;AACH,eAAO,MAAM,IAAI,6BA6Cf,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAA4C,CAAA"}
\ No newline at end of file
diff --git a/dist/dist/dist/dts/Generated.d.ts b/dist/dist/dist/dts/Generated.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..40ca2f886c4fd7886a0356f5471e50b2b8930434
--- /dev/null
+++ b/dist/dist/dist/dts/Generated.d.ts
@@ -0,0 +1,5131 @@
+/**
+ * @since 1.0.0
+ */
+import type * as HttpClient from "@effect/platform/HttpClient";
+import * as HttpClientError from "@effect/platform/HttpClientError";
+import * as Effect from "effect/Effect";
+import type { ParseError } from "effect/ParseResult";
+import * as S from "effect/Schema";
+declare const MessagesPostParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessagesPostParams extends MessagesPostParams_base {
+}
+declare const Model_base: S.Literal<["claude-3-7-sonnet-latest", "claude-3-7-sonnet-20250219", "claude-3-5-haiku-latest", "claude-3-5-haiku-20241022", "claude-sonnet-4-20250514", "claude-sonnet-4-0", "claude-4-sonnet-20250514", "claude-3-5-sonnet-latest", "claude-3-5-sonnet-20241022", "claude-3-5-sonnet-20240620", "claude-opus-4-0", "claude-opus-4-20250514", "claude-4-opus-20250514", "claude-3-opus-latest", "claude-3-opus-20240229", "claude-3-sonnet-20240229", "claude-3-haiku-20240307", "claude-2.1", "claude-2.0"]>;
+export declare class Model extends Model_base {
+}
+declare const CacheControlEphemeralType_base: S.Literal<["ephemeral"]>;
+export declare class CacheControlEphemeralType extends CacheControlEphemeralType_base {
+}
+declare const CacheControlEphemeral_base: S.Struct<{
+    type: typeof CacheControlEphemeralType;
+}>;
+export declare class CacheControlEphemeral extends CacheControlEphemeral_base {
+}
+declare const RequestServerToolUseBlockName_base: S.Literal<["web_search"]>;
+export declare class RequestServerToolUseBlockName extends RequestServerToolUseBlockName_base {
+}
+declare const RequestServerToolUseBlockType_base: S.Literal<["server_tool_use"]>;
+export declare class RequestServerToolUseBlockType extends RequestServerToolUseBlockType_base {
+}
+declare const RequestServerToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof RequestServerToolUseBlockName;
+    type: typeof RequestServerToolUseBlockType;
+}>;
+export declare class RequestServerToolUseBlock extends RequestServerToolUseBlock_base {
+}
+declare const RequestWebSearchResultBlockType_base: S.Literal<["web_search_result"]>;
+export declare class RequestWebSearchResultBlockType extends RequestWebSearchResultBlockType_base {
+}
+declare const RequestWebSearchResultBlock_base: S.Struct<{
+    encrypted_content: typeof S.String;
+    page_age: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    title: typeof S.String;
+    type: typeof RequestWebSearchResultBlockType;
+    url: typeof S.String;
+}>;
+export declare class RequestWebSearchResultBlock extends RequestWebSearchResultBlock_base {
+}
+declare const WebSearchToolResultErrorCode_base: S.Literal<["invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long"]>;
+export declare class WebSearchToolResultErrorCode extends WebSearchToolResultErrorCode_base {
+}
+declare const RequestWebSearchToolResultErrorType_base: S.Literal<["web_search_tool_result_error"]>;
+export declare class RequestWebSearchToolResultErrorType extends RequestWebSearchToolResultErrorType_base {
+}
+declare const RequestWebSearchToolResultError_base: S.Struct<{
+    error_code: typeof WebSearchToolResultErrorCode;
+    type: typeof RequestWebSearchToolResultErrorType;
+}>;
+export declare class RequestWebSearchToolResultError extends RequestWebSearchToolResultError_base {
+}
+declare const RequestWebSearchToolResultBlockType_base: S.Literal<["web_search_tool_result"]>;
+export declare class RequestWebSearchToolResultBlockType extends RequestWebSearchToolResultBlockType_base {
+}
+declare const RequestWebSearchToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.Union<[S.Array$<typeof RequestWebSearchResultBlock>, typeof RequestWebSearchToolResultError]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof RequestWebSearchToolResultBlockType;
+}>;
+export declare class RequestWebSearchToolResultBlock extends RequestWebSearchToolResultBlock_base {
+}
+declare const RequestCharLocationCitationType_base: S.Literal<["char_location"]>;
+export declare class RequestCharLocationCitationType extends RequestCharLocationCitationType_base {
+}
+declare const RequestCharLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_char_index: typeof S.Int;
+    start_char_index: S.filter<typeof S.Int>;
+    type: typeof RequestCharLocationCitationType;
+}>;
+export declare class RequestCharLocationCitation extends RequestCharLocationCitation_base {
+}
+declare const RequestPageLocationCitationType_base: S.Literal<["page_location"]>;
+export declare class RequestPageLocationCitationType extends RequestPageLocationCitationType_base {
+}
+declare const RequestPageLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_page_number: typeof S.Int;
+    start_page_number: S.filter<typeof S.Int>;
+    type: typeof RequestPageLocationCitationType;
+}>;
+export declare class RequestPageLocationCitation extends RequestPageLocationCitation_base {
+}
+declare const RequestContentBlockLocationCitationType_base: S.Literal<["content_block_location"]>;
+export declare class RequestContentBlockLocationCitationType extends RequestContentBlockLocationCitationType_base {
+}
+declare const RequestContentBlockLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_block_index: typeof S.Int;
+    start_block_index: S.filter<typeof S.Int>;
+    type: typeof RequestContentBlockLocationCitationType;
+}>;
+export declare class RequestContentBlockLocationCitation extends RequestContentBlockLocationCitation_base {
+}
+declare const RequestWebSearchResultLocationCitationType_base: S.Literal<["web_search_result_location"]>;
+export declare class RequestWebSearchResultLocationCitationType extends RequestWebSearchResultLocationCitationType_base {
+}
+declare const RequestWebSearchResultLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    encrypted_index: typeof S.String;
+    title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    type: typeof RequestWebSearchResultLocationCitationType;
+    url: S.filter<S.filter<typeof S.String>>;
+}>;
+export declare class RequestWebSearchResultLocationCitation extends RequestWebSearchResultLocationCitation_base {
+}
+declare const RequestTextBlockType_base: S.Literal<["text"]>;
+export declare class RequestTextBlockType extends RequestTextBlockType_base {
+}
+declare const RequestTextBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    citations: S.optionalWith<S.Union<[S.Array$<S.Union<[typeof RequestCharLocationCitation, typeof RequestPageLocationCitation, typeof RequestContentBlockLocationCitation, typeof RequestWebSearchResultLocationCitation]>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    text: S.filter<typeof S.String>;
+    type: typeof RequestTextBlockType;
+}>;
+export declare class RequestTextBlock extends RequestTextBlock_base {
+}
+declare const Base64ImageSourceMediaType_base: S.Literal<["image/jpeg", "image/png", "image/gif", "image/webp"]>;
+export declare class Base64ImageSourceMediaType extends Base64ImageSourceMediaType_base {
+}
+declare const Base64ImageSourceType_base: S.Literal<["base64"]>;
+export declare class Base64ImageSourceType extends Base64ImageSourceType_base {
+}
+declare const Base64ImageSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof Base64ImageSourceMediaType;
+    type: typeof Base64ImageSourceType;
+}>;
+export declare class Base64ImageSource extends Base64ImageSource_base {
+}
+declare const URLImageSourceType_base: S.Literal<["url"]>;
+export declare class URLImageSourceType extends URLImageSourceType_base {
+}
+declare const URLImageSource_base: S.Struct<{
+    type: typeof URLImageSourceType;
+    url: typeof S.String;
+}>;
+export declare class URLImageSource extends URLImageSource_base {
+}
+declare const RequestImageBlockType_base: S.Literal<["image"]>;
+export declare class RequestImageBlockType extends RequestImageBlockType_base {
+}
+declare const RequestImageBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    source: S.Union<[typeof Base64ImageSource, typeof URLImageSource]>;
+    type: typeof RequestImageBlockType;
+}>;
+export declare class RequestImageBlock extends RequestImageBlock_base {
+}
+declare const RequestToolUseBlockType_base: S.Literal<["tool_use"]>;
+export declare class RequestToolUseBlockType extends RequestToolUseBlockType_base {
+}
+declare const RequestToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: S.filter<S.filter<typeof S.String>>;
+    type: typeof RequestToolUseBlockType;
+}>;
+export declare class RequestToolUseBlock extends RequestToolUseBlock_base {
+}
+declare const RequestToolResultBlockType_base: S.Literal<["tool_result"]>;
+export declare class RequestToolResultBlockType extends RequestToolResultBlockType_base {
+}
+declare const RequestToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.optionalWith<S.Union<[typeof S.String, S.Array$<S.Union<[typeof RequestTextBlock, typeof RequestImageBlock]>>]>, {
+        nullable: true;
+    }>;
+    is_error: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof RequestToolResultBlockType;
+}>;
+export declare class RequestToolResultBlock extends RequestToolResultBlock_base {
+}
+declare const RequestCitationsConfig_base: S.Struct<{
+    enabled: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+}>;
+export declare class RequestCitationsConfig extends RequestCitationsConfig_base {
+}
+declare const Base64PDFSourceMediaType_base: S.Literal<["application/pdf"]>;
+export declare class Base64PDFSourceMediaType extends Base64PDFSourceMediaType_base {
+}
+declare const Base64PDFSourceType_base: S.Literal<["base64"]>;
+export declare class Base64PDFSourceType extends Base64PDFSourceType_base {
+}
+declare const Base64PDFSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof Base64PDFSourceMediaType;
+    type: typeof Base64PDFSourceType;
+}>;
+export declare class Base64PDFSource extends Base64PDFSource_base {
+}
+declare const PlainTextSourceMediaType_base: S.Literal<["text/plain"]>;
+export declare class PlainTextSourceMediaType extends PlainTextSourceMediaType_base {
+}
+declare const PlainTextSourceType_base: S.Literal<["text"]>;
+export declare class PlainTextSourceType extends PlainTextSourceType_base {
+}
+declare const PlainTextSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof PlainTextSourceMediaType;
+    type: typeof PlainTextSourceType;
+}>;
+export declare class PlainTextSource extends PlainTextSource_base {
+}
+declare const ContentBlockSourceType_base: S.Literal<["content"]>;
+export declare class ContentBlockSourceType extends ContentBlockSourceType_base {
+}
+declare const ContentBlockSource_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<S.Union<[typeof RequestTextBlock, typeof RequestImageBlock]>>]>;
+    type: typeof ContentBlockSourceType;
+}>;
+export declare class ContentBlockSource extends ContentBlockSource_base {
+}
+declare const URLPDFSourceType_base: S.Literal<["url"]>;
+export declare class URLPDFSourceType extends URLPDFSourceType_base {
+}
+declare const URLPDFSource_base: S.Struct<{
+    type: typeof URLPDFSourceType;
+    url: typeof S.String;
+}>;
+export declare class URLPDFSource extends URLPDFSource_base {
+}
+declare const RequestDocumentBlockType_base: S.Literal<["document"]>;
+export declare class RequestDocumentBlockType extends RequestDocumentBlockType_base {
+}
+declare const RequestDocumentBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    citations: S.optionalWith<typeof RequestCitationsConfig, {
+        nullable: true;
+    }>;
+    context: S.optionalWith<S.Union<[S.filter<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    source: S.Union<[typeof Base64PDFSource, typeof PlainTextSource, typeof ContentBlockSource, typeof URLPDFSource]>;
+    title: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof RequestDocumentBlockType;
+}>;
+export declare class RequestDocumentBlock extends RequestDocumentBlock_base {
+}
+declare const RequestThinkingBlockType_base: S.Literal<["thinking"]>;
+export declare class RequestThinkingBlockType extends RequestThinkingBlockType_base {
+}
+declare const RequestThinkingBlock_base: S.Struct<{
+    signature: typeof S.String;
+    thinking: typeof S.String;
+    type: typeof RequestThinkingBlockType;
+}>;
+export declare class RequestThinkingBlock extends RequestThinkingBlock_base {
+}
+declare const RequestRedactedThinkingBlockType_base: S.Literal<["redacted_thinking"]>;
+export declare class RequestRedactedThinkingBlockType extends RequestRedactedThinkingBlockType_base {
+}
+declare const RequestRedactedThinkingBlock_base: S.Struct<{
+    data: typeof S.String;
+    type: typeof RequestRedactedThinkingBlockType;
+}>;
+export declare class RequestRedactedThinkingBlock extends RequestRedactedThinkingBlock_base {
+}
+declare const InputContentBlock_base: S.Union<[typeof RequestServerToolUseBlock, typeof RequestWebSearchToolResultBlock, typeof RequestTextBlock, typeof RequestImageBlock, typeof RequestToolUseBlock, typeof RequestToolResultBlock, typeof RequestDocumentBlock, typeof RequestThinkingBlock, typeof RequestRedactedThinkingBlock]>;
+export declare class InputContentBlock extends InputContentBlock_base {
+}
+declare const InputMessageRole_base: S.Literal<["user", "assistant"]>;
+export declare class InputMessageRole extends InputMessageRole_base {
+}
+declare const InputMessage_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<typeof InputContentBlock>]>;
+    role: typeof InputMessageRole;
+}>;
+export declare class InputMessage extends InputMessage_base {
+}
+declare const Metadata_base: S.Struct<{
+    user_id: S.optionalWith<S.Union<[S.filter<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class Metadata extends Metadata_base {
+}
+declare const CreateMessageParamsServiceTier_base: S.Literal<["auto", "standard_only"]>;
+export declare class CreateMessageParamsServiceTier extends CreateMessageParamsServiceTier_base {
+}
+declare const ThinkingConfigEnabledType_base: S.Literal<["enabled"]>;
+export declare class ThinkingConfigEnabledType extends ThinkingConfigEnabledType_base {
+}
+declare const ThinkingConfigEnabled_base: S.Struct<{
+    budget_tokens: S.filter<typeof S.Int>;
+    type: typeof ThinkingConfigEnabledType;
+}>;
+export declare class ThinkingConfigEnabled extends ThinkingConfigEnabled_base {
+}
+declare const ThinkingConfigDisabledType_base: S.Literal<["disabled"]>;
+export declare class ThinkingConfigDisabledType extends ThinkingConfigDisabledType_base {
+}
+declare const ThinkingConfigDisabled_base: S.Struct<{
+    type: typeof ThinkingConfigDisabledType;
+}>;
+export declare class ThinkingConfigDisabled extends ThinkingConfigDisabled_base {
+}
+declare const ThinkingConfigParam_base: S.Union<[typeof ThinkingConfigEnabled, typeof ThinkingConfigDisabled]>;
+export declare class ThinkingConfigParam extends ThinkingConfigParam_base {
+}
+declare const ToolChoiceAutoType_base: S.Literal<["auto"]>;
+export declare class ToolChoiceAutoType extends ToolChoiceAutoType_base {
+}
+declare const ToolChoiceAuto_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    type: typeof ToolChoiceAutoType;
+}>;
+export declare class ToolChoiceAuto extends ToolChoiceAuto_base {
+}
+declare const ToolChoiceAnyType_base: S.Literal<["any"]>;
+export declare class ToolChoiceAnyType extends ToolChoiceAnyType_base {
+}
+declare const ToolChoiceAny_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    type: typeof ToolChoiceAnyType;
+}>;
+export declare class ToolChoiceAny extends ToolChoiceAny_base {
+}
+declare const ToolChoiceToolType_base: S.Literal<["tool"]>;
+export declare class ToolChoiceToolType extends ToolChoiceToolType_base {
+}
+declare const ToolChoiceTool_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    name: typeof S.String;
+    type: typeof ToolChoiceToolType;
+}>;
+export declare class ToolChoiceTool extends ToolChoiceTool_base {
+}
+declare const ToolChoiceNoneType_base: S.Literal<["none"]>;
+export declare class ToolChoiceNoneType extends ToolChoiceNoneType_base {
+}
+declare const ToolChoiceNone_base: S.Struct<{
+    type: typeof ToolChoiceNoneType;
+}>;
+export declare class ToolChoiceNone extends ToolChoiceNone_base {
+}
+declare const ToolChoice_base: S.Union<[typeof ToolChoiceAuto, typeof ToolChoiceAny, typeof ToolChoiceTool, typeof ToolChoiceNone]>;
+export declare class ToolChoice extends ToolChoice_base {
+}
+declare const ToolTypeEnum_base: S.Literal<["custom"]>;
+export declare class ToolTypeEnum extends ToolTypeEnum_base {
+}
+declare const InputSchemaType_base: S.Literal<["object"]>;
+export declare class InputSchemaType extends InputSchemaType_base {
+}
+declare const InputSchema_base: S.Struct<{
+    properties: S.optionalWith<S.Union<[S.Record$<typeof S.String, typeof S.Unknown>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    required: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof InputSchemaType;
+}>;
+export declare class InputSchema extends InputSchema_base {
+}
+declare const Tool_base: S.Struct<{
+    type: S.optionalWith<S.Union<[typeof S.Null, typeof ToolTypeEnum]>, {
+        nullable: true;
+    }>;
+    description: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    name: S.filter<S.filter<S.filter<typeof S.String>>>;
+    input_schema: typeof InputSchema;
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class Tool extends Tool_base {
+}
+declare const BashTool20250124Name_base: S.Literal<["bash"]>;
+export declare class BashTool20250124Name extends BashTool20250124Name_base {
+}
+declare const BashTool20250124Type_base: S.Literal<["bash_20250124"]>;
+export declare class BashTool20250124Type extends BashTool20250124Type_base {
+}
+declare const BashTool20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BashTool20250124Name;
+    type: typeof BashTool20250124Type;
+}>;
+export declare class BashTool20250124 extends BashTool20250124_base {
+}
+declare const TextEditor20250124Name_base: S.Literal<["str_replace_editor"]>;
+export declare class TextEditor20250124Name extends TextEditor20250124Name_base {
+}
+declare const TextEditor20250124Type_base: S.Literal<["text_editor_20250124"]>;
+export declare class TextEditor20250124Type extends TextEditor20250124Type_base {
+}
+declare const TextEditor20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof TextEditor20250124Name;
+    type: typeof TextEditor20250124Type;
+}>;
+export declare class TextEditor20250124 extends TextEditor20250124_base {
+}
+declare const TextEditor20250429Name_base: S.Literal<["str_replace_based_edit_tool"]>;
+export declare class TextEditor20250429Name extends TextEditor20250429Name_base {
+}
+declare const TextEditor20250429Type_base: S.Literal<["text_editor_20250429"]>;
+export declare class TextEditor20250429Type extends TextEditor20250429Type_base {
+}
+declare const TextEditor20250429_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof TextEditor20250429Name;
+    type: typeof TextEditor20250429Type;
+}>;
+export declare class TextEditor20250429 extends TextEditor20250429_base {
+}
+declare const WebSearchTool20250305Name_base: S.Literal<["web_search"]>;
+export declare class WebSearchTool20250305Name extends WebSearchTool20250305Name_base {
+}
+declare const WebSearchTool20250305Type_base: S.Literal<["web_search_20250305"]>;
+export declare class WebSearchTool20250305Type extends WebSearchTool20250305Type_base {
+}
+declare const UserLocationType_base: S.Literal<["approximate"]>;
+export declare class UserLocationType extends UserLocationType_base {
+}
+declare const UserLocation_base: S.Struct<{
+    city: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    country: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    region: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    timezone: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof UserLocationType;
+}>;
+export declare class UserLocation extends UserLocation_base {
+}
+declare const WebSearchTool20250305_base: S.Struct<{
+    allowed_domains: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    blocked_domains: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    max_uses: S.optionalWith<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof WebSearchTool20250305Name;
+    type: typeof WebSearchTool20250305Type;
+    user_location: S.optionalWith<S.Union<[typeof UserLocation, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class WebSearchTool20250305 extends WebSearchTool20250305_base {
+}
+declare const CreateMessageParams_base: S.Class<CreateMessageParams, {
+    model: S.Union<[typeof S.String, typeof Model]>;
+    messages: S.Array$<typeof InputMessage>;
+    max_tokens: S.filter<typeof S.Int>;
+    metadata: S.optionalWith<typeof Metadata, {
+        nullable: true;
+    }>;
+    service_tier: S.optionalWith<typeof CreateMessageParamsServiceTier, {
+        nullable: true;
+    }>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof RequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof ThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof ToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof Tool, typeof BashTool20250124, typeof TextEditor20250124, typeof TextEditor20250429, typeof WebSearchTool20250305]>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    model: S.Union<[typeof S.String, typeof Model]>;
+    messages: S.Array$<typeof InputMessage>;
+    max_tokens: S.filter<typeof S.Int>;
+    metadata: S.optionalWith<typeof Metadata, {
+        nullable: true;
+    }>;
+    service_tier: S.optionalWith<typeof CreateMessageParamsServiceTier, {
+        nullable: true;
+    }>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof RequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof ThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof ToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof Tool, typeof BashTool20250124, typeof TextEditor20250124, typeof TextEditor20250429, typeof WebSearchTool20250305]>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly thinking?: {
+        readonly type: "enabled";
+        readonly budget_tokens: number;
+    } | {
+        readonly type: "disabled";
+    } | undefined;
+} & {
+    readonly model: string;
+} & {
+    readonly messages: readonly {
+        readonly content: string | readonly ({
+            readonly type: "server_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: "web_search";
+        } | {
+            readonly type: "web_search_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly content: {
+                readonly type: "web_search_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+            } | readonly {
+                readonly type: "web_search_result";
+                readonly encrypted_content: string;
+                readonly page_age?: string | null | undefined;
+                readonly title: string;
+                readonly url: string;
+            }[];
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "text";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        } | {
+            readonly type: "image";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            };
+        } | {
+            readonly type: "tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+        } | {
+            readonly type: "tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly content?: string | readonly ({
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            } | {
+                readonly type: "image";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                } | null | undefined;
+                readonly source: {
+                    readonly type: "base64";
+                    readonly data: string;
+                    readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                } | {
+                    readonly type: "url";
+                    readonly url: string;
+                };
+            })[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "document";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly title?: string | null | undefined;
+            readonly citations?: {
+                readonly enabled?: boolean | undefined;
+            } | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "application/pdf";
+            } | {
+                readonly type: "text";
+                readonly data: string;
+                readonly media_type: "text/plain";
+            } | {
+                readonly type: "content";
+                readonly content: string | readonly ({
+                    readonly type: "text";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                    } | null | undefined;
+                    readonly text: string;
+                    readonly citations?: readonly ({
+                        readonly type: "char_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_char_index: number;
+                        readonly start_char_index: number;
+                    } | {
+                        readonly type: "page_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_page_number: number;
+                        readonly start_page_number: number;
+                    } | {
+                        readonly type: "content_block_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_block_index: number;
+                        readonly start_block_index: number;
+                    } | {
+                        readonly type: "web_search_result_location";
+                        readonly title: string | null;
+                        readonly url: string;
+                        readonly cited_text: string;
+                        readonly encrypted_index: string;
+                    })[] | null | undefined;
+                } | {
+                    readonly type: "image";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                    } | null | undefined;
+                    readonly source: {
+                        readonly type: "base64";
+                        readonly data: string;
+                        readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                    } | {
+                        readonly type: "url";
+                        readonly url: string;
+                    };
+                })[];
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            };
+            readonly context?: string | null | undefined;
+        } | {
+            readonly type: "thinking";
+            readonly thinking: string;
+            readonly signature: string;
+        } | {
+            readonly type: "redacted_thinking";
+            readonly data: string;
+        })[];
+        readonly role: "user" | "assistant";
+    }[];
+} & {
+    readonly max_tokens: number;
+} & {
+    readonly metadata?: {
+        readonly user_id?: string | null | undefined;
+    } | undefined;
+} & {
+    readonly service_tier?: "auto" | "standard_only" | undefined;
+} & {
+    readonly stop_sequences?: readonly string[] | undefined;
+} & {
+    readonly stream?: boolean | undefined;
+} & {
+    readonly system?: string | readonly {
+        readonly type: "text";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    }[] | undefined;
+} & {
+    readonly temperature?: number | undefined;
+} & {
+    readonly tool_choice?: {
+        readonly type: "auto";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "any";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "tool";
+        readonly name: string;
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "none";
+    } | undefined;
+} & {
+    readonly tools?: readonly ({
+        readonly type?: "custom" | null | undefined;
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: string;
+        readonly description?: string | undefined;
+        readonly input_schema: {
+            readonly type: "object";
+            readonly properties?: {
+                readonly [x: string]: unknown;
+            } | null | undefined;
+            readonly required?: readonly string[] | null | undefined;
+        };
+    } | {
+        readonly type: "bash_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "text_editor_20250429";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "str_replace_based_edit_tool";
+    } | {
+        readonly type: "web_search_20250305";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "web_search";
+        readonly allowed_domains?: readonly string[] | null | undefined;
+        readonly blocked_domains?: readonly string[] | null | undefined;
+        readonly max_uses?: number | null | undefined;
+        readonly user_location?: {
+            readonly type: "approximate";
+            readonly city?: string | null | undefined;
+            readonly country?: string | null | undefined;
+            readonly region?: string | null | undefined;
+            readonly timezone?: string | null | undefined;
+        } | null | undefined;
+    })[] | undefined;
+} & {
+    readonly top_k?: number | undefined;
+} & {
+    readonly top_p?: number | undefined;
+}, {}, {}>;
+export declare class CreateMessageParams extends CreateMessageParams_base {
+}
+declare const MessageType_base: S.Literal<["message"]>;
+export declare class MessageType extends MessageType_base {
+}
+declare const MessageRole_base: S.Literal<["assistant"]>;
+export declare class MessageRole extends MessageRole_base {
+}
+declare const ResponseCharLocationCitationType_base: S.Literal<["char_location"]>;
+export declare class ResponseCharLocationCitationType extends ResponseCharLocationCitationType_base {
+}
+declare const ResponseCharLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_char_index: typeof S.Int;
+    start_char_index: S.filter<typeof S.Int>;
+    type: typeof ResponseCharLocationCitationType;
+}>;
+export declare class ResponseCharLocationCitation extends ResponseCharLocationCitation_base {
+}
+declare const ResponsePageLocationCitationType_base: S.Literal<["page_location"]>;
+export declare class ResponsePageLocationCitationType extends ResponsePageLocationCitationType_base {
+}
+declare const ResponsePageLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_page_number: typeof S.Int;
+    start_page_number: S.filter<typeof S.Int>;
+    type: typeof ResponsePageLocationCitationType;
+}>;
+export declare class ResponsePageLocationCitation extends ResponsePageLocationCitation_base {
+}
+declare const ResponseContentBlockLocationCitationType_base: S.Literal<["content_block_location"]>;
+export declare class ResponseContentBlockLocationCitationType extends ResponseContentBlockLocationCitationType_base {
+}
+declare const ResponseContentBlockLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_block_index: typeof S.Int;
+    start_block_index: S.filter<typeof S.Int>;
+    type: typeof ResponseContentBlockLocationCitationType;
+}>;
+export declare class ResponseContentBlockLocationCitation extends ResponseContentBlockLocationCitation_base {
+}
+declare const ResponseWebSearchResultLocationCitationType_base: S.Literal<["web_search_result_location"]>;
+export declare class ResponseWebSearchResultLocationCitationType extends ResponseWebSearchResultLocationCitationType_base {
+}
+declare const ResponseWebSearchResultLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    encrypted_index: typeof S.String;
+    title: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof ResponseWebSearchResultLocationCitationType;
+    url: typeof S.String;
+}>;
+export declare class ResponseWebSearchResultLocationCitation extends ResponseWebSearchResultLocationCitation_base {
+}
+declare const ResponseTextBlockType_base: S.Literal<["text"]>;
+export declare class ResponseTextBlockType extends ResponseTextBlockType_base {
+}
+declare const ResponseTextBlock_base: S.Struct<{
+    citations: S.optional<S.NullOr<S.Array$<S.Union<[typeof ResponseCharLocationCitation, typeof ResponsePageLocationCitation, typeof ResponseContentBlockLocationCitation, typeof ResponseWebSearchResultLocationCitation]>>>>;
+    text: S.filter<S.filter<typeof S.String>>;
+    type: typeof ResponseTextBlockType;
+}>;
+export declare class ResponseTextBlock extends ResponseTextBlock_base {
+}
+declare const ResponseToolUseBlockType_base: S.Literal<["tool_use"]>;
+export declare class ResponseToolUseBlockType extends ResponseToolUseBlockType_base {
+}
+declare const ResponseToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: S.filter<typeof S.String>;
+    type: typeof ResponseToolUseBlockType;
+}>;
+export declare class ResponseToolUseBlock extends ResponseToolUseBlock_base {
+}
+declare const ResponseServerToolUseBlockName_base: S.Literal<["web_search"]>;
+export declare class ResponseServerToolUseBlockName extends ResponseServerToolUseBlockName_base {
+}
+declare const ResponseServerToolUseBlockType_base: S.Literal<["server_tool_use"]>;
+export declare class ResponseServerToolUseBlockType extends ResponseServerToolUseBlockType_base {
+}
+declare const ResponseServerToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof ResponseServerToolUseBlockName;
+    type: typeof ResponseServerToolUseBlockType;
+}>;
+export declare class ResponseServerToolUseBlock extends ResponseServerToolUseBlock_base {
+}
+declare const ResponseWebSearchToolResultErrorType_base: S.Literal<["web_search_tool_result_error"]>;
+export declare class ResponseWebSearchToolResultErrorType extends ResponseWebSearchToolResultErrorType_base {
+}
+declare const ResponseWebSearchToolResultError_base: S.Struct<{
+    error_code: typeof WebSearchToolResultErrorCode;
+    type: typeof ResponseWebSearchToolResultErrorType;
+}>;
+export declare class ResponseWebSearchToolResultError extends ResponseWebSearchToolResultError_base {
+}
+declare const ResponseWebSearchResultBlockType_base: S.Literal<["web_search_result"]>;
+export declare class ResponseWebSearchResultBlockType extends ResponseWebSearchResultBlockType_base {
+}
+declare const ResponseWebSearchResultBlock_base: S.Struct<{
+    encrypted_content: typeof S.String;
+    page_age: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    title: typeof S.String;
+    type: typeof ResponseWebSearchResultBlockType;
+    url: typeof S.String;
+}>;
+export declare class ResponseWebSearchResultBlock extends ResponseWebSearchResultBlock_base {
+}
+declare const ResponseWebSearchToolResultBlockType_base: S.Literal<["web_search_tool_result"]>;
+export declare class ResponseWebSearchToolResultBlockType extends ResponseWebSearchToolResultBlockType_base {
+}
+declare const ResponseWebSearchToolResultBlock_base: S.Struct<{
+    content: S.Union<[typeof ResponseWebSearchToolResultError, S.Array$<typeof ResponseWebSearchResultBlock>]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof ResponseWebSearchToolResultBlockType;
+}>;
+export declare class ResponseWebSearchToolResultBlock extends ResponseWebSearchToolResultBlock_base {
+}
+declare const ResponseThinkingBlockType_base: S.Literal<["thinking"]>;
+export declare class ResponseThinkingBlockType extends ResponseThinkingBlockType_base {
+}
+declare const ResponseThinkingBlock_base: S.Struct<{
+    signature: typeof S.String;
+    thinking: typeof S.String;
+    type: typeof ResponseThinkingBlockType;
+}>;
+export declare class ResponseThinkingBlock extends ResponseThinkingBlock_base {
+}
+declare const ResponseRedactedThinkingBlockType_base: S.Literal<["redacted_thinking"]>;
+export declare class ResponseRedactedThinkingBlockType extends ResponseRedactedThinkingBlockType_base {
+}
+declare const ResponseRedactedThinkingBlock_base: S.Struct<{
+    data: typeof S.String;
+    type: typeof ResponseRedactedThinkingBlockType;
+}>;
+export declare class ResponseRedactedThinkingBlock extends ResponseRedactedThinkingBlock_base {
+}
+declare const ContentBlock_base: S.Union<[typeof ResponseTextBlock, typeof ResponseToolUseBlock, typeof ResponseServerToolUseBlock, typeof ResponseWebSearchToolResultBlock, typeof ResponseThinkingBlock, typeof ResponseRedactedThinkingBlock]>;
+export declare class ContentBlock extends ContentBlock_base {
+}
+declare const StopReason_base: S.Literal<["end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal"]>;
+export declare class StopReason extends StopReason_base {
+}
+declare const ServerToolUsage_base: S.Struct<{
+    web_search_requests: S.filter<typeof S.Int>;
+}>;
+export declare class ServerToolUsage extends ServerToolUsage_base {
+}
+declare const UsageServiceTierEnum_base: S.Literal<["standard", "priority", "batch"]>;
+export declare class UsageServiceTierEnum extends UsageServiceTierEnum_base {
+}
+declare const Usage_base: S.Struct<{
+    cache_creation_input_tokens: S.NullOr<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>>;
+    cache_read_input_tokens: S.NullOr<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>>;
+    input_tokens: S.filter<typeof S.Int>;
+    output_tokens: S.filter<typeof S.Int>;
+    server_tool_use: S.optional<S.NullOr<typeof ServerToolUsage>>;
+    service_tier: S.NullOr<S.Union<[typeof UsageServiceTierEnum, typeof S.Null]>>;
+}>;
+export declare class Usage extends Usage_base {
+}
+declare const Message_base: S.Class<Message, {
+    id: typeof S.String;
+    type: typeof MessageType;
+    role: typeof MessageRole;
+    content: S.Array$<typeof ContentBlock>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof StopReason, typeof S.Null]>;
+    stop_sequence: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    usage: typeof Usage;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: typeof MessageType;
+    role: typeof MessageRole;
+    content: S.Array$<typeof ContentBlock>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof StopReason, typeof S.Null]>;
+    stop_sequence: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    usage: typeof Usage;
+}>, never, {
+    readonly type: "message";
+} & {
+    readonly id: string;
+} & {
+    readonly content: readonly ({
+        readonly type: "text";
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    } | {
+        readonly type: "tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: string;
+    } | {
+        readonly type: "server_tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: "web_search";
+    } | {
+        readonly type: "web_search_tool_result";
+        readonly content: {
+            readonly type: "web_search_tool_result_error";
+            readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+        } | readonly {
+            readonly type: "web_search_result";
+            readonly encrypted_content: string;
+            readonly page_age: string | null;
+            readonly title: string;
+            readonly url: string;
+        }[];
+        readonly tool_use_id: string;
+    } | {
+        readonly type: "thinking";
+        readonly thinking: string;
+        readonly signature: string;
+    } | {
+        readonly type: "redacted_thinking";
+        readonly data: string;
+    })[];
+} & {
+    readonly role: "assistant";
+} & {
+    readonly model: string;
+} & {
+    readonly stop_sequence: string | null;
+} & {
+    readonly usage: {
+        readonly server_tool_use?: {
+            readonly web_search_requests: number;
+        } | null | undefined;
+        readonly service_tier: "standard" | "priority" | "batch" | null;
+        readonly cache_creation_input_tokens: number | null;
+        readonly cache_read_input_tokens: number | null;
+        readonly input_tokens: number;
+        readonly output_tokens: number;
+    };
+} & {
+    readonly stop_reason: "tool_use" | "max_tokens" | "end_turn" | "stop_sequence" | "pause_turn" | "refusal" | null;
+}, {}, {}>;
+export declare class Message extends Message_base {
+}
+declare const InvalidRequestErrorType_base: S.Literal<["invalid_request_error"]>;
+export declare class InvalidRequestErrorType extends InvalidRequestErrorType_base {
+}
+declare const InvalidRequestError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof InvalidRequestErrorType;
+}>;
+export declare class InvalidRequestError extends InvalidRequestError_base {
+}
+declare const AuthenticationErrorType_base: S.Literal<["authentication_error"]>;
+export declare class AuthenticationErrorType extends AuthenticationErrorType_base {
+}
+declare const AuthenticationError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof AuthenticationErrorType;
+}>;
+export declare class AuthenticationError extends AuthenticationError_base {
+}
+declare const BillingErrorType_base: S.Literal<["billing_error"]>;
+export declare class BillingErrorType extends BillingErrorType_base {
+}
+declare const BillingError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BillingErrorType;
+}>;
+export declare class BillingError extends BillingError_base {
+}
+declare const PermissionErrorType_base: S.Literal<["permission_error"]>;
+export declare class PermissionErrorType extends PermissionErrorType_base {
+}
+declare const PermissionError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof PermissionErrorType;
+}>;
+export declare class PermissionError extends PermissionError_base {
+}
+declare const NotFoundErrorType_base: S.Literal<["not_found_error"]>;
+export declare class NotFoundErrorType extends NotFoundErrorType_base {
+}
+declare const NotFoundError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof NotFoundErrorType;
+}>;
+export declare class NotFoundError extends NotFoundError_base {
+}
+declare const RateLimitErrorType_base: S.Literal<["rate_limit_error"]>;
+export declare class RateLimitErrorType extends RateLimitErrorType_base {
+}
+declare const RateLimitError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof RateLimitErrorType;
+}>;
+export declare class RateLimitError extends RateLimitError_base {
+}
+declare const GatewayTimeoutErrorType_base: S.Literal<["timeout_error"]>;
+export declare class GatewayTimeoutErrorType extends GatewayTimeoutErrorType_base {
+}
+declare const GatewayTimeoutError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof GatewayTimeoutErrorType;
+}>;
+export declare class GatewayTimeoutError extends GatewayTimeoutError_base {
+}
+declare const APIErrorType_base: S.Literal<["api_error"]>;
+export declare class APIErrorType extends APIErrorType_base {
+}
+declare const APIError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof APIErrorType;
+}>;
+export declare class APIError extends APIError_base {
+}
+declare const OverloadedErrorType_base: S.Literal<["overloaded_error"]>;
+export declare class OverloadedErrorType extends OverloadedErrorType_base {
+}
+declare const OverloadedError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof OverloadedErrorType;
+}>;
+export declare class OverloadedError extends OverloadedError_base {
+}
+declare const ErrorResponseType_base: S.Literal<["error"]>;
+export declare class ErrorResponseType extends ErrorResponseType_base {
+}
+declare const ErrorResponse_base: S.Class<ErrorResponse, {
+    error: S.Union<[typeof InvalidRequestError, typeof AuthenticationError, typeof BillingError, typeof PermissionError, typeof NotFoundError, typeof RateLimitError, typeof GatewayTimeoutError, typeof APIError, typeof OverloadedError]>;
+    type: typeof ErrorResponseType;
+}, S.Struct.Encoded<{
+    error: S.Union<[typeof InvalidRequestError, typeof AuthenticationError, typeof BillingError, typeof PermissionError, typeof NotFoundError, typeof RateLimitError, typeof GatewayTimeoutError, typeof APIError, typeof OverloadedError]>;
+    type: typeof ErrorResponseType;
+}>, never, {
+    readonly type: "error";
+} & {
+    readonly error: {
+        readonly type: "invalid_request_error";
+        readonly message: string;
+    } | {
+        readonly type: "authentication_error";
+        readonly message: string;
+    } | {
+        readonly type: "billing_error";
+        readonly message: string;
+    } | {
+        readonly type: "permission_error";
+        readonly message: string;
+    } | {
+        readonly type: "not_found_error";
+        readonly message: string;
+    } | {
+        readonly type: "rate_limit_error";
+        readonly message: string;
+    } | {
+        readonly type: "timeout_error";
+        readonly message: string;
+    } | {
+        readonly type: "api_error";
+        readonly message: string;
+    } | {
+        readonly type: "overloaded_error";
+        readonly message: string;
+    };
+}, {}, {}>;
+export declare class ErrorResponse extends ErrorResponse_base {
+}
+declare const CompletePostParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class CompletePostParams extends CompletePostParams_base {
+}
+declare const CompletionRequest_base: S.Class<CompletionRequest, {
+    model: S.Union<[typeof S.String, typeof Model]>;
+    prompt: S.filter<typeof S.String>;
+    max_tokens_to_sample: S.filter<typeof S.Int>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    metadata: S.optionalWith<typeof Metadata, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    model: S.Union<[typeof S.String, typeof Model]>;
+    prompt: S.filter<typeof S.String>;
+    max_tokens_to_sample: S.filter<typeof S.Int>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    metadata: S.optionalWith<typeof Metadata, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly model: string;
+} & {
+    readonly metadata?: {
+        readonly user_id?: string | null | undefined;
+    } | undefined;
+} & {
+    readonly stop_sequences?: readonly string[] | undefined;
+} & {
+    readonly stream?: boolean | undefined;
+} & {
+    readonly temperature?: number | undefined;
+} & {
+    readonly top_k?: number | undefined;
+} & {
+    readonly top_p?: number | undefined;
+} & {
+    readonly prompt: string;
+} & {
+    readonly max_tokens_to_sample: number;
+}, {}, {}>;
+export declare class CompletionRequest extends CompletionRequest_base {
+}
+declare const CompletionResponseType_base: S.Literal<["completion"]>;
+export declare class CompletionResponseType extends CompletionResponseType_base {
+}
+declare const CompletionResponse_base: S.Class<CompletionResponse, {
+    completion: typeof S.String;
+    id: typeof S.String;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof CompletionResponseType;
+}, S.Struct.Encoded<{
+    completion: typeof S.String;
+    id: typeof S.String;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof CompletionResponseType;
+}>, never, {
+    readonly type: "completion";
+} & {
+    readonly id: string;
+} & {
+    readonly model: string;
+} & {
+    readonly stop_reason: string | null;
+} & {
+    readonly completion: string;
+}, {}, {}>;
+export declare class CompletionResponse extends CompletionResponse_base {
+}
+declare const ModelsListParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class ModelsListParams extends ModelsListParams_base {
+}
+declare const ModelInfoType_base: S.Literal<["model"]>;
+export declare class ModelInfoType extends ModelInfoType_base {
+}
+declare const ModelInfo_base: S.Struct<{
+    created_at: typeof S.String;
+    display_name: typeof S.String;
+    id: typeof S.String;
+    type: typeof ModelInfoType;
+}>;
+export declare class ModelInfo extends ModelInfo_base {
+}
+declare const ListResponseModelInfo_base: S.Class<ListResponseModelInfo, {
+    data: S.Array$<typeof ModelInfo>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof ModelInfo>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "model";
+        readonly id: string;
+        readonly created_at: string;
+        readonly display_name: string;
+    }[];
+} & {
+    readonly has_more: boolean;
+} & {
+    readonly first_id: string | null;
+} & {
+    readonly last_id: string | null;
+}, {}, {}>;
+export declare class ListResponseModelInfo extends ListResponseModelInfo_base {
+}
+declare const ModelsGetParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class ModelsGetParams extends ModelsGetParams_base {
+}
+declare const MessageBatchesListParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesListParams extends MessageBatchesListParams_base {
+}
+declare const MessageBatchProcessingStatus_base: S.Literal<["in_progress", "canceling", "ended"]>;
+export declare class MessageBatchProcessingStatus extends MessageBatchProcessingStatus_base {
+}
+declare const RequestCounts_base: S.Struct<{
+    canceled: typeof S.Int;
+    errored: typeof S.Int;
+    expired: typeof S.Int;
+    processing: typeof S.Int;
+    succeeded: typeof S.Int;
+}>;
+export declare class RequestCounts extends RequestCounts_base {
+}
+declare const MessageBatchType_base: S.Literal<["message_batch"]>;
+export declare class MessageBatchType extends MessageBatchType_base {
+}
+declare const MessageBatch_base: S.Struct<{
+    archived_at: S.Union<[typeof S.String, typeof S.Null]>;
+    cancel_initiated_at: S.Union<[typeof S.String, typeof S.Null]>;
+    created_at: typeof S.String;
+    ended_at: S.Union<[typeof S.String, typeof S.Null]>;
+    expires_at: typeof S.String;
+    id: typeof S.String;
+    processing_status: typeof MessageBatchProcessingStatus;
+    request_counts: typeof RequestCounts;
+    results_url: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof MessageBatchType;
+}>;
+export declare class MessageBatch extends MessageBatch_base {
+}
+declare const ListResponseMessageBatch_base: S.Class<ListResponseMessageBatch, {
+    data: S.Array$<typeof MessageBatch>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof MessageBatch>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "message_batch";
+        readonly id: string;
+        readonly created_at: string;
+        readonly archived_at: string | null;
+        readonly cancel_initiated_at: string | null;
+        readonly ended_at: string | null;
+        readonly expires_at: string;
+        readonly processing_status: "in_progress" | "canceling" | "ended";
+        readonly request_counts: {
+            readonly canceled: number;
+            readonly errored: number;
+            readonly expired: number;
+            readonly processing: number;
+            readonly succeeded: number;
+        };
+        readonly results_url: string | null;
+    }[];
+} & {
+    readonly has_more: boolean;
+} & {
+    readonly first_id: string | null;
+} & {
+    readonly last_id: string | null;
+}, {}, {}>;
+export declare class ListResponseMessageBatch extends ListResponseMessageBatch_base {
+}
+declare const MessageBatchesPostParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesPostParams extends MessageBatchesPostParams_base {
+}
+declare const MessageBatchIndividualRequestParams_base: S.Struct<{
+    custom_id: S.filter<S.filter<S.filter<typeof S.String>>>;
+    params: typeof CreateMessageParams;
+}>;
+export declare class MessageBatchIndividualRequestParams extends MessageBatchIndividualRequestParams_base {
+}
+declare const CreateMessageBatchParams_base: S.Class<CreateMessageBatchParams, {
+    requests: S.filter<S.filter<S.Array$<typeof MessageBatchIndividualRequestParams>>>;
+}, S.Struct.Encoded<{
+    requests: S.filter<S.filter<S.Array$<typeof MessageBatchIndividualRequestParams>>>;
+}>, never, {
+    readonly requests: readonly {
+        readonly custom_id: string;
+        readonly params: CreateMessageParams;
+    }[];
+}, {}, {}>;
+export declare class CreateMessageBatchParams extends CreateMessageBatchParams_base {
+}
+declare const MessageBatchesRetrieveParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesRetrieveParams extends MessageBatchesRetrieveParams_base {
+}
+declare const MessageBatchesDeleteParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesDeleteParams extends MessageBatchesDeleteParams_base {
+}
+declare const DeleteMessageBatchResponseType_base: S.Literal<["message_batch_deleted"]>;
+export declare class DeleteMessageBatchResponseType extends DeleteMessageBatchResponseType_base {
+}
+declare const DeleteMessageBatchResponse_base: S.Class<DeleteMessageBatchResponse, {
+    id: typeof S.String;
+    type: typeof DeleteMessageBatchResponseType;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: typeof DeleteMessageBatchResponseType;
+}>, never, {
+    readonly type: "message_batch_deleted";
+} & {
+    readonly id: string;
+}, {}, {}>;
+export declare class DeleteMessageBatchResponse extends DeleteMessageBatchResponse_base {
+}
+declare const MessageBatchesCancelParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesCancelParams extends MessageBatchesCancelParams_base {
+}
+declare const MessageBatchesResultsParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesResultsParams extends MessageBatchesResultsParams_base {
+}
+declare const MessagesCountTokensPostParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessagesCountTokensPostParams extends MessagesCountTokensPostParams_base {
+}
+declare const CountMessageTokensParams_base: S.Class<CountMessageTokensParams, {
+    messages: S.Array$<typeof InputMessage>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof RequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof ThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof ToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof Tool, typeof BashTool20250124, typeof TextEditor20250124, typeof TextEditor20250429, typeof WebSearchTool20250305]>>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    messages: S.Array$<typeof InputMessage>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof RequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof ThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof ToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof Tool, typeof BashTool20250124, typeof TextEditor20250124, typeof TextEditor20250429, typeof WebSearchTool20250305]>>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly thinking?: {
+        readonly type: "enabled";
+        readonly budget_tokens: number;
+    } | {
+        readonly type: "disabled";
+    } | undefined;
+} & {
+    readonly model: string;
+} & {
+    readonly messages: readonly {
+        readonly content: string | readonly ({
+            readonly type: "server_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: "web_search";
+        } | {
+            readonly type: "web_search_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly content: {
+                readonly type: "web_search_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+            } | readonly {
+                readonly type: "web_search_result";
+                readonly encrypted_content: string;
+                readonly page_age?: string | null | undefined;
+                readonly title: string;
+                readonly url: string;
+            }[];
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "text";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        } | {
+            readonly type: "image";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            };
+        } | {
+            readonly type: "tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+        } | {
+            readonly type: "tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly content?: string | readonly ({
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            } | {
+                readonly type: "image";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                } | null | undefined;
+                readonly source: {
+                    readonly type: "base64";
+                    readonly data: string;
+                    readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                } | {
+                    readonly type: "url";
+                    readonly url: string;
+                };
+            })[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "document";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly title?: string | null | undefined;
+            readonly citations?: {
+                readonly enabled?: boolean | undefined;
+            } | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "application/pdf";
+            } | {
+                readonly type: "text";
+                readonly data: string;
+                readonly media_type: "text/plain";
+            } | {
+                readonly type: "content";
+                readonly content: string | readonly ({
+                    readonly type: "text";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                    } | null | undefined;
+                    readonly text: string;
+                    readonly citations?: readonly ({
+                        readonly type: "char_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_char_index: number;
+                        readonly start_char_index: number;
+                    } | {
+                        readonly type: "page_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_page_number: number;
+                        readonly start_page_number: number;
+                    } | {
+                        readonly type: "content_block_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_block_index: number;
+                        readonly start_block_index: number;
+                    } | {
+                        readonly type: "web_search_result_location";
+                        readonly title: string | null;
+                        readonly url: string;
+                        readonly cited_text: string;
+                        readonly encrypted_index: string;
+                    })[] | null | undefined;
+                } | {
+                    readonly type: "image";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                    } | null | undefined;
+                    readonly source: {
+                        readonly type: "base64";
+                        readonly data: string;
+                        readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                    } | {
+                        readonly type: "url";
+                        readonly url: string;
+                    };
+                })[];
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            };
+            readonly context?: string | null | undefined;
+        } | {
+            readonly type: "thinking";
+            readonly thinking: string;
+            readonly signature: string;
+        } | {
+            readonly type: "redacted_thinking";
+            readonly data: string;
+        })[];
+        readonly role: "user" | "assistant";
+    }[];
+} & {
+    readonly system?: string | readonly {
+        readonly type: "text";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    }[] | undefined;
+} & {
+    readonly tool_choice?: {
+        readonly type: "auto";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "any";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "tool";
+        readonly name: string;
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "none";
+    } | undefined;
+} & {
+    readonly tools?: readonly ({
+        readonly type?: "custom" | null | undefined;
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: string;
+        readonly description?: string | undefined;
+        readonly input_schema: {
+            readonly type: "object";
+            readonly properties?: {
+                readonly [x: string]: unknown;
+            } | null | undefined;
+            readonly required?: readonly string[] | null | undefined;
+        };
+    } | {
+        readonly type: "bash_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "text_editor_20250429";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "str_replace_based_edit_tool";
+    } | {
+        readonly type: "web_search_20250305";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "web_search";
+        readonly allowed_domains?: readonly string[] | null | undefined;
+        readonly blocked_domains?: readonly string[] | null | undefined;
+        readonly max_uses?: number | null | undefined;
+        readonly user_location?: {
+            readonly type: "approximate";
+            readonly city?: string | null | undefined;
+            readonly country?: string | null | undefined;
+            readonly region?: string | null | undefined;
+            readonly timezone?: string | null | undefined;
+        } | null | undefined;
+    })[] | undefined;
+}, {}, {}>;
+export declare class CountMessageTokensParams extends CountMessageTokensParams_base {
+}
+declare const CountMessageTokensResponse_base: S.Class<CountMessageTokensResponse, {
+    input_tokens: typeof S.Int;
+}, S.Struct.Encoded<{
+    input_tokens: typeof S.Int;
+}>, never, {
+    readonly input_tokens: number;
+}, {}, {}>;
+export declare class CountMessageTokensResponse extends CountMessageTokensResponse_base {
+}
+declare const ListFilesV1FilesGetParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class ListFilesV1FilesGetParams extends ListFilesV1FilesGetParams_base {
+}
+declare const FileMetadataSchemaType_base: S.Literal<["file"]>;
+export declare class FileMetadataSchemaType extends FileMetadataSchemaType_base {
+}
+declare const FileMetadataSchema_base: S.Struct<{
+    created_at: typeof S.String;
+    downloadable: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    filename: S.filter<S.filter<typeof S.String>>;
+    id: typeof S.String;
+    mime_type: S.filter<S.filter<typeof S.String>>;
+    size_bytes: S.filter<typeof S.Int>;
+    type: typeof FileMetadataSchemaType;
+}>;
+export declare class FileMetadataSchema extends FileMetadataSchema_base {
+}
+declare const FileListResponse_base: S.Class<FileListResponse, {
+    data: S.Array$<typeof FileMetadataSchema>;
+    first_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    has_more: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    last_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof FileMetadataSchema>;
+    first_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    has_more: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    last_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "file";
+        readonly id: string;
+        readonly created_at: string;
+        readonly downloadable?: boolean | undefined;
+        readonly filename: string;
+        readonly mime_type: string;
+        readonly size_bytes: number;
+    }[];
+} & {
+    readonly has_more?: boolean | undefined;
+} & {
+    readonly first_id?: string | null | undefined;
+} & {
+    readonly last_id?: string | null | undefined;
+}, {}, {}>;
+export declare class FileListResponse extends FileListResponse_base {
+}
+declare const UploadFileV1FilesPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class UploadFileV1FilesPostParams extends UploadFileV1FilesPostParams_base {
+}
+declare const GetFileMetadataV1FilesFileIdGetParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class GetFileMetadataV1FilesFileIdGetParams extends GetFileMetadataV1FilesFileIdGetParams_base {
+}
+declare const DeleteFileV1FilesFileIdDeleteParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class DeleteFileV1FilesFileIdDeleteParams extends DeleteFileV1FilesFileIdDeleteParams_base {
+}
+declare const FileDeleteResponseType_base: S.Literal<["file_deleted"]>;
+export declare class FileDeleteResponseType extends FileDeleteResponseType_base {
+}
+declare const FileDeleteResponse_base: S.Class<FileDeleteResponse, {
+    id: typeof S.String;
+    type: S.optionalWith<typeof FileDeleteResponseType, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: S.optionalWith<typeof FileDeleteResponseType, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly type?: "file_deleted" | undefined;
+} & {
+    readonly id: string;
+}, {}, {}>;
+export declare class FileDeleteResponse extends FileDeleteResponse_base {
+}
+declare const DownloadFileV1FilesFileIdContentGetParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class DownloadFileV1FilesFileIdContentGetParams extends DownloadFileV1FilesFileIdContentGetParams_base {
+}
+declare const BetaMessagesPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessagesPostParams extends BetaMessagesPostParams_base {
+}
+declare const BetaCacheControlEphemeralTtl_base: S.Literal<["5m", "1h"]>;
+export declare class BetaCacheControlEphemeralTtl extends BetaCacheControlEphemeralTtl_base {
+}
+declare const BetaCacheControlEphemeralType_base: S.Literal<["ephemeral"]>;
+export declare class BetaCacheControlEphemeralType extends BetaCacheControlEphemeralType_base {
+}
+declare const BetaCacheControlEphemeral_base: S.Struct<{
+    ttl: S.optionalWith<typeof BetaCacheControlEphemeralTtl, {
+        nullable: true;
+    }>;
+    type: typeof BetaCacheControlEphemeralType;
+}>;
+export declare class BetaCacheControlEphemeral extends BetaCacheControlEphemeral_base {
+}
+declare const BetaRequestServerToolUseBlockName_base: S.Literal<["web_search", "code_execution"]>;
+export declare class BetaRequestServerToolUseBlockName extends BetaRequestServerToolUseBlockName_base {
+}
+declare const BetaRequestServerToolUseBlockType_base: S.Literal<["server_tool_use"]>;
+export declare class BetaRequestServerToolUseBlockType extends BetaRequestServerToolUseBlockType_base {
+}
+declare const BetaRequestServerToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof BetaRequestServerToolUseBlockName;
+    type: typeof BetaRequestServerToolUseBlockType;
+}>;
+export declare class BetaRequestServerToolUseBlock extends BetaRequestServerToolUseBlock_base {
+}
+declare const BetaRequestWebSearchResultBlockType_base: S.Literal<["web_search_result"]>;
+export declare class BetaRequestWebSearchResultBlockType extends BetaRequestWebSearchResultBlockType_base {
+}
+declare const BetaRequestWebSearchResultBlock_base: S.Struct<{
+    encrypted_content: typeof S.String;
+    page_age: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    title: typeof S.String;
+    type: typeof BetaRequestWebSearchResultBlockType;
+    url: typeof S.String;
+}>;
+export declare class BetaRequestWebSearchResultBlock extends BetaRequestWebSearchResultBlock_base {
+}
+declare const BetaWebSearchToolResultErrorCode_base: S.Literal<["invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long"]>;
+export declare class BetaWebSearchToolResultErrorCode extends BetaWebSearchToolResultErrorCode_base {
+}
+declare const BetaRequestWebSearchToolResultErrorType_base: S.Literal<["web_search_tool_result_error"]>;
+export declare class BetaRequestWebSearchToolResultErrorType extends BetaRequestWebSearchToolResultErrorType_base {
+}
+declare const BetaRequestWebSearchToolResultError_base: S.Struct<{
+    error_code: typeof BetaWebSearchToolResultErrorCode;
+    type: typeof BetaRequestWebSearchToolResultErrorType;
+}>;
+export declare class BetaRequestWebSearchToolResultError extends BetaRequestWebSearchToolResultError_base {
+}
+declare const BetaRequestWebSearchToolResultBlockType_base: S.Literal<["web_search_tool_result"]>;
+export declare class BetaRequestWebSearchToolResultBlockType extends BetaRequestWebSearchToolResultBlockType_base {
+}
+declare const BetaRequestWebSearchToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.Union<[S.Array$<typeof BetaRequestWebSearchResultBlock>, typeof BetaRequestWebSearchToolResultError]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaRequestWebSearchToolResultBlockType;
+}>;
+export declare class BetaRequestWebSearchToolResultBlock extends BetaRequestWebSearchToolResultBlock_base {
+}
+declare const BetaCodeExecutionToolResultErrorCode_base: S.Literal<["invalid_tool_input", "unavailable", "too_many_requests", "execution_time_exceeded"]>;
+export declare class BetaCodeExecutionToolResultErrorCode extends BetaCodeExecutionToolResultErrorCode_base {
+}
+declare const BetaRequestCodeExecutionToolResultErrorType_base: S.Literal<["code_execution_tool_result_error"]>;
+export declare class BetaRequestCodeExecutionToolResultErrorType extends BetaRequestCodeExecutionToolResultErrorType_base {
+}
+declare const BetaRequestCodeExecutionToolResultError_base: S.Struct<{
+    error_code: typeof BetaCodeExecutionToolResultErrorCode;
+    type: typeof BetaRequestCodeExecutionToolResultErrorType;
+}>;
+export declare class BetaRequestCodeExecutionToolResultError extends BetaRequestCodeExecutionToolResultError_base {
+}
+declare const BetaRequestCodeExecutionOutputBlockType_base: S.Literal<["code_execution_output"]>;
+export declare class BetaRequestCodeExecutionOutputBlockType extends BetaRequestCodeExecutionOutputBlockType_base {
+}
+declare const BetaRequestCodeExecutionOutputBlock_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaRequestCodeExecutionOutputBlockType;
+}>;
+export declare class BetaRequestCodeExecutionOutputBlock extends BetaRequestCodeExecutionOutputBlock_base {
+}
+declare const BetaRequestCodeExecutionResultBlockType_base: S.Literal<["code_execution_result"]>;
+export declare class BetaRequestCodeExecutionResultBlockType extends BetaRequestCodeExecutionResultBlockType_base {
+}
+declare const BetaRequestCodeExecutionResultBlock_base: S.Struct<{
+    content: S.Array$<typeof BetaRequestCodeExecutionOutputBlock>;
+    return_code: typeof S.Int;
+    stderr: typeof S.String;
+    stdout: typeof S.String;
+    type: typeof BetaRequestCodeExecutionResultBlockType;
+}>;
+export declare class BetaRequestCodeExecutionResultBlock extends BetaRequestCodeExecutionResultBlock_base {
+}
+declare const BetaRequestCodeExecutionToolResultBlockType_base: S.Literal<["code_execution_tool_result"]>;
+export declare class BetaRequestCodeExecutionToolResultBlockType extends BetaRequestCodeExecutionToolResultBlockType_base {
+}
+declare const BetaRequestCodeExecutionToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.Union<[typeof BetaRequestCodeExecutionToolResultError, typeof BetaRequestCodeExecutionResultBlock]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaRequestCodeExecutionToolResultBlockType;
+}>;
+export declare class BetaRequestCodeExecutionToolResultBlock extends BetaRequestCodeExecutionToolResultBlock_base {
+}
+declare const BetaRequestMCPToolUseBlockType_base: S.Literal<["mcp_tool_use"]>;
+export declare class BetaRequestMCPToolUseBlockType extends BetaRequestMCPToolUseBlockType_base {
+}
+declare const BetaRequestMCPToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof S.String;
+    server_name: typeof S.String;
+    type: typeof BetaRequestMCPToolUseBlockType;
+}>;
+export declare class BetaRequestMCPToolUseBlock extends BetaRequestMCPToolUseBlock_base {
+}
+declare const BetaRequestCharLocationCitationType_base: S.Literal<["char_location"]>;
+export declare class BetaRequestCharLocationCitationType extends BetaRequestCharLocationCitationType_base {
+}
+declare const BetaRequestCharLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_char_index: typeof S.Int;
+    start_char_index: S.filter<typeof S.Int>;
+    type: typeof BetaRequestCharLocationCitationType;
+}>;
+export declare class BetaRequestCharLocationCitation extends BetaRequestCharLocationCitation_base {
+}
+declare const BetaRequestPageLocationCitationType_base: S.Literal<["page_location"]>;
+export declare class BetaRequestPageLocationCitationType extends BetaRequestPageLocationCitationType_base {
+}
+declare const BetaRequestPageLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_page_number: typeof S.Int;
+    start_page_number: S.filter<typeof S.Int>;
+    type: typeof BetaRequestPageLocationCitationType;
+}>;
+export declare class BetaRequestPageLocationCitation extends BetaRequestPageLocationCitation_base {
+}
+declare const BetaRequestContentBlockLocationCitationType_base: S.Literal<["content_block_location"]>;
+export declare class BetaRequestContentBlockLocationCitationType extends BetaRequestContentBlockLocationCitationType_base {
+}
+declare const BetaRequestContentBlockLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_block_index: typeof S.Int;
+    start_block_index: S.filter<typeof S.Int>;
+    type: typeof BetaRequestContentBlockLocationCitationType;
+}>;
+export declare class BetaRequestContentBlockLocationCitation extends BetaRequestContentBlockLocationCitation_base {
+}
+declare const BetaRequestWebSearchResultLocationCitationType_base: S.Literal<["web_search_result_location"]>;
+export declare class BetaRequestWebSearchResultLocationCitationType extends BetaRequestWebSearchResultLocationCitationType_base {
+}
+declare const BetaRequestWebSearchResultLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    encrypted_index: typeof S.String;
+    title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    type: typeof BetaRequestWebSearchResultLocationCitationType;
+    url: S.filter<S.filter<typeof S.String>>;
+}>;
+export declare class BetaRequestWebSearchResultLocationCitation extends BetaRequestWebSearchResultLocationCitation_base {
+}
+declare const BetaRequestTextBlockType_base: S.Literal<["text"]>;
+export declare class BetaRequestTextBlockType extends BetaRequestTextBlockType_base {
+}
+declare const BetaRequestTextBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    citations: S.optionalWith<S.Union<[S.Array$<S.Union<[typeof BetaRequestCharLocationCitation, typeof BetaRequestPageLocationCitation, typeof BetaRequestContentBlockLocationCitation, typeof BetaRequestWebSearchResultLocationCitation]>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    text: S.filter<typeof S.String>;
+    type: typeof BetaRequestTextBlockType;
+}>;
+export declare class BetaRequestTextBlock extends BetaRequestTextBlock_base {
+}
+declare const BetaRequestMCPToolResultBlockType_base: S.Literal<["mcp_tool_result"]>;
+export declare class BetaRequestMCPToolResultBlockType extends BetaRequestMCPToolResultBlockType_base {
+}
+declare const BetaRequestMCPToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    is_error: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaRequestMCPToolResultBlockType;
+}>;
+export declare class BetaRequestMCPToolResultBlock extends BetaRequestMCPToolResultBlock_base {
+}
+declare const BetaBase64ImageSourceMediaType_base: S.Literal<["image/jpeg", "image/png", "image/gif", "image/webp"]>;
+export declare class BetaBase64ImageSourceMediaType extends BetaBase64ImageSourceMediaType_base {
+}
+declare const BetaBase64ImageSourceType_base: S.Literal<["base64"]>;
+export declare class BetaBase64ImageSourceType extends BetaBase64ImageSourceType_base {
+}
+declare const BetaBase64ImageSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof BetaBase64ImageSourceMediaType;
+    type: typeof BetaBase64ImageSourceType;
+}>;
+export declare class BetaBase64ImageSource extends BetaBase64ImageSource_base {
+}
+declare const BetaURLImageSourceType_base: S.Literal<["url"]>;
+export declare class BetaURLImageSourceType extends BetaURLImageSourceType_base {
+}
+declare const BetaURLImageSource_base: S.Struct<{
+    type: typeof BetaURLImageSourceType;
+    url: typeof S.String;
+}>;
+export declare class BetaURLImageSource extends BetaURLImageSource_base {
+}
+declare const BetaFileImageSourceType_base: S.Literal<["file"]>;
+export declare class BetaFileImageSourceType extends BetaFileImageSourceType_base {
+}
+declare const BetaFileImageSource_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaFileImageSourceType;
+}>;
+export declare class BetaFileImageSource extends BetaFileImageSource_base {
+}
+declare const BetaRequestImageBlockType_base: S.Literal<["image"]>;
+export declare class BetaRequestImageBlockType extends BetaRequestImageBlockType_base {
+}
+declare const BetaRequestImageBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    source: S.Union<[typeof BetaBase64ImageSource, typeof BetaURLImageSource, typeof BetaFileImageSource]>;
+    type: typeof BetaRequestImageBlockType;
+}>;
+export declare class BetaRequestImageBlock extends BetaRequestImageBlock_base {
+}
+declare const BetaRequestToolUseBlockType_base: S.Literal<["tool_use"]>;
+export declare class BetaRequestToolUseBlockType extends BetaRequestToolUseBlockType_base {
+}
+declare const BetaRequestToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: S.filter<S.filter<typeof S.String>>;
+    type: typeof BetaRequestToolUseBlockType;
+}>;
+export declare class BetaRequestToolUseBlock extends BetaRequestToolUseBlock_base {
+}
+declare const BetaRequestToolResultBlockType_base: S.Literal<["tool_result"]>;
+export declare class BetaRequestToolResultBlockType extends BetaRequestToolResultBlockType_base {
+}
+declare const BetaRequestToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.optionalWith<S.Union<[typeof S.String, S.Array$<S.Union<[typeof BetaRequestTextBlock, typeof BetaRequestImageBlock]>>]>, {
+        nullable: true;
+    }>;
+    is_error: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaRequestToolResultBlockType;
+}>;
+export declare class BetaRequestToolResultBlock extends BetaRequestToolResultBlock_base {
+}
+declare const BetaRequestCitationsConfig_base: S.Struct<{
+    enabled: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaRequestCitationsConfig extends BetaRequestCitationsConfig_base {
+}
+declare const BetaBase64PDFSourceMediaType_base: S.Literal<["application/pdf"]>;
+export declare class BetaBase64PDFSourceMediaType extends BetaBase64PDFSourceMediaType_base {
+}
+declare const BetaBase64PDFSourceType_base: S.Literal<["base64"]>;
+export declare class BetaBase64PDFSourceType extends BetaBase64PDFSourceType_base {
+}
+declare const BetaBase64PDFSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof BetaBase64PDFSourceMediaType;
+    type: typeof BetaBase64PDFSourceType;
+}>;
+export declare class BetaBase64PDFSource extends BetaBase64PDFSource_base {
+}
+declare const BetaPlainTextSourceMediaType_base: S.Literal<["text/plain"]>;
+export declare class BetaPlainTextSourceMediaType extends BetaPlainTextSourceMediaType_base {
+}
+declare const BetaPlainTextSourceType_base: S.Literal<["text"]>;
+export declare class BetaPlainTextSourceType extends BetaPlainTextSourceType_base {
+}
+declare const BetaPlainTextSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof BetaPlainTextSourceMediaType;
+    type: typeof BetaPlainTextSourceType;
+}>;
+export declare class BetaPlainTextSource extends BetaPlainTextSource_base {
+}
+declare const BetaContentBlockSourceType_base: S.Literal<["content"]>;
+export declare class BetaContentBlockSourceType extends BetaContentBlockSourceType_base {
+}
+declare const BetaContentBlockSource_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<S.Union<[typeof BetaRequestTextBlock, typeof BetaRequestImageBlock]>>]>;
+    type: typeof BetaContentBlockSourceType;
+}>;
+export declare class BetaContentBlockSource extends BetaContentBlockSource_base {
+}
+declare const BetaURLPDFSourceType_base: S.Literal<["url"]>;
+export declare class BetaURLPDFSourceType extends BetaURLPDFSourceType_base {
+}
+declare const BetaURLPDFSource_base: S.Struct<{
+    type: typeof BetaURLPDFSourceType;
+    url: typeof S.String;
+}>;
+export declare class BetaURLPDFSource extends BetaURLPDFSource_base {
+}
+declare const BetaFileDocumentSourceType_base: S.Literal<["file"]>;
+export declare class BetaFileDocumentSourceType extends BetaFileDocumentSourceType_base {
+}
+declare const BetaFileDocumentSource_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaFileDocumentSourceType;
+}>;
+export declare class BetaFileDocumentSource extends BetaFileDocumentSource_base {
+}
+declare const BetaRequestDocumentBlockType_base: S.Literal<["document"]>;
+export declare class BetaRequestDocumentBlockType extends BetaRequestDocumentBlockType_base {
+}
+declare const BetaRequestDocumentBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    citations: S.optionalWith<typeof BetaRequestCitationsConfig, {
+        nullable: true;
+    }>;
+    context: S.optionalWith<S.Union<[S.filter<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    source: S.Union<[typeof BetaBase64PDFSource, typeof BetaPlainTextSource, typeof BetaContentBlockSource, typeof BetaURLPDFSource, typeof BetaFileDocumentSource]>;
+    title: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof BetaRequestDocumentBlockType;
+}>;
+export declare class BetaRequestDocumentBlock extends BetaRequestDocumentBlock_base {
+}
+declare const BetaRequestThinkingBlockType_base: S.Literal<["thinking"]>;
+export declare class BetaRequestThinkingBlockType extends BetaRequestThinkingBlockType_base {
+}
+declare const BetaRequestThinkingBlock_base: S.Struct<{
+    signature: typeof S.String;
+    thinking: typeof S.String;
+    type: typeof BetaRequestThinkingBlockType;
+}>;
+export declare class BetaRequestThinkingBlock extends BetaRequestThinkingBlock_base {
+}
+declare const BetaRequestRedactedThinkingBlockType_base: S.Literal<["redacted_thinking"]>;
+export declare class BetaRequestRedactedThinkingBlockType extends BetaRequestRedactedThinkingBlockType_base {
+}
+declare const BetaRequestRedactedThinkingBlock_base: S.Struct<{
+    data: typeof S.String;
+    type: typeof BetaRequestRedactedThinkingBlockType;
+}>;
+export declare class BetaRequestRedactedThinkingBlock extends BetaRequestRedactedThinkingBlock_base {
+}
+declare const BetaRequestContainerUploadBlockType_base: S.Literal<["container_upload"]>;
+export declare class BetaRequestContainerUploadBlockType extends BetaRequestContainerUploadBlockType_base {
+}
+declare const BetaRequestContainerUploadBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    file_id: typeof S.String;
+    type: typeof BetaRequestContainerUploadBlockType;
+}>;
+export declare class BetaRequestContainerUploadBlock extends BetaRequestContainerUploadBlock_base {
+}
+declare const BetaInputContentBlock_base: S.Union<[typeof BetaRequestServerToolUseBlock, typeof BetaRequestWebSearchToolResultBlock, typeof BetaRequestCodeExecutionToolResultBlock, typeof BetaRequestMCPToolUseBlock, typeof BetaRequestMCPToolResultBlock, typeof BetaRequestTextBlock, typeof BetaRequestImageBlock, typeof BetaRequestToolUseBlock, typeof BetaRequestToolResultBlock, typeof BetaRequestDocumentBlock, typeof BetaRequestThinkingBlock, typeof BetaRequestRedactedThinkingBlock, typeof BetaRequestContainerUploadBlock]>;
+export declare class BetaInputContentBlock extends BetaInputContentBlock_base {
+}
+declare const BetaInputMessageRole_base: S.Literal<["user", "assistant"]>;
+export declare class BetaInputMessageRole extends BetaInputMessageRole_base {
+}
+declare const BetaInputMessage_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<typeof BetaInputContentBlock>]>;
+    role: typeof BetaInputMessageRole;
+}>;
+export declare class BetaInputMessage extends BetaInputMessage_base {
+}
+declare const BetaRequestMCPServerToolConfiguration_base: S.Struct<{
+    allowed_tools: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    enabled: S.optionalWith<S.Union<[typeof S.Boolean, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaRequestMCPServerToolConfiguration extends BetaRequestMCPServerToolConfiguration_base {
+}
+declare const BetaRequestMCPServerURLDefinitionType_base: S.Literal<["url"]>;
+export declare class BetaRequestMCPServerURLDefinitionType extends BetaRequestMCPServerURLDefinitionType_base {
+}
+declare const BetaRequestMCPServerURLDefinition_base: S.Struct<{
+    authorization_token: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof S.String;
+    tool_configuration: S.optionalWith<S.Union<[typeof BetaRequestMCPServerToolConfiguration, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof BetaRequestMCPServerURLDefinitionType;
+    url: typeof S.String;
+}>;
+export declare class BetaRequestMCPServerURLDefinition extends BetaRequestMCPServerURLDefinition_base {
+}
+declare const BetaMetadata_base: S.Struct<{
+    user_id: S.optionalWith<S.Union<[S.filter<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMetadata extends BetaMetadata_base {
+}
+declare const BetaCreateMessageParamsServiceTier_base: S.Literal<["auto", "standard_only"]>;
+export declare class BetaCreateMessageParamsServiceTier extends BetaCreateMessageParamsServiceTier_base {
+}
+declare const BetaThinkingConfigEnabledType_base: S.Literal<["enabled"]>;
+export declare class BetaThinkingConfigEnabledType extends BetaThinkingConfigEnabledType_base {
+}
+declare const BetaThinkingConfigEnabled_base: S.Struct<{
+    budget_tokens: S.filter<typeof S.Int>;
+    type: typeof BetaThinkingConfigEnabledType;
+}>;
+export declare class BetaThinkingConfigEnabled extends BetaThinkingConfigEnabled_base {
+}
+declare const BetaThinkingConfigDisabledType_base: S.Literal<["disabled"]>;
+export declare class BetaThinkingConfigDisabledType extends BetaThinkingConfigDisabledType_base {
+}
+declare const BetaThinkingConfigDisabled_base: S.Struct<{
+    type: typeof BetaThinkingConfigDisabledType;
+}>;
+export declare class BetaThinkingConfigDisabled extends BetaThinkingConfigDisabled_base {
+}
+declare const BetaThinkingConfigParam_base: S.Union<[typeof BetaThinkingConfigEnabled, typeof BetaThinkingConfigDisabled]>;
+export declare class BetaThinkingConfigParam extends BetaThinkingConfigParam_base {
+}
+declare const BetaToolChoiceAutoType_base: S.Literal<["auto"]>;
+export declare class BetaToolChoiceAutoType extends BetaToolChoiceAutoType_base {
+}
+declare const BetaToolChoiceAuto_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    type: typeof BetaToolChoiceAutoType;
+}>;
+export declare class BetaToolChoiceAuto extends BetaToolChoiceAuto_base {
+}
+declare const BetaToolChoiceAnyType_base: S.Literal<["any"]>;
+export declare class BetaToolChoiceAnyType extends BetaToolChoiceAnyType_base {
+}
+declare const BetaToolChoiceAny_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    type: typeof BetaToolChoiceAnyType;
+}>;
+export declare class BetaToolChoiceAny extends BetaToolChoiceAny_base {
+}
+declare const BetaToolChoiceToolType_base: S.Literal<["tool"]>;
+export declare class BetaToolChoiceToolType extends BetaToolChoiceToolType_base {
+}
+declare const BetaToolChoiceTool_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    name: typeof S.String;
+    type: typeof BetaToolChoiceToolType;
+}>;
+export declare class BetaToolChoiceTool extends BetaToolChoiceTool_base {
+}
+declare const BetaToolChoiceNoneType_base: S.Literal<["none"]>;
+export declare class BetaToolChoiceNoneType extends BetaToolChoiceNoneType_base {
+}
+declare const BetaToolChoiceNone_base: S.Struct<{
+    type: typeof BetaToolChoiceNoneType;
+}>;
+export declare class BetaToolChoiceNone extends BetaToolChoiceNone_base {
+}
+declare const BetaToolChoice_base: S.Union<[typeof BetaToolChoiceAuto, typeof BetaToolChoiceAny, typeof BetaToolChoiceTool, typeof BetaToolChoiceNone]>;
+export declare class BetaToolChoice extends BetaToolChoice_base {
+}
+declare const BetaToolTypeEnum_base: S.Literal<["custom"]>;
+export declare class BetaToolTypeEnum extends BetaToolTypeEnum_base {
+}
+declare const BetaInputSchemaType_base: S.Literal<["object"]>;
+export declare class BetaInputSchemaType extends BetaInputSchemaType_base {
+}
+declare const BetaInputSchema_base: S.Struct<{
+    properties: S.optionalWith<S.Union<[S.Record$<typeof S.String, typeof S.Unknown>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    required: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof BetaInputSchemaType;
+}>;
+export declare class BetaInputSchema extends BetaInputSchema_base {
+}
+declare const BetaTool_base: S.Struct<{
+    type: S.optionalWith<S.Union<[typeof S.Null, typeof BetaToolTypeEnum]>, {
+        nullable: true;
+    }>;
+    description: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    name: S.filter<S.filter<S.filter<typeof S.String>>>;
+    input_schema: typeof BetaInputSchema;
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaTool extends BetaTool_base {
+}
+declare const BetaComputerUseTool20241022Name_base: S.Literal<["computer"]>;
+export declare class BetaComputerUseTool20241022Name extends BetaComputerUseTool20241022Name_base {
+}
+declare const BetaComputerUseTool20241022Type_base: S.Literal<["computer_20241022"]>;
+export declare class BetaComputerUseTool20241022Type extends BetaComputerUseTool20241022Type_base {
+}
+declare const BetaComputerUseTool20241022_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    display_height_px: S.filter<typeof S.Int>;
+    display_number: S.optionalWith<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    display_width_px: S.filter<typeof S.Int>;
+    name: typeof BetaComputerUseTool20241022Name;
+    type: typeof BetaComputerUseTool20241022Type;
+}>;
+export declare class BetaComputerUseTool20241022 extends BetaComputerUseTool20241022_base {
+}
+declare const BetaBashTool20241022Name_base: S.Literal<["bash"]>;
+export declare class BetaBashTool20241022Name extends BetaBashTool20241022Name_base {
+}
+declare const BetaBashTool20241022Type_base: S.Literal<["bash_20241022"]>;
+export declare class BetaBashTool20241022Type extends BetaBashTool20241022Type_base {
+}
+declare const BetaBashTool20241022_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaBashTool20241022Name;
+    type: typeof BetaBashTool20241022Type;
+}>;
+export declare class BetaBashTool20241022 extends BetaBashTool20241022_base {
+}
+declare const BetaTextEditor20241022Name_base: S.Literal<["str_replace_editor"]>;
+export declare class BetaTextEditor20241022Name extends BetaTextEditor20241022Name_base {
+}
+declare const BetaTextEditor20241022Type_base: S.Literal<["text_editor_20241022"]>;
+export declare class BetaTextEditor20241022Type extends BetaTextEditor20241022Type_base {
+}
+declare const BetaTextEditor20241022_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaTextEditor20241022Name;
+    type: typeof BetaTextEditor20241022Type;
+}>;
+export declare class BetaTextEditor20241022 extends BetaTextEditor20241022_base {
+}
+declare const BetaComputerUseTool20250124Name_base: S.Literal<["computer"]>;
+export declare class BetaComputerUseTool20250124Name extends BetaComputerUseTool20250124Name_base {
+}
+declare const BetaComputerUseTool20250124Type_base: S.Literal<["computer_20250124"]>;
+export declare class BetaComputerUseTool20250124Type extends BetaComputerUseTool20250124Type_base {
+}
+declare const BetaComputerUseTool20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    display_height_px: S.filter<typeof S.Int>;
+    display_number: S.optionalWith<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    display_width_px: S.filter<typeof S.Int>;
+    name: typeof BetaComputerUseTool20250124Name;
+    type: typeof BetaComputerUseTool20250124Type;
+}>;
+export declare class BetaComputerUseTool20250124 extends BetaComputerUseTool20250124_base {
+}
+declare const BetaBashTool20250124Name_base: S.Literal<["bash"]>;
+export declare class BetaBashTool20250124Name extends BetaBashTool20250124Name_base {
+}
+declare const BetaBashTool20250124Type_base: S.Literal<["bash_20250124"]>;
+export declare class BetaBashTool20250124Type extends BetaBashTool20250124Type_base {
+}
+declare const BetaBashTool20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaBashTool20250124Name;
+    type: typeof BetaBashTool20250124Type;
+}>;
+export declare class BetaBashTool20250124 extends BetaBashTool20250124_base {
+}
+declare const BetaTextEditor20250124Name_base: S.Literal<["str_replace_editor"]>;
+export declare class BetaTextEditor20250124Name extends BetaTextEditor20250124Name_base {
+}
+declare const BetaTextEditor20250124Type_base: S.Literal<["text_editor_20250124"]>;
+export declare class BetaTextEditor20250124Type extends BetaTextEditor20250124Type_base {
+}
+declare const BetaTextEditor20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaTextEditor20250124Name;
+    type: typeof BetaTextEditor20250124Type;
+}>;
+export declare class BetaTextEditor20250124 extends BetaTextEditor20250124_base {
+}
+declare const BetaTextEditor20250429Name_base: S.Literal<["str_replace_based_edit_tool"]>;
+export declare class BetaTextEditor20250429Name extends BetaTextEditor20250429Name_base {
+}
+declare const BetaTextEditor20250429Type_base: S.Literal<["text_editor_20250429"]>;
+export declare class BetaTextEditor20250429Type extends BetaTextEditor20250429Type_base {
+}
+declare const BetaTextEditor20250429_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaTextEditor20250429Name;
+    type: typeof BetaTextEditor20250429Type;
+}>;
+export declare class BetaTextEditor20250429 extends BetaTextEditor20250429_base {
+}
+declare const BetaWebSearchTool20250305Name_base: S.Literal<["web_search"]>;
+export declare class BetaWebSearchTool20250305Name extends BetaWebSearchTool20250305Name_base {
+}
+declare const BetaWebSearchTool20250305Type_base: S.Literal<["web_search_20250305"]>;
+export declare class BetaWebSearchTool20250305Type extends BetaWebSearchTool20250305Type_base {
+}
+declare const BetaUserLocationType_base: S.Literal<["approximate"]>;
+export declare class BetaUserLocationType extends BetaUserLocationType_base {
+}
+declare const BetaUserLocation_base: S.Struct<{
+    city: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    country: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    region: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    timezone: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof BetaUserLocationType;
+}>;
+export declare class BetaUserLocation extends BetaUserLocation_base {
+}
+declare const BetaWebSearchTool20250305_base: S.Struct<{
+    allowed_domains: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    blocked_domains: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    max_uses: S.optionalWith<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaWebSearchTool20250305Name;
+    type: typeof BetaWebSearchTool20250305Type;
+    user_location: S.optionalWith<S.Union<[typeof BetaUserLocation, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaWebSearchTool20250305 extends BetaWebSearchTool20250305_base {
+}
+declare const BetaCodeExecutionTool20250522Name_base: S.Literal<["code_execution"]>;
+export declare class BetaCodeExecutionTool20250522Name extends BetaCodeExecutionTool20250522Name_base {
+}
+declare const BetaCodeExecutionTool20250522Type_base: S.Literal<["code_execution_20250522"]>;
+export declare class BetaCodeExecutionTool20250522Type extends BetaCodeExecutionTool20250522Type_base {
+}
+declare const BetaCodeExecutionTool20250522_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaCodeExecutionTool20250522Name;
+    type: typeof BetaCodeExecutionTool20250522Type;
+}>;
+export declare class BetaCodeExecutionTool20250522 extends BetaCodeExecutionTool20250522_base {
+}
+declare const BetaCreateMessageParams_base: S.Class<BetaCreateMessageParams, {
+    model: S.Union<[typeof S.String, typeof Model]>;
+    messages: S.Array$<typeof BetaInputMessage>;
+    container: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    max_tokens: S.filter<typeof S.Int>;
+    mcp_servers: S.optionalWith<S.filter<S.Array$<typeof BetaRequestMCPServerURLDefinition>>, {
+        nullable: true;
+    }>;
+    metadata: S.optionalWith<typeof BetaMetadata, {
+        nullable: true;
+    }>;
+    service_tier: S.optionalWith<typeof BetaCreateMessageParamsServiceTier, {
+        nullable: true;
+    }>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof BetaThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof BetaToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof BetaTool, typeof BetaComputerUseTool20241022, typeof BetaBashTool20241022, typeof BetaTextEditor20241022, typeof BetaComputerUseTool20250124, typeof BetaBashTool20250124, typeof BetaTextEditor20250124, typeof BetaTextEditor20250429, typeof BetaWebSearchTool20250305, typeof BetaCodeExecutionTool20250522]>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    model: S.Union<[typeof S.String, typeof Model]>;
+    messages: S.Array$<typeof BetaInputMessage>;
+    container: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    max_tokens: S.filter<typeof S.Int>;
+    mcp_servers: S.optionalWith<S.filter<S.Array$<typeof BetaRequestMCPServerURLDefinition>>, {
+        nullable: true;
+    }>;
+    metadata: S.optionalWith<typeof BetaMetadata, {
+        nullable: true;
+    }>;
+    service_tier: S.optionalWith<typeof BetaCreateMessageParamsServiceTier, {
+        nullable: true;
+    }>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof BetaThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof BetaToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof BetaTool, typeof BetaComputerUseTool20241022, typeof BetaBashTool20241022, typeof BetaTextEditor20241022, typeof BetaComputerUseTool20250124, typeof BetaBashTool20250124, typeof BetaTextEditor20250124, typeof BetaTextEditor20250429, typeof BetaWebSearchTool20250305, typeof BetaCodeExecutionTool20250522]>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly thinking?: {
+        readonly type: "enabled";
+        readonly budget_tokens: number;
+    } | {
+        readonly type: "disabled";
+    } | undefined;
+} & {
+    readonly model: string;
+} & {
+    readonly messages: readonly {
+        readonly content: string | readonly ({
+            readonly type: "server_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: "web_search" | "code_execution";
+        } | {
+            readonly type: "web_search_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content: {
+                readonly type: "web_search_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+            } | readonly {
+                readonly type: "web_search_result";
+                readonly encrypted_content: string;
+                readonly page_age?: string | null | undefined;
+                readonly title: string;
+                readonly url: string;
+            }[];
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "code_execution_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content: {
+                readonly type: "code_execution_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "too_many_requests" | "execution_time_exceeded";
+            } | {
+                readonly type: "code_execution_result";
+                readonly content: readonly {
+                    readonly type: "code_execution_output";
+                    readonly file_id: string;
+                }[];
+                readonly return_code: number;
+                readonly stderr: string;
+                readonly stdout: string;
+            };
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "mcp_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+            readonly server_name: string;
+        } | {
+            readonly type: "text";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        } | {
+            readonly type: "mcp_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content?: string | readonly {
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            }[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "image";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            } | {
+                readonly type: "file";
+                readonly file_id: string;
+            };
+        } | {
+            readonly type: "tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+        } | {
+            readonly type: "tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content?: string | readonly ({
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            } | {
+                readonly type: "image";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly source: {
+                    readonly type: "base64";
+                    readonly data: string;
+                    readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                } | {
+                    readonly type: "url";
+                    readonly url: string;
+                } | {
+                    readonly type: "file";
+                    readonly file_id: string;
+                };
+            })[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "document";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly title?: string | null | undefined;
+            readonly citations?: {
+                readonly enabled?: boolean | undefined;
+            } | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "application/pdf";
+            } | {
+                readonly type: "text";
+                readonly data: string;
+                readonly media_type: "text/plain";
+            } | {
+                readonly type: "content";
+                readonly content: string | readonly ({
+                    readonly type: "text";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                        readonly ttl?: "5m" | "1h" | undefined;
+                    } | null | undefined;
+                    readonly text: string;
+                    readonly citations?: readonly ({
+                        readonly type: "char_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_char_index: number;
+                        readonly start_char_index: number;
+                    } | {
+                        readonly type: "page_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_page_number: number;
+                        readonly start_page_number: number;
+                    } | {
+                        readonly type: "content_block_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_block_index: number;
+                        readonly start_block_index: number;
+                    } | {
+                        readonly type: "web_search_result_location";
+                        readonly title: string | null;
+                        readonly url: string;
+                        readonly cited_text: string;
+                        readonly encrypted_index: string;
+                    })[] | null | undefined;
+                } | {
+                    readonly type: "image";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                        readonly ttl?: "5m" | "1h" | undefined;
+                    } | null | undefined;
+                    readonly source: {
+                        readonly type: "base64";
+                        readonly data: string;
+                        readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                    } | {
+                        readonly type: "url";
+                        readonly url: string;
+                    } | {
+                        readonly type: "file";
+                        readonly file_id: string;
+                    };
+                })[];
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            } | {
+                readonly type: "file";
+                readonly file_id: string;
+            };
+            readonly context?: string | null | undefined;
+        } | {
+            readonly type: "thinking";
+            readonly thinking: string;
+            readonly signature: string;
+        } | {
+            readonly type: "redacted_thinking";
+            readonly data: string;
+        } | {
+            readonly type: "container_upload";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly file_id: string;
+        })[];
+        readonly role: "user" | "assistant";
+    }[];
+} & {
+    readonly max_tokens: number;
+} & {
+    readonly metadata?: {
+        readonly user_id?: string | null | undefined;
+    } | undefined;
+} & {
+    readonly service_tier?: "auto" | "standard_only" | undefined;
+} & {
+    readonly stop_sequences?: readonly string[] | undefined;
+} & {
+    readonly stream?: boolean | undefined;
+} & {
+    readonly system?: string | readonly {
+        readonly type: "text";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    }[] | undefined;
+} & {
+    readonly temperature?: number | undefined;
+} & {
+    readonly tool_choice?: {
+        readonly type: "auto";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "any";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "tool";
+        readonly name: string;
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "none";
+    } | undefined;
+} & {
+    readonly tools?: readonly ({
+        readonly type?: "custom" | null | undefined;
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: string;
+        readonly description?: string | undefined;
+        readonly input_schema: {
+            readonly type: "object";
+            readonly properties?: {
+                readonly [x: string]: unknown;
+            } | null | undefined;
+            readonly required?: readonly string[] | null | undefined;
+        };
+    } | {
+        readonly type: "computer_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "computer";
+        readonly display_height_px: number;
+        readonly display_number?: number | null | undefined;
+        readonly display_width_px: number;
+    } | {
+        readonly type: "bash_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "computer_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "computer";
+        readonly display_height_px: number;
+        readonly display_number?: number | null | undefined;
+        readonly display_width_px: number;
+    } | {
+        readonly type: "bash_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "text_editor_20250429";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_based_edit_tool";
+    } | {
+        readonly type: "web_search_20250305";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "web_search";
+        readonly allowed_domains?: readonly string[] | null | undefined;
+        readonly blocked_domains?: readonly string[] | null | undefined;
+        readonly max_uses?: number | null | undefined;
+        readonly user_location?: {
+            readonly type: "approximate";
+            readonly city?: string | null | undefined;
+            readonly country?: string | null | undefined;
+            readonly region?: string | null | undefined;
+            readonly timezone?: string | null | undefined;
+        } | null | undefined;
+    } | {
+        readonly type: "code_execution_20250522";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "code_execution";
+    })[] | undefined;
+} & {
+    readonly top_k?: number | undefined;
+} & {
+    readonly top_p?: number | undefined;
+} & {
+    readonly container?: string | null | undefined;
+} & {
+    readonly mcp_servers?: readonly {
+        readonly type: "url";
+        readonly name: string;
+        readonly url: string;
+        readonly authorization_token?: string | null | undefined;
+        readonly tool_configuration?: {
+            readonly enabled?: boolean | null | undefined;
+            readonly allowed_tools?: readonly string[] | null | undefined;
+        } | null | undefined;
+    }[] | undefined;
+}, {}, {}>;
+export declare class BetaCreateMessageParams extends BetaCreateMessageParams_base {
+}
+declare const BetaMessageType_base: S.Literal<["message"]>;
+export declare class BetaMessageType extends BetaMessageType_base {
+}
+declare const BetaMessageRole_base: S.Literal<["assistant"]>;
+export declare class BetaMessageRole extends BetaMessageRole_base {
+}
+declare const BetaResponseCharLocationCitationType_base: S.Literal<["char_location"]>;
+export declare class BetaResponseCharLocationCitationType extends BetaResponseCharLocationCitationType_base {
+}
+declare const BetaResponseCharLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_char_index: typeof S.Int;
+    start_char_index: S.filter<typeof S.Int>;
+    type: typeof BetaResponseCharLocationCitationType;
+}>;
+export declare class BetaResponseCharLocationCitation extends BetaResponseCharLocationCitation_base {
+}
+declare const BetaResponsePageLocationCitationType_base: S.Literal<["page_location"]>;
+export declare class BetaResponsePageLocationCitationType extends BetaResponsePageLocationCitationType_base {
+}
+declare const BetaResponsePageLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_page_number: typeof S.Int;
+    start_page_number: S.filter<typeof S.Int>;
+    type: typeof BetaResponsePageLocationCitationType;
+}>;
+export declare class BetaResponsePageLocationCitation extends BetaResponsePageLocationCitation_base {
+}
+declare const BetaResponseContentBlockLocationCitationType_base: S.Literal<["content_block_location"]>;
+export declare class BetaResponseContentBlockLocationCitationType extends BetaResponseContentBlockLocationCitationType_base {
+}
+declare const BetaResponseContentBlockLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_block_index: typeof S.Int;
+    start_block_index: S.filter<typeof S.Int>;
+    type: typeof BetaResponseContentBlockLocationCitationType;
+}>;
+export declare class BetaResponseContentBlockLocationCitation extends BetaResponseContentBlockLocationCitation_base {
+}
+declare const BetaResponseWebSearchResultLocationCitationType_base: S.Literal<["web_search_result_location"]>;
+export declare class BetaResponseWebSearchResultLocationCitationType extends BetaResponseWebSearchResultLocationCitationType_base {
+}
+declare const BetaResponseWebSearchResultLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    encrypted_index: typeof S.String;
+    title: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof BetaResponseWebSearchResultLocationCitationType;
+    url: typeof S.String;
+}>;
+export declare class BetaResponseWebSearchResultLocationCitation extends BetaResponseWebSearchResultLocationCitation_base {
+}
+declare const BetaResponseTextBlockType_base: S.Literal<["text"]>;
+export declare class BetaResponseTextBlockType extends BetaResponseTextBlockType_base {
+}
+declare const BetaResponseTextBlock_base: S.Struct<{
+    citations: S.optional<S.NullOr<S.Array$<S.Union<[typeof BetaResponseCharLocationCitation, typeof BetaResponsePageLocationCitation, typeof BetaResponseContentBlockLocationCitation, typeof BetaResponseWebSearchResultLocationCitation]>>>>;
+    text: S.filter<S.filter<typeof S.String>>;
+    type: typeof BetaResponseTextBlockType;
+}>;
+export declare class BetaResponseTextBlock extends BetaResponseTextBlock_base {
+}
+declare const BetaResponseToolUseBlockType_base: S.Literal<["tool_use"]>;
+export declare class BetaResponseToolUseBlockType extends BetaResponseToolUseBlockType_base {
+}
+declare const BetaResponseToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: S.filter<typeof S.String>;
+    type: typeof BetaResponseToolUseBlockType;
+}>;
+export declare class BetaResponseToolUseBlock extends BetaResponseToolUseBlock_base {
+}
+declare const BetaResponseServerToolUseBlockName_base: S.Literal<["web_search", "code_execution"]>;
+export declare class BetaResponseServerToolUseBlockName extends BetaResponseServerToolUseBlockName_base {
+}
+declare const BetaResponseServerToolUseBlockType_base: S.Literal<["server_tool_use"]>;
+export declare class BetaResponseServerToolUseBlockType extends BetaResponseServerToolUseBlockType_base {
+}
+declare const BetaResponseServerToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof BetaResponseServerToolUseBlockName;
+    type: typeof BetaResponseServerToolUseBlockType;
+}>;
+export declare class BetaResponseServerToolUseBlock extends BetaResponseServerToolUseBlock_base {
+}
+declare const BetaResponseWebSearchToolResultErrorType_base: S.Literal<["web_search_tool_result_error"]>;
+export declare class BetaResponseWebSearchToolResultErrorType extends BetaResponseWebSearchToolResultErrorType_base {
+}
+declare const BetaResponseWebSearchToolResultError_base: S.Struct<{
+    error_code: typeof BetaWebSearchToolResultErrorCode;
+    type: typeof BetaResponseWebSearchToolResultErrorType;
+}>;
+export declare class BetaResponseWebSearchToolResultError extends BetaResponseWebSearchToolResultError_base {
+}
+declare const BetaResponseWebSearchResultBlockType_base: S.Literal<["web_search_result"]>;
+export declare class BetaResponseWebSearchResultBlockType extends BetaResponseWebSearchResultBlockType_base {
+}
+declare const BetaResponseWebSearchResultBlock_base: S.Struct<{
+    encrypted_content: typeof S.String;
+    page_age: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    title: typeof S.String;
+    type: typeof BetaResponseWebSearchResultBlockType;
+    url: typeof S.String;
+}>;
+export declare class BetaResponseWebSearchResultBlock extends BetaResponseWebSearchResultBlock_base {
+}
+declare const BetaResponseWebSearchToolResultBlockType_base: S.Literal<["web_search_tool_result"]>;
+export declare class BetaResponseWebSearchToolResultBlockType extends BetaResponseWebSearchToolResultBlockType_base {
+}
+declare const BetaResponseWebSearchToolResultBlock_base: S.Struct<{
+    content: S.Union<[typeof BetaResponseWebSearchToolResultError, S.Array$<typeof BetaResponseWebSearchResultBlock>]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaResponseWebSearchToolResultBlockType;
+}>;
+export declare class BetaResponseWebSearchToolResultBlock extends BetaResponseWebSearchToolResultBlock_base {
+}
+declare const BetaResponseCodeExecutionToolResultErrorType_base: S.Literal<["code_execution_tool_result_error"]>;
+export declare class BetaResponseCodeExecutionToolResultErrorType extends BetaResponseCodeExecutionToolResultErrorType_base {
+}
+declare const BetaResponseCodeExecutionToolResultError_base: S.Struct<{
+    error_code: typeof BetaCodeExecutionToolResultErrorCode;
+    type: typeof BetaResponseCodeExecutionToolResultErrorType;
+}>;
+export declare class BetaResponseCodeExecutionToolResultError extends BetaResponseCodeExecutionToolResultError_base {
+}
+declare const BetaResponseCodeExecutionOutputBlockType_base: S.Literal<["code_execution_output"]>;
+export declare class BetaResponseCodeExecutionOutputBlockType extends BetaResponseCodeExecutionOutputBlockType_base {
+}
+declare const BetaResponseCodeExecutionOutputBlock_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaResponseCodeExecutionOutputBlockType;
+}>;
+export declare class BetaResponseCodeExecutionOutputBlock extends BetaResponseCodeExecutionOutputBlock_base {
+}
+declare const BetaResponseCodeExecutionResultBlockType_base: S.Literal<["code_execution_result"]>;
+export declare class BetaResponseCodeExecutionResultBlockType extends BetaResponseCodeExecutionResultBlockType_base {
+}
+declare const BetaResponseCodeExecutionResultBlock_base: S.Struct<{
+    content: S.Array$<typeof BetaResponseCodeExecutionOutputBlock>;
+    return_code: typeof S.Int;
+    stderr: typeof S.String;
+    stdout: typeof S.String;
+    type: typeof BetaResponseCodeExecutionResultBlockType;
+}>;
+export declare class BetaResponseCodeExecutionResultBlock extends BetaResponseCodeExecutionResultBlock_base {
+}
+declare const BetaResponseCodeExecutionToolResultBlockType_base: S.Literal<["code_execution_tool_result"]>;
+export declare class BetaResponseCodeExecutionToolResultBlockType extends BetaResponseCodeExecutionToolResultBlockType_base {
+}
+declare const BetaResponseCodeExecutionToolResultBlock_base: S.Struct<{
+    content: S.Union<[typeof BetaResponseCodeExecutionToolResultError, typeof BetaResponseCodeExecutionResultBlock]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaResponseCodeExecutionToolResultBlockType;
+}>;
+export declare class BetaResponseCodeExecutionToolResultBlock extends BetaResponseCodeExecutionToolResultBlock_base {
+}
+declare const BetaResponseMCPToolUseBlockType_base: S.Literal<["mcp_tool_use"]>;
+export declare class BetaResponseMCPToolUseBlockType extends BetaResponseMCPToolUseBlockType_base {
+}
+declare const BetaResponseMCPToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof S.String;
+    server_name: typeof S.String;
+    type: typeof BetaResponseMCPToolUseBlockType;
+}>;
+export declare class BetaResponseMCPToolUseBlock extends BetaResponseMCPToolUseBlock_base {
+}
+declare const BetaResponseMCPToolResultBlockType_base: S.Literal<["mcp_tool_result"]>;
+export declare class BetaResponseMCPToolResultBlockType extends BetaResponseMCPToolResultBlockType_base {
+}
+declare const BetaResponseMCPToolResultBlock_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<typeof BetaResponseTextBlock>]>;
+    is_error: typeof S.Boolean;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaResponseMCPToolResultBlockType;
+}>;
+export declare class BetaResponseMCPToolResultBlock extends BetaResponseMCPToolResultBlock_base {
+}
+declare const BetaResponseContainerUploadBlockType_base: S.Literal<["container_upload"]>;
+export declare class BetaResponseContainerUploadBlockType extends BetaResponseContainerUploadBlockType_base {
+}
+declare const BetaResponseContainerUploadBlock_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaResponseContainerUploadBlockType;
+}>;
+export declare class BetaResponseContainerUploadBlock extends BetaResponseContainerUploadBlock_base {
+}
+declare const BetaResponseThinkingBlockType_base: S.Literal<["thinking"]>;
+export declare class BetaResponseThinkingBlockType extends BetaResponseThinkingBlockType_base {
+}
+declare const BetaResponseThinkingBlock_base: S.Struct<{
+    signature: typeof S.String;
+    thinking: typeof S.String;
+    type: typeof BetaResponseThinkingBlockType;
+}>;
+export declare class BetaResponseThinkingBlock extends BetaResponseThinkingBlock_base {
+}
+declare const BetaResponseRedactedThinkingBlockType_base: S.Literal<["redacted_thinking"]>;
+export declare class BetaResponseRedactedThinkingBlockType extends BetaResponseRedactedThinkingBlockType_base {
+}
+declare const BetaResponseRedactedThinkingBlock_base: S.Struct<{
+    data: typeof S.String;
+    type: typeof BetaResponseRedactedThinkingBlockType;
+}>;
+export declare class BetaResponseRedactedThinkingBlock extends BetaResponseRedactedThinkingBlock_base {
+}
+declare const BetaContentBlock_base: S.Union<[typeof BetaResponseTextBlock, typeof BetaResponseToolUseBlock, typeof BetaResponseServerToolUseBlock, typeof BetaResponseWebSearchToolResultBlock, typeof BetaResponseCodeExecutionToolResultBlock, typeof BetaResponseMCPToolUseBlock, typeof BetaResponseMCPToolResultBlock, typeof BetaResponseContainerUploadBlock, typeof BetaResponseThinkingBlock, typeof BetaResponseRedactedThinkingBlock]>;
+export declare class BetaContentBlock extends BetaContentBlock_base {
+}
+declare const BetaStopReason_base: S.Literal<["end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal"]>;
+export declare class BetaStopReason extends BetaStopReason_base {
+}
+declare const BetaCacheCreation_base: S.Struct<{
+    ephemeral_1h_input_tokens: S.filter<typeof S.Int>;
+    ephemeral_5m_input_tokens: S.filter<typeof S.Int>;
+}>;
+export declare class BetaCacheCreation extends BetaCacheCreation_base {
+}
+declare const BetaServerToolUsage_base: S.Struct<{
+    web_search_requests: S.filter<typeof S.Int>;
+}>;
+export declare class BetaServerToolUsage extends BetaServerToolUsage_base {
+}
+declare const BetaUsageServiceTierEnum_base: S.Literal<["standard", "priority", "batch"]>;
+export declare class BetaUsageServiceTierEnum extends BetaUsageServiceTierEnum_base {
+}
+declare const BetaUsage_base: S.Struct<{
+    cache_creation: S.NullOr<S.Union<[typeof BetaCacheCreation, typeof S.Null]>>;
+    cache_creation_input_tokens: S.NullOr<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>>;
+    cache_read_input_tokens: S.NullOr<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>>;
+    input_tokens: S.filter<typeof S.Int>;
+    output_tokens: S.filter<typeof S.Int>;
+    server_tool_use: S.optional<S.NullOr<typeof BetaServerToolUsage>>;
+    service_tier: S.NullOr<S.Union<[typeof BetaUsageServiceTierEnum, typeof S.Null]>>;
+}>;
+export declare class BetaUsage extends BetaUsage_base {
+}
+declare const BetaContainer_base: S.Struct<{
+    expires_at: typeof S.String;
+    id: typeof S.String;
+}>;
+export declare class BetaContainer extends BetaContainer_base {
+}
+declare const BetaMessage_base: S.Class<BetaMessage, {
+    id: typeof S.String;
+    type: typeof BetaMessageType;
+    role: typeof BetaMessageRole;
+    content: S.Array$<typeof BetaContentBlock>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof BetaStopReason, typeof S.Null]>;
+    stop_sequence: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    usage: typeof BetaUsage;
+    container: S.NullOr<S.Union<[typeof BetaContainer, typeof S.Null]>>;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: typeof BetaMessageType;
+    role: typeof BetaMessageRole;
+    content: S.Array$<typeof BetaContentBlock>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof BetaStopReason, typeof S.Null]>;
+    stop_sequence: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    usage: typeof BetaUsage;
+    container: S.NullOr<S.Union<[typeof BetaContainer, typeof S.Null]>>;
+}>, never, {
+    readonly type: "message";
+} & {
+    readonly id: string;
+} & {
+    readonly content: readonly ({
+        readonly type: "text";
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    } | {
+        readonly type: "tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: string;
+    } | {
+        readonly type: "server_tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: "web_search" | "code_execution";
+    } | {
+        readonly type: "web_search_tool_result";
+        readonly content: {
+            readonly type: "web_search_tool_result_error";
+            readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+        } | readonly {
+            readonly type: "web_search_result";
+            readonly encrypted_content: string;
+            readonly page_age: string | null;
+            readonly title: string;
+            readonly url: string;
+        }[];
+        readonly tool_use_id: string;
+    } | {
+        readonly type: "code_execution_tool_result";
+        readonly content: {
+            readonly type: "code_execution_tool_result_error";
+            readonly error_code: "invalid_tool_input" | "unavailable" | "too_many_requests" | "execution_time_exceeded";
+        } | {
+            readonly type: "code_execution_result";
+            readonly content: readonly {
+                readonly type: "code_execution_output";
+                readonly file_id: string;
+            }[];
+            readonly return_code: number;
+            readonly stderr: string;
+            readonly stdout: string;
+        };
+        readonly tool_use_id: string;
+    } | {
+        readonly type: "mcp_tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: string;
+        readonly server_name: string;
+    } | {
+        readonly type: "mcp_tool_result";
+        readonly content: string | readonly {
+            readonly type: "text";
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        }[];
+        readonly tool_use_id: string;
+        readonly is_error: boolean;
+    } | {
+        readonly type: "container_upload";
+        readonly file_id: string;
+    } | {
+        readonly type: "thinking";
+        readonly thinking: string;
+        readonly signature: string;
+    } | {
+        readonly type: "redacted_thinking";
+        readonly data: string;
+    })[];
+} & {
+    readonly role: "assistant";
+} & {
+    readonly model: string;
+} & {
+    readonly stop_sequence: string | null;
+} & {
+    readonly usage: {
+        readonly server_tool_use?: {
+            readonly web_search_requests: number;
+        } | null | undefined;
+        readonly service_tier: "standard" | "priority" | "batch" | null;
+        readonly cache_creation_input_tokens: number | null;
+        readonly cache_read_input_tokens: number | null;
+        readonly input_tokens: number;
+        readonly output_tokens: number;
+        readonly cache_creation: {
+            readonly ephemeral_1h_input_tokens: number;
+            readonly ephemeral_5m_input_tokens: number;
+        } | null;
+    };
+} & {
+    readonly stop_reason: "tool_use" | "max_tokens" | "end_turn" | "stop_sequence" | "pause_turn" | "refusal" | null;
+} & {
+    readonly container: {
+        readonly id: string;
+        readonly expires_at: string;
+    } | null;
+}, {}, {}>;
+export declare class BetaMessage extends BetaMessage_base {
+}
+declare const BetaInvalidRequestErrorType_base: S.Literal<["invalid_request_error"]>;
+export declare class BetaInvalidRequestErrorType extends BetaInvalidRequestErrorType_base {
+}
+declare const BetaInvalidRequestError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaInvalidRequestErrorType;
+}>;
+export declare class BetaInvalidRequestError extends BetaInvalidRequestError_base {
+}
+declare const BetaAuthenticationErrorType_base: S.Literal<["authentication_error"]>;
+export declare class BetaAuthenticationErrorType extends BetaAuthenticationErrorType_base {
+}
+declare const BetaAuthenticationError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaAuthenticationErrorType;
+}>;
+export declare class BetaAuthenticationError extends BetaAuthenticationError_base {
+}
+declare const BetaBillingErrorType_base: S.Literal<["billing_error"]>;
+export declare class BetaBillingErrorType extends BetaBillingErrorType_base {
+}
+declare const BetaBillingError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaBillingErrorType;
+}>;
+export declare class BetaBillingError extends BetaBillingError_base {
+}
+declare const BetaPermissionErrorType_base: S.Literal<["permission_error"]>;
+export declare class BetaPermissionErrorType extends BetaPermissionErrorType_base {
+}
+declare const BetaPermissionError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaPermissionErrorType;
+}>;
+export declare class BetaPermissionError extends BetaPermissionError_base {
+}
+declare const BetaNotFoundErrorType_base: S.Literal<["not_found_error"]>;
+export declare class BetaNotFoundErrorType extends BetaNotFoundErrorType_base {
+}
+declare const BetaNotFoundError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaNotFoundErrorType;
+}>;
+export declare class BetaNotFoundError extends BetaNotFoundError_base {
+}
+declare const BetaRateLimitErrorType_base: S.Literal<["rate_limit_error"]>;
+export declare class BetaRateLimitErrorType extends BetaRateLimitErrorType_base {
+}
+declare const BetaRateLimitError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaRateLimitErrorType;
+}>;
+export declare class BetaRateLimitError extends BetaRateLimitError_base {
+}
+declare const BetaGatewayTimeoutErrorType_base: S.Literal<["timeout_error"]>;
+export declare class BetaGatewayTimeoutErrorType extends BetaGatewayTimeoutErrorType_base {
+}
+declare const BetaGatewayTimeoutError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaGatewayTimeoutErrorType;
+}>;
+export declare class BetaGatewayTimeoutError extends BetaGatewayTimeoutError_base {
+}
+declare const BetaAPIErrorType_base: S.Literal<["api_error"]>;
+export declare class BetaAPIErrorType extends BetaAPIErrorType_base {
+}
+declare const BetaAPIError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaAPIErrorType;
+}>;
+export declare class BetaAPIError extends BetaAPIError_base {
+}
+declare const BetaOverloadedErrorType_base: S.Literal<["overloaded_error"]>;
+export declare class BetaOverloadedErrorType extends BetaOverloadedErrorType_base {
+}
+declare const BetaOverloadedError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaOverloadedErrorType;
+}>;
+export declare class BetaOverloadedError extends BetaOverloadedError_base {
+}
+declare const BetaErrorResponseType_base: S.Literal<["error"]>;
+export declare class BetaErrorResponseType extends BetaErrorResponseType_base {
+}
+declare const BetaErrorResponse_base: S.Class<BetaErrorResponse, {
+    error: S.Union<[typeof BetaInvalidRequestError, typeof BetaAuthenticationError, typeof BetaBillingError, typeof BetaPermissionError, typeof BetaNotFoundError, typeof BetaRateLimitError, typeof BetaGatewayTimeoutError, typeof BetaAPIError, typeof BetaOverloadedError]>;
+    type: typeof BetaErrorResponseType;
+}, S.Struct.Encoded<{
+    error: S.Union<[typeof BetaInvalidRequestError, typeof BetaAuthenticationError, typeof BetaBillingError, typeof BetaPermissionError, typeof BetaNotFoundError, typeof BetaRateLimitError, typeof BetaGatewayTimeoutError, typeof BetaAPIError, typeof BetaOverloadedError]>;
+    type: typeof BetaErrorResponseType;
+}>, never, {
+    readonly type: "error";
+} & {
+    readonly error: {
+        readonly type: "invalid_request_error";
+        readonly message: string;
+    } | {
+        readonly type: "authentication_error";
+        readonly message: string;
+    } | {
+        readonly type: "billing_error";
+        readonly message: string;
+    } | {
+        readonly type: "permission_error";
+        readonly message: string;
+    } | {
+        readonly type: "not_found_error";
+        readonly message: string;
+    } | {
+        readonly type: "rate_limit_error";
+        readonly message: string;
+    } | {
+        readonly type: "timeout_error";
+        readonly message: string;
+    } | {
+        readonly type: "api_error";
+        readonly message: string;
+    } | {
+        readonly type: "overloaded_error";
+        readonly message: string;
+    };
+}, {}, {}>;
+export declare class BetaErrorResponse extends BetaErrorResponse_base {
+}
+declare const BetaModelsListParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaModelsListParams extends BetaModelsListParams_base {
+}
+declare const BetaModelInfoType_base: S.Literal<["model"]>;
+export declare class BetaModelInfoType extends BetaModelInfoType_base {
+}
+declare const BetaModelInfo_base: S.Struct<{
+    created_at: typeof S.String;
+    display_name: typeof S.String;
+    id: typeof S.String;
+    type: typeof BetaModelInfoType;
+}>;
+export declare class BetaModelInfo extends BetaModelInfo_base {
+}
+declare const BetaListResponseModelInfo_base: S.Class<BetaListResponseModelInfo, {
+    data: S.Array$<typeof BetaModelInfo>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof BetaModelInfo>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "model";
+        readonly id: string;
+        readonly created_at: string;
+        readonly display_name: string;
+    }[];
+} & {
+    readonly has_more: boolean;
+} & {
+    readonly first_id: string | null;
+} & {
+    readonly last_id: string | null;
+}, {}, {}>;
+export declare class BetaListResponseModelInfo extends BetaListResponseModelInfo_base {
+}
+declare const BetaModelsGetParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaModelsGetParams extends BetaModelsGetParams_base {
+}
+declare const BetaMessageBatchesListParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesListParams extends BetaMessageBatchesListParams_base {
+}
+declare const BetaMessageBatchProcessingStatus_base: S.Literal<["in_progress", "canceling", "ended"]>;
+export declare class BetaMessageBatchProcessingStatus extends BetaMessageBatchProcessingStatus_base {
+}
+declare const BetaRequestCounts_base: S.Struct<{
+    canceled: typeof S.Int;
+    errored: typeof S.Int;
+    expired: typeof S.Int;
+    processing: typeof S.Int;
+    succeeded: typeof S.Int;
+}>;
+export declare class BetaRequestCounts extends BetaRequestCounts_base {
+}
+declare const BetaMessageBatchType_base: S.Literal<["message_batch"]>;
+export declare class BetaMessageBatchType extends BetaMessageBatchType_base {
+}
+declare const BetaMessageBatch_base: S.Struct<{
+    archived_at: S.Union<[typeof S.String, typeof S.Null]>;
+    cancel_initiated_at: S.Union<[typeof S.String, typeof S.Null]>;
+    created_at: typeof S.String;
+    ended_at: S.Union<[typeof S.String, typeof S.Null]>;
+    expires_at: typeof S.String;
+    id: typeof S.String;
+    processing_status: typeof BetaMessageBatchProcessingStatus;
+    request_counts: typeof BetaRequestCounts;
+    results_url: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof BetaMessageBatchType;
+}>;
+export declare class BetaMessageBatch extends BetaMessageBatch_base {
+}
+declare const BetaListResponseMessageBatch_base: S.Class<BetaListResponseMessageBatch, {
+    data: S.Array$<typeof BetaMessageBatch>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof BetaMessageBatch>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "message_batch";
+        readonly id: string;
+        readonly created_at: string;
+        readonly archived_at: string | null;
+        readonly cancel_initiated_at: string | null;
+        readonly ended_at: string | null;
+        readonly expires_at: string;
+        readonly processing_status: "in_progress" | "canceling" | "ended";
+        readonly request_counts: {
+            readonly canceled: number;
+            readonly errored: number;
+            readonly expired: number;
+            readonly processing: number;
+            readonly succeeded: number;
+        };
+        readonly results_url: string | null;
+    }[];
+} & {
+    readonly has_more: boolean;
+} & {
+    readonly first_id: string | null;
+} & {
+    readonly last_id: string | null;
+}, {}, {}>;
+export declare class BetaListResponseMessageBatch extends BetaListResponseMessageBatch_base {
+}
+declare const BetaMessageBatchesPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesPostParams extends BetaMessageBatchesPostParams_base {
+}
+declare const BetaMessageBatchIndividualRequestParams_base: S.Struct<{
+    custom_id: S.filter<S.filter<S.filter<typeof S.String>>>;
+    params: typeof BetaCreateMessageParams;
+}>;
+export declare class BetaMessageBatchIndividualRequestParams extends BetaMessageBatchIndividualRequestParams_base {
+}
+declare const BetaCreateMessageBatchParams_base: S.Class<BetaCreateMessageBatchParams, {
+    requests: S.filter<S.filter<S.Array$<typeof BetaMessageBatchIndividualRequestParams>>>;
+}, S.Struct.Encoded<{
+    requests: S.filter<S.filter<S.Array$<typeof BetaMessageBatchIndividualRequestParams>>>;
+}>, never, {
+    readonly requests: readonly {
+        readonly custom_id: string;
+        readonly params: BetaCreateMessageParams;
+    }[];
+}, {}, {}>;
+export declare class BetaCreateMessageBatchParams extends BetaCreateMessageBatchParams_base {
+}
+declare const BetaMessageBatchesRetrieveParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesRetrieveParams extends BetaMessageBatchesRetrieveParams_base {
+}
+declare const BetaMessageBatchesDeleteParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesDeleteParams extends BetaMessageBatchesDeleteParams_base {
+}
+declare const BetaDeleteMessageBatchResponseType_base: S.Literal<["message_batch_deleted"]>;
+export declare class BetaDeleteMessageBatchResponseType extends BetaDeleteMessageBatchResponseType_base {
+}
+declare const BetaDeleteMessageBatchResponse_base: S.Class<BetaDeleteMessageBatchResponse, {
+    id: typeof S.String;
+    type: typeof BetaDeleteMessageBatchResponseType;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: typeof BetaDeleteMessageBatchResponseType;
+}>, never, {
+    readonly type: "message_batch_deleted";
+} & {
+    readonly id: string;
+}, {}, {}>;
+export declare class BetaDeleteMessageBatchResponse extends BetaDeleteMessageBatchResponse_base {
+}
+declare const BetaMessageBatchesCancelParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesCancelParams extends BetaMessageBatchesCancelParams_base {
+}
+declare const BetaMessageBatchesResultsParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesResultsParams extends BetaMessageBatchesResultsParams_base {
+}
+declare const BetaMessagesCountTokensPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessagesCountTokensPostParams extends BetaMessagesCountTokensPostParams_base {
+}
+declare const BetaCountMessageTokensParams_base: S.Class<BetaCountMessageTokensParams, {
+    mcp_servers: S.optionalWith<S.filter<S.Array$<typeof BetaRequestMCPServerURLDefinition>>, {
+        nullable: true;
+    }>;
+    messages: S.Array$<typeof BetaInputMessage>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof BetaThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof BetaToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof BetaTool, typeof BetaComputerUseTool20241022, typeof BetaBashTool20241022, typeof BetaTextEditor20241022, typeof BetaComputerUseTool20250124, typeof BetaBashTool20250124, typeof BetaTextEditor20250124, typeof BetaTextEditor20250429, typeof BetaWebSearchTool20250305, typeof BetaCodeExecutionTool20250522]>>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    mcp_servers: S.optionalWith<S.filter<S.Array$<typeof BetaRequestMCPServerURLDefinition>>, {
+        nullable: true;
+    }>;
+    messages: S.Array$<typeof BetaInputMessage>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof BetaThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof BetaToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof BetaTool, typeof BetaComputerUseTool20241022, typeof BetaBashTool20241022, typeof BetaTextEditor20241022, typeof BetaComputerUseTool20250124, typeof BetaBashTool20250124, typeof BetaTextEditor20250124, typeof BetaTextEditor20250429, typeof BetaWebSearchTool20250305, typeof BetaCodeExecutionTool20250522]>>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly thinking?: {
+        readonly type: "enabled";
+        readonly budget_tokens: number;
+    } | {
+        readonly type: "disabled";
+    } | undefined;
+} & {
+    readonly model: string;
+} & {
+    readonly messages: readonly {
+        readonly content: string | readonly ({
+            readonly type: "server_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: "web_search" | "code_execution";
+        } | {
+            readonly type: "web_search_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content: {
+                readonly type: "web_search_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+            } | readonly {
+                readonly type: "web_search_result";
+                readonly encrypted_content: string;
+                readonly page_age?: string | null | undefined;
+                readonly title: string;
+                readonly url: string;
+            }[];
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "code_execution_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content: {
+                readonly type: "code_execution_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "too_many_requests" | "execution_time_exceeded";
+            } | {
+                readonly type: "code_execution_result";
+                readonly content: readonly {
+                    readonly type: "code_execution_output";
+                    readonly file_id: string;
+                }[];
+                readonly return_code: number;
+                readonly stderr: string;
+                readonly stdout: string;
+            };
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "mcp_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+            readonly server_name: string;
+        } | {
+            readonly type: "text";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        } | {
+            readonly type: "mcp_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content?: string | readonly {
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            }[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "image";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            } | {
+                readonly type: "file";
+                readonly file_id: string;
+            };
+        } | {
+            readonly type: "tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+        } | {
+            readonly type: "tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content?: string | readonly ({
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            } | {
+                readonly type: "image";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly source: {
+                    readonly type: "base64";
+                    readonly data: string;
+                    readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                } | {
+                    readonly type: "url";
+                    readonly url: string;
+                } | {
+                    readonly type: "file";
+                    readonly file_id: string;
+                };
+            })[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "document";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly title?: string | null | undefined;
+            readonly citations?: {
+                readonly enabled?: boolean | undefined;
+            } | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "application/pdf";
+            } | {
+                readonly type: "text";
+                readonly data: string;
+                readonly media_type: "text/plain";
+            } | {
+                readonly type: "content";
+                readonly content: string | readonly ({
+                    readonly type: "text";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                        readonly ttl?: "5m" | "1h" | undefined;
+                    } | null | undefined;
+                    readonly text: string;
+                    readonly citations?: readonly ({
+                        readonly type: "char_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_char_index: number;
+                        readonly start_char_index: number;
+                    } | {
+                        readonly type: "page_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_page_number: number;
+                        readonly start_page_number: number;
+                    } | {
+                        readonly type: "content_block_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_block_index: number;
+                        readonly start_block_index: number;
+                    } | {
+                        readonly type: "web_search_result_location";
+                        readonly title: string | null;
+                        readonly url: string;
+                        readonly cited_text: string;
+                        readonly encrypted_index: string;
+                    })[] | null | undefined;
+                } | {
+                    readonly type: "image";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                        readonly ttl?: "5m" | "1h" | undefined;
+                    } | null | undefined;
+                    readonly source: {
+                        readonly type: "base64";
+                        readonly data: string;
+                        readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                    } | {
+                        readonly type: "url";
+                        readonly url: string;
+                    } | {
+                        readonly type: "file";
+                        readonly file_id: string;
+                    };
+                })[];
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            } | {
+                readonly type: "file";
+                readonly file_id: string;
+            };
+            readonly context?: string | null | undefined;
+        } | {
+            readonly type: "thinking";
+            readonly thinking: string;
+            readonly signature: string;
+        } | {
+            readonly type: "redacted_thinking";
+            readonly data: string;
+        } | {
+            readonly type: "container_upload";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly file_id: string;
+        })[];
+        readonly role: "user" | "assistant";
+    }[];
+} & {
+    readonly system?: string | readonly {
+        readonly type: "text";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    }[] | undefined;
+} & {
+    readonly tool_choice?: {
+        readonly type: "auto";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "any";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "tool";
+        readonly name: string;
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "none";
+    } | undefined;
+} & {
+    readonly tools?: readonly ({
+        readonly type?: "custom" | null | undefined;
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: string;
+        readonly description?: string | undefined;
+        readonly input_schema: {
+            readonly type: "object";
+            readonly properties?: {
+                readonly [x: string]: unknown;
+            } | null | undefined;
+            readonly required?: readonly string[] | null | undefined;
+        };
+    } | {
+        readonly type: "computer_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "computer";
+        readonly display_height_px: number;
+        readonly display_number?: number | null | undefined;
+        readonly display_width_px: number;
+    } | {
+        readonly type: "bash_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "computer_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "computer";
+        readonly display_height_px: number;
+        readonly display_number?: number | null | undefined;
+        readonly display_width_px: number;
+    } | {
+        readonly type: "bash_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "text_editor_20250429";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_based_edit_tool";
+    } | {
+        readonly type: "web_search_20250305";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "web_search";
+        readonly allowed_domains?: readonly string[] | null | undefined;
+        readonly blocked_domains?: readonly string[] | null | undefined;
+        readonly max_uses?: number | null | undefined;
+        readonly user_location?: {
+            readonly type: "approximate";
+            readonly city?: string | null | undefined;
+            readonly country?: string | null | undefined;
+            readonly region?: string | null | undefined;
+            readonly timezone?: string | null | undefined;
+        } | null | undefined;
+    } | {
+        readonly type: "code_execution_20250522";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "code_execution";
+    })[] | undefined;
+} & {
+    readonly mcp_servers?: readonly {
+        readonly type: "url";
+        readonly name: string;
+        readonly url: string;
+        readonly authorization_token?: string | null | undefined;
+        readonly tool_configuration?: {
+            readonly enabled?: boolean | null | undefined;
+            readonly allowed_tools?: readonly string[] | null | undefined;
+        } | null | undefined;
+    }[] | undefined;
+}, {}, {}>;
+export declare class BetaCountMessageTokensParams extends BetaCountMessageTokensParams_base {
+}
+declare const BetaCountMessageTokensResponse_base: S.Class<BetaCountMessageTokensResponse, {
+    input_tokens: typeof S.Int;
+}, S.Struct.Encoded<{
+    input_tokens: typeof S.Int;
+}>, never, {
+    readonly input_tokens: number;
+}, {}, {}>;
+export declare class BetaCountMessageTokensResponse extends BetaCountMessageTokensResponse_base {
+}
+declare const BetaListFilesV1FilesGetParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaListFilesV1FilesGetParams extends BetaListFilesV1FilesGetParams_base {
+}
+declare const BetaFileMetadataSchemaType_base: S.Literal<["file"]>;
+export declare class BetaFileMetadataSchemaType extends BetaFileMetadataSchemaType_base {
+}
+declare const BetaFileMetadataSchema_base: S.Struct<{
+    created_at: typeof S.String;
+    downloadable: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    filename: S.filter<S.filter<typeof S.String>>;
+    id: typeof S.String;
+    mime_type: S.filter<S.filter<typeof S.String>>;
+    size_bytes: S.filter<typeof S.Int>;
+    type: typeof BetaFileMetadataSchemaType;
+}>;
+export declare class BetaFileMetadataSchema extends BetaFileMetadataSchema_base {
+}
+declare const BetaFileListResponse_base: S.Class<BetaFileListResponse, {
+    data: S.Array$<typeof BetaFileMetadataSchema>;
+    first_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    has_more: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    last_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof BetaFileMetadataSchema>;
+    first_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    has_more: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    last_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "file";
+        readonly id: string;
+        readonly created_at: string;
+        readonly downloadable?: boolean | undefined;
+        readonly filename: string;
+        readonly mime_type: string;
+        readonly size_bytes: number;
+    }[];
+} & {
+    readonly has_more?: boolean | undefined;
+} & {
+    readonly first_id?: string | null | undefined;
+} & {
+    readonly last_id?: string | null | undefined;
+}, {}, {}>;
+export declare class BetaFileListResponse extends BetaFileListResponse_base {
+}
+declare const BetaUploadFileV1FilesPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaUploadFileV1FilesPostParams extends BetaUploadFileV1FilesPostParams_base {
+}
+declare const BetaGetFileMetadataV1FilesFileIdGetParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaGetFileMetadataV1FilesFileIdGetParams extends BetaGetFileMetadataV1FilesFileIdGetParams_base {
+}
+declare const BetaDeleteFileV1FilesFileIdDeleteParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaDeleteFileV1FilesFileIdDeleteParams extends BetaDeleteFileV1FilesFileIdDeleteParams_base {
+}
+declare const BetaFileDeleteResponseType_base: S.Literal<["file_deleted"]>;
+export declare class BetaFileDeleteResponseType extends BetaFileDeleteResponseType_base {
+}
+declare const BetaFileDeleteResponse_base: S.Class<BetaFileDeleteResponse, {
+    id: typeof S.String;
+    type: S.optionalWith<typeof BetaFileDeleteResponseType, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: S.optionalWith<typeof BetaFileDeleteResponseType, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly type?: "file_deleted" | undefined;
+} & {
+    readonly id: string;
+}, {}, {}>;
+export declare class BetaFileDeleteResponse extends BetaFileDeleteResponse_base {
+}
+declare const BetaDownloadFileV1FilesFileIdContentGetParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaDownloadFileV1FilesFileIdContentGetParams extends BetaDownloadFileV1FilesFileIdContentGetParams_base {
+}
+export declare const make: (httpClient: HttpClient.HttpClient, options?: {
+    readonly transformClient?: ((client: HttpClient.HttpClient) => Effect.Effect<HttpClient.HttpClient>) | undefined;
+}) => Client;
+export interface Client {
+    readonly httpClient: HttpClient.HttpClient;
+    readonly "messagesPost": (options: {
+        readonly params?: typeof MessagesPostParams.Encoded | undefined;
+        readonly payload: typeof CreateMessageParams.Encoded;
+    }) => Effect.Effect<typeof Message.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "completePost": (options: {
+        readonly params?: typeof CompletePostParams.Encoded | undefined;
+        readonly payload: typeof CompletionRequest.Encoded;
+    }) => Effect.Effect<typeof CompletionResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "modelsList": (options?: typeof ModelsListParams.Encoded | undefined) => Effect.Effect<typeof ListResponseModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "modelsGet": (modelId: string, options?: typeof ModelsGetParams.Encoded | undefined) => Effect.Effect<typeof ModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesList": (options?: typeof MessageBatchesListParams.Encoded | undefined) => Effect.Effect<typeof ListResponseMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesPost": (options: {
+        readonly params?: typeof MessageBatchesPostParams.Encoded | undefined;
+        readonly payload: typeof CreateMessageBatchParams.Encoded;
+    }) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesRetrieve": (messageBatchId: string, options?: typeof MessageBatchesRetrieveParams.Encoded | undefined) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesDelete": (messageBatchId: string, options?: typeof MessageBatchesDeleteParams.Encoded | undefined) => Effect.Effect<typeof DeleteMessageBatchResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesCancel": (messageBatchId: string, options?: typeof MessageBatchesCancelParams.Encoded | undefined) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesResults": (messageBatchId: string, options?: typeof MessageBatchesResultsParams.Encoded | undefined) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messagesCountTokensPost": (options: {
+        readonly params?: typeof MessagesCountTokensPostParams.Encoded | undefined;
+        readonly payload: typeof CountMessageTokensParams.Encoded;
+    }) => Effect.Effect<typeof CountMessageTokensResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "listFilesV1FilesGet": (options?: typeof ListFilesV1FilesGetParams.Encoded | undefined) => Effect.Effect<typeof FileListResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "uploadFileV1FilesPost": (options: {
+        readonly params?: typeof UploadFileV1FilesPostParams.Encoded | undefined;
+        readonly payload: globalThis.FormData;
+    }) => Effect.Effect<typeof FileMetadataSchema.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "getFileMetadataV1FilesFileIdGet": (fileId: string, options?: typeof GetFileMetadataV1FilesFileIdGetParams.Encoded | undefined) => Effect.Effect<typeof FileMetadataSchema.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "deleteFileV1FilesFileIdDelete": (fileId: string, options?: typeof DeleteFileV1FilesFileIdDeleteParams.Encoded | undefined) => Effect.Effect<typeof FileDeleteResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "downloadFileV1FilesFileIdContentGet": (fileId: string, options?: typeof DownloadFileV1FilesFileIdContentGetParams.Encoded | undefined) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError>;
+    readonly "betaMessagesPost": (options: {
+        readonly params?: typeof BetaMessagesPostParams.Encoded | undefined;
+        readonly payload: typeof BetaCreateMessageParams.Encoded;
+    }) => Effect.Effect<typeof BetaMessage.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaModelsList": (options?: typeof BetaModelsListParams.Encoded | undefined) => Effect.Effect<typeof BetaListResponseModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaModelsGet": (modelId: string, options?: typeof BetaModelsGetParams.Encoded | undefined) => Effect.Effect<typeof BetaModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesList": (options?: typeof BetaMessageBatchesListParams.Encoded | undefined) => Effect.Effect<typeof BetaListResponseMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesPost": (options: {
+        readonly params?: typeof BetaMessageBatchesPostParams.Encoded | undefined;
+        readonly payload: typeof BetaCreateMessageBatchParams.Encoded;
+    }) => Effect.Effect<typeof BetaMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesRetrieve": (messageBatchId: string, options?: typeof BetaMessageBatchesRetrieveParams.Encoded | undefined) => Effect.Effect<typeof BetaMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesDelete": (messageBatchId: string, options?: typeof BetaMessageBatchesDeleteParams.Encoded | undefined) => Effect.Effect<typeof BetaDeleteMessageBatchResponse.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesCancel": (messageBatchId: string, options?: typeof BetaMessageBatchesCancelParams.Encoded | undefined) => Effect.Effect<typeof BetaMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesResults": (messageBatchId: string, options?: typeof BetaMessageBatchesResultsParams.Encoded | undefined) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessagesCountTokensPost": (options: {
+        readonly params?: typeof BetaMessagesCountTokensPostParams.Encoded | undefined;
+        readonly payload: typeof BetaCountMessageTokensParams.Encoded;
+    }) => Effect.Effect<typeof BetaCountMessageTokensResponse.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaListFilesV1FilesGet": (options?: typeof BetaListFilesV1FilesGetParams.Encoded | undefined) => Effect.Effect<typeof BetaFileListResponse.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaUploadFileV1FilesPost": (options: {
+        readonly params?: typeof BetaUploadFileV1FilesPostParams.Encoded | undefined;
+        readonly payload: globalThis.FormData;
+    }) => Effect.Effect<typeof BetaFileMetadataSchema.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaGetFileMetadataV1FilesFileIdGet": (fileId: string, options?: typeof BetaGetFileMetadataV1FilesFileIdGetParams.Encoded | undefined) => Effect.Effect<typeof BetaFileMetadataSchema.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaDeleteFileV1FilesFileIdDelete": (fileId: string, options?: typeof BetaDeleteFileV1FilesFileIdDeleteParams.Encoded | undefined) => Effect.Effect<typeof BetaFileDeleteResponse.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaDownloadFileV1FilesFileIdContentGet": (fileId: string, options?: typeof BetaDownloadFileV1FilesFileIdContentGetParams.Encoded | undefined) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError>;
+}
+export {};
+//# sourceMappingURL=Generated.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dist/dts/Generated.d.ts.map b/dist/dist/dist/dts/Generated.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..c51002312f33f27c447b013da9e00a74f6930f73
--- /dev/null
+++ b/dist/dist/dist/dts/Generated.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Generated.d.ts","sourceRoot":"","sources":["../../src/Generated.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dist/dist/dts/index.d.ts b/dist/dist/dist/dts/index.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..8960456adef3639343f0be66b469661f2d93b47b
--- /dev/null
+++ b/dist/dist/dist/dts/index.d.ts
@@ -0,0 +1,21 @@
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicClient from "./AnthropicClient.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicConfig from "./AnthropicConfig.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicLanguageModel from "./AnthropicLanguageModel.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicTokenizer from "./AnthropicTokenizer.js";
+/**
+ * @since 1.0.0
+ */
+export * as Generated from "./Generated.js";
+//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dist/dts/index.d.ts.map b/dist/dist/dist/dts/index.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..a9e213e6b4ad2807ae4f3a3a4b32be3e696e8ec7
--- /dev/null
+++ b/dist/dist/dist/dts/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,KAAK,eAAe,MAAM,sBAAsB,CAAA;AAEvD;;GAEG;AACH,OAAO,KAAK,eAAe,MAAM,sBAAsB,CAAA;AAEvD;;GAEG;AACH,OAAO,KAAK,sBAAsB,MAAM,6BAA6B,CAAA;AAErE;;GAEG;AACH,OAAO,KAAK,kBAAkB,MAAM,yBAAyB,CAAA;AAE7D;;GAEG;AACH,OAAO,KAAK,SAAS,MAAM,gBAAgB,CAAA"}
\ No newline at end of file
diff --git a/dist/dist/dist/dts/internal/utilities.d.ts b/dist/dist/dist/dts/internal/utilities.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..78fd121274a7a45fd47da29a99ec5a06be5cf38a
--- /dev/null
+++ b/dist/dist/dist/dts/internal/utilities.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=utilities.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dist/dts/internal/utilities.d.ts.map b/dist/dist/dist/dts/internal/utilities.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..7a9c238cf441e5b451f895b373acf7bf14ceaaf5
--- /dev/null
+++ b/dist/dist/dist/dts/internal/utilities.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utilities.d.ts","sourceRoot":"","sources":["../../../src/internal/utilities.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/dist/dist/dist/esm/AnthropicClient.js b/dist/dist/dist/esm/AnthropicClient.js
new file mode 100644
index 0000000000000000000000000000000000000000..5f8c899ffe84fae965deac3cc246e244af0de2c7
--- /dev/null
+++ b/dist/dist/dist/esm/AnthropicClient.js
@@ -0,0 +1,247 @@
+/**
+ * @since 1.0.0
+ */
+import * as AiError from "@effect/ai/AiError";
+import * as AiInput from "@effect/ai/AiInput";
+import * as AiResponse from "@effect/ai/AiResponse";
+import * as Sse from "@effect/experimental/Sse";
+import * as HttpBody from "@effect/platform/HttpBody";
+import * as HttpClient from "@effect/platform/HttpClient";
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest";
+import * as Config from "effect/Config";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import { identity } from "effect/Function";
+import * as Layer from "effect/Layer";
+import * as Option from "effect/Option";
+import * as Predicate from "effect/Predicate";
+import * as Redacted from "effect/Redacted";
+import * as Stream from "effect/Stream";
+import { AnthropicConfig } from "./AnthropicConfig.js";
+import * as Generated from "./Generated.js";
+import * as InternalUtilities from "./internal/utilities.js";
+const constDisableValidation = {
+  disableValidation: true
+};
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class AnthropicClient extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicClient")() {}
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = options => Effect.gen(function* () {
+  const httpClient = (yield* HttpClient.HttpClient).pipe(HttpClient.mapRequest(request => request.pipe(HttpClientRequest.prependUrl(options.apiUrl ?? "https://api.anthropic.com"), options.apiKey ? HttpClientRequest.setHeader("x-api-key", Redacted.value(options.apiKey)) : identity, HttpClientRequest.setHeader("anthropic-version", options.anthropicVersion ?? "2023-06-01"), HttpClientRequest.acceptJson)), options.transformClient ? options.transformClient : identity);
+  const httpClientOk = HttpClient.filterStatusOk(httpClient);
+  const client = Generated.make(httpClient, {
+    transformClient: client => AnthropicConfig.getOrUndefined.pipe(Effect.map(config => config?.transformClient ? config.transformClient(client) : client))
+  });
+  const streamRequest = request => httpClientOk.execute(request).pipe(Effect.map(r => r.stream), Stream.unwrapScoped, Stream.decodeText(), Stream.pipeThroughChannel(Sse.makeChannel()), Stream.takeUntil(event => event.event === "message_stop"), Stream.map(event => JSON.parse(event.data)));
+  const stream = request => Stream.suspend(() => {
+    const toolCalls = {};
+    let finishReason = "unknown";
+    let reasoning = undefined;
+    let usage = {
+      inputTokens: 0,
+      outputTokens: 0,
+      totalTokens: 0,
+      reasoningTokens: 0,
+      cacheReadInputTokens: 0,
+      cacheWriteInputTokens: 0
+    };
+    const metadata = {};
+    return streamRequest(HttpClientRequest.post("/v1/messages", {
+      body: HttpBody.unsafeJson({
+        ...request,
+        stream: true
+      })
+    })).pipe(Stream.filterMapEffect(chunk => {
+      const parts = [];
+      switch (chunk.type) {
+        case "message_start":
+          {
+            usage = {
+              inputTokens: chunk.message.usage.input_tokens,
+              outputTokens: chunk.message.usage.output_tokens,
+              totalTokens: chunk.message.usage.input_tokens + chunk.message.usage.output_tokens,
+              reasoningTokens: 0,
+              cacheWriteInputTokens: chunk.message.usage.cache_creation_input_tokens ?? 0,
+              cacheReadInputTokens: chunk.message.usage.cache_read_input_tokens ?? 0
+            };
+            console.error("message_start", JSON.stringify(usage, null, 2));
+            parts.push(new AiResponse.MetadataPart({
+              id: chunk.message.id,
+              model: chunk.message.model
+            }, constDisableValidation));
+            break;
+          }
+        case "message_delta":
+          {
+            usage = {
+              ...usage,
+              outputTokens: chunk.usage.output_tokens,
+              totalTokens: usage.inputTokens + chunk.usage.output_tokens
+            };
+            console.error("message_delta", JSON.stringify(usage, null, 2));
+            if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
+              metadata.stopSequence = chunk.delta.stop_sequence;
+            }
+            finishReason = InternalUtilities.resolveFinishReason(chunk.delta.stop_reason);
+            break;
+          }
+        case "message_stop":
+          {
+            parts.push(new AiResponse.FinishPart({
+              usage,
+              reason: finishReason,
+              providerMetadata: {
+                [InternalUtilities.ProviderMetadataKey]: metadata
+              }
+            }, constDisableValidation));
+            break;
+          }
+        case "content_block_start":
+          {
+            const content = chunk.content_block;
+            switch (content.type) {
+              case "text":
+                {
+                  break;
+                }
+              case "thinking":
+                {
+                  reasoning = {
+                    content: [content.thinking]
+                  };
+                  break;
+                }
+              case "tool_use":
+                {
+                  toolCalls[chunk.index] = {
+                    id: content.id,
+                    name: content.name,
+                    params: ""
+                  };
+                  break;
+                }
+              case "redacted_thinking":
+                {
+                  parts.push(new AiResponse.RedactedReasoningPart({
+                    redactedText: content.data
+                  }, constDisableValidation));
+                  break;
+                }
+            }
+            break;
+          }
+        case "content_block_delta":
+          {
+            switch (chunk.delta.type) {
+              case "text_delta":
+                {
+                  parts.push(new AiResponse.TextPart({
+                    text: chunk.delta.text
+                  }, constDisableValidation));
+                  break;
+                }
+              case "thinking_delta":
+                {
+                  if (Predicate.isNotUndefined(reasoning)) {
+                    reasoning.content.push(chunk.delta.thinking);
+                  }
+                  break;
+                }
+              case "signature_delta":
+                {
+                  if (Predicate.isNotUndefined(reasoning)) {
+                    reasoning = {
+                      ...reasoning,
+                      signature: chunk.delta.signature
+                    };
+                  }
+                  break;
+                }
+              case "input_json_delta":
+                {
+                  const tool = toolCalls[chunk.index];
+                  if (Predicate.isNotUndefined(tool)) {
+                    tool.params += chunk.delta.partial_json;
+                  }
+                  break;
+                }
+              // TODO: add support for citations (?)
+              case "citations_delta":
+                {
+                  break;
+                }
+            }
+            break;
+          }
+        case "content_block_stop":
+          {
+            if (Predicate.isNotUndefined(toolCalls[chunk.index])) {
+              const tool = toolCalls[chunk.index];
+              try {
+                // If the tool call has no parameters, the model sends an empty string.
+                const inputJson = tool.params === "" ? "{}" : tool.params;
+                const params = JSON.parse(inputJson);
+                parts.push(new AiResponse.ToolCallPart({
+                  id: AiInput.ToolCallId.make(tool.id, constDisableValidation),
+                  name: tool.name,
+                  params
+                }, constDisableValidation));
+                delete toolCalls[chunk.index];
+                // eslint-disable-next-line no-empty
+              } catch {}
+            }
+            if (Predicate.isNotUndefined(reasoning)) {
+              parts.push(new AiResponse.ReasoningPart({
+                reasoningText: reasoning.content.join(""),
+                signature: reasoning.signature
+              }, constDisableValidation));
+              reasoning = undefined;
+            }
+            break;
+          }
+        case "error":
+          {
+            return Option.some(Effect.die(new AiError.AiError({
+              module: "AnthropicClient",
+              method: "stream",
+              description: `${chunk.error.type}: ${chunk.error.message}`
+            })));
+          }
+      }
+      return parts.length === 0 ? Option.none() : Option.some(Effect.succeed(AiResponse.AiResponse.make({
+        parts
+      }, constDisableValidation)));
+    }));
+  });
+  return AnthropicClient.of({
+    client,
+    streamRequest,
+    stream
+  });
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = options => Layer.effect(AnthropicClient, make(options));
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layerConfig = options => {
+  const {
+    transformClient,
+    ...configs
+  } = options;
+  return Config.all(configs).pipe(Effect.flatMap(configs => make({
+    ...configs,
+    transformClient
+  })), Layer.effect(AnthropicClient));
+};
+//# sourceMappingURL=AnthropicClient.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/esm/AnthropicClient.js.map b/dist/dist/dist/esm/AnthropicClient.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..8a01c73fbf7691b245650445dfbd458f0b8222dd
--- /dev/null
+++ b/dist/dist/dist/esm/AnthropicClient.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicClient.js","names":["AiError","AiInput","AiResponse","Sse","HttpBody","HttpClient","HttpClientRequest","Config","Context","Effect","identity","Layer","Option","Predicate","Redacted","Stream","AnthropicConfig","Generated","InternalUtilities","constDisableValidation","disableValidation","AnthropicClient","Tag","make","options","gen","httpClient","pipe","mapRequest","request","prependUrl","apiUrl","apiKey","setHeader","value","anthropicVersion","acceptJson","transformClient","httpClientOk","filterStatusOk","client","getOrUndefined","map","config","streamRequest","execute","r","stream","unwrapScoped","decodeText","pipeThroughChannel","makeChannel","takeUntil","event","JSON","parse","data","suspend","toolCalls","finishReason","reasoning","undefined","usage","inputTokens","outputTokens","totalTokens","reasoningTokens","cacheReadInputTokens","cacheWriteInputTokens","metadata","post","body","unsafeJson","filterMapEffect","chunk","parts","type","message","input_tokens","output_tokens","cache_creation_input_tokens","cache_read_input_tokens","console","error","stringify","push","MetadataPart","id","model","isNotNullable","delta","stop_sequence","stopSequence","resolveFinishReason","stop_reason","FinishPart","reason","providerMetadata","ProviderMetadataKey","content","content_block","thinking","index","name","params","RedactedReasoningPart","redactedText","TextPart","text","isNotUndefined","signature","tool","partial_json","inputJson","ToolCallPart","ToolCallId","ReasoningPart","reasoningText","join","some","die","module","method","description","length","none","succeed","of","layer","effect","layerConfig","configs","all","flatMap"],"sources":["../../src/AnthropicClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/esm/AnthropicConfig.js b/dist/dist/dist/esm/AnthropicConfig.js
new file mode 100644
index 0000000000000000000000000000000000000000..3967b0120157caf861750f8abefa3182ae001c90
--- /dev/null
+++ b/dist/dist/dist/esm/AnthropicConfig.js
@@ -0,0 +1,22 @@
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import { dual } from "effect/Function";
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class AnthropicConfig extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicConfig")() {
+  /**
+   * @since 1.0.0
+   */
+  static getOrUndefined = /*#__PURE__*/Effect.map(/*#__PURE__*/Effect.context(), context => context.unsafeMap.get(AnthropicConfig.key));
+}
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export const withClientTransform = /*#__PURE__*/dual(2, (self, transformClient) => Effect.flatMap(AnthropicConfig.getOrUndefined, config => Effect.provideService(self, AnthropicConfig, {
+  ...config,
+  transformClient
+})));
+//# sourceMappingURL=AnthropicConfig.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/esm/AnthropicConfig.js.map b/dist/dist/dist/esm/AnthropicConfig.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..0941473279b56a21778d44493694b1771d2960ba
--- /dev/null
+++ b/dist/dist/dist/esm/AnthropicConfig.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicConfig.js","names":["Context","Effect","dual","AnthropicConfig","Tag","getOrUndefined","map","context","unsafeMap","get","key","withClientTransform","self","transformClient","flatMap","config","provideService"],"sources":["../../src/AnthropicConfig.ts"],"sourcesContent":[null],"mappings":"AAIA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AAEtC;;;;AAIA,OAAM,MAAOC,eAAgB,sBAAQH,OAAO,CAACI,GAAG,CAAC,sCAAsC,CAAC,EAGrF;EACD;;;EAGA,OAAgBC,cAAc,gBAA8DJ,MAAM,CAACK,GAAG,cACpGL,MAAM,CAACM,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACC,GAAG,CAACN,eAAe,CAACO,GAAG,CAAC,CACxD;;AAgBH;;;;AAIA,OAAO,MAAMC,mBAAmB,gBAG5BT,IAAI,CAIN,CAAC,EACD,CAACU,IAAI,EAAEC,eAAe,KACpBZ,MAAM,CAACa,OAAO,CACZX,eAAe,CAACE,cAAc,EAC7BU,MAAM,IAAKd,MAAM,CAACe,cAAc,CAACJ,IAAI,EAAET,eAAe,EAAE;EAAE,GAAGY,MAAM;EAAEF;AAAe,CAAE,CAAC,CACzF,CACJ","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/esm/AnthropicLanguageModel.js b/dist/dist/dist/esm/AnthropicLanguageModel.js
new file mode 100644
index 0000000000000000000000000000000000000000..1197e9f309b7482861ec7ea89e40d66431776089
--- /dev/null
+++ b/dist/dist/dist/esm/AnthropicLanguageModel.js
@@ -0,0 +1,482 @@
+/**
+ * @since 1.0.0
+ */
+import { AiError } from "@effect/ai/AiError";
+import * as AiLanguageModel from "@effect/ai/AiLanguageModel";
+import * as AiModel from "@effect/ai/AiModel";
+import * as AiResponse from "@effect/ai/AiResponse";
+import { addGenAIAnnotations } from "@effect/ai/AiTelemetry";
+import * as Arr from "effect/Array";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import * as Encoding from "effect/Encoding";
+import { dual } from "effect/Function";
+import * as Layer from "effect/Layer";
+import * as Option from "effect/Option";
+import * as Predicate from "effect/Predicate";
+import * as Stream from "effect/Stream";
+import { AnthropicClient } from "./AnthropicClient.js";
+import * as AnthropicTokenizer from "./AnthropicTokenizer.js";
+import * as InternalUtilities from "./internal/utilities.js";
+const constDisableValidation = {
+  disableValidation: true
+};
+// =============================================================================
+// Configuration
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class Config extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicLanguageModel/Config")() {
+  /**
+   * @since 1.0.0
+   */
+  static getOrUndefined = /*#__PURE__*/Effect.map(/*#__PURE__*/Effect.context(), context => context.unsafeMap.get(Config.key));
+}
+// =============================================================================
+// Anthropic Provider Metadata
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class ProviderMetadata extends /*#__PURE__*/Context.Tag(InternalUtilities.ProviderMetadataKey)() {}
+// =============================================================================
+// Anthropic Language Model
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export const model = (model, config) => AiModel.make(layer({
+  model,
+  config
+}));
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export const modelWithTokenizer = (model, config) => AiModel.make(layerWithTokenizer({
+  model,
+  config
+}));
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = /*#__PURE__*/Effect.fnUntraced(function* (options) {
+  const client = yield* AnthropicClient;
+  const makeRequest = Effect.fnUntraced(function* (method, {
+    prompt,
+    system,
+    toolChoice,
+    tools
+  }) {
+    const context = yield* Effect.context();
+    const useStructured = tools.length === 1 && tools[0].structured;
+    let tool_choice = undefined;
+    if (useStructured) {
+      tool_choice = {
+        type: "tool",
+        name: tools[0].name
+      };
+    } else if (tools.length > 0) {
+      if (toolChoice === "required") {
+        tool_choice = {
+          type: "any"
+        };
+      } else if (typeof toolChoice === "object") {
+        tool_choice = {
+          type: "tool",
+          name: toolChoice.tool
+        };
+      } else {
+        tool_choice = {
+          type: toolChoice
+        };
+      }
+    }
+    const messages = yield* makeMessages(method, prompt);
+    return {
+      model: options.model,
+      max_tokens: 4096,
+      ...options.config,
+      ...context.unsafeMap.get(Config.key),
+      // TODO: re-evaluate a better way to do this
+      system: Option.getOrUndefined(system),
+      messages,
+      tools: tools.length === 0 ? undefined : tools.map(tool => ({
+        name: tool.name,
+        description: tool.description,
+        input_schema: tool.parameters
+      })),
+      tool_choice
+    };
+  });
+  return yield* AiLanguageModel.make({
+    generateText: Effect.fnUntraced(function* (options) {
+      const request = yield* makeRequest("generateText", options);
+      annotateRequest(options.span, request);
+      const rawResponse = yield* client.client.messagesPost({
+        params: {},
+        payload: request
+      });
+      annotateChatResponse(options.span, rawResponse);
+      const response = yield* makeResponse(rawResponse);
+      return response;
+    }, Effect.catchAll(cause => AiError.is(cause) ? cause : new AiError({
+      module: "AnthropicLanguageModel",
+      method: "generateText",
+      description: "An error occurred",
+      cause
+    }))),
+    streamText(options) {
+      return makeRequest("streamText", options).pipe(Effect.tap(request => annotateRequest(options.span, request)), Effect.map(client.stream), Stream.unwrap, Stream.map(response => {
+        annotateStreamResponse(options.span, response);
+        return response;
+      }), Stream.catchAll(cause => AiError.is(cause) ? Effect.fail(cause) : Effect.fail(new AiError({
+        module: "AnthropicLanguageModel",
+        method: "streamText",
+        description: "An error occurred",
+        cause
+      }))));
+    }
+  });
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = options => Layer.effect(AiLanguageModel.AiLanguageModel, make({
+  model: options.model,
+  config: options.config
+}));
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layerWithTokenizer = options => Layer.merge(layer(options), AnthropicTokenizer.layer);
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export const withConfigOverride = /*#__PURE__*/dual(2, (self, overrides) => Effect.flatMap(Config.getOrUndefined, config => Effect.provideService(self, Config, {
+  ...config,
+  ...overrides
+})));
+const groupMessages = prompt => {
+  const messages = [];
+  let current = undefined;
+  for (const message of prompt.messages) {
+    switch (message._tag) {
+      case "AssistantMessage":
+        {
+          if (current?.type !== "assistant") {
+            current = {
+              type: "assistant",
+              messages: []
+            };
+            messages.push(current);
+          }
+          current.messages.push(message);
+          break;
+        }
+      case "ToolMessage":
+      case "UserMessage":
+        {
+          if (current?.type !== "user") {
+            current = {
+              type: "user",
+              messages: []
+            };
+            messages.push(current);
+          }
+          current.messages.push(message);
+          break;
+        }
+    }
+  }
+  return messages;
+};
+const makeMessages = /*#__PURE__*/Effect.fnUntraced(function* (method, prompt) {
+  const messages = [];
+  const groups = groupMessages(prompt);
+  for (let i = 0; i < groups.length; i++) {
+    const group = groups[i];
+    const isLastGroup = i === groups.length - 1;
+    switch (group.type) {
+      case "assistant":
+        {
+          const content = [];
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j];
+            const isLastMessage = j === group.messages.length - 1;
+            for (let k = 0; k < message.parts.length; k++) {
+              const part = message.parts[k];
+              const isLastPart = k === message.parts.length - 1;
+              switch (part._tag) {
+                case "ReasoningPart":
+                  {
+                    content.push({
+                      type: "thinking",
+                      thinking: part.reasoningText,
+                      signature: part.signature
+                    });
+                    break;
+                  }
+                case "RedactedReasoningPart":
+                  {
+                    content.push({
+                      type: "redacted_thinking",
+                      data: part.redactedText
+                    });
+                    break;
+                  }
+                case "TextPart":
+                  {
+                    content.push({
+                      type: "text",
+                      text:
+                      // Anthropic does not allow trailing whitespace in assistant
+                      // content blocks
+                      isLastGroup && isLastMessage && isLastPart ? part.text.trim() : part.text
+                    });
+                    break;
+                  }
+                case "ToolCallPart":
+                  {
+                    content.push({
+                      type: "tool_use",
+                      id: part.id,
+                      name: part.name,
+                      input: part.params
+                    });
+                    break;
+                  }
+              }
+            }
+          }
+          messages.push({
+            role: "assistant",
+            content
+          });
+          break;
+        }
+      case "user":
+        {
+          const content = [];
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j];
+            switch (message._tag) {
+              case "ToolMessage":
+                {
+                  for (let k = 0; k < message.parts.length; k++) {
+                    const part = message.parts[k];
+                    // TODO: support advanced tool result content parts
+                    content.push({
+                      type: "tool_result",
+                      tool_use_id: part.id,
+                      content: JSON.stringify(part.result)
+                    });
+                  }
+                  break;
+                }
+              case "UserMessage":
+                {
+                  for (let k = 0; k < message.parts.length; k++) {
+                    const part = message.parts[k];
+                    switch (part._tag) {
+                      case "FilePart":
+                        {
+                          if (Predicate.isUndefined(part.mediaType) || part.mediaType !== "application/pdf") {
+                            return yield* new AiError({
+                              module: "AnthropicLanguageModel",
+                              method,
+                              description: "AnthropicLanguageModel only supports PDF file inputs"
+                            });
+                          }
+                          content.push({
+                            type: "document",
+                            source: {
+                              type: "base64",
+                              media_type: "application/pdf",
+                              data: Encoding.encodeBase64(part.data)
+                            }
+                          });
+                          break;
+                        }
+                      case "FileUrlPart":
+                        {
+                          content.push({
+                            type: "document",
+                            source: {
+                              type: "url",
+                              url: part.url.toString()
+                            }
+                          });
+                          break;
+                        }
+                      case "TextPart":
+                        {
+                          content.push({
+                            type: "text",
+                            text: part.text
+                          });
+                          break;
+                        }
+                      case "ImagePart":
+                        {
+                          content.push({
+                            type: "image",
+                            source: {
+                              type: "base64",
+                              media_type: part.mediaType ?? "image/jpeg",
+                              data: Encoding.encodeBase64(part.data)
+                            }
+                          });
+                          break;
+                        }
+                      case "ImageUrlPart":
+                        {
+                          content.push({
+                            type: "image",
+                            source: {
+                              type: "url",
+                              url: part.url.toString()
+                            }
+                          });
+                          break;
+                        }
+                    }
+                  }
+                  break;
+                }
+            }
+          }
+          messages.push({
+            role: "user",
+            content
+          });
+          break;
+        }
+    }
+  }
+  if (Arr.isNonEmptyReadonlyArray(messages)) {
+    return messages;
+  }
+  return yield* new AiError({
+    module: "AnthropicLanguageModel",
+    method,
+    description: "Prompt contained no messages"
+  });
+});
+const makeResponse = /*#__PURE__*/Effect.fnUntraced(function* (response) {
+  const parts = [];
+  parts.push(new AiResponse.MetadataPart({
+    id: response.id,
+    model: response.model
+  }, constDisableValidation));
+  for (const part of response.content) {
+    switch (part.type) {
+      case "text":
+        {
+          parts.push(new AiResponse.TextPart({
+            text: part.text
+          }, constDisableValidation));
+          break;
+        }
+      case "tool_use":
+        {
+          parts.push(AiResponse.ToolCallPart.fromUnknown({
+            id: part.id,
+            name: part.name,
+            params: part.input
+          }));
+          break;
+        }
+      case "thinking":
+        {
+          parts.push(new AiResponse.ReasoningPart({
+            reasoningText: part.thinking,
+            signature: part.signature
+          }, constDisableValidation));
+          break;
+        }
+      case "redacted_thinking":
+        {
+          parts.push(new AiResponse.RedactedReasoningPart({
+            redactedText: part.data
+          }, constDisableValidation));
+          break;
+        }
+    }
+  }
+  const metadata = {};
+  if (response.stop_sequence !== null) {
+    metadata.stopSequence = response.stop_sequence;
+  }
+  parts.push(new AiResponse.FinishPart({
+    // Anthropic always returns a non-null `stop_reason` for non-streaming responses
+    reason: InternalUtilities.resolveFinishReason(response.stop_reason),
+    usage: new AiResponse.Usage({
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens,
+      totalTokens: response.usage.input_tokens + response.usage.output_tokens,
+      reasoningTokens: 0,
+      cacheReadInputTokens: response.usage.cache_read_input_tokens ?? 0,
+      cacheWriteInputTokens: response.usage.cache_creation_input_tokens ?? 0
+    }),
+    providerMetadata: {
+      [InternalUtilities.ProviderMetadataKey]: metadata
+    }
+  }, constDisableValidation));
+  return new AiResponse.AiResponse({
+    parts
+  }, constDisableValidation);
+});
+const annotateRequest = (span, request) => {
+  addGenAIAnnotations(span, {
+    system: "anthropic",
+    operation: {
+      name: "chat"
+    },
+    request: {
+      model: request.model,
+      temperature: request.temperature,
+      topK: request.top_k,
+      topP: request.top_p,
+      maxTokens: request.max_tokens,
+      stopSequences: Arr.ensure(request.stop_sequences).filter(Predicate.isNotNullable)
+    }
+  });
+};
+const annotateChatResponse = (span, response) => {
+  addGenAIAnnotations(span, {
+    response: {
+      id: response.id,
+      model: response.model,
+      finishReasons: response.stop_reason ? [response.stop_reason] : undefined
+    },
+    usage: {
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens
+    }
+  });
+};
+const annotateStreamResponse = (span, response) => {
+  const metadataPart = response.parts.find(part => part._tag === "MetadataPart");
+  const finishPart = response.parts.find(part => part._tag === "FinishPart");
+  addGenAIAnnotations(span, {
+    response: {
+      id: metadataPart?.id,
+      model: metadataPart?.model,
+      finishReasons: finishPart?.reason ? [finishPart.reason] : undefined
+    },
+    usage: {
+      inputTokens: finishPart?.usage.inputTokens,
+      outputTokens: finishPart?.usage.outputTokens
+    }
+  });
+};
+//# sourceMappingURL=AnthropicLanguageModel.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/esm/AnthropicLanguageModel.js.map b/dist/dist/dist/esm/AnthropicLanguageModel.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..1396cf41f39bcd1a5fcca8b220b7ee4df6aeac45
--- /dev/null
+++ b/dist/dist/dist/esm/AnthropicLanguageModel.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicLanguageModel.js","names":["AiError","AiLanguageModel","AiModel","AiResponse","addGenAIAnnotations","Arr","Context","Effect","Encoding","dual","Layer","Option","Predicate","Stream","AnthropicClient","AnthropicTokenizer","InternalUtilities","constDisableValidation","disableValidation","Config","Tag","getOrUndefined","map","context","unsafeMap","get","key","ProviderMetadata","ProviderMetadataKey","model","config","make","layer","modelWithTokenizer","layerWithTokenizer","fnUntraced","options","client","makeRequest","method","prompt","system","toolChoice","tools","useStructured","length","structured","tool_choice","undefined","type","name","tool","messages","makeMessages","max_tokens","description","input_schema","parameters","generateText","request","annotateRequest","span","rawResponse","messagesPost","params","payload","annotateChatResponse","response","makeResponse","catchAll","cause","is","module","streamText","pipe","tap","stream","unwrap","annotateStreamResponse","fail","effect","merge","withConfigOverride","self","overrides","flatMap","provideService","groupMessages","current","message","_tag","push","groups","i","group","isLastGroup","content","j","isLastMessage","k","parts","part","isLastPart","thinking","reasoningText","signature","data","redactedText","text","trim","id","input","role","tool_use_id","JSON","stringify","result","isUndefined","mediaType","source","media_type","encodeBase64","url","toString","isNonEmptyReadonlyArray","MetadataPart","TextPart","ToolCallPart","fromUnknown","ReasoningPart","RedactedReasoningPart","metadata","stop_sequence","stopSequence","FinishPart","reason","resolveFinishReason","stop_reason","usage","Usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","reasoningTokens","cacheReadInputTokens","cache_read_input_tokens","cacheWriteInputTokens","cache_creation_input_tokens","providerMetadata","operation","temperature","topK","top_k","topP","top_p","maxTokens","stopSequences","ensure","stop_sequences","filter","isNotNullable","finishReasons","metadataPart","find","finishPart"],"sources":["../../src/AnthropicLanguageModel.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/esm/AnthropicTokenizer.js b/dist/dist/dist/esm/AnthropicTokenizer.js
new file mode 100644
index 0000000000000000000000000000000000000000..4bad1bc7893402c25c6e039daf4d22dd3d5fd465
--- /dev/null
+++ b/dist/dist/dist/esm/AnthropicTokenizer.js
@@ -0,0 +1,42 @@
+/**
+ * @since 1.0.0
+ */
+import { getTokenizer } from "@anthropic-ai/tokenizer";
+import { AiError } from "@effect/ai/AiError";
+import * as Tokenizer from "@effect/ai/Tokenizer";
+import * as Arr from "effect/Array";
+import * as Effect from "effect/Effect";
+import * as Layer from "effect/Layer";
+import * as Option from "effect/Option";
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = /*#__PURE__*/Tokenizer.make({
+  tokenize(input) {
+    return Effect.try({
+      try: () => {
+        const tokenizer = getTokenizer();
+        const text = Arr.flatMap(input.messages, message => Arr.filterMap(message.parts, part => {
+          if (part._tag === "FilePart" || part._tag === "FileUrlPart" || part._tag === "ImagePart" || part._tag === "ImageUrlPart" || part._tag === "ReasoningPart" || part._tag === "RedactedReasoningPart") return Option.none();
+          return Option.some(part._tag === "TextPart" ? part.text : JSON.stringify(part._tag === "ToolCallPart" ? part.params : part.result));
+        })).join("");
+        const encoded = tokenizer.encode(text.normalize("NFKC"), "all");
+        tokenizer.free();
+        return Array.from(encoded);
+      },
+      catch: cause => new AiError({
+        module: "AnthropicTokenizer",
+        method: "tokenize",
+        description: "Could not tokenize",
+        cause
+      })
+    });
+  }
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = /*#__PURE__*/Layer.succeed(Tokenizer.Tokenizer, make);
+//# sourceMappingURL=AnthropicTokenizer.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/esm/AnthropicTokenizer.js.map b/dist/dist/dist/esm/AnthropicTokenizer.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..b8e62a51de7c8f290b6ff49ab2b22659c02a6870
--- /dev/null
+++ b/dist/dist/dist/esm/AnthropicTokenizer.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicTokenizer.js","names":["getTokenizer","AiError","Tokenizer","Arr","Effect","Layer","Option","make","tokenize","input","try","tokenizer","text","flatMap","messages","message","filterMap","parts","part","_tag","none","some","JSON","stringify","params","result","join","encoded","encode","normalize","free","Array","from","catch","cause","module","method","description","layer","succeed"],"sources":["../../src/AnthropicTokenizer.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAGA,SAASA,YAAY,QAAQ,yBAAyB;AACtD,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,OAAO,KAAKC,SAAS,MAAM,sBAAsB;AACjD,OAAO,KAAKC,GAAG,MAAM,cAAc;AACnC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,MAAM,MAAM,eAAe;AAEvC;;;;AAIA,OAAO,MAAMC,IAAI,gBAAGL,SAAS,CAACK,IAAI,CAAC;EACjCC,QAAQA,CAACC,KAAK;IACZ,OAAOL,MAAM,CAACM,GAAG,CAAC;MAChBA,GAAG,EAAEA,CAAA,KAAK;QACR,MAAMC,SAAS,GAAGX,YAAY,EAAE;QAChC,MAAMY,IAAI,GAAGT,GAAG,CAACU,OAAO,CAACJ,KAAK,CAACK,QAAQ,EAAGC,OAAO,IAC/CZ,GAAG,CAACa,SAAS,CACXD,OAAO,CAACE,KAIP,EACAC,IAAI,IAAI;UACP,IACEA,IAAI,CAACC,IAAI,KAAK,UAAU,IACxBD,IAAI,CAACC,IAAI,KAAK,aAAa,IAC3BD,IAAI,CAACC,IAAI,KAAK,WAAW,IACzBD,IAAI,CAACC,IAAI,KAAK,cAAc,IAC5BD,IAAI,CAACC,IAAI,KAAK,eAAe,IAC7BD,IAAI,CAACC,IAAI,KAAK,uBAAuB,EACrC,OAAOb,MAAM,CAACc,IAAI,EAAE;UACtB,OAAOd,MAAM,CAACe,IAAI,CAChBH,IAAI,CAACC,IAAI,KAAK,UAAU,GACpBD,IAAI,CAACN,IAAI,GACTU,IAAI,CAACC,SAAS,CACdL,IAAI,CAACC,IAAI,KAAK,cAAc,GACxBD,IAAI,CAACM,MAAM,GACbN,IAAI,CAACO,MAAM,CACd,CACJ;QACH,CAAC,CACF,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;QACb,MAAMC,OAAO,GAAGhB,SAAS,CAACiB,MAAM,CAAChB,IAAI,CAACiB,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;QAC/DlB,SAAS,CAACmB,IAAI,EAAE;QAChB,OAAOC,KAAK,CAACC,IAAI,CAACL,OAAO,CAAC;MAC5B,CAAC;MACDM,KAAK,EAAGC,KAAK,IACX,IAAIjC,OAAO,CAAC;QACVkC,MAAM,EAAE,oBAAoB;QAC5BC,MAAM,EAAE,UAAU;QAClBC,WAAW,EAAE,oBAAoB;QACjCH;OACD;KACJ,CAAC;EACJ;CACD,CAAC;AAEF;;;;AAIA,OAAO,MAAMI,KAAK,gBAAqCjC,KAAK,CAACkC,OAAO,CAACrC,SAAS,CAACA,SAAS,EAAEK,IAAI,CAAC","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/esm/Generated.js b/dist/dist/dist/esm/Generated.js
new file mode 100644
index 0000000000000000000000000000000000000000..5614db0b21ccd52b118392e977f89cc2f51cd966
--- /dev/null
+++ b/dist/dist/dist/esm/Generated.js
@@ -0,0 +1,2168 @@
+import * as HttpClientError from "@effect/platform/HttpClientError";
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest";
+import * as HttpClientResponse from "@effect/platform/HttpClientResponse";
+import * as Effect from "effect/Effect";
+import * as S from "effect/Schema";
+export class MessagesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class Model extends /*#__PURE__*/S.Literal("claude-3-7-sonnet-latest", "claude-3-7-sonnet-20250219", "claude-3-5-haiku-latest", "claude-3-5-haiku-20241022", "claude-sonnet-4-20250514", "claude-sonnet-4-0", "claude-4-sonnet-20250514", "claude-3-5-sonnet-latest", "claude-3-5-sonnet-20241022", "claude-3-5-sonnet-20240620", "claude-opus-4-0", "claude-opus-4-20250514", "claude-4-opus-20250514", "claude-3-opus-latest", "claude-3-opus-20240229", "claude-3-sonnet-20240229", "claude-3-haiku-20240307", "claude-2.1", "claude-2.0") {}
+export class CacheControlEphemeralType extends /*#__PURE__*/S.Literal("ephemeral") {}
+export class CacheControlEphemeral extends /*#__PURE__*/S.Struct({
+  "type": CacheControlEphemeralType
+}) {}
+export class RequestServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search") {}
+export class RequestServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+export class RequestServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": RequestServerToolUseBlockName,
+  "type": RequestServerToolUseBlockType
+}) {}
+export class RequestWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+export class RequestWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "title": S.String,
+  "type": RequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+export class WebSearchToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long") {}
+export class RequestWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+export class RequestWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": RequestWebSearchToolResultErrorType
+}) {}
+export class RequestWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+export class RequestWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(/*#__PURE__*/S.Array(RequestWebSearchResultBlock), RequestWebSearchToolResultError),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": RequestWebSearchToolResultBlockType
+}) {}
+export class RequestCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+export class RequestCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": RequestCharLocationCitationType
+}) {}
+export class RequestPageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+export class RequestPageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": RequestPageLocationCitationType
+}) {}
+export class RequestContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+export class RequestContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": RequestContentBlockLocationCitationType
+}) {}
+export class RequestWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+export class RequestWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "type": RequestWebSearchResultLocationCitationType,
+  "url": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(2048))
+}) {}
+export class RequestTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+export class RequestTextBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestCharLocationCitation, RequestPageLocationCitation, RequestContentBlockLocationCitation, RequestWebSearchResultLocationCitation)), S.Null), {
+    nullable: true
+  }),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": RequestTextBlockType
+}) {}
+export class Base64ImageSourceMediaType extends /*#__PURE__*/S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+export class Base64ImageSourceType extends /*#__PURE__*/S.Literal("base64") {}
+export class Base64ImageSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": Base64ImageSourceMediaType,
+  "type": Base64ImageSourceType
+}) {}
+export class URLImageSourceType extends /*#__PURE__*/S.Literal("url") {}
+export class URLImageSource extends /*#__PURE__*/S.Struct({
+  "type": URLImageSourceType,
+  "url": S.String
+}) {}
+export class RequestImageBlockType extends /*#__PURE__*/S.Literal("image") {}
+export class RequestImageBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(Base64ImageSource, URLImageSource),
+  "type": RequestImageBlockType
+}) {}
+export class RequestToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+export class RequestToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(200)),
+  "type": RequestToolUseBlockType
+}) {}
+export class RequestToolResultBlockType extends /*#__PURE__*/S.Literal("tool_result") {}
+export class RequestToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestTextBlock, RequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": RequestToolResultBlockType
+}) {}
+export class RequestCitationsConfig extends /*#__PURE__*/S.Struct({
+  "enabled": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+export class Base64PDFSourceMediaType extends /*#__PURE__*/S.Literal("application/pdf") {}
+export class Base64PDFSourceType extends /*#__PURE__*/S.Literal("base64") {}
+export class Base64PDFSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": Base64PDFSourceMediaType,
+  "type": Base64PDFSourceType
+}) {}
+export class PlainTextSourceMediaType extends /*#__PURE__*/S.Literal("text/plain") {}
+export class PlainTextSourceType extends /*#__PURE__*/S.Literal("text") {}
+export class PlainTextSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": PlainTextSourceMediaType,
+  "type": PlainTextSourceType
+}) {}
+export class ContentBlockSourceType extends /*#__PURE__*/S.Literal("content") {}
+export class ContentBlockSource extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestTextBlock, RequestImageBlock))),
+  "type": ContentBlockSourceType
+}) {}
+export class URLPDFSourceType extends /*#__PURE__*/S.Literal("url") {}
+export class URLPDFSource extends /*#__PURE__*/S.Struct({
+  "type": URLPDFSourceType,
+  "url": S.String
+}) {}
+export class RequestDocumentBlockType extends /*#__PURE__*/S.Literal("document") {}
+export class RequestDocumentBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(RequestCitationsConfig, {
+    nullable: true
+  }),
+  "context": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)), S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(Base64PDFSource, PlainTextSource, ContentBlockSource, URLPDFSource),
+  "title": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)), S.Null), {
+    nullable: true
+  }),
+  "type": RequestDocumentBlockType
+}) {}
+export class RequestThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+export class RequestThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": RequestThinkingBlockType
+}) {}
+export class RequestRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+export class RequestRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": RequestRedactedThinkingBlockType
+}) {}
+export class InputContentBlock extends /*#__PURE__*/S.Union(RequestServerToolUseBlock, RequestWebSearchToolResultBlock, RequestTextBlock, RequestImageBlock, RequestToolUseBlock, RequestToolResultBlock, RequestDocumentBlock, RequestThinkingBlock, RequestRedactedThinkingBlock) {}
+export class InputMessageRole extends /*#__PURE__*/S.Literal("user", "assistant") {}
+export class InputMessage extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(InputContentBlock)),
+  "role": InputMessageRole
+}) {}
+export class Metadata extends /*#__PURE__*/S.Struct({
+  "user_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.maxLength(256)), S.Null), {
+    nullable: true
+  })
+}) {}
+export class CreateMessageParamsServiceTier extends /*#__PURE__*/S.Literal("auto", "standard_only") {}
+export class ThinkingConfigEnabledType extends /*#__PURE__*/S.Literal("enabled") {}
+export class ThinkingConfigEnabled extends /*#__PURE__*/S.Struct({
+  "budget_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1024)),
+  "type": ThinkingConfigEnabledType
+}) {}
+export class ThinkingConfigDisabledType extends /*#__PURE__*/S.Literal("disabled") {}
+export class ThinkingConfigDisabled extends /*#__PURE__*/S.Struct({
+  "type": ThinkingConfigDisabledType
+}) {}
+export class ThinkingConfigParam extends /*#__PURE__*/S.Union(ThinkingConfigEnabled, ThinkingConfigDisabled) {}
+export class ToolChoiceAutoType extends /*#__PURE__*/S.Literal("auto") {}
+export class ToolChoiceAuto extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": ToolChoiceAutoType
+}) {}
+export class ToolChoiceAnyType extends /*#__PURE__*/S.Literal("any") {}
+export class ToolChoiceAny extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": ToolChoiceAnyType
+}) {}
+export class ToolChoiceToolType extends /*#__PURE__*/S.Literal("tool") {}
+export class ToolChoiceTool extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "name": S.String,
+  "type": ToolChoiceToolType
+}) {}
+export class ToolChoiceNoneType extends /*#__PURE__*/S.Literal("none") {}
+export class ToolChoiceNone extends /*#__PURE__*/S.Struct({
+  "type": ToolChoiceNoneType
+}) {}
+export class ToolChoice extends /*#__PURE__*/S.Union(ToolChoiceAuto, ToolChoiceAny, ToolChoiceTool, ToolChoiceNone) {}
+export class ToolTypeEnum extends /*#__PURE__*/S.Literal("custom") {}
+export class InputSchemaType extends /*#__PURE__*/S.Literal("object") {}
+export class InputSchema extends /*#__PURE__*/S.Struct({
+  "properties": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }), S.Null), {
+    nullable: true
+  }),
+  "required": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "type": InputSchemaType
+}) {}
+export class Tool extends /*#__PURE__*/S.Struct({
+  "type": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Null, ToolTypeEnum), {
+    nullable: true
+  }),
+  "description": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": InputSchema,
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BashTool20250124Name extends /*#__PURE__*/S.Literal("bash") {}
+export class BashTool20250124Type extends /*#__PURE__*/S.Literal("bash_20250124") {}
+export class BashTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BashTool20250124Name,
+  "type": BashTool20250124Type
+}) {}
+export class TextEditor20250124Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+export class TextEditor20250124Type extends /*#__PURE__*/S.Literal("text_editor_20250124") {}
+export class TextEditor20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": TextEditor20250124Name,
+  "type": TextEditor20250124Type
+}) {}
+export class TextEditor20250429Name extends /*#__PURE__*/S.Literal("str_replace_based_edit_tool") {}
+export class TextEditor20250429Type extends /*#__PURE__*/S.Literal("text_editor_20250429") {}
+export class TextEditor20250429 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": TextEditor20250429Name,
+  "type": TextEditor20250429Type
+}) {}
+export class WebSearchTool20250305Name extends /*#__PURE__*/S.Literal("web_search") {}
+export class WebSearchTool20250305Type extends /*#__PURE__*/S.Literal("web_search_20250305") {}
+export class UserLocationType extends /*#__PURE__*/S.Literal("approximate") {}
+export class UserLocation extends /*#__PURE__*/S.Struct({
+  "city": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "country": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(2), /*#__PURE__*/S.maxLength(2)), S.Null), {
+    nullable: true
+  }),
+  "region": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "timezone": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "type": UserLocationType
+}) {}
+export class WebSearchTool20250305 extends /*#__PURE__*/S.Struct({
+  "allowed_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "blocked_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "max_uses": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThan(0)), S.Null), {
+    nullable: true
+  }),
+  "name": WebSearchTool20250305Name,
+  "type": WebSearchTool20250305Type,
+  "user_location": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(UserLocation, S.Null), {
+    nullable: true
+  })
+}) {}
+export class CreateMessageParams extends /*#__PURE__*/S.Class("CreateMessageParams")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "messages": /*#__PURE__*/S.Array(InputMessage),
+  "max_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "metadata": /*#__PURE__*/S.optionalWith(Metadata, {
+    nullable: true
+  }),
+  "service_tier": /*#__PURE__*/S.optionalWith(CreateMessageParamsServiceTier, {
+    nullable: true
+  }),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(RequestTextBlock)), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(ThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(ToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  })
+}) {}
+export class MessageType extends /*#__PURE__*/S.Literal("message") {}
+export class MessageRole extends /*#__PURE__*/S.Literal("assistant") {}
+export class ResponseCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+export class ResponseCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": ResponseCharLocationCitationType
+}) {}
+export class ResponsePageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+export class ResponsePageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": ResponsePageLocationCitationType
+}) {}
+export class ResponseContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+export class ResponseContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": ResponseContentBlockLocationCitationType
+}) {}
+export class ResponseWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+export class ResponseWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": ResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+export class ResponseTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+export class ResponseTextBlock extends /*#__PURE__*/S.Struct({
+  "citations": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(ResponseCharLocationCitation, ResponsePageLocationCitation, ResponseContentBlockLocationCitation, ResponseWebSearchResultLocationCitation)))),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(0), /*#__PURE__*/S.maxLength(5000000)),
+  "type": ResponseTextBlockType
+}) {}
+export class ResponseToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+export class ResponseToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": ResponseToolUseBlockType
+}) {}
+export class ResponseServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search") {}
+export class ResponseServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+export class ResponseServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": ResponseServerToolUseBlockName,
+  "type": ResponseServerToolUseBlockType
+}) {}
+export class ResponseWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+export class ResponseWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": ResponseWebSearchToolResultErrorType
+}) {}
+export class ResponseWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+export class ResponseWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": ResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+export class ResponseWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+export class ResponseWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(ResponseWebSearchToolResultError, /*#__PURE__*/S.Array(ResponseWebSearchResultBlock)),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": ResponseWebSearchToolResultBlockType
+}) {}
+export class ResponseThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+export class ResponseThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": ResponseThinkingBlockType
+}) {}
+export class ResponseRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+export class ResponseRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": ResponseRedactedThinkingBlockType
+}) {}
+export class ContentBlock extends /*#__PURE__*/S.Union(ResponseTextBlock, ResponseToolUseBlock, ResponseServerToolUseBlock, ResponseWebSearchToolResultBlock, ResponseThinkingBlock, ResponseRedactedThinkingBlock) {}
+export class StopReason extends /*#__PURE__*/S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal") {}
+export class ServerToolUsage extends /*#__PURE__*/S.Struct({
+  "web_search_requests": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+export class UsageServiceTierEnum extends /*#__PURE__*/S.Literal("standard", "priority", "batch") {}
+export class Usage extends /*#__PURE__*/S.Struct({
+  "cache_creation_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "output_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "server_tool_use": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(ServerToolUsage)),
+  "service_tier": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(UsageServiceTierEnum, S.Null))
+}) {}
+export class Message extends /*#__PURE__*/S.Class("Message")({
+  "id": S.String,
+  "type": MessageType,
+  "role": MessageRole,
+  "content": /*#__PURE__*/S.Array(ContentBlock),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(StopReason, S.Null),
+  "stop_sequence": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "usage": Usage
+}) {}
+export class InvalidRequestErrorType extends /*#__PURE__*/S.Literal("invalid_request_error") {}
+export class InvalidRequestError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": InvalidRequestErrorType
+}) {}
+export class AuthenticationErrorType extends /*#__PURE__*/S.Literal("authentication_error") {}
+export class AuthenticationError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": AuthenticationErrorType
+}) {}
+export class BillingErrorType extends /*#__PURE__*/S.Literal("billing_error") {}
+export class BillingError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BillingErrorType
+}) {}
+export class PermissionErrorType extends /*#__PURE__*/S.Literal("permission_error") {}
+export class PermissionError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": PermissionErrorType
+}) {}
+export class NotFoundErrorType extends /*#__PURE__*/S.Literal("not_found_error") {}
+export class NotFoundError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": NotFoundErrorType
+}) {}
+export class RateLimitErrorType extends /*#__PURE__*/S.Literal("rate_limit_error") {}
+export class RateLimitError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": RateLimitErrorType
+}) {}
+export class GatewayTimeoutErrorType extends /*#__PURE__*/S.Literal("timeout_error") {}
+export class GatewayTimeoutError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": GatewayTimeoutErrorType
+}) {}
+export class APIErrorType extends /*#__PURE__*/S.Literal("api_error") {}
+export class APIError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": APIErrorType
+}) {}
+export class OverloadedErrorType extends /*#__PURE__*/S.Literal("overloaded_error") {}
+export class OverloadedError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": OverloadedErrorType
+}) {}
+export class ErrorResponseType extends /*#__PURE__*/S.Literal("error") {}
+export class ErrorResponse extends /*#__PURE__*/S.Class("ErrorResponse")({
+  "error": /*#__PURE__*/S.Union(InvalidRequestError, AuthenticationError, BillingError, PermissionError, NotFoundError, RateLimitError, GatewayTimeoutError, APIError, OverloadedError),
+  "type": ErrorResponseType
+}) {}
+export class CompletePostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class CompletionRequest extends /*#__PURE__*/S.Class("CompletionRequest")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "prompt": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "max_tokens_to_sample": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "metadata": /*#__PURE__*/S.optionalWith(Metadata, {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+export class CompletionResponseType extends /*#__PURE__*/S.Literal("completion") {}
+export class CompletionResponse extends /*#__PURE__*/S.Class("CompletionResponse")({
+  "completion": S.String,
+  "id": S.String,
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": CompletionResponseType
+}) {}
+export class ModelsListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class ModelInfoType extends /*#__PURE__*/S.Literal("model") {}
+export class ModelInfo extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": ModelInfoType
+}) {}
+export class ListResponseModelInfo extends /*#__PURE__*/S.Class("ListResponseModelInfo")({
+  "data": /*#__PURE__*/S.Array(ModelInfo),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+export class ModelsGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchesListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchProcessingStatus extends /*#__PURE__*/S.Literal("in_progress", "canceling", "ended") {}
+export class RequestCounts extends /*#__PURE__*/S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+export class MessageBatchType extends /*#__PURE__*/S.Literal("message_batch") {}
+export class MessageBatch extends /*#__PURE__*/S.Struct({
+  "archived_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "cancel_initiated_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": MessageBatchProcessingStatus,
+  "request_counts": RequestCounts,
+  "results_url": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": MessageBatchType
+}) {}
+export class ListResponseMessageBatch extends /*#__PURE__*/S.Class("ListResponseMessageBatch")({
+  "data": /*#__PURE__*/S.Array(MessageBatch),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+export class MessageBatchesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchIndividualRequestParams extends /*#__PURE__*/S.Struct({
+  "custom_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": CreateMessageParams
+}) {}
+export class CreateMessageBatchParams extends /*#__PURE__*/S.Class("CreateMessageBatchParams")({
+  "requests": /*#__PURE__*/S.Array(MessageBatchIndividualRequestParams).pipe(/*#__PURE__*/S.minItems(1), /*#__PURE__*/S.maxItems(10000))
+}) {}
+export class MessageBatchesRetrieveParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchesDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class DeleteMessageBatchResponseType extends /*#__PURE__*/S.Literal("message_batch_deleted") {}
+export class DeleteMessageBatchResponse extends /*#__PURE__*/S.Class("DeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": DeleteMessageBatchResponseType
+}) {}
+export class MessageBatchesCancelParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchesResultsParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessagesCountTokensPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class CountMessageTokensParams extends /*#__PURE__*/S.Class("CountMessageTokensParams")({
+  "messages": /*#__PURE__*/S.Array(InputMessage),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(RequestTextBlock)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(ThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(ToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)), {
+    nullable: true
+  })
+}) {}
+export class CountMessageTokensResponse extends /*#__PURE__*/S.Class("CountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+export class ListFilesV1FilesGetParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class FileMetadataSchemaType extends /*#__PURE__*/S.Literal("file") {}
+export class FileMetadataSchema extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "downloadable": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "filename": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)),
+  "id": S.String,
+  "mime_type": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)),
+  "size_bytes": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": FileMetadataSchemaType
+}) {}
+export class FileListResponse extends /*#__PURE__*/S.Class("FileListResponse")({
+  "data": /*#__PURE__*/S.Array(FileMetadataSchema),
+  "first_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "has_more": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "last_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  })
+}) {}
+export class UploadFileV1FilesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class GetFileMetadataV1FilesFileIdGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class DeleteFileV1FilesFileIdDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class FileDeleteResponseType extends /*#__PURE__*/S.Literal("file_deleted") {}
+export class FileDeleteResponse extends /*#__PURE__*/S.Class("FileDeleteResponse")({
+  "id": S.String,
+  "type": /*#__PURE__*/S.optionalWith(FileDeleteResponseType, {
+    nullable: true
+  })
+}) {}
+export class DownloadFileV1FilesFileIdContentGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessagesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaCacheControlEphemeralTtl extends /*#__PURE__*/S.Literal("5m", "1h") {}
+export class BetaCacheControlEphemeralType extends /*#__PURE__*/S.Literal("ephemeral") {}
+export class BetaCacheControlEphemeral extends /*#__PURE__*/S.Struct({
+  "ttl": /*#__PURE__*/S.optionalWith(BetaCacheControlEphemeralTtl, {
+    nullable: true
+  }),
+  "type": BetaCacheControlEphemeralType
+}) {}
+export class BetaRequestServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search", "code_execution") {}
+export class BetaRequestServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+export class BetaRequestServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": BetaRequestServerToolUseBlockName,
+  "type": BetaRequestServerToolUseBlockType
+}) {}
+export class BetaRequestWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+export class BetaRequestWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "title": S.String,
+  "type": BetaRequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+export class BetaWebSearchToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long") {}
+export class BetaRequestWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+export class BetaRequestWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaRequestWebSearchToolResultErrorType
+}) {}
+export class BetaRequestWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+export class BetaRequestWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(/*#__PURE__*/S.Array(BetaRequestWebSearchResultBlock), BetaRequestWebSearchToolResultError),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestWebSearchToolResultBlockType
+}) {}
+export class BetaCodeExecutionToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "too_many_requests", "execution_time_exceeded") {}
+export class BetaRequestCodeExecutionToolResultErrorType extends /*#__PURE__*/S.Literal("code_execution_tool_result_error") {}
+export class BetaRequestCodeExecutionToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaRequestCodeExecutionToolResultErrorType
+}) {}
+export class BetaRequestCodeExecutionOutputBlockType extends /*#__PURE__*/S.Literal("code_execution_output") {}
+export class BetaRequestCodeExecutionOutputBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaRequestCodeExecutionOutputBlockType
+}) {}
+export class BetaRequestCodeExecutionResultBlockType extends /*#__PURE__*/S.Literal("code_execution_result") {}
+export class BetaRequestCodeExecutionResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Array(BetaRequestCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaRequestCodeExecutionResultBlockType
+}) {}
+export class BetaRequestCodeExecutionToolResultBlockType extends /*#__PURE__*/S.Literal("code_execution_tool_result") {}
+export class BetaRequestCodeExecutionToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(BetaRequestCodeExecutionToolResultError, BetaRequestCodeExecutionResultBlock),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestCodeExecutionToolResultBlockType
+}) {}
+export class BetaRequestMCPToolUseBlockType extends /*#__PURE__*/S.Literal("mcp_tool_use") {}
+export class BetaRequestMCPToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaRequestMCPToolUseBlockType
+}) {}
+export class BetaRequestCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+export class BetaRequestCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestCharLocationCitationType
+}) {}
+export class BetaRequestPageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+export class BetaRequestPageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": BetaRequestPageLocationCitationType
+}) {}
+export class BetaRequestContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+export class BetaRequestContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestContentBlockLocationCitationType
+}) {}
+export class BetaRequestWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+export class BetaRequestWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "type": BetaRequestWebSearchResultLocationCitationType,
+  "url": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(2048))
+}) {}
+export class BetaRequestTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+export class BetaRequestTextBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestCharLocationCitation, BetaRequestPageLocationCitation, BetaRequestContentBlockLocationCitation, BetaRequestWebSearchResultLocationCitation)), S.Null), {
+    nullable: true
+  }),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": BetaRequestTextBlockType
+}) {}
+export class BetaRequestMCPToolResultBlockType extends /*#__PURE__*/S.Literal("mcp_tool_result") {}
+export class BetaRequestMCPToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestMCPToolResultBlockType
+}) {}
+export class BetaBase64ImageSourceMediaType extends /*#__PURE__*/S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+export class BetaBase64ImageSourceType extends /*#__PURE__*/S.Literal("base64") {}
+export class BetaBase64ImageSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64ImageSourceMediaType,
+  "type": BetaBase64ImageSourceType
+}) {}
+export class BetaURLImageSourceType extends /*#__PURE__*/S.Literal("url") {}
+export class BetaURLImageSource extends /*#__PURE__*/S.Struct({
+  "type": BetaURLImageSourceType,
+  "url": S.String
+}) {}
+export class BetaFileImageSourceType extends /*#__PURE__*/S.Literal("file") {}
+export class BetaFileImageSource extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaFileImageSourceType
+}) {}
+export class BetaRequestImageBlockType extends /*#__PURE__*/S.Literal("image") {}
+export class BetaRequestImageBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(BetaBase64ImageSource, BetaURLImageSource, BetaFileImageSource),
+  "type": BetaRequestImageBlockType
+}) {}
+export class BetaRequestToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+export class BetaRequestToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(200)),
+  "type": BetaRequestToolUseBlockType
+}) {}
+export class BetaRequestToolResultBlockType extends /*#__PURE__*/S.Literal("tool_result") {}
+export class BetaRequestToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestTextBlock, BetaRequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestToolResultBlockType
+}) {}
+export class BetaRequestCitationsConfig extends /*#__PURE__*/S.Struct({
+  "enabled": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+export class BetaBase64PDFSourceMediaType extends /*#__PURE__*/S.Literal("application/pdf") {}
+export class BetaBase64PDFSourceType extends /*#__PURE__*/S.Literal("base64") {}
+export class BetaBase64PDFSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64PDFSourceMediaType,
+  "type": BetaBase64PDFSourceType
+}) {}
+export class BetaPlainTextSourceMediaType extends /*#__PURE__*/S.Literal("text/plain") {}
+export class BetaPlainTextSourceType extends /*#__PURE__*/S.Literal("text") {}
+export class BetaPlainTextSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaPlainTextSourceMediaType,
+  "type": BetaPlainTextSourceType
+}) {}
+export class BetaContentBlockSourceType extends /*#__PURE__*/S.Literal("content") {}
+export class BetaContentBlockSource extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestTextBlock, BetaRequestImageBlock))),
+  "type": BetaContentBlockSourceType
+}) {}
+export class BetaURLPDFSourceType extends /*#__PURE__*/S.Literal("url") {}
+export class BetaURLPDFSource extends /*#__PURE__*/S.Struct({
+  "type": BetaURLPDFSourceType,
+  "url": S.String
+}) {}
+export class BetaFileDocumentSourceType extends /*#__PURE__*/S.Literal("file") {}
+export class BetaFileDocumentSource extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaFileDocumentSourceType
+}) {}
+export class BetaRequestDocumentBlockType extends /*#__PURE__*/S.Literal("document") {}
+export class BetaRequestDocumentBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(BetaRequestCitationsConfig, {
+    nullable: true
+  }),
+  "context": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)), S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(BetaBase64PDFSource, BetaPlainTextSource, BetaContentBlockSource, BetaURLPDFSource, BetaFileDocumentSource),
+  "title": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)), S.Null), {
+    nullable: true
+  }),
+  "type": BetaRequestDocumentBlockType
+}) {}
+export class BetaRequestThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+export class BetaRequestThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaRequestThinkingBlockType
+}) {}
+export class BetaRequestRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+export class BetaRequestRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": BetaRequestRedactedThinkingBlockType
+}) {}
+export class BetaRequestContainerUploadBlockType extends /*#__PURE__*/S.Literal("container_upload") {}
+export class BetaRequestContainerUploadBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "file_id": S.String,
+  "type": BetaRequestContainerUploadBlockType
+}) {}
+export class BetaInputContentBlock extends /*#__PURE__*/S.Union(BetaRequestServerToolUseBlock, BetaRequestWebSearchToolResultBlock, BetaRequestCodeExecutionToolResultBlock, BetaRequestMCPToolUseBlock, BetaRequestMCPToolResultBlock, BetaRequestTextBlock, BetaRequestImageBlock, BetaRequestToolUseBlock, BetaRequestToolResultBlock, BetaRequestDocumentBlock, BetaRequestThinkingBlock, BetaRequestRedactedThinkingBlock, BetaRequestContainerUploadBlock) {}
+export class BetaInputMessageRole extends /*#__PURE__*/S.Literal("user", "assistant") {}
+export class BetaInputMessage extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaInputContentBlock)),
+  "role": BetaInputMessageRole
+}) {}
+export class BetaRequestMCPServerToolConfiguration extends /*#__PURE__*/S.Struct({
+  "allowed_tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "enabled": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Boolean, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaRequestMCPServerURLDefinitionType extends /*#__PURE__*/S.Literal("url") {}
+export class BetaRequestMCPServerURLDefinition extends /*#__PURE__*/S.Struct({
+  "authorization_token": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "name": S.String,
+  "tool_configuration": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaRequestMCPServerToolConfiguration, S.Null), {
+    nullable: true
+  }),
+  "type": BetaRequestMCPServerURLDefinitionType,
+  "url": S.String
+}) {}
+export class BetaMetadata extends /*#__PURE__*/S.Struct({
+  "user_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.maxLength(256)), S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaCreateMessageParamsServiceTier extends /*#__PURE__*/S.Literal("auto", "standard_only") {}
+export class BetaThinkingConfigEnabledType extends /*#__PURE__*/S.Literal("enabled") {}
+export class BetaThinkingConfigEnabled extends /*#__PURE__*/S.Struct({
+  "budget_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1024)),
+  "type": BetaThinkingConfigEnabledType
+}) {}
+export class BetaThinkingConfigDisabledType extends /*#__PURE__*/S.Literal("disabled") {}
+export class BetaThinkingConfigDisabled extends /*#__PURE__*/S.Struct({
+  "type": BetaThinkingConfigDisabledType
+}) {}
+export class BetaThinkingConfigParam extends /*#__PURE__*/S.Union(BetaThinkingConfigEnabled, BetaThinkingConfigDisabled) {}
+export class BetaToolChoiceAutoType extends /*#__PURE__*/S.Literal("auto") {}
+export class BetaToolChoiceAuto extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": BetaToolChoiceAutoType
+}) {}
+export class BetaToolChoiceAnyType extends /*#__PURE__*/S.Literal("any") {}
+export class BetaToolChoiceAny extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": BetaToolChoiceAnyType
+}) {}
+export class BetaToolChoiceToolType extends /*#__PURE__*/S.Literal("tool") {}
+export class BetaToolChoiceTool extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "name": S.String,
+  "type": BetaToolChoiceToolType
+}) {}
+export class BetaToolChoiceNoneType extends /*#__PURE__*/S.Literal("none") {}
+export class BetaToolChoiceNone extends /*#__PURE__*/S.Struct({
+  "type": BetaToolChoiceNoneType
+}) {}
+export class BetaToolChoice extends /*#__PURE__*/S.Union(BetaToolChoiceAuto, BetaToolChoiceAny, BetaToolChoiceTool, BetaToolChoiceNone) {}
+export class BetaToolTypeEnum extends /*#__PURE__*/S.Literal("custom") {}
+export class BetaInputSchemaType extends /*#__PURE__*/S.Literal("object") {}
+export class BetaInputSchema extends /*#__PURE__*/S.Struct({
+  "properties": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }), S.Null), {
+    nullable: true
+  }),
+  "required": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "type": BetaInputSchemaType
+}) {}
+export class BetaTool extends /*#__PURE__*/S.Struct({
+  "type": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Null, BetaToolTypeEnum), {
+    nullable: true
+  }),
+  "description": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": BetaInputSchema,
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaComputerUseTool20241022Name extends /*#__PURE__*/S.Literal("computer") {}
+export class BetaComputerUseTool20241022Type extends /*#__PURE__*/S.Literal("computer_20241022") {}
+export class BetaComputerUseTool20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "display_height_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "display_number": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null), {
+    nullable: true
+  }),
+  "display_width_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20241022Name,
+  "type": BetaComputerUseTool20241022Type
+}) {}
+export class BetaBashTool20241022Name extends /*#__PURE__*/S.Literal("bash") {}
+export class BetaBashTool20241022Type extends /*#__PURE__*/S.Literal("bash_20241022") {}
+export class BetaBashTool20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaBashTool20241022Name,
+  "type": BetaBashTool20241022Type
+}) {}
+export class BetaTextEditor20241022Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+export class BetaTextEditor20241022Type extends /*#__PURE__*/S.Literal("text_editor_20241022") {}
+export class BetaTextEditor20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20241022Name,
+  "type": BetaTextEditor20241022Type
+}) {}
+export class BetaComputerUseTool20250124Name extends /*#__PURE__*/S.Literal("computer") {}
+export class BetaComputerUseTool20250124Type extends /*#__PURE__*/S.Literal("computer_20250124") {}
+export class BetaComputerUseTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "display_height_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "display_number": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null), {
+    nullable: true
+  }),
+  "display_width_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20250124Name,
+  "type": BetaComputerUseTool20250124Type
+}) {}
+export class BetaBashTool20250124Name extends /*#__PURE__*/S.Literal("bash") {}
+export class BetaBashTool20250124Type extends /*#__PURE__*/S.Literal("bash_20250124") {}
+export class BetaBashTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaBashTool20250124Name,
+  "type": BetaBashTool20250124Type
+}) {}
+export class BetaTextEditor20250124Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+export class BetaTextEditor20250124Type extends /*#__PURE__*/S.Literal("text_editor_20250124") {}
+export class BetaTextEditor20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20250124Name,
+  "type": BetaTextEditor20250124Type
+}) {}
+export class BetaTextEditor20250429Name extends /*#__PURE__*/S.Literal("str_replace_based_edit_tool") {}
+export class BetaTextEditor20250429Type extends /*#__PURE__*/S.Literal("text_editor_20250429") {}
+export class BetaTextEditor20250429 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20250429Name,
+  "type": BetaTextEditor20250429Type
+}) {}
+export class BetaWebSearchTool20250305Name extends /*#__PURE__*/S.Literal("web_search") {}
+export class BetaWebSearchTool20250305Type extends /*#__PURE__*/S.Literal("web_search_20250305") {}
+export class BetaUserLocationType extends /*#__PURE__*/S.Literal("approximate") {}
+export class BetaUserLocation extends /*#__PURE__*/S.Struct({
+  "city": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "country": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(2), /*#__PURE__*/S.maxLength(2)), S.Null), {
+    nullable: true
+  }),
+  "region": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "timezone": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "type": BetaUserLocationType
+}) {}
+export class BetaWebSearchTool20250305 extends /*#__PURE__*/S.Struct({
+  "allowed_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "blocked_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "max_uses": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThan(0)), S.Null), {
+    nullable: true
+  }),
+  "name": BetaWebSearchTool20250305Name,
+  "type": BetaWebSearchTool20250305Type,
+  "user_location": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaUserLocation, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaCodeExecutionTool20250522Name extends /*#__PURE__*/S.Literal("code_execution") {}
+export class BetaCodeExecutionTool20250522Type extends /*#__PURE__*/S.Literal("code_execution_20250522") {}
+export class BetaCodeExecutionTool20250522 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaCodeExecutionTool20250522Name,
+  "type": BetaCodeExecutionTool20250522Type
+}) {}
+export class BetaCreateMessageParams extends /*#__PURE__*/S.Class("BetaCreateMessageParams")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "messages": /*#__PURE__*/S.Array(BetaInputMessage),
+  "container": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "max_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "mcp_servers": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(BetaRequestMCPServerURLDefinition).pipe(/*#__PURE__*/S.maxItems(20)), {
+    nullable: true
+  }),
+  "metadata": /*#__PURE__*/S.optionalWith(BetaMetadata, {
+    nullable: true
+  }),
+  "service_tier": /*#__PURE__*/S.optionalWith(BetaCreateMessageParamsServiceTier, {
+    nullable: true
+  }),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(BetaThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(BetaToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaTool, BetaComputerUseTool20241022, BetaBashTool20241022, BetaTextEditor20241022, BetaComputerUseTool20250124, BetaBashTool20250124, BetaTextEditor20250124, BetaTextEditor20250429, BetaWebSearchTool20250305, BetaCodeExecutionTool20250522)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  })
+}) {}
+export class BetaMessageType extends /*#__PURE__*/S.Literal("message") {}
+export class BetaMessageRole extends /*#__PURE__*/S.Literal("assistant") {}
+export class BetaResponseCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+export class BetaResponseCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseCharLocationCitationType
+}) {}
+export class BetaResponsePageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+export class BetaResponsePageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": BetaResponsePageLocationCitationType
+}) {}
+export class BetaResponseContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+export class BetaResponseContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseContentBlockLocationCitationType
+}) {}
+export class BetaResponseWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+export class BetaResponseWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": BetaResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+export class BetaResponseTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+export class BetaResponseTextBlock extends /*#__PURE__*/S.Struct({
+  "citations": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaResponseCharLocationCitation, BetaResponsePageLocationCitation, BetaResponseContentBlockLocationCitation, BetaResponseWebSearchResultLocationCitation)))),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(0), /*#__PURE__*/S.maxLength(5000000)),
+  "type": BetaResponseTextBlockType
+}) {}
+export class BetaResponseToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+export class BetaResponseToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": BetaResponseToolUseBlockType
+}) {}
+export class BetaResponseServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search", "code_execution") {}
+export class BetaResponseServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+export class BetaResponseServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": BetaResponseServerToolUseBlockName,
+  "type": BetaResponseServerToolUseBlockType
+}) {}
+export class BetaResponseWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+export class BetaResponseWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaResponseWebSearchToolResultErrorType
+}) {}
+export class BetaResponseWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+export class BetaResponseWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": BetaResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+export class BetaResponseWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+export class BetaResponseWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(BetaResponseWebSearchToolResultError, /*#__PURE__*/S.Array(BetaResponseWebSearchResultBlock)),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseWebSearchToolResultBlockType
+}) {}
+export class BetaResponseCodeExecutionToolResultErrorType extends /*#__PURE__*/S.Literal("code_execution_tool_result_error") {}
+export class BetaResponseCodeExecutionToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaResponseCodeExecutionToolResultErrorType
+}) {}
+export class BetaResponseCodeExecutionOutputBlockType extends /*#__PURE__*/S.Literal("code_execution_output") {}
+export class BetaResponseCodeExecutionOutputBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseCodeExecutionOutputBlockType
+}) {}
+export class BetaResponseCodeExecutionResultBlockType extends /*#__PURE__*/S.Literal("code_execution_result") {}
+export class BetaResponseCodeExecutionResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Array(BetaResponseCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaResponseCodeExecutionResultBlockType
+}) {}
+export class BetaResponseCodeExecutionToolResultBlockType extends /*#__PURE__*/S.Literal("code_execution_tool_result") {}
+export class BetaResponseCodeExecutionToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(BetaResponseCodeExecutionToolResultError, BetaResponseCodeExecutionResultBlock),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseCodeExecutionToolResultBlockType
+}) {}
+export class BetaResponseMCPToolUseBlockType extends /*#__PURE__*/S.Literal("mcp_tool_use") {}
+export class BetaResponseMCPToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaResponseMCPToolUseBlockType
+}) {}
+export class BetaResponseMCPToolResultBlockType extends /*#__PURE__*/S.Literal("mcp_tool_result") {}
+export class BetaResponseMCPToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaResponseTextBlock)),
+  "is_error": S.Boolean,
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaResponseMCPToolResultBlockType
+}) {}
+export class BetaResponseContainerUploadBlockType extends /*#__PURE__*/S.Literal("container_upload") {}
+export class BetaResponseContainerUploadBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseContainerUploadBlockType
+}) {}
+export class BetaResponseThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+export class BetaResponseThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaResponseThinkingBlockType
+}) {}
+export class BetaResponseRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+export class BetaResponseRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": BetaResponseRedactedThinkingBlockType
+}) {}
+export class BetaContentBlock extends /*#__PURE__*/S.Union(BetaResponseTextBlock, BetaResponseToolUseBlock, BetaResponseServerToolUseBlock, BetaResponseWebSearchToolResultBlock, BetaResponseCodeExecutionToolResultBlock, BetaResponseMCPToolUseBlock, BetaResponseMCPToolResultBlock, BetaResponseContainerUploadBlock, BetaResponseThinkingBlock, BetaResponseRedactedThinkingBlock) {}
+export class BetaStopReason extends /*#__PURE__*/S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal") {}
+export class BetaCacheCreation extends /*#__PURE__*/S.Struct({
+  "ephemeral_1h_input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "ephemeral_5m_input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+export class BetaServerToolUsage extends /*#__PURE__*/S.Struct({
+  "web_search_requests": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+export class BetaUsageServiceTierEnum extends /*#__PURE__*/S.Literal("standard", "priority", "batch") {}
+export class BetaUsage extends /*#__PURE__*/S.Struct({
+  "cache_creation": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaCacheCreation, S.Null)),
+  "cache_creation_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "output_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "server_tool_use": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(BetaServerToolUsage)),
+  "service_tier": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaUsageServiceTierEnum, S.Null))
+}) {}
+export class BetaContainer extends /*#__PURE__*/S.Struct({
+  "expires_at": S.String,
+  "id": S.String
+}) {}
+export class BetaMessage extends /*#__PURE__*/S.Class("BetaMessage")({
+  "id": S.String,
+  "type": BetaMessageType,
+  "role": BetaMessageRole,
+  "content": /*#__PURE__*/S.Array(BetaContentBlock),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(BetaStopReason, S.Null),
+  "stop_sequence": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "usage": BetaUsage,
+  "container": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaContainer, S.Null))
+}) {}
+export class BetaInvalidRequestErrorType extends /*#__PURE__*/S.Literal("invalid_request_error") {}
+export class BetaInvalidRequestError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaInvalidRequestErrorType
+}) {}
+export class BetaAuthenticationErrorType extends /*#__PURE__*/S.Literal("authentication_error") {}
+export class BetaAuthenticationError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaAuthenticationErrorType
+}) {}
+export class BetaBillingErrorType extends /*#__PURE__*/S.Literal("billing_error") {}
+export class BetaBillingError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaBillingErrorType
+}) {}
+export class BetaPermissionErrorType extends /*#__PURE__*/S.Literal("permission_error") {}
+export class BetaPermissionError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaPermissionErrorType
+}) {}
+export class BetaNotFoundErrorType extends /*#__PURE__*/S.Literal("not_found_error") {}
+export class BetaNotFoundError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaNotFoundErrorType
+}) {}
+export class BetaRateLimitErrorType extends /*#__PURE__*/S.Literal("rate_limit_error") {}
+export class BetaRateLimitError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaRateLimitErrorType
+}) {}
+export class BetaGatewayTimeoutErrorType extends /*#__PURE__*/S.Literal("timeout_error") {}
+export class BetaGatewayTimeoutError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaGatewayTimeoutErrorType
+}) {}
+export class BetaAPIErrorType extends /*#__PURE__*/S.Literal("api_error") {}
+export class BetaAPIError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaAPIErrorType
+}) {}
+export class BetaOverloadedErrorType extends /*#__PURE__*/S.Literal("overloaded_error") {}
+export class BetaOverloadedError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaOverloadedErrorType
+}) {}
+export class BetaErrorResponseType extends /*#__PURE__*/S.Literal("error") {}
+export class BetaErrorResponse extends /*#__PURE__*/S.Class("BetaErrorResponse")({
+  "error": /*#__PURE__*/S.Union(BetaInvalidRequestError, BetaAuthenticationError, BetaBillingError, BetaPermissionError, BetaNotFoundError, BetaRateLimitError, BetaGatewayTimeoutError, BetaAPIError, BetaOverloadedError),
+  "type": BetaErrorResponseType
+}) {}
+export class BetaModelsListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaModelInfoType extends /*#__PURE__*/S.Literal("model") {}
+export class BetaModelInfo extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": BetaModelInfoType
+}) {}
+export class BetaListResponseModelInfo extends /*#__PURE__*/S.Class("BetaListResponseModelInfo")({
+  "data": /*#__PURE__*/S.Array(BetaModelInfo),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+export class BetaModelsGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchesListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchProcessingStatus extends /*#__PURE__*/S.Literal("in_progress", "canceling", "ended") {}
+export class BetaRequestCounts extends /*#__PURE__*/S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+export class BetaMessageBatchType extends /*#__PURE__*/S.Literal("message_batch") {}
+export class BetaMessageBatch extends /*#__PURE__*/S.Struct({
+  "archived_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "cancel_initiated_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": BetaMessageBatchProcessingStatus,
+  "request_counts": BetaRequestCounts,
+  "results_url": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": BetaMessageBatchType
+}) {}
+export class BetaListResponseMessageBatch extends /*#__PURE__*/S.Class("BetaListResponseMessageBatch")({
+  "data": /*#__PURE__*/S.Array(BetaMessageBatch),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+export class BetaMessageBatchesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchIndividualRequestParams extends /*#__PURE__*/S.Struct({
+  "custom_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": BetaCreateMessageParams
+}) {}
+export class BetaCreateMessageBatchParams extends /*#__PURE__*/S.Class("BetaCreateMessageBatchParams")({
+  "requests": /*#__PURE__*/S.Array(BetaMessageBatchIndividualRequestParams).pipe(/*#__PURE__*/S.minItems(1), /*#__PURE__*/S.maxItems(10000))
+}) {}
+export class BetaMessageBatchesRetrieveParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchesDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaDeleteMessageBatchResponseType extends /*#__PURE__*/S.Literal("message_batch_deleted") {}
+export class BetaDeleteMessageBatchResponse extends /*#__PURE__*/S.Class("BetaDeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": BetaDeleteMessageBatchResponseType
+}) {}
+export class BetaMessageBatchesCancelParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchesResultsParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessagesCountTokensPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaCountMessageTokensParams extends /*#__PURE__*/S.Class("BetaCountMessageTokensParams")({
+  "mcp_servers": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(BetaRequestMCPServerURLDefinition).pipe(/*#__PURE__*/S.maxItems(20)), {
+    nullable: true
+  }),
+  "messages": /*#__PURE__*/S.Array(BetaInputMessage),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(BetaThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(BetaToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaTool, BetaComputerUseTool20241022, BetaBashTool20241022, BetaTextEditor20241022, BetaComputerUseTool20250124, BetaBashTool20250124, BetaTextEditor20250124, BetaTextEditor20250429, BetaWebSearchTool20250305, BetaCodeExecutionTool20250522)), {
+    nullable: true
+  })
+}) {}
+export class BetaCountMessageTokensResponse extends /*#__PURE__*/S.Class("BetaCountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+export class BetaListFilesV1FilesGetParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaFileMetadataSchemaType extends /*#__PURE__*/S.Literal("file") {}
+export class BetaFileMetadataSchema extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "downloadable": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "filename": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)),
+  "id": S.String,
+  "mime_type": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)),
+  "size_bytes": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaFileMetadataSchemaType
+}) {}
+export class BetaFileListResponse extends /*#__PURE__*/S.Class("BetaFileListResponse")({
+  "data": /*#__PURE__*/S.Array(BetaFileMetadataSchema),
+  "first_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "has_more": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "last_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaUploadFileV1FilesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaGetFileMetadataV1FilesFileIdGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaDeleteFileV1FilesFileIdDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaFileDeleteResponseType extends /*#__PURE__*/S.Literal("file_deleted") {}
+export class BetaFileDeleteResponse extends /*#__PURE__*/S.Class("BetaFileDeleteResponse")({
+  "id": S.String,
+  "type": /*#__PURE__*/S.optionalWith(BetaFileDeleteResponseType, {
+    nullable: true
+  })
+}) {}
+export class BetaDownloadFileV1FilesFileIdContentGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export const make = (httpClient, options = {}) => {
+  const unexpectedStatus = (request, response) => Effect.flatMap(Effect.orElseSucceed(response.text, () => "Unexpected status code"), description => Effect.fail(new HttpClientError.ResponseError({
+    request,
+    response,
+    reason: "StatusCode",
+    description
+  })));
+  const applyClientTransform = client => options.transformClient ? options.transformClient(client) : Effect.succeed(client);
+  const decodeError = (response, schema) => Effect.flatMap(HttpClientResponse.schemaBodyJson(schema)(response), Effect.fail);
+  return {
+    httpClient,
+    "messagesPost": options => HttpClientRequest.make("POST")(`/v1/messages`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(Message)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "completePost": options => HttpClientRequest.make("POST")(`/v1/complete`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined,
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(CompletionResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "modelsList": options => HttpClientRequest.make("GET")(`/v1/models`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ListResponseModelInfo)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "modelsGet": (modelId, options) => HttpClientRequest.make("GET")(`/v1/models/${modelId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ModelInfo)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesList": options => HttpClientRequest.make("GET")(`/v1/messages/batches`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ListResponseMessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesPost": options => HttpClientRequest.make("POST")(`/v1/messages/batches`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesRetrieve": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesDelete": (messageBatchId, options) => HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(DeleteMessageBatchResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesCancel": (messageBatchId, options) => HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesResults": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messagesCountTokensPost": options => HttpClientRequest.make("POST")(`/v1/messages/count_tokens`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(CountMessageTokensResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "listFilesV1FilesGet": options => HttpClientRequest.make("GET")(`/v1/files`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileListResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "uploadFileV1FilesPost": options => HttpClientRequest.make("POST")(`/v1/files`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), HttpClientRequest.bodyFormData(options.payload), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "getFileMetadataV1FilesFileIdGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "deleteFileV1FilesFileIdDelete": (fileId, options) => HttpClientRequest.make("DELETE")(`/v1/files/${fileId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileDeleteResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "downloadFileV1FilesFileIdContentGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}/content`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessagesPost": options => HttpClientRequest.make("POST")(`/v1/messages?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessage)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaModelsList": options => HttpClientRequest.make("GET")(`/v1/models?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaListResponseModelInfo)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaModelsGet": (modelId, options) => HttpClientRequest.make("GET")(`/v1/models/${modelId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaModelInfo)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesList": options => HttpClientRequest.make("GET")(`/v1/messages/batches?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaListResponseMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesPost": options => HttpClientRequest.make("POST")(`/v1/messages/batches?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesRetrieve": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesDelete": (messageBatchId, options) => HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaDeleteMessageBatchResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesCancel": (messageBatchId, options) => HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesResults": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessagesCountTokensPost": options => HttpClientRequest.make("POST")(`/v1/messages/count_tokens?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaCountMessageTokensResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaListFilesV1FilesGet": options => HttpClientRequest.make("GET")(`/v1/files?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileListResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaUploadFileV1FilesPost": options => HttpClientRequest.make("POST")(`/v1/files?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), HttpClientRequest.bodyFormData(options.payload), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaGetFileMetadataV1FilesFileIdGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaDeleteFileV1FilesFileIdDelete": (fileId, options) => HttpClientRequest.make("DELETE")(`/v1/files/${fileId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileDeleteResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaDownloadFileV1FilesFileIdContentGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}/content?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      orElse: response => unexpectedStatus(request, response)
+    })))))
+  };
+};
+//# sourceMappingURL=Generated.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/esm/Generated.js.map b/dist/dist/dist/esm/Generated.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..6ba8c39df13a9052ef0167e9bd369d4eb247b410
--- /dev/null
+++ b/dist/dist/dist/esm/Generated.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"Generated.js","names":["HttpClientError","HttpClientRequest","HttpClientResponse","Effect","S","MessagesPostParams","Struct","optionalWith","String","nullable","Model","Literal","CacheControlEphemeralType","CacheControlEphemeral","RequestServerToolUseBlockName","RequestServerToolUseBlockType","RequestServerToolUseBlock","Union","Null","pipe","pattern","RegExp","Record","key","value","Unknown","RequestWebSearchResultBlockType","RequestWebSearchResultBlock","WebSearchToolResultErrorCode","RequestWebSearchToolResultErrorType","RequestWebSearchToolResultError","RequestWebSearchToolResultBlockType","RequestWebSearchToolResultBlock","Array","RequestCharLocationCitationType","RequestCharLocationCitation","Int","greaterThanOrEqualTo","minLength","maxLength","RequestPageLocationCitationType","RequestPageLocationCitation","RequestContentBlockLocationCitationType","RequestContentBlockLocationCitation","RequestWebSearchResultLocationCitationType","RequestWebSearchResultLocationCitation","RequestTextBlockType","RequestTextBlock","Base64ImageSourceMediaType","Base64ImageSourceType","Base64ImageSource","URLImageSourceType","URLImageSource","RequestImageBlockType","RequestImageBlock","RequestToolUseBlockType","RequestToolUseBlock","RequestToolResultBlockType","RequestToolResultBlock","Boolean","RequestCitationsConfig","Base64PDFSourceMediaType","Base64PDFSourceType","Base64PDFSource","PlainTextSourceMediaType","PlainTextSourceType","PlainTextSource","ContentBlockSourceType","ContentBlockSource","URLPDFSourceType","URLPDFSource","RequestDocumentBlockType","RequestDocumentBlock","RequestThinkingBlockType","RequestThinkingBlock","RequestRedactedThinkingBlockType","RequestRedactedThinkingBlock","InputContentBlock","InputMessageRole","InputMessage","Metadata","CreateMessageParamsServiceTier","ThinkingConfigEnabledType","ThinkingConfigEnabled","ThinkingConfigDisabledType","ThinkingConfigDisabled","ThinkingConfigParam","ToolChoiceAutoType","ToolChoiceAuto","ToolChoiceAnyType","ToolChoiceAny","ToolChoiceToolType","ToolChoiceTool","ToolChoiceNoneType","ToolChoiceNone","ToolChoice","ToolTypeEnum","InputSchemaType","InputSchema","Tool","BashTool20250124Name","BashTool20250124Type","BashTool20250124","TextEditor20250124Name","TextEditor20250124Type","TextEditor20250124","TextEditor20250429Name","TextEditor20250429Type","TextEditor20250429","WebSearchTool20250305Name","WebSearchTool20250305Type","UserLocationType","UserLocation","WebSearchTool20250305","greaterThan","CreateMessageParams","Class","Number","lessThanOrEqualTo","MessageType","MessageRole","ResponseCharLocationCitationType","ResponseCharLocationCitation","ResponsePageLocationCitationType","ResponsePageLocationCitation","ResponseContentBlockLocationCitationType","ResponseContentBlockLocationCitation","ResponseWebSearchResultLocationCitationType","ResponseWebSearchResultLocationCitation","ResponseTextBlockType","ResponseTextBlock","optional","NullOr","ResponseToolUseBlockType","ResponseToolUseBlock","ResponseServerToolUseBlockName","ResponseServerToolUseBlockType","ResponseServerToolUseBlock","ResponseWebSearchToolResultErrorType","ResponseWebSearchToolResultError","ResponseWebSearchResultBlockType","ResponseWebSearchResultBlock","ResponseWebSearchToolResultBlockType","ResponseWebSearchToolResultBlock","ResponseThinkingBlockType","ResponseThinkingBlock","ResponseRedactedThinkingBlockType","ResponseRedactedThinkingBlock","ContentBlock","StopReason","ServerToolUsage","UsageServiceTierEnum","Usage","Message","InvalidRequestErrorType","InvalidRequestError","AuthenticationErrorType","AuthenticationError","BillingErrorType","BillingError","PermissionErrorType","PermissionError","NotFoundErrorType","NotFoundError","RateLimitErrorType","RateLimitError","GatewayTimeoutErrorType","GatewayTimeoutError","APIErrorType","APIError","OverloadedErrorType","OverloadedError","ErrorResponseType","ErrorResponse","CompletePostParams","CompletionRequest","CompletionResponseType","CompletionResponse","ModelsListParams","ModelInfoType","ModelInfo","ListResponseModelInfo","ModelsGetParams","MessageBatchesListParams","MessageBatchProcessingStatus","RequestCounts","MessageBatchType","MessageBatch","ListResponseMessageBatch","MessageBatchesPostParams","MessageBatchIndividualRequestParams","CreateMessageBatchParams","minItems","maxItems","MessageBatchesRetrieveParams","MessageBatchesDeleteParams","DeleteMessageBatchResponseType","DeleteMessageBatchResponse","MessageBatchesCancelParams","MessageBatchesResultsParams","MessagesCountTokensPostParams","CountMessageTokensParams","CountMessageTokensResponse","ListFilesV1FilesGetParams","FileMetadataSchemaType","FileMetadataSchema","FileListResponse","UploadFileV1FilesPostParams","GetFileMetadataV1FilesFileIdGetParams","DeleteFileV1FilesFileIdDeleteParams","FileDeleteResponseType","FileDeleteResponse","DownloadFileV1FilesFileIdContentGetParams","BetaMessagesPostParams","BetaCacheControlEphemeralTtl","BetaCacheControlEphemeralType","BetaCacheControlEphemeral","BetaRequestServerToolUseBlockName","BetaRequestServerToolUseBlockType","BetaRequestServerToolUseBlock","BetaRequestWebSearchResultBlockType","BetaRequestWebSearchResultBlock","BetaWebSearchToolResultErrorCode","BetaRequestWebSearchToolResultErrorType","BetaRequestWebSearchToolResultError","BetaRequestWebSearchToolResultBlockType","BetaRequestWebSearchToolResultBlock","BetaCodeExecutionToolResultErrorCode","BetaRequestCodeExecutionToolResultErrorType","BetaRequestCodeExecutionToolResultError","BetaRequestCodeExecutionOutputBlockType","BetaRequestCodeExecutionOutputBlock","BetaRequestCodeExecutionResultBlockType","BetaRequestCodeExecutionResultBlock","BetaRequestCodeExecutionToolResultBlockType","BetaRequestCodeExecutionToolResultBlock","BetaRequestMCPToolUseBlockType","BetaRequestMCPToolUseBlock","BetaRequestCharLocationCitationType","BetaRequestCharLocationCitation","BetaRequestPageLocationCitationType","BetaRequestPageLocationCitation","BetaRequestContentBlockLocationCitationType","BetaRequestContentBlockLocationCitation","BetaRequestWebSearchResultLocationCitationType","BetaRequestWebSearchResultLocationCitation","BetaRequestTextBlockType","BetaRequestTextBlock","BetaRequestMCPToolResultBlockType","BetaRequestMCPToolResultBlock","BetaBase64ImageSourceMediaType","BetaBase64ImageSourceType","BetaBase64ImageSource","BetaURLImageSourceType","BetaURLImageSource","BetaFileImageSourceType","BetaFileImageSource","BetaRequestImageBlockType","BetaRequestImageBlock","BetaRequestToolUseBlockType","BetaRequestToolUseBlock","BetaRequestToolResultBlockType","BetaRequestToolResultBlock","BetaRequestCitationsConfig","BetaBase64PDFSourceMediaType","BetaBase64PDFSourceType","BetaBase64PDFSource","BetaPlainTextSourceMediaType","BetaPlainTextSourceType","BetaPlainTextSource","BetaContentBlockSourceType","BetaContentBlockSource","BetaURLPDFSourceType","BetaURLPDFSource","BetaFileDocumentSourceType","BetaFileDocumentSource","BetaRequestDocumentBlockType","BetaRequestDocumentBlock","BetaRequestThinkingBlockType","BetaRequestThinkingBlock","BetaRequestRedactedThinkingBlockType","BetaRequestRedactedThinkingBlock","BetaRequestContainerUploadBlockType","BetaRequestContainerUploadBlock","BetaInputContentBlock","BetaInputMessageRole","BetaInputMessage","BetaRequestMCPServerToolConfiguration","BetaRequestMCPServerURLDefinitionType","BetaRequestMCPServerURLDefinition","BetaMetadata","BetaCreateMessageParamsServiceTier","BetaThinkingConfigEnabledType","BetaThinkingConfigEnabled","BetaThinkingConfigDisabledType","BetaThinkingConfigDisabled","BetaThinkingConfigParam","BetaToolChoiceAutoType","BetaToolChoiceAuto","BetaToolChoiceAnyType","BetaToolChoiceAny","BetaToolChoiceToolType","BetaToolChoiceTool","BetaToolChoiceNoneType","BetaToolChoiceNone","BetaToolChoice","BetaToolTypeEnum","BetaInputSchemaType","BetaInputSchema","BetaTool","BetaComputerUseTool20241022Name","BetaComputerUseTool20241022Type","BetaComputerUseTool20241022","BetaBashTool20241022Name","BetaBashTool20241022Type","BetaBashTool20241022","BetaTextEditor20241022Name","BetaTextEditor20241022Type","BetaTextEditor20241022","BetaComputerUseTool20250124Name","BetaComputerUseTool20250124Type","BetaComputerUseTool20250124","BetaBashTool20250124Name","BetaBashTool20250124Type","BetaBashTool20250124","BetaTextEditor20250124Name","BetaTextEditor20250124Type","BetaTextEditor20250124","BetaTextEditor20250429Name","BetaTextEditor20250429Type","BetaTextEditor20250429","BetaWebSearchTool20250305Name","BetaWebSearchTool20250305Type","BetaUserLocationType","BetaUserLocation","BetaWebSearchTool20250305","BetaCodeExecutionTool20250522Name","BetaCodeExecutionTool20250522Type","BetaCodeExecutionTool20250522","BetaCreateMessageParams","BetaMessageType","BetaMessageRole","BetaResponseCharLocationCitationType","BetaResponseCharLocationCitation","BetaResponsePageLocationCitationType","BetaResponsePageLocationCitation","BetaResponseContentBlockLocationCitationType","BetaResponseContentBlockLocationCitation","BetaResponseWebSearchResultLocationCitationType","BetaResponseWebSearchResultLocationCitation","BetaResponseTextBlockType","BetaResponseTextBlock","BetaResponseToolUseBlockType","BetaResponseToolUseBlock","BetaResponseServerToolUseBlockName","BetaResponseServerToolUseBlockType","BetaResponseServerToolUseBlock","BetaResponseWebSearchToolResultErrorType","BetaResponseWebSearchToolResultError","BetaResponseWebSearchResultBlockType","BetaResponseWebSearchResultBlock","BetaResponseWebSearchToolResultBlockType","BetaResponseWebSearchToolResultBlock","BetaResponseCodeExecutionToolResultErrorType","BetaResponseCodeExecutionToolResultError","BetaResponseCodeExecutionOutputBlockType","BetaResponseCodeExecutionOutputBlock","BetaResponseCodeExecutionResultBlockType","BetaResponseCodeExecutionResultBlock","BetaResponseCodeExecutionToolResultBlockType","BetaResponseCodeExecutionToolResultBlock","BetaResponseMCPToolUseBlockType","BetaResponseMCPToolUseBlock","BetaResponseMCPToolResultBlockType","BetaResponseMCPToolResultBlock","BetaResponseContainerUploadBlockType","BetaResponseContainerUploadBlock","BetaResponseThinkingBlockType","BetaResponseThinkingBlock","BetaResponseRedactedThinkingBlockType","BetaResponseRedactedThinkingBlock","BetaContentBlock","BetaStopReason","BetaCacheCreation","BetaServerToolUsage","BetaUsageServiceTierEnum","BetaUsage","BetaContainer","BetaMessage","BetaInvalidRequestErrorType","BetaInvalidRequestError","BetaAuthenticationErrorType","BetaAuthenticationError","BetaBillingErrorType","BetaBillingError","BetaPermissionErrorType","BetaPermissionError","BetaNotFoundErrorType","BetaNotFoundError","BetaRateLimitErrorType","BetaRateLimitError","BetaGatewayTimeoutErrorType","BetaGatewayTimeoutError","BetaAPIErrorType","BetaAPIError","BetaOverloadedErrorType","BetaOverloadedError","BetaErrorResponseType","BetaErrorResponse","BetaModelsListParams","BetaModelInfoType","BetaModelInfo","BetaListResponseModelInfo","BetaModelsGetParams","BetaMessageBatchesListParams","BetaMessageBatchProcessingStatus","BetaRequestCounts","BetaMessageBatchType","BetaMessageBatch","BetaListResponseMessageBatch","BetaMessageBatchesPostParams","BetaMessageBatchIndividualRequestParams","BetaCreateMessageBatchParams","BetaMessageBatchesRetrieveParams","BetaMessageBatchesDeleteParams","BetaDeleteMessageBatchResponseType","BetaDeleteMessageBatchResponse","BetaMessageBatchesCancelParams","BetaMessageBatchesResultsParams","BetaMessagesCountTokensPostParams","BetaCountMessageTokensParams","BetaCountMessageTokensResponse","BetaListFilesV1FilesGetParams","BetaFileMetadataSchemaType","BetaFileMetadataSchema","BetaFileListResponse","BetaUploadFileV1FilesPostParams","BetaGetFileMetadataV1FilesFileIdGetParams","BetaDeleteFileV1FilesFileIdDeleteParams","BetaFileDeleteResponseType","BetaFileDeleteResponse","BetaDownloadFileV1FilesFileIdContentGetParams","make","httpClient","options","unexpectedStatus","request","response","flatMap","orElseSucceed","text","description","fail","ResponseError","reason","applyClientTransform","client","transformClient","succeed","decodeError","schema","schemaBodyJson","setHeaders","params","undefined","req","orDie","bodyJson","payload","execute","matchStatus","r","orElse","setUrlParams","modelsGet","modelId","messageBatchesRetrieve","messageBatchId","messageBatchesDelete","messageBatchesCancel","messageBatchesResults","bodyFormData","getFileMetadataV1FilesFileIdGet","fileId","deleteFileV1FilesFileIdDelete","downloadFileV1FilesFileIdContentGet","betaModelsGet","betaMessageBatchesRetrieve","betaMessageBatchesDelete","betaMessageBatchesCancel","betaMessageBatchesResults","betaGetFileMetadataV1FilesFileIdGet","betaDeleteFileV1FilesFileIdDelete","betaDownloadFileV1FilesFileIdContentGet"],"sources":["../../src/Generated.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/esm/index.js b/dist/dist/dist/esm/index.js
new file mode 100644
index 0000000000000000000000000000000000000000..5bed725a2978372cf6b1fecd0295b01df235068f
--- /dev/null
+++ b/dist/dist/dist/esm/index.js
@@ -0,0 +1,21 @@
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicClient from "./AnthropicClient.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicConfig from "./AnthropicConfig.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicLanguageModel from "./AnthropicLanguageModel.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicTokenizer from "./AnthropicTokenizer.js";
+/**
+ * @since 1.0.0
+ */
+export * as Generated from "./Generated.js";
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/esm/index.js.map b/dist/dist/dist/esm/index.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..bca38f6c96792587dbc71b0bcae160068fbaab17
--- /dev/null
+++ b/dist/dist/dist/esm/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","names":["AnthropicClient","AnthropicConfig","AnthropicLanguageModel","AnthropicTokenizer","Generated"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAGA,OAAO,KAAKA,eAAe,MAAM,sBAAsB;AAEvD;;;AAGA,OAAO,KAAKC,eAAe,MAAM,sBAAsB;AAEvD;;;AAGA,OAAO,KAAKC,sBAAsB,MAAM,6BAA6B;AAErE;;;AAGA,OAAO,KAAKC,kBAAkB,MAAM,yBAAyB;AAE7D;;;AAGA,OAAO,KAAKC,SAAS,MAAM,gBAAgB","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/esm/internal/utilities.js b/dist/dist/dist/esm/internal/utilities.js
new file mode 100644
index 0000000000000000000000000000000000000000..5caa56d3b264e08de76de16c2598c9d26c32a96c
--- /dev/null
+++ b/dist/dist/dist/esm/internal/utilities.js
@@ -0,0 +1,15 @@
+import * as Predicate from "effect/Predicate";
+/** @internal */
+export const ProviderMetadataKey = "@effect/ai-anthropic/AnthropicLanguageModel/ProviderMetadata";
+const finishReasonMap = {
+  end_turn: "stop",
+  max_tokens: "length",
+  stop_sequence: "stop",
+  tool_use: "tool-calls"
+};
+/** @internal */
+export const resolveFinishReason = finishReason => {
+  const reason = finishReasonMap[finishReason];
+  return Predicate.isUndefined(reason) ? "unknown" : reason;
+};
+//# sourceMappingURL=utilities.js.map
\ No newline at end of file
diff --git a/dist/dist/dist/esm/internal/utilities.js.map b/dist/dist/dist/esm/internal/utilities.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..5e6cf08d1c69ceaf3cefcd2fe29af562ec7f6d29
--- /dev/null
+++ b/dist/dist/dist/esm/internal/utilities.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utilities.js","names":["Predicate","ProviderMetadataKey","finishReasonMap","end_turn","max_tokens","stop_sequence","tool_use","resolveFinishReason","finishReason","reason","isUndefined"],"sources":["../../../src/internal/utilities.ts"],"sourcesContent":[null],"mappings":"AACA,OAAO,KAAKA,SAAS,MAAM,kBAAkB;AAE7C;AACA,OAAO,MAAMC,mBAAmB,GAAG,8DAA8D;AAEjG,MAAMC,eAAe,GAA4C;EAC/DC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,QAAQ;EACpBC,aAAa,EAAE,MAAM;EACrBC,QAAQ,EAAE;CACX;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAIC,YAAoB,IAA6B;EACnF,MAAMC,MAAM,GAAGP,eAAe,CAACM,YAAY,CAAC;EAC5C,OAAOR,SAAS,CAACU,WAAW,CAACD,MAAM,CAAC,GAAG,SAAS,GAAGA,MAAM;AAC3D,CAAC","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/dist/esm/package.json b/dist/dist/dist/esm/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..5e8d4f8b206ed6b50641a6b833fd656cd98e12ca
--- /dev/null
+++ b/dist/dist/dist/esm/package.json
@@ -0,0 +1,4 @@
+{
+  "type": "module",
+  "sideEffects": []
+}
diff --git a/dist/dist/dts/AnthropicClient.d.ts b/dist/dist/dts/AnthropicClient.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fee7418fe2e70b0803d9bb33602f00004b4cbd60
--- /dev/null
+++ b/dist/dist/dts/AnthropicClient.d.ts
@@ -0,0 +1,72 @@
+import * as AiResponse from "@effect/ai/AiResponse";
+import * as HttpClient from "@effect/platform/HttpClient";
+import type * as HttpClientError from "@effect/platform/HttpClientError";
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest";
+import * as Config from "effect/Config";
+import type { ConfigError } from "effect/ConfigError";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import * as Layer from "effect/Layer";
+import * as Redacted from "effect/Redacted";
+import * as Stream from "effect/Stream";
+import * as Generated from "./Generated.js";
+declare const AnthropicClient_base: Context.TagClass<AnthropicClient, "@effect/ai-anthropic/AnthropicClient", AnthropicClient.Service>;
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export declare class AnthropicClient extends AnthropicClient_base {
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace AnthropicClient {
+    /**
+     * @since 1.0.0
+     * @category Models
+     */
+    interface Service {
+        readonly client: Generated.Client;
+        readonly streamRequest: <A>(request: HttpClientRequest.HttpClientRequest) => Stream.Stream<A, HttpClientError.HttpClientError>;
+        readonly stream: (request: StreamCompletionRequest) => Stream.Stream<AiResponse.AiResponse, HttpClientError.HttpClientError>;
+    }
+}
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export declare const make: (options: {
+    readonly apiKey?: Redacted.Redacted | undefined;
+    readonly apiUrl?: string | undefined;
+    readonly anthropicVersion?: string | undefined;
+    readonly organizationId?: Redacted.Redacted | undefined;
+    readonly projectId?: Redacted.Redacted | undefined;
+    readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined;
+}) => Effect.Effect<AnthropicClient.Service, never, HttpClient.HttpClient>;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layer: (options: {
+    readonly apiKey?: Redacted.Redacted | undefined;
+    readonly apiUrl?: string | undefined;
+    readonly anthropicVersion?: string | undefined;
+    readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined;
+}) => Layer.Layer<AnthropicClient, never, HttpClient.HttpClient>;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layerConfig: (options: {
+    readonly apiKey?: Config.Config<Redacted.Redacted | undefined> | undefined;
+    readonly apiUrl?: Config.Config<string | undefined> | undefined;
+    readonly anthropicVersion?: Config.Config<string | undefined> | undefined;
+    readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined;
+}) => Layer.Layer<AnthropicClient, ConfigError, HttpClient.HttpClient>;
+/**
+ * @since 1.0.0
+ * @category Models
+ */
+export type StreamCompletionRequest = Omit<typeof Generated.CreateMessageParams.Encoded, "stream">;
+export {};
+//# sourceMappingURL=AnthropicClient.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dts/AnthropicClient.d.ts.map b/dist/dist/dts/AnthropicClient.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..6aa8ecf5286cb6036617cb6e8c402fe97eb412b5
--- /dev/null
+++ b/dist/dist/dts/AnthropicClient.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicClient.d.ts","sourceRoot":"","sources":["../../src/AnthropicClient.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dist/dts/AnthropicConfig.d.ts b/dist/dist/dts/AnthropicConfig.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..bcdc9c2f105450fbf533c1c3d94a6215129ae59a
--- /dev/null
+++ b/dist/dist/dts/AnthropicConfig.d.ts
@@ -0,0 +1,39 @@
+/**
+ * @since 1.0.0
+ */
+import type { HttpClient } from "@effect/platform/HttpClient";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+declare const AnthropicConfig_base: Context.TagClass<AnthropicConfig, "@effect/ai-anthropic/AnthropicConfig", AnthropicConfig.Service>;
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export declare class AnthropicConfig extends AnthropicConfig_base {
+    /**
+     * @since 1.0.0
+     */
+    static readonly getOrUndefined: Effect.Effect<typeof AnthropicConfig.Service | undefined>;
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace AnthropicConfig {
+    /**
+     * @since 1.0.0
+     * @category Models
+     */
+    interface Service {
+        readonly transformClient?: (client: HttpClient) => HttpClient;
+    }
+}
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export declare const withClientTransform: {
+    (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>;
+    <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>;
+};
+export {};
+//# sourceMappingURL=AnthropicConfig.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dts/AnthropicConfig.d.ts.map b/dist/dist/dts/AnthropicConfig.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..3bc94d002522908b156f4992d471690284a9f619
--- /dev/null
+++ b/dist/dist/dts/AnthropicConfig.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicConfig.d.ts","sourceRoot":"","sources":["../../src/AnthropicConfig.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAA;AAC7D,OAAO,KAAK,OAAO,MAAM,gBAAgB,CAAA;AACzC,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;;AAGvC;;;GAGG;AACH,qBAAa,eAAgB,SAAQ,oBAGlC;IACD;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,eAAe,CAAC,OAAO,GAAG,SAAS,CAAC,CAGxF;CACF;AAED;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,eAAe,CAAC;IACvC;;;OAGG;IACH,UAAiB,OAAO;QACtB,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,CAAA;KAC9D;CACF;AAED;;;GAGG;AACH,eAAO,MAAM,mBAAmB,EAAE;IAChC,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClH,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CAW/G,CAAA"}
\ No newline at end of file
diff --git a/dist/dist/dts/AnthropicLanguageModel.d.ts b/dist/dist/dts/AnthropicLanguageModel.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..e2c015069f729ed1619d990aaea616fe79f35a06
--- /dev/null
+++ b/dist/dist/dts/AnthropicLanguageModel.d.ts
@@ -0,0 +1,105 @@
+import * as AiLanguageModel from "@effect/ai/AiLanguageModel";
+import * as AiModel from "@effect/ai/AiModel";
+import type * as Tokenizer from "@effect/ai/Tokenizer";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import * as Layer from "effect/Layer";
+import type { Simplify } from "effect/Types";
+import { AnthropicClient } from "./AnthropicClient.js";
+import type * as Generated from "./Generated.js";
+/**
+ * @since 1.0.0
+ * @category Models
+ */
+export type Model = typeof Generated.Model.Encoded;
+declare const Config_base: Context.TagClass<Config, "@effect/ai-anthropic/AnthropicLanguageModel/Config", Config.Service>;
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export declare class Config extends Config_base {
+    /**
+     * @since 1.0.0
+     */
+    static readonly getOrUndefined: Effect.Effect<typeof Config.Service | undefined>;
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace Config {
+    /**
+     * @since 1.0.0
+     * @category Configuration
+     */
+    interface Service extends Simplify<Partial<Omit<typeof Generated.CreateMessageParams.Encoded, "messages" | "tools" | "tool_choice" | "stream">>> {
+    }
+}
+declare const ProviderMetadata_base: Context.TagClass<ProviderMetadata, "@effect/ai-anthropic/AnthropicLanguageModel/ProviderMetadata", ProviderMetadata.Service>;
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export declare class ProviderMetadata extends ProviderMetadata_base {
+}
+/**
+ * @since 1.0.0
+ */
+export declare namespace ProviderMetadata {
+    /**
+     * @since 1.0.0
+     * @category Provider Metadata
+     */
+    interface Service {
+        /**
+         * Which custom stop sequence was generated, if any.
+         *
+         * Will be a non-null string if one of your custom stop sequences was
+         * generated.
+         */
+        readonly stopSequence?: string;
+    }
+}
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export declare const model: (model: (string & {}) | Model, config?: Omit<Config.Service, "model">) => AiModel.AiModel<AiLanguageModel.AiLanguageModel, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export declare const modelWithTokenizer: (model: (string & {}) | Model, config?: Omit<Config.Service, "model">) => AiModel.AiModel<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export declare const make: (options: {
+    readonly model: (string & {}) | Model;
+    readonly config?: Omit<Config.Service, "model">;
+}) => Effect.Effect<AiLanguageModel.AiLanguageModel.Service, never, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layer: (options: {
+    readonly model: (string & {}) | Model;
+    readonly config?: Omit<Config.Service, "model">;
+}) => Layer.Layer<AiLanguageModel.AiLanguageModel, never, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layerWithTokenizer: (options: {
+    readonly model: (string & {}) | Model;
+    readonly config?: Omit<Config.Service, "model">;
+}) => Layer.Layer<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, never, AnthropicClient>;
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export declare const withConfigOverride: {
+    (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>;
+    <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>;
+};
+export {};
+//# sourceMappingURL=AnthropicLanguageModel.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dts/AnthropicLanguageModel.d.ts.map b/dist/dist/dts/AnthropicLanguageModel.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..010e66ce6626a7016f3fe5020b094e147662e301
--- /dev/null
+++ b/dist/dist/dts/AnthropicLanguageModel.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicLanguageModel.d.ts","sourceRoot":"","sources":["../../src/AnthropicLanguageModel.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dist/dts/AnthropicTokenizer.d.ts b/dist/dist/dts/AnthropicTokenizer.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..34dcde084bfb6bbff66c2cb05d07b83449882aeb
--- /dev/null
+++ b/dist/dist/dts/AnthropicTokenizer.d.ts
@@ -0,0 +1,13 @@
+import * as Tokenizer from "@effect/ai/Tokenizer";
+import * as Layer from "effect/Layer";
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export declare const make: Tokenizer.Tokenizer.Service;
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export declare const layer: Layer.Layer<Tokenizer.Tokenizer>;
+//# sourceMappingURL=AnthropicTokenizer.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dts/AnthropicTokenizer.d.ts.map b/dist/dist/dts/AnthropicTokenizer.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..d471a28d4e8a624e4ba2f5d2b2906712744d1e71
--- /dev/null
+++ b/dist/dist/dts/AnthropicTokenizer.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicTokenizer.d.ts","sourceRoot":"","sources":["../../src/AnthropicTokenizer.ts"],"names":[],"mappings":"AAMA,OAAO,KAAK,SAAS,MAAM,sBAAsB,CAAA;AAGjD,OAAO,KAAK,KAAK,MAAM,cAAc,CAAA;AAGrC;;;GAGG;AACH,eAAO,MAAM,IAAI,6BA6Cf,CAAA;AAEF;;;GAGG;AACH,eAAO,MAAM,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,CAA4C,CAAA"}
\ No newline at end of file
diff --git a/dist/dist/dts/Generated.d.ts b/dist/dist/dts/Generated.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..40ca2f886c4fd7886a0356f5471e50b2b8930434
--- /dev/null
+++ b/dist/dist/dts/Generated.d.ts
@@ -0,0 +1,5131 @@
+/**
+ * @since 1.0.0
+ */
+import type * as HttpClient from "@effect/platform/HttpClient";
+import * as HttpClientError from "@effect/platform/HttpClientError";
+import * as Effect from "effect/Effect";
+import type { ParseError } from "effect/ParseResult";
+import * as S from "effect/Schema";
+declare const MessagesPostParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessagesPostParams extends MessagesPostParams_base {
+}
+declare const Model_base: S.Literal<["claude-3-7-sonnet-latest", "claude-3-7-sonnet-20250219", "claude-3-5-haiku-latest", "claude-3-5-haiku-20241022", "claude-sonnet-4-20250514", "claude-sonnet-4-0", "claude-4-sonnet-20250514", "claude-3-5-sonnet-latest", "claude-3-5-sonnet-20241022", "claude-3-5-sonnet-20240620", "claude-opus-4-0", "claude-opus-4-20250514", "claude-4-opus-20250514", "claude-3-opus-latest", "claude-3-opus-20240229", "claude-3-sonnet-20240229", "claude-3-haiku-20240307", "claude-2.1", "claude-2.0"]>;
+export declare class Model extends Model_base {
+}
+declare const CacheControlEphemeralType_base: S.Literal<["ephemeral"]>;
+export declare class CacheControlEphemeralType extends CacheControlEphemeralType_base {
+}
+declare const CacheControlEphemeral_base: S.Struct<{
+    type: typeof CacheControlEphemeralType;
+}>;
+export declare class CacheControlEphemeral extends CacheControlEphemeral_base {
+}
+declare const RequestServerToolUseBlockName_base: S.Literal<["web_search"]>;
+export declare class RequestServerToolUseBlockName extends RequestServerToolUseBlockName_base {
+}
+declare const RequestServerToolUseBlockType_base: S.Literal<["server_tool_use"]>;
+export declare class RequestServerToolUseBlockType extends RequestServerToolUseBlockType_base {
+}
+declare const RequestServerToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof RequestServerToolUseBlockName;
+    type: typeof RequestServerToolUseBlockType;
+}>;
+export declare class RequestServerToolUseBlock extends RequestServerToolUseBlock_base {
+}
+declare const RequestWebSearchResultBlockType_base: S.Literal<["web_search_result"]>;
+export declare class RequestWebSearchResultBlockType extends RequestWebSearchResultBlockType_base {
+}
+declare const RequestWebSearchResultBlock_base: S.Struct<{
+    encrypted_content: typeof S.String;
+    page_age: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    title: typeof S.String;
+    type: typeof RequestWebSearchResultBlockType;
+    url: typeof S.String;
+}>;
+export declare class RequestWebSearchResultBlock extends RequestWebSearchResultBlock_base {
+}
+declare const WebSearchToolResultErrorCode_base: S.Literal<["invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long"]>;
+export declare class WebSearchToolResultErrorCode extends WebSearchToolResultErrorCode_base {
+}
+declare const RequestWebSearchToolResultErrorType_base: S.Literal<["web_search_tool_result_error"]>;
+export declare class RequestWebSearchToolResultErrorType extends RequestWebSearchToolResultErrorType_base {
+}
+declare const RequestWebSearchToolResultError_base: S.Struct<{
+    error_code: typeof WebSearchToolResultErrorCode;
+    type: typeof RequestWebSearchToolResultErrorType;
+}>;
+export declare class RequestWebSearchToolResultError extends RequestWebSearchToolResultError_base {
+}
+declare const RequestWebSearchToolResultBlockType_base: S.Literal<["web_search_tool_result"]>;
+export declare class RequestWebSearchToolResultBlockType extends RequestWebSearchToolResultBlockType_base {
+}
+declare const RequestWebSearchToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.Union<[S.Array$<typeof RequestWebSearchResultBlock>, typeof RequestWebSearchToolResultError]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof RequestWebSearchToolResultBlockType;
+}>;
+export declare class RequestWebSearchToolResultBlock extends RequestWebSearchToolResultBlock_base {
+}
+declare const RequestCharLocationCitationType_base: S.Literal<["char_location"]>;
+export declare class RequestCharLocationCitationType extends RequestCharLocationCitationType_base {
+}
+declare const RequestCharLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_char_index: typeof S.Int;
+    start_char_index: S.filter<typeof S.Int>;
+    type: typeof RequestCharLocationCitationType;
+}>;
+export declare class RequestCharLocationCitation extends RequestCharLocationCitation_base {
+}
+declare const RequestPageLocationCitationType_base: S.Literal<["page_location"]>;
+export declare class RequestPageLocationCitationType extends RequestPageLocationCitationType_base {
+}
+declare const RequestPageLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_page_number: typeof S.Int;
+    start_page_number: S.filter<typeof S.Int>;
+    type: typeof RequestPageLocationCitationType;
+}>;
+export declare class RequestPageLocationCitation extends RequestPageLocationCitation_base {
+}
+declare const RequestContentBlockLocationCitationType_base: S.Literal<["content_block_location"]>;
+export declare class RequestContentBlockLocationCitationType extends RequestContentBlockLocationCitationType_base {
+}
+declare const RequestContentBlockLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_block_index: typeof S.Int;
+    start_block_index: S.filter<typeof S.Int>;
+    type: typeof RequestContentBlockLocationCitationType;
+}>;
+export declare class RequestContentBlockLocationCitation extends RequestContentBlockLocationCitation_base {
+}
+declare const RequestWebSearchResultLocationCitationType_base: S.Literal<["web_search_result_location"]>;
+export declare class RequestWebSearchResultLocationCitationType extends RequestWebSearchResultLocationCitationType_base {
+}
+declare const RequestWebSearchResultLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    encrypted_index: typeof S.String;
+    title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    type: typeof RequestWebSearchResultLocationCitationType;
+    url: S.filter<S.filter<typeof S.String>>;
+}>;
+export declare class RequestWebSearchResultLocationCitation extends RequestWebSearchResultLocationCitation_base {
+}
+declare const RequestTextBlockType_base: S.Literal<["text"]>;
+export declare class RequestTextBlockType extends RequestTextBlockType_base {
+}
+declare const RequestTextBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    citations: S.optionalWith<S.Union<[S.Array$<S.Union<[typeof RequestCharLocationCitation, typeof RequestPageLocationCitation, typeof RequestContentBlockLocationCitation, typeof RequestWebSearchResultLocationCitation]>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    text: S.filter<typeof S.String>;
+    type: typeof RequestTextBlockType;
+}>;
+export declare class RequestTextBlock extends RequestTextBlock_base {
+}
+declare const Base64ImageSourceMediaType_base: S.Literal<["image/jpeg", "image/png", "image/gif", "image/webp"]>;
+export declare class Base64ImageSourceMediaType extends Base64ImageSourceMediaType_base {
+}
+declare const Base64ImageSourceType_base: S.Literal<["base64"]>;
+export declare class Base64ImageSourceType extends Base64ImageSourceType_base {
+}
+declare const Base64ImageSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof Base64ImageSourceMediaType;
+    type: typeof Base64ImageSourceType;
+}>;
+export declare class Base64ImageSource extends Base64ImageSource_base {
+}
+declare const URLImageSourceType_base: S.Literal<["url"]>;
+export declare class URLImageSourceType extends URLImageSourceType_base {
+}
+declare const URLImageSource_base: S.Struct<{
+    type: typeof URLImageSourceType;
+    url: typeof S.String;
+}>;
+export declare class URLImageSource extends URLImageSource_base {
+}
+declare const RequestImageBlockType_base: S.Literal<["image"]>;
+export declare class RequestImageBlockType extends RequestImageBlockType_base {
+}
+declare const RequestImageBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    source: S.Union<[typeof Base64ImageSource, typeof URLImageSource]>;
+    type: typeof RequestImageBlockType;
+}>;
+export declare class RequestImageBlock extends RequestImageBlock_base {
+}
+declare const RequestToolUseBlockType_base: S.Literal<["tool_use"]>;
+export declare class RequestToolUseBlockType extends RequestToolUseBlockType_base {
+}
+declare const RequestToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: S.filter<S.filter<typeof S.String>>;
+    type: typeof RequestToolUseBlockType;
+}>;
+export declare class RequestToolUseBlock extends RequestToolUseBlock_base {
+}
+declare const RequestToolResultBlockType_base: S.Literal<["tool_result"]>;
+export declare class RequestToolResultBlockType extends RequestToolResultBlockType_base {
+}
+declare const RequestToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.optionalWith<S.Union<[typeof S.String, S.Array$<S.Union<[typeof RequestTextBlock, typeof RequestImageBlock]>>]>, {
+        nullable: true;
+    }>;
+    is_error: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof RequestToolResultBlockType;
+}>;
+export declare class RequestToolResultBlock extends RequestToolResultBlock_base {
+}
+declare const RequestCitationsConfig_base: S.Struct<{
+    enabled: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+}>;
+export declare class RequestCitationsConfig extends RequestCitationsConfig_base {
+}
+declare const Base64PDFSourceMediaType_base: S.Literal<["application/pdf"]>;
+export declare class Base64PDFSourceMediaType extends Base64PDFSourceMediaType_base {
+}
+declare const Base64PDFSourceType_base: S.Literal<["base64"]>;
+export declare class Base64PDFSourceType extends Base64PDFSourceType_base {
+}
+declare const Base64PDFSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof Base64PDFSourceMediaType;
+    type: typeof Base64PDFSourceType;
+}>;
+export declare class Base64PDFSource extends Base64PDFSource_base {
+}
+declare const PlainTextSourceMediaType_base: S.Literal<["text/plain"]>;
+export declare class PlainTextSourceMediaType extends PlainTextSourceMediaType_base {
+}
+declare const PlainTextSourceType_base: S.Literal<["text"]>;
+export declare class PlainTextSourceType extends PlainTextSourceType_base {
+}
+declare const PlainTextSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof PlainTextSourceMediaType;
+    type: typeof PlainTextSourceType;
+}>;
+export declare class PlainTextSource extends PlainTextSource_base {
+}
+declare const ContentBlockSourceType_base: S.Literal<["content"]>;
+export declare class ContentBlockSourceType extends ContentBlockSourceType_base {
+}
+declare const ContentBlockSource_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<S.Union<[typeof RequestTextBlock, typeof RequestImageBlock]>>]>;
+    type: typeof ContentBlockSourceType;
+}>;
+export declare class ContentBlockSource extends ContentBlockSource_base {
+}
+declare const URLPDFSourceType_base: S.Literal<["url"]>;
+export declare class URLPDFSourceType extends URLPDFSourceType_base {
+}
+declare const URLPDFSource_base: S.Struct<{
+    type: typeof URLPDFSourceType;
+    url: typeof S.String;
+}>;
+export declare class URLPDFSource extends URLPDFSource_base {
+}
+declare const RequestDocumentBlockType_base: S.Literal<["document"]>;
+export declare class RequestDocumentBlockType extends RequestDocumentBlockType_base {
+}
+declare const RequestDocumentBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    citations: S.optionalWith<typeof RequestCitationsConfig, {
+        nullable: true;
+    }>;
+    context: S.optionalWith<S.Union<[S.filter<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    source: S.Union<[typeof Base64PDFSource, typeof PlainTextSource, typeof ContentBlockSource, typeof URLPDFSource]>;
+    title: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof RequestDocumentBlockType;
+}>;
+export declare class RequestDocumentBlock extends RequestDocumentBlock_base {
+}
+declare const RequestThinkingBlockType_base: S.Literal<["thinking"]>;
+export declare class RequestThinkingBlockType extends RequestThinkingBlockType_base {
+}
+declare const RequestThinkingBlock_base: S.Struct<{
+    signature: typeof S.String;
+    thinking: typeof S.String;
+    type: typeof RequestThinkingBlockType;
+}>;
+export declare class RequestThinkingBlock extends RequestThinkingBlock_base {
+}
+declare const RequestRedactedThinkingBlockType_base: S.Literal<["redacted_thinking"]>;
+export declare class RequestRedactedThinkingBlockType extends RequestRedactedThinkingBlockType_base {
+}
+declare const RequestRedactedThinkingBlock_base: S.Struct<{
+    data: typeof S.String;
+    type: typeof RequestRedactedThinkingBlockType;
+}>;
+export declare class RequestRedactedThinkingBlock extends RequestRedactedThinkingBlock_base {
+}
+declare const InputContentBlock_base: S.Union<[typeof RequestServerToolUseBlock, typeof RequestWebSearchToolResultBlock, typeof RequestTextBlock, typeof RequestImageBlock, typeof RequestToolUseBlock, typeof RequestToolResultBlock, typeof RequestDocumentBlock, typeof RequestThinkingBlock, typeof RequestRedactedThinkingBlock]>;
+export declare class InputContentBlock extends InputContentBlock_base {
+}
+declare const InputMessageRole_base: S.Literal<["user", "assistant"]>;
+export declare class InputMessageRole extends InputMessageRole_base {
+}
+declare const InputMessage_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<typeof InputContentBlock>]>;
+    role: typeof InputMessageRole;
+}>;
+export declare class InputMessage extends InputMessage_base {
+}
+declare const Metadata_base: S.Struct<{
+    user_id: S.optionalWith<S.Union<[S.filter<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class Metadata extends Metadata_base {
+}
+declare const CreateMessageParamsServiceTier_base: S.Literal<["auto", "standard_only"]>;
+export declare class CreateMessageParamsServiceTier extends CreateMessageParamsServiceTier_base {
+}
+declare const ThinkingConfigEnabledType_base: S.Literal<["enabled"]>;
+export declare class ThinkingConfigEnabledType extends ThinkingConfigEnabledType_base {
+}
+declare const ThinkingConfigEnabled_base: S.Struct<{
+    budget_tokens: S.filter<typeof S.Int>;
+    type: typeof ThinkingConfigEnabledType;
+}>;
+export declare class ThinkingConfigEnabled extends ThinkingConfigEnabled_base {
+}
+declare const ThinkingConfigDisabledType_base: S.Literal<["disabled"]>;
+export declare class ThinkingConfigDisabledType extends ThinkingConfigDisabledType_base {
+}
+declare const ThinkingConfigDisabled_base: S.Struct<{
+    type: typeof ThinkingConfigDisabledType;
+}>;
+export declare class ThinkingConfigDisabled extends ThinkingConfigDisabled_base {
+}
+declare const ThinkingConfigParam_base: S.Union<[typeof ThinkingConfigEnabled, typeof ThinkingConfigDisabled]>;
+export declare class ThinkingConfigParam extends ThinkingConfigParam_base {
+}
+declare const ToolChoiceAutoType_base: S.Literal<["auto"]>;
+export declare class ToolChoiceAutoType extends ToolChoiceAutoType_base {
+}
+declare const ToolChoiceAuto_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    type: typeof ToolChoiceAutoType;
+}>;
+export declare class ToolChoiceAuto extends ToolChoiceAuto_base {
+}
+declare const ToolChoiceAnyType_base: S.Literal<["any"]>;
+export declare class ToolChoiceAnyType extends ToolChoiceAnyType_base {
+}
+declare const ToolChoiceAny_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    type: typeof ToolChoiceAnyType;
+}>;
+export declare class ToolChoiceAny extends ToolChoiceAny_base {
+}
+declare const ToolChoiceToolType_base: S.Literal<["tool"]>;
+export declare class ToolChoiceToolType extends ToolChoiceToolType_base {
+}
+declare const ToolChoiceTool_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    name: typeof S.String;
+    type: typeof ToolChoiceToolType;
+}>;
+export declare class ToolChoiceTool extends ToolChoiceTool_base {
+}
+declare const ToolChoiceNoneType_base: S.Literal<["none"]>;
+export declare class ToolChoiceNoneType extends ToolChoiceNoneType_base {
+}
+declare const ToolChoiceNone_base: S.Struct<{
+    type: typeof ToolChoiceNoneType;
+}>;
+export declare class ToolChoiceNone extends ToolChoiceNone_base {
+}
+declare const ToolChoice_base: S.Union<[typeof ToolChoiceAuto, typeof ToolChoiceAny, typeof ToolChoiceTool, typeof ToolChoiceNone]>;
+export declare class ToolChoice extends ToolChoice_base {
+}
+declare const ToolTypeEnum_base: S.Literal<["custom"]>;
+export declare class ToolTypeEnum extends ToolTypeEnum_base {
+}
+declare const InputSchemaType_base: S.Literal<["object"]>;
+export declare class InputSchemaType extends InputSchemaType_base {
+}
+declare const InputSchema_base: S.Struct<{
+    properties: S.optionalWith<S.Union<[S.Record$<typeof S.String, typeof S.Unknown>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    required: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof InputSchemaType;
+}>;
+export declare class InputSchema extends InputSchema_base {
+}
+declare const Tool_base: S.Struct<{
+    type: S.optionalWith<S.Union<[typeof S.Null, typeof ToolTypeEnum]>, {
+        nullable: true;
+    }>;
+    description: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    name: S.filter<S.filter<S.filter<typeof S.String>>>;
+    input_schema: typeof InputSchema;
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class Tool extends Tool_base {
+}
+declare const BashTool20250124Name_base: S.Literal<["bash"]>;
+export declare class BashTool20250124Name extends BashTool20250124Name_base {
+}
+declare const BashTool20250124Type_base: S.Literal<["bash_20250124"]>;
+export declare class BashTool20250124Type extends BashTool20250124Type_base {
+}
+declare const BashTool20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BashTool20250124Name;
+    type: typeof BashTool20250124Type;
+}>;
+export declare class BashTool20250124 extends BashTool20250124_base {
+}
+declare const TextEditor20250124Name_base: S.Literal<["str_replace_editor"]>;
+export declare class TextEditor20250124Name extends TextEditor20250124Name_base {
+}
+declare const TextEditor20250124Type_base: S.Literal<["text_editor_20250124"]>;
+export declare class TextEditor20250124Type extends TextEditor20250124Type_base {
+}
+declare const TextEditor20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof TextEditor20250124Name;
+    type: typeof TextEditor20250124Type;
+}>;
+export declare class TextEditor20250124 extends TextEditor20250124_base {
+}
+declare const TextEditor20250429Name_base: S.Literal<["str_replace_based_edit_tool"]>;
+export declare class TextEditor20250429Name extends TextEditor20250429Name_base {
+}
+declare const TextEditor20250429Type_base: S.Literal<["text_editor_20250429"]>;
+export declare class TextEditor20250429Type extends TextEditor20250429Type_base {
+}
+declare const TextEditor20250429_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof TextEditor20250429Name;
+    type: typeof TextEditor20250429Type;
+}>;
+export declare class TextEditor20250429 extends TextEditor20250429_base {
+}
+declare const WebSearchTool20250305Name_base: S.Literal<["web_search"]>;
+export declare class WebSearchTool20250305Name extends WebSearchTool20250305Name_base {
+}
+declare const WebSearchTool20250305Type_base: S.Literal<["web_search_20250305"]>;
+export declare class WebSearchTool20250305Type extends WebSearchTool20250305Type_base {
+}
+declare const UserLocationType_base: S.Literal<["approximate"]>;
+export declare class UserLocationType extends UserLocationType_base {
+}
+declare const UserLocation_base: S.Struct<{
+    city: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    country: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    region: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    timezone: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof UserLocationType;
+}>;
+export declare class UserLocation extends UserLocation_base {
+}
+declare const WebSearchTool20250305_base: S.Struct<{
+    allowed_domains: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    blocked_domains: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    cache_control: S.optionalWith<S.Union<[typeof CacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    max_uses: S.optionalWith<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof WebSearchTool20250305Name;
+    type: typeof WebSearchTool20250305Type;
+    user_location: S.optionalWith<S.Union<[typeof UserLocation, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class WebSearchTool20250305 extends WebSearchTool20250305_base {
+}
+declare const CreateMessageParams_base: S.Class<CreateMessageParams, {
+    model: S.Union<[typeof S.String, typeof Model]>;
+    messages: S.Array$<typeof InputMessage>;
+    max_tokens: S.filter<typeof S.Int>;
+    metadata: S.optionalWith<typeof Metadata, {
+        nullable: true;
+    }>;
+    service_tier: S.optionalWith<typeof CreateMessageParamsServiceTier, {
+        nullable: true;
+    }>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof RequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof ThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof ToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof Tool, typeof BashTool20250124, typeof TextEditor20250124, typeof TextEditor20250429, typeof WebSearchTool20250305]>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    model: S.Union<[typeof S.String, typeof Model]>;
+    messages: S.Array$<typeof InputMessage>;
+    max_tokens: S.filter<typeof S.Int>;
+    metadata: S.optionalWith<typeof Metadata, {
+        nullable: true;
+    }>;
+    service_tier: S.optionalWith<typeof CreateMessageParamsServiceTier, {
+        nullable: true;
+    }>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof RequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof ThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof ToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof Tool, typeof BashTool20250124, typeof TextEditor20250124, typeof TextEditor20250429, typeof WebSearchTool20250305]>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly thinking?: {
+        readonly type: "enabled";
+        readonly budget_tokens: number;
+    } | {
+        readonly type: "disabled";
+    } | undefined;
+} & {
+    readonly model: string;
+} & {
+    readonly messages: readonly {
+        readonly content: string | readonly ({
+            readonly type: "server_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: "web_search";
+        } | {
+            readonly type: "web_search_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly content: {
+                readonly type: "web_search_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+            } | readonly {
+                readonly type: "web_search_result";
+                readonly encrypted_content: string;
+                readonly page_age?: string | null | undefined;
+                readonly title: string;
+                readonly url: string;
+            }[];
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "text";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        } | {
+            readonly type: "image";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            };
+        } | {
+            readonly type: "tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+        } | {
+            readonly type: "tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly content?: string | readonly ({
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            } | {
+                readonly type: "image";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                } | null | undefined;
+                readonly source: {
+                    readonly type: "base64";
+                    readonly data: string;
+                    readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                } | {
+                    readonly type: "url";
+                    readonly url: string;
+                };
+            })[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "document";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly title?: string | null | undefined;
+            readonly citations?: {
+                readonly enabled?: boolean | undefined;
+            } | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "application/pdf";
+            } | {
+                readonly type: "text";
+                readonly data: string;
+                readonly media_type: "text/plain";
+            } | {
+                readonly type: "content";
+                readonly content: string | readonly ({
+                    readonly type: "text";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                    } | null | undefined;
+                    readonly text: string;
+                    readonly citations?: readonly ({
+                        readonly type: "char_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_char_index: number;
+                        readonly start_char_index: number;
+                    } | {
+                        readonly type: "page_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_page_number: number;
+                        readonly start_page_number: number;
+                    } | {
+                        readonly type: "content_block_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_block_index: number;
+                        readonly start_block_index: number;
+                    } | {
+                        readonly type: "web_search_result_location";
+                        readonly title: string | null;
+                        readonly url: string;
+                        readonly cited_text: string;
+                        readonly encrypted_index: string;
+                    })[] | null | undefined;
+                } | {
+                    readonly type: "image";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                    } | null | undefined;
+                    readonly source: {
+                        readonly type: "base64";
+                        readonly data: string;
+                        readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                    } | {
+                        readonly type: "url";
+                        readonly url: string;
+                    };
+                })[];
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            };
+            readonly context?: string | null | undefined;
+        } | {
+            readonly type: "thinking";
+            readonly thinking: string;
+            readonly signature: string;
+        } | {
+            readonly type: "redacted_thinking";
+            readonly data: string;
+        })[];
+        readonly role: "user" | "assistant";
+    }[];
+} & {
+    readonly max_tokens: number;
+} & {
+    readonly metadata?: {
+        readonly user_id?: string | null | undefined;
+    } | undefined;
+} & {
+    readonly service_tier?: "auto" | "standard_only" | undefined;
+} & {
+    readonly stop_sequences?: readonly string[] | undefined;
+} & {
+    readonly stream?: boolean | undefined;
+} & {
+    readonly system?: string | readonly {
+        readonly type: "text";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    }[] | undefined;
+} & {
+    readonly temperature?: number | undefined;
+} & {
+    readonly tool_choice?: {
+        readonly type: "auto";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "any";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "tool";
+        readonly name: string;
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "none";
+    } | undefined;
+} & {
+    readonly tools?: readonly ({
+        readonly type?: "custom" | null | undefined;
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: string;
+        readonly description?: string | undefined;
+        readonly input_schema: {
+            readonly type: "object";
+            readonly properties?: {
+                readonly [x: string]: unknown;
+            } | null | undefined;
+            readonly required?: readonly string[] | null | undefined;
+        };
+    } | {
+        readonly type: "bash_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "text_editor_20250429";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "str_replace_based_edit_tool";
+    } | {
+        readonly type: "web_search_20250305";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "web_search";
+        readonly allowed_domains?: readonly string[] | null | undefined;
+        readonly blocked_domains?: readonly string[] | null | undefined;
+        readonly max_uses?: number | null | undefined;
+        readonly user_location?: {
+            readonly type: "approximate";
+            readonly city?: string | null | undefined;
+            readonly country?: string | null | undefined;
+            readonly region?: string | null | undefined;
+            readonly timezone?: string | null | undefined;
+        } | null | undefined;
+    })[] | undefined;
+} & {
+    readonly top_k?: number | undefined;
+} & {
+    readonly top_p?: number | undefined;
+}, {}, {}>;
+export declare class CreateMessageParams extends CreateMessageParams_base {
+}
+declare const MessageType_base: S.Literal<["message"]>;
+export declare class MessageType extends MessageType_base {
+}
+declare const MessageRole_base: S.Literal<["assistant"]>;
+export declare class MessageRole extends MessageRole_base {
+}
+declare const ResponseCharLocationCitationType_base: S.Literal<["char_location"]>;
+export declare class ResponseCharLocationCitationType extends ResponseCharLocationCitationType_base {
+}
+declare const ResponseCharLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_char_index: typeof S.Int;
+    start_char_index: S.filter<typeof S.Int>;
+    type: typeof ResponseCharLocationCitationType;
+}>;
+export declare class ResponseCharLocationCitation extends ResponseCharLocationCitation_base {
+}
+declare const ResponsePageLocationCitationType_base: S.Literal<["page_location"]>;
+export declare class ResponsePageLocationCitationType extends ResponsePageLocationCitationType_base {
+}
+declare const ResponsePageLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_page_number: typeof S.Int;
+    start_page_number: S.filter<typeof S.Int>;
+    type: typeof ResponsePageLocationCitationType;
+}>;
+export declare class ResponsePageLocationCitation extends ResponsePageLocationCitation_base {
+}
+declare const ResponseContentBlockLocationCitationType_base: S.Literal<["content_block_location"]>;
+export declare class ResponseContentBlockLocationCitationType extends ResponseContentBlockLocationCitationType_base {
+}
+declare const ResponseContentBlockLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_block_index: typeof S.Int;
+    start_block_index: S.filter<typeof S.Int>;
+    type: typeof ResponseContentBlockLocationCitationType;
+}>;
+export declare class ResponseContentBlockLocationCitation extends ResponseContentBlockLocationCitation_base {
+}
+declare const ResponseWebSearchResultLocationCitationType_base: S.Literal<["web_search_result_location"]>;
+export declare class ResponseWebSearchResultLocationCitationType extends ResponseWebSearchResultLocationCitationType_base {
+}
+declare const ResponseWebSearchResultLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    encrypted_index: typeof S.String;
+    title: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof ResponseWebSearchResultLocationCitationType;
+    url: typeof S.String;
+}>;
+export declare class ResponseWebSearchResultLocationCitation extends ResponseWebSearchResultLocationCitation_base {
+}
+declare const ResponseTextBlockType_base: S.Literal<["text"]>;
+export declare class ResponseTextBlockType extends ResponseTextBlockType_base {
+}
+declare const ResponseTextBlock_base: S.Struct<{
+    citations: S.optional<S.NullOr<S.Array$<S.Union<[typeof ResponseCharLocationCitation, typeof ResponsePageLocationCitation, typeof ResponseContentBlockLocationCitation, typeof ResponseWebSearchResultLocationCitation]>>>>;
+    text: S.filter<S.filter<typeof S.String>>;
+    type: typeof ResponseTextBlockType;
+}>;
+export declare class ResponseTextBlock extends ResponseTextBlock_base {
+}
+declare const ResponseToolUseBlockType_base: S.Literal<["tool_use"]>;
+export declare class ResponseToolUseBlockType extends ResponseToolUseBlockType_base {
+}
+declare const ResponseToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: S.filter<typeof S.String>;
+    type: typeof ResponseToolUseBlockType;
+}>;
+export declare class ResponseToolUseBlock extends ResponseToolUseBlock_base {
+}
+declare const ResponseServerToolUseBlockName_base: S.Literal<["web_search"]>;
+export declare class ResponseServerToolUseBlockName extends ResponseServerToolUseBlockName_base {
+}
+declare const ResponseServerToolUseBlockType_base: S.Literal<["server_tool_use"]>;
+export declare class ResponseServerToolUseBlockType extends ResponseServerToolUseBlockType_base {
+}
+declare const ResponseServerToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof ResponseServerToolUseBlockName;
+    type: typeof ResponseServerToolUseBlockType;
+}>;
+export declare class ResponseServerToolUseBlock extends ResponseServerToolUseBlock_base {
+}
+declare const ResponseWebSearchToolResultErrorType_base: S.Literal<["web_search_tool_result_error"]>;
+export declare class ResponseWebSearchToolResultErrorType extends ResponseWebSearchToolResultErrorType_base {
+}
+declare const ResponseWebSearchToolResultError_base: S.Struct<{
+    error_code: typeof WebSearchToolResultErrorCode;
+    type: typeof ResponseWebSearchToolResultErrorType;
+}>;
+export declare class ResponseWebSearchToolResultError extends ResponseWebSearchToolResultError_base {
+}
+declare const ResponseWebSearchResultBlockType_base: S.Literal<["web_search_result"]>;
+export declare class ResponseWebSearchResultBlockType extends ResponseWebSearchResultBlockType_base {
+}
+declare const ResponseWebSearchResultBlock_base: S.Struct<{
+    encrypted_content: typeof S.String;
+    page_age: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    title: typeof S.String;
+    type: typeof ResponseWebSearchResultBlockType;
+    url: typeof S.String;
+}>;
+export declare class ResponseWebSearchResultBlock extends ResponseWebSearchResultBlock_base {
+}
+declare const ResponseWebSearchToolResultBlockType_base: S.Literal<["web_search_tool_result"]>;
+export declare class ResponseWebSearchToolResultBlockType extends ResponseWebSearchToolResultBlockType_base {
+}
+declare const ResponseWebSearchToolResultBlock_base: S.Struct<{
+    content: S.Union<[typeof ResponseWebSearchToolResultError, S.Array$<typeof ResponseWebSearchResultBlock>]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof ResponseWebSearchToolResultBlockType;
+}>;
+export declare class ResponseWebSearchToolResultBlock extends ResponseWebSearchToolResultBlock_base {
+}
+declare const ResponseThinkingBlockType_base: S.Literal<["thinking"]>;
+export declare class ResponseThinkingBlockType extends ResponseThinkingBlockType_base {
+}
+declare const ResponseThinkingBlock_base: S.Struct<{
+    signature: typeof S.String;
+    thinking: typeof S.String;
+    type: typeof ResponseThinkingBlockType;
+}>;
+export declare class ResponseThinkingBlock extends ResponseThinkingBlock_base {
+}
+declare const ResponseRedactedThinkingBlockType_base: S.Literal<["redacted_thinking"]>;
+export declare class ResponseRedactedThinkingBlockType extends ResponseRedactedThinkingBlockType_base {
+}
+declare const ResponseRedactedThinkingBlock_base: S.Struct<{
+    data: typeof S.String;
+    type: typeof ResponseRedactedThinkingBlockType;
+}>;
+export declare class ResponseRedactedThinkingBlock extends ResponseRedactedThinkingBlock_base {
+}
+declare const ContentBlock_base: S.Union<[typeof ResponseTextBlock, typeof ResponseToolUseBlock, typeof ResponseServerToolUseBlock, typeof ResponseWebSearchToolResultBlock, typeof ResponseThinkingBlock, typeof ResponseRedactedThinkingBlock]>;
+export declare class ContentBlock extends ContentBlock_base {
+}
+declare const StopReason_base: S.Literal<["end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal"]>;
+export declare class StopReason extends StopReason_base {
+}
+declare const ServerToolUsage_base: S.Struct<{
+    web_search_requests: S.filter<typeof S.Int>;
+}>;
+export declare class ServerToolUsage extends ServerToolUsage_base {
+}
+declare const UsageServiceTierEnum_base: S.Literal<["standard", "priority", "batch"]>;
+export declare class UsageServiceTierEnum extends UsageServiceTierEnum_base {
+}
+declare const Usage_base: S.Struct<{
+    cache_creation_input_tokens: S.NullOr<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>>;
+    cache_read_input_tokens: S.NullOr<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>>;
+    input_tokens: S.filter<typeof S.Int>;
+    output_tokens: S.filter<typeof S.Int>;
+    server_tool_use: S.optional<S.NullOr<typeof ServerToolUsage>>;
+    service_tier: S.NullOr<S.Union<[typeof UsageServiceTierEnum, typeof S.Null]>>;
+}>;
+export declare class Usage extends Usage_base {
+}
+declare const Message_base: S.Class<Message, {
+    id: typeof S.String;
+    type: typeof MessageType;
+    role: typeof MessageRole;
+    content: S.Array$<typeof ContentBlock>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof StopReason, typeof S.Null]>;
+    stop_sequence: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    usage: typeof Usage;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: typeof MessageType;
+    role: typeof MessageRole;
+    content: S.Array$<typeof ContentBlock>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof StopReason, typeof S.Null]>;
+    stop_sequence: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    usage: typeof Usage;
+}>, never, {
+    readonly type: "message";
+} & {
+    readonly id: string;
+} & {
+    readonly content: readonly ({
+        readonly type: "text";
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    } | {
+        readonly type: "tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: string;
+    } | {
+        readonly type: "server_tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: "web_search";
+    } | {
+        readonly type: "web_search_tool_result";
+        readonly content: {
+            readonly type: "web_search_tool_result_error";
+            readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+        } | readonly {
+            readonly type: "web_search_result";
+            readonly encrypted_content: string;
+            readonly page_age: string | null;
+            readonly title: string;
+            readonly url: string;
+        }[];
+        readonly tool_use_id: string;
+    } | {
+        readonly type: "thinking";
+        readonly thinking: string;
+        readonly signature: string;
+    } | {
+        readonly type: "redacted_thinking";
+        readonly data: string;
+    })[];
+} & {
+    readonly role: "assistant";
+} & {
+    readonly model: string;
+} & {
+    readonly stop_sequence: string | null;
+} & {
+    readonly usage: {
+        readonly server_tool_use?: {
+            readonly web_search_requests: number;
+        } | null | undefined;
+        readonly service_tier: "standard" | "priority" | "batch" | null;
+        readonly cache_creation_input_tokens: number | null;
+        readonly cache_read_input_tokens: number | null;
+        readonly input_tokens: number;
+        readonly output_tokens: number;
+    };
+} & {
+    readonly stop_reason: "tool_use" | "max_tokens" | "end_turn" | "stop_sequence" | "pause_turn" | "refusal" | null;
+}, {}, {}>;
+export declare class Message extends Message_base {
+}
+declare const InvalidRequestErrorType_base: S.Literal<["invalid_request_error"]>;
+export declare class InvalidRequestErrorType extends InvalidRequestErrorType_base {
+}
+declare const InvalidRequestError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof InvalidRequestErrorType;
+}>;
+export declare class InvalidRequestError extends InvalidRequestError_base {
+}
+declare const AuthenticationErrorType_base: S.Literal<["authentication_error"]>;
+export declare class AuthenticationErrorType extends AuthenticationErrorType_base {
+}
+declare const AuthenticationError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof AuthenticationErrorType;
+}>;
+export declare class AuthenticationError extends AuthenticationError_base {
+}
+declare const BillingErrorType_base: S.Literal<["billing_error"]>;
+export declare class BillingErrorType extends BillingErrorType_base {
+}
+declare const BillingError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BillingErrorType;
+}>;
+export declare class BillingError extends BillingError_base {
+}
+declare const PermissionErrorType_base: S.Literal<["permission_error"]>;
+export declare class PermissionErrorType extends PermissionErrorType_base {
+}
+declare const PermissionError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof PermissionErrorType;
+}>;
+export declare class PermissionError extends PermissionError_base {
+}
+declare const NotFoundErrorType_base: S.Literal<["not_found_error"]>;
+export declare class NotFoundErrorType extends NotFoundErrorType_base {
+}
+declare const NotFoundError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof NotFoundErrorType;
+}>;
+export declare class NotFoundError extends NotFoundError_base {
+}
+declare const RateLimitErrorType_base: S.Literal<["rate_limit_error"]>;
+export declare class RateLimitErrorType extends RateLimitErrorType_base {
+}
+declare const RateLimitError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof RateLimitErrorType;
+}>;
+export declare class RateLimitError extends RateLimitError_base {
+}
+declare const GatewayTimeoutErrorType_base: S.Literal<["timeout_error"]>;
+export declare class GatewayTimeoutErrorType extends GatewayTimeoutErrorType_base {
+}
+declare const GatewayTimeoutError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof GatewayTimeoutErrorType;
+}>;
+export declare class GatewayTimeoutError extends GatewayTimeoutError_base {
+}
+declare const APIErrorType_base: S.Literal<["api_error"]>;
+export declare class APIErrorType extends APIErrorType_base {
+}
+declare const APIError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof APIErrorType;
+}>;
+export declare class APIError extends APIError_base {
+}
+declare const OverloadedErrorType_base: S.Literal<["overloaded_error"]>;
+export declare class OverloadedErrorType extends OverloadedErrorType_base {
+}
+declare const OverloadedError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof OverloadedErrorType;
+}>;
+export declare class OverloadedError extends OverloadedError_base {
+}
+declare const ErrorResponseType_base: S.Literal<["error"]>;
+export declare class ErrorResponseType extends ErrorResponseType_base {
+}
+declare const ErrorResponse_base: S.Class<ErrorResponse, {
+    error: S.Union<[typeof InvalidRequestError, typeof AuthenticationError, typeof BillingError, typeof PermissionError, typeof NotFoundError, typeof RateLimitError, typeof GatewayTimeoutError, typeof APIError, typeof OverloadedError]>;
+    type: typeof ErrorResponseType;
+}, S.Struct.Encoded<{
+    error: S.Union<[typeof InvalidRequestError, typeof AuthenticationError, typeof BillingError, typeof PermissionError, typeof NotFoundError, typeof RateLimitError, typeof GatewayTimeoutError, typeof APIError, typeof OverloadedError]>;
+    type: typeof ErrorResponseType;
+}>, never, {
+    readonly type: "error";
+} & {
+    readonly error: {
+        readonly type: "invalid_request_error";
+        readonly message: string;
+    } | {
+        readonly type: "authentication_error";
+        readonly message: string;
+    } | {
+        readonly type: "billing_error";
+        readonly message: string;
+    } | {
+        readonly type: "permission_error";
+        readonly message: string;
+    } | {
+        readonly type: "not_found_error";
+        readonly message: string;
+    } | {
+        readonly type: "rate_limit_error";
+        readonly message: string;
+    } | {
+        readonly type: "timeout_error";
+        readonly message: string;
+    } | {
+        readonly type: "api_error";
+        readonly message: string;
+    } | {
+        readonly type: "overloaded_error";
+        readonly message: string;
+    };
+}, {}, {}>;
+export declare class ErrorResponse extends ErrorResponse_base {
+}
+declare const CompletePostParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class CompletePostParams extends CompletePostParams_base {
+}
+declare const CompletionRequest_base: S.Class<CompletionRequest, {
+    model: S.Union<[typeof S.String, typeof Model]>;
+    prompt: S.filter<typeof S.String>;
+    max_tokens_to_sample: S.filter<typeof S.Int>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    metadata: S.optionalWith<typeof Metadata, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    model: S.Union<[typeof S.String, typeof Model]>;
+    prompt: S.filter<typeof S.String>;
+    max_tokens_to_sample: S.filter<typeof S.Int>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    metadata: S.optionalWith<typeof Metadata, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly model: string;
+} & {
+    readonly metadata?: {
+        readonly user_id?: string | null | undefined;
+    } | undefined;
+} & {
+    readonly stop_sequences?: readonly string[] | undefined;
+} & {
+    readonly stream?: boolean | undefined;
+} & {
+    readonly temperature?: number | undefined;
+} & {
+    readonly top_k?: number | undefined;
+} & {
+    readonly top_p?: number | undefined;
+} & {
+    readonly prompt: string;
+} & {
+    readonly max_tokens_to_sample: number;
+}, {}, {}>;
+export declare class CompletionRequest extends CompletionRequest_base {
+}
+declare const CompletionResponseType_base: S.Literal<["completion"]>;
+export declare class CompletionResponseType extends CompletionResponseType_base {
+}
+declare const CompletionResponse_base: S.Class<CompletionResponse, {
+    completion: typeof S.String;
+    id: typeof S.String;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof CompletionResponseType;
+}, S.Struct.Encoded<{
+    completion: typeof S.String;
+    id: typeof S.String;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof CompletionResponseType;
+}>, never, {
+    readonly type: "completion";
+} & {
+    readonly id: string;
+} & {
+    readonly model: string;
+} & {
+    readonly stop_reason: string | null;
+} & {
+    readonly completion: string;
+}, {}, {}>;
+export declare class CompletionResponse extends CompletionResponse_base {
+}
+declare const ModelsListParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class ModelsListParams extends ModelsListParams_base {
+}
+declare const ModelInfoType_base: S.Literal<["model"]>;
+export declare class ModelInfoType extends ModelInfoType_base {
+}
+declare const ModelInfo_base: S.Struct<{
+    created_at: typeof S.String;
+    display_name: typeof S.String;
+    id: typeof S.String;
+    type: typeof ModelInfoType;
+}>;
+export declare class ModelInfo extends ModelInfo_base {
+}
+declare const ListResponseModelInfo_base: S.Class<ListResponseModelInfo, {
+    data: S.Array$<typeof ModelInfo>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof ModelInfo>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "model";
+        readonly id: string;
+        readonly created_at: string;
+        readonly display_name: string;
+    }[];
+} & {
+    readonly has_more: boolean;
+} & {
+    readonly first_id: string | null;
+} & {
+    readonly last_id: string | null;
+}, {}, {}>;
+export declare class ListResponseModelInfo extends ListResponseModelInfo_base {
+}
+declare const ModelsGetParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class ModelsGetParams extends ModelsGetParams_base {
+}
+declare const MessageBatchesListParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesListParams extends MessageBatchesListParams_base {
+}
+declare const MessageBatchProcessingStatus_base: S.Literal<["in_progress", "canceling", "ended"]>;
+export declare class MessageBatchProcessingStatus extends MessageBatchProcessingStatus_base {
+}
+declare const RequestCounts_base: S.Struct<{
+    canceled: typeof S.Int;
+    errored: typeof S.Int;
+    expired: typeof S.Int;
+    processing: typeof S.Int;
+    succeeded: typeof S.Int;
+}>;
+export declare class RequestCounts extends RequestCounts_base {
+}
+declare const MessageBatchType_base: S.Literal<["message_batch"]>;
+export declare class MessageBatchType extends MessageBatchType_base {
+}
+declare const MessageBatch_base: S.Struct<{
+    archived_at: S.Union<[typeof S.String, typeof S.Null]>;
+    cancel_initiated_at: S.Union<[typeof S.String, typeof S.Null]>;
+    created_at: typeof S.String;
+    ended_at: S.Union<[typeof S.String, typeof S.Null]>;
+    expires_at: typeof S.String;
+    id: typeof S.String;
+    processing_status: typeof MessageBatchProcessingStatus;
+    request_counts: typeof RequestCounts;
+    results_url: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof MessageBatchType;
+}>;
+export declare class MessageBatch extends MessageBatch_base {
+}
+declare const ListResponseMessageBatch_base: S.Class<ListResponseMessageBatch, {
+    data: S.Array$<typeof MessageBatch>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof MessageBatch>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "message_batch";
+        readonly id: string;
+        readonly created_at: string;
+        readonly archived_at: string | null;
+        readonly cancel_initiated_at: string | null;
+        readonly ended_at: string | null;
+        readonly expires_at: string;
+        readonly processing_status: "in_progress" | "canceling" | "ended";
+        readonly request_counts: {
+            readonly canceled: number;
+            readonly errored: number;
+            readonly expired: number;
+            readonly processing: number;
+            readonly succeeded: number;
+        };
+        readonly results_url: string | null;
+    }[];
+} & {
+    readonly has_more: boolean;
+} & {
+    readonly first_id: string | null;
+} & {
+    readonly last_id: string | null;
+}, {}, {}>;
+export declare class ListResponseMessageBatch extends ListResponseMessageBatch_base {
+}
+declare const MessageBatchesPostParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesPostParams extends MessageBatchesPostParams_base {
+}
+declare const MessageBatchIndividualRequestParams_base: S.Struct<{
+    custom_id: S.filter<S.filter<S.filter<typeof S.String>>>;
+    params: typeof CreateMessageParams;
+}>;
+export declare class MessageBatchIndividualRequestParams extends MessageBatchIndividualRequestParams_base {
+}
+declare const CreateMessageBatchParams_base: S.Class<CreateMessageBatchParams, {
+    requests: S.filter<S.filter<S.Array$<typeof MessageBatchIndividualRequestParams>>>;
+}, S.Struct.Encoded<{
+    requests: S.filter<S.filter<S.Array$<typeof MessageBatchIndividualRequestParams>>>;
+}>, never, {
+    readonly requests: readonly {
+        readonly custom_id: string;
+        readonly params: CreateMessageParams;
+    }[];
+}, {}, {}>;
+export declare class CreateMessageBatchParams extends CreateMessageBatchParams_base {
+}
+declare const MessageBatchesRetrieveParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesRetrieveParams extends MessageBatchesRetrieveParams_base {
+}
+declare const MessageBatchesDeleteParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesDeleteParams extends MessageBatchesDeleteParams_base {
+}
+declare const DeleteMessageBatchResponseType_base: S.Literal<["message_batch_deleted"]>;
+export declare class DeleteMessageBatchResponseType extends DeleteMessageBatchResponseType_base {
+}
+declare const DeleteMessageBatchResponse_base: S.Class<DeleteMessageBatchResponse, {
+    id: typeof S.String;
+    type: typeof DeleteMessageBatchResponseType;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: typeof DeleteMessageBatchResponseType;
+}>, never, {
+    readonly type: "message_batch_deleted";
+} & {
+    readonly id: string;
+}, {}, {}>;
+export declare class DeleteMessageBatchResponse extends DeleteMessageBatchResponse_base {
+}
+declare const MessageBatchesCancelParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesCancelParams extends MessageBatchesCancelParams_base {
+}
+declare const MessageBatchesResultsParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessageBatchesResultsParams extends MessageBatchesResultsParams_base {
+}
+declare const MessagesCountTokensPostParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class MessagesCountTokensPostParams extends MessagesCountTokensPostParams_base {
+}
+declare const CountMessageTokensParams_base: S.Class<CountMessageTokensParams, {
+    messages: S.Array$<typeof InputMessage>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof RequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof ThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof ToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof Tool, typeof BashTool20250124, typeof TextEditor20250124, typeof TextEditor20250429, typeof WebSearchTool20250305]>>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    messages: S.Array$<typeof InputMessage>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof RequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof ThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof ToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof Tool, typeof BashTool20250124, typeof TextEditor20250124, typeof TextEditor20250429, typeof WebSearchTool20250305]>>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly thinking?: {
+        readonly type: "enabled";
+        readonly budget_tokens: number;
+    } | {
+        readonly type: "disabled";
+    } | undefined;
+} & {
+    readonly model: string;
+} & {
+    readonly messages: readonly {
+        readonly content: string | readonly ({
+            readonly type: "server_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: "web_search";
+        } | {
+            readonly type: "web_search_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly content: {
+                readonly type: "web_search_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+            } | readonly {
+                readonly type: "web_search_result";
+                readonly encrypted_content: string;
+                readonly page_age?: string | null | undefined;
+                readonly title: string;
+                readonly url: string;
+            }[];
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "text";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        } | {
+            readonly type: "image";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            };
+        } | {
+            readonly type: "tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+        } | {
+            readonly type: "tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly content?: string | readonly ({
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            } | {
+                readonly type: "image";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                } | null | undefined;
+                readonly source: {
+                    readonly type: "base64";
+                    readonly data: string;
+                    readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                } | {
+                    readonly type: "url";
+                    readonly url: string;
+                };
+            })[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "document";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+            } | null | undefined;
+            readonly title?: string | null | undefined;
+            readonly citations?: {
+                readonly enabled?: boolean | undefined;
+            } | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "application/pdf";
+            } | {
+                readonly type: "text";
+                readonly data: string;
+                readonly media_type: "text/plain";
+            } | {
+                readonly type: "content";
+                readonly content: string | readonly ({
+                    readonly type: "text";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                    } | null | undefined;
+                    readonly text: string;
+                    readonly citations?: readonly ({
+                        readonly type: "char_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_char_index: number;
+                        readonly start_char_index: number;
+                    } | {
+                        readonly type: "page_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_page_number: number;
+                        readonly start_page_number: number;
+                    } | {
+                        readonly type: "content_block_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_block_index: number;
+                        readonly start_block_index: number;
+                    } | {
+                        readonly type: "web_search_result_location";
+                        readonly title: string | null;
+                        readonly url: string;
+                        readonly cited_text: string;
+                        readonly encrypted_index: string;
+                    })[] | null | undefined;
+                } | {
+                    readonly type: "image";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                    } | null | undefined;
+                    readonly source: {
+                        readonly type: "base64";
+                        readonly data: string;
+                        readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                    } | {
+                        readonly type: "url";
+                        readonly url: string;
+                    };
+                })[];
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            };
+            readonly context?: string | null | undefined;
+        } | {
+            readonly type: "thinking";
+            readonly thinking: string;
+            readonly signature: string;
+        } | {
+            readonly type: "redacted_thinking";
+            readonly data: string;
+        })[];
+        readonly role: "user" | "assistant";
+    }[];
+} & {
+    readonly system?: string | readonly {
+        readonly type: "text";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    }[] | undefined;
+} & {
+    readonly tool_choice?: {
+        readonly type: "auto";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "any";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "tool";
+        readonly name: string;
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "none";
+    } | undefined;
+} & {
+    readonly tools?: readonly ({
+        readonly type?: "custom" | null | undefined;
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: string;
+        readonly description?: string | undefined;
+        readonly input_schema: {
+            readonly type: "object";
+            readonly properties?: {
+                readonly [x: string]: unknown;
+            } | null | undefined;
+            readonly required?: readonly string[] | null | undefined;
+        };
+    } | {
+        readonly type: "bash_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "text_editor_20250429";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "str_replace_based_edit_tool";
+    } | {
+        readonly type: "web_search_20250305";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+        } | null | undefined;
+        readonly name: "web_search";
+        readonly allowed_domains?: readonly string[] | null | undefined;
+        readonly blocked_domains?: readonly string[] | null | undefined;
+        readonly max_uses?: number | null | undefined;
+        readonly user_location?: {
+            readonly type: "approximate";
+            readonly city?: string | null | undefined;
+            readonly country?: string | null | undefined;
+            readonly region?: string | null | undefined;
+            readonly timezone?: string | null | undefined;
+        } | null | undefined;
+    })[] | undefined;
+}, {}, {}>;
+export declare class CountMessageTokensParams extends CountMessageTokensParams_base {
+}
+declare const CountMessageTokensResponse_base: S.Class<CountMessageTokensResponse, {
+    input_tokens: typeof S.Int;
+}, S.Struct.Encoded<{
+    input_tokens: typeof S.Int;
+}>, never, {
+    readonly input_tokens: number;
+}, {}, {}>;
+export declare class CountMessageTokensResponse extends CountMessageTokensResponse_base {
+}
+declare const ListFilesV1FilesGetParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class ListFilesV1FilesGetParams extends ListFilesV1FilesGetParams_base {
+}
+declare const FileMetadataSchemaType_base: S.Literal<["file"]>;
+export declare class FileMetadataSchemaType extends FileMetadataSchemaType_base {
+}
+declare const FileMetadataSchema_base: S.Struct<{
+    created_at: typeof S.String;
+    downloadable: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    filename: S.filter<S.filter<typeof S.String>>;
+    id: typeof S.String;
+    mime_type: S.filter<S.filter<typeof S.String>>;
+    size_bytes: S.filter<typeof S.Int>;
+    type: typeof FileMetadataSchemaType;
+}>;
+export declare class FileMetadataSchema extends FileMetadataSchema_base {
+}
+declare const FileListResponse_base: S.Class<FileListResponse, {
+    data: S.Array$<typeof FileMetadataSchema>;
+    first_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    has_more: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    last_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof FileMetadataSchema>;
+    first_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    has_more: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    last_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "file";
+        readonly id: string;
+        readonly created_at: string;
+        readonly downloadable?: boolean | undefined;
+        readonly filename: string;
+        readonly mime_type: string;
+        readonly size_bytes: number;
+    }[];
+} & {
+    readonly has_more?: boolean | undefined;
+} & {
+    readonly first_id?: string | null | undefined;
+} & {
+    readonly last_id?: string | null | undefined;
+}, {}, {}>;
+export declare class FileListResponse extends FileListResponse_base {
+}
+declare const UploadFileV1FilesPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class UploadFileV1FilesPostParams extends UploadFileV1FilesPostParams_base {
+}
+declare const GetFileMetadataV1FilesFileIdGetParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class GetFileMetadataV1FilesFileIdGetParams extends GetFileMetadataV1FilesFileIdGetParams_base {
+}
+declare const DeleteFileV1FilesFileIdDeleteParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class DeleteFileV1FilesFileIdDeleteParams extends DeleteFileV1FilesFileIdDeleteParams_base {
+}
+declare const FileDeleteResponseType_base: S.Literal<["file_deleted"]>;
+export declare class FileDeleteResponseType extends FileDeleteResponseType_base {
+}
+declare const FileDeleteResponse_base: S.Class<FileDeleteResponse, {
+    id: typeof S.String;
+    type: S.optionalWith<typeof FileDeleteResponseType, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: S.optionalWith<typeof FileDeleteResponseType, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly type?: "file_deleted" | undefined;
+} & {
+    readonly id: string;
+}, {}, {}>;
+export declare class FileDeleteResponse extends FileDeleteResponse_base {
+}
+declare const DownloadFileV1FilesFileIdContentGetParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class DownloadFileV1FilesFileIdContentGetParams extends DownloadFileV1FilesFileIdContentGetParams_base {
+}
+declare const BetaMessagesPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessagesPostParams extends BetaMessagesPostParams_base {
+}
+declare const BetaCacheControlEphemeralTtl_base: S.Literal<["5m", "1h"]>;
+export declare class BetaCacheControlEphemeralTtl extends BetaCacheControlEphemeralTtl_base {
+}
+declare const BetaCacheControlEphemeralType_base: S.Literal<["ephemeral"]>;
+export declare class BetaCacheControlEphemeralType extends BetaCacheControlEphemeralType_base {
+}
+declare const BetaCacheControlEphemeral_base: S.Struct<{
+    ttl: S.optionalWith<typeof BetaCacheControlEphemeralTtl, {
+        nullable: true;
+    }>;
+    type: typeof BetaCacheControlEphemeralType;
+}>;
+export declare class BetaCacheControlEphemeral extends BetaCacheControlEphemeral_base {
+}
+declare const BetaRequestServerToolUseBlockName_base: S.Literal<["web_search", "code_execution"]>;
+export declare class BetaRequestServerToolUseBlockName extends BetaRequestServerToolUseBlockName_base {
+}
+declare const BetaRequestServerToolUseBlockType_base: S.Literal<["server_tool_use"]>;
+export declare class BetaRequestServerToolUseBlockType extends BetaRequestServerToolUseBlockType_base {
+}
+declare const BetaRequestServerToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof BetaRequestServerToolUseBlockName;
+    type: typeof BetaRequestServerToolUseBlockType;
+}>;
+export declare class BetaRequestServerToolUseBlock extends BetaRequestServerToolUseBlock_base {
+}
+declare const BetaRequestWebSearchResultBlockType_base: S.Literal<["web_search_result"]>;
+export declare class BetaRequestWebSearchResultBlockType extends BetaRequestWebSearchResultBlockType_base {
+}
+declare const BetaRequestWebSearchResultBlock_base: S.Struct<{
+    encrypted_content: typeof S.String;
+    page_age: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    title: typeof S.String;
+    type: typeof BetaRequestWebSearchResultBlockType;
+    url: typeof S.String;
+}>;
+export declare class BetaRequestWebSearchResultBlock extends BetaRequestWebSearchResultBlock_base {
+}
+declare const BetaWebSearchToolResultErrorCode_base: S.Literal<["invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long"]>;
+export declare class BetaWebSearchToolResultErrorCode extends BetaWebSearchToolResultErrorCode_base {
+}
+declare const BetaRequestWebSearchToolResultErrorType_base: S.Literal<["web_search_tool_result_error"]>;
+export declare class BetaRequestWebSearchToolResultErrorType extends BetaRequestWebSearchToolResultErrorType_base {
+}
+declare const BetaRequestWebSearchToolResultError_base: S.Struct<{
+    error_code: typeof BetaWebSearchToolResultErrorCode;
+    type: typeof BetaRequestWebSearchToolResultErrorType;
+}>;
+export declare class BetaRequestWebSearchToolResultError extends BetaRequestWebSearchToolResultError_base {
+}
+declare const BetaRequestWebSearchToolResultBlockType_base: S.Literal<["web_search_tool_result"]>;
+export declare class BetaRequestWebSearchToolResultBlockType extends BetaRequestWebSearchToolResultBlockType_base {
+}
+declare const BetaRequestWebSearchToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.Union<[S.Array$<typeof BetaRequestWebSearchResultBlock>, typeof BetaRequestWebSearchToolResultError]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaRequestWebSearchToolResultBlockType;
+}>;
+export declare class BetaRequestWebSearchToolResultBlock extends BetaRequestWebSearchToolResultBlock_base {
+}
+declare const BetaCodeExecutionToolResultErrorCode_base: S.Literal<["invalid_tool_input", "unavailable", "too_many_requests", "execution_time_exceeded"]>;
+export declare class BetaCodeExecutionToolResultErrorCode extends BetaCodeExecutionToolResultErrorCode_base {
+}
+declare const BetaRequestCodeExecutionToolResultErrorType_base: S.Literal<["code_execution_tool_result_error"]>;
+export declare class BetaRequestCodeExecutionToolResultErrorType extends BetaRequestCodeExecutionToolResultErrorType_base {
+}
+declare const BetaRequestCodeExecutionToolResultError_base: S.Struct<{
+    error_code: typeof BetaCodeExecutionToolResultErrorCode;
+    type: typeof BetaRequestCodeExecutionToolResultErrorType;
+}>;
+export declare class BetaRequestCodeExecutionToolResultError extends BetaRequestCodeExecutionToolResultError_base {
+}
+declare const BetaRequestCodeExecutionOutputBlockType_base: S.Literal<["code_execution_output"]>;
+export declare class BetaRequestCodeExecutionOutputBlockType extends BetaRequestCodeExecutionOutputBlockType_base {
+}
+declare const BetaRequestCodeExecutionOutputBlock_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaRequestCodeExecutionOutputBlockType;
+}>;
+export declare class BetaRequestCodeExecutionOutputBlock extends BetaRequestCodeExecutionOutputBlock_base {
+}
+declare const BetaRequestCodeExecutionResultBlockType_base: S.Literal<["code_execution_result"]>;
+export declare class BetaRequestCodeExecutionResultBlockType extends BetaRequestCodeExecutionResultBlockType_base {
+}
+declare const BetaRequestCodeExecutionResultBlock_base: S.Struct<{
+    content: S.Array$<typeof BetaRequestCodeExecutionOutputBlock>;
+    return_code: typeof S.Int;
+    stderr: typeof S.String;
+    stdout: typeof S.String;
+    type: typeof BetaRequestCodeExecutionResultBlockType;
+}>;
+export declare class BetaRequestCodeExecutionResultBlock extends BetaRequestCodeExecutionResultBlock_base {
+}
+declare const BetaRequestCodeExecutionToolResultBlockType_base: S.Literal<["code_execution_tool_result"]>;
+export declare class BetaRequestCodeExecutionToolResultBlockType extends BetaRequestCodeExecutionToolResultBlockType_base {
+}
+declare const BetaRequestCodeExecutionToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.Union<[typeof BetaRequestCodeExecutionToolResultError, typeof BetaRequestCodeExecutionResultBlock]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaRequestCodeExecutionToolResultBlockType;
+}>;
+export declare class BetaRequestCodeExecutionToolResultBlock extends BetaRequestCodeExecutionToolResultBlock_base {
+}
+declare const BetaRequestMCPToolUseBlockType_base: S.Literal<["mcp_tool_use"]>;
+export declare class BetaRequestMCPToolUseBlockType extends BetaRequestMCPToolUseBlockType_base {
+}
+declare const BetaRequestMCPToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof S.String;
+    server_name: typeof S.String;
+    type: typeof BetaRequestMCPToolUseBlockType;
+}>;
+export declare class BetaRequestMCPToolUseBlock extends BetaRequestMCPToolUseBlock_base {
+}
+declare const BetaRequestCharLocationCitationType_base: S.Literal<["char_location"]>;
+export declare class BetaRequestCharLocationCitationType extends BetaRequestCharLocationCitationType_base {
+}
+declare const BetaRequestCharLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_char_index: typeof S.Int;
+    start_char_index: S.filter<typeof S.Int>;
+    type: typeof BetaRequestCharLocationCitationType;
+}>;
+export declare class BetaRequestCharLocationCitation extends BetaRequestCharLocationCitation_base {
+}
+declare const BetaRequestPageLocationCitationType_base: S.Literal<["page_location"]>;
+export declare class BetaRequestPageLocationCitationType extends BetaRequestPageLocationCitationType_base {
+}
+declare const BetaRequestPageLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_page_number: typeof S.Int;
+    start_page_number: S.filter<typeof S.Int>;
+    type: typeof BetaRequestPageLocationCitationType;
+}>;
+export declare class BetaRequestPageLocationCitation extends BetaRequestPageLocationCitation_base {
+}
+declare const BetaRequestContentBlockLocationCitationType_base: S.Literal<["content_block_location"]>;
+export declare class BetaRequestContentBlockLocationCitationType extends BetaRequestContentBlockLocationCitationType_base {
+}
+declare const BetaRequestContentBlockLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    end_block_index: typeof S.Int;
+    start_block_index: S.filter<typeof S.Int>;
+    type: typeof BetaRequestContentBlockLocationCitationType;
+}>;
+export declare class BetaRequestContentBlockLocationCitation extends BetaRequestContentBlockLocationCitation_base {
+}
+declare const BetaRequestWebSearchResultLocationCitationType_base: S.Literal<["web_search_result_location"]>;
+export declare class BetaRequestWebSearchResultLocationCitationType extends BetaRequestWebSearchResultLocationCitationType_base {
+}
+declare const BetaRequestWebSearchResultLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    encrypted_index: typeof S.String;
+    title: S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>;
+    type: typeof BetaRequestWebSearchResultLocationCitationType;
+    url: S.filter<S.filter<typeof S.String>>;
+}>;
+export declare class BetaRequestWebSearchResultLocationCitation extends BetaRequestWebSearchResultLocationCitation_base {
+}
+declare const BetaRequestTextBlockType_base: S.Literal<["text"]>;
+export declare class BetaRequestTextBlockType extends BetaRequestTextBlockType_base {
+}
+declare const BetaRequestTextBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    citations: S.optionalWith<S.Union<[S.Array$<S.Union<[typeof BetaRequestCharLocationCitation, typeof BetaRequestPageLocationCitation, typeof BetaRequestContentBlockLocationCitation, typeof BetaRequestWebSearchResultLocationCitation]>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    text: S.filter<typeof S.String>;
+    type: typeof BetaRequestTextBlockType;
+}>;
+export declare class BetaRequestTextBlock extends BetaRequestTextBlock_base {
+}
+declare const BetaRequestMCPToolResultBlockType_base: S.Literal<["mcp_tool_result"]>;
+export declare class BetaRequestMCPToolResultBlockType extends BetaRequestMCPToolResultBlockType_base {
+}
+declare const BetaRequestMCPToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    is_error: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaRequestMCPToolResultBlockType;
+}>;
+export declare class BetaRequestMCPToolResultBlock extends BetaRequestMCPToolResultBlock_base {
+}
+declare const BetaBase64ImageSourceMediaType_base: S.Literal<["image/jpeg", "image/png", "image/gif", "image/webp"]>;
+export declare class BetaBase64ImageSourceMediaType extends BetaBase64ImageSourceMediaType_base {
+}
+declare const BetaBase64ImageSourceType_base: S.Literal<["base64"]>;
+export declare class BetaBase64ImageSourceType extends BetaBase64ImageSourceType_base {
+}
+declare const BetaBase64ImageSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof BetaBase64ImageSourceMediaType;
+    type: typeof BetaBase64ImageSourceType;
+}>;
+export declare class BetaBase64ImageSource extends BetaBase64ImageSource_base {
+}
+declare const BetaURLImageSourceType_base: S.Literal<["url"]>;
+export declare class BetaURLImageSourceType extends BetaURLImageSourceType_base {
+}
+declare const BetaURLImageSource_base: S.Struct<{
+    type: typeof BetaURLImageSourceType;
+    url: typeof S.String;
+}>;
+export declare class BetaURLImageSource extends BetaURLImageSource_base {
+}
+declare const BetaFileImageSourceType_base: S.Literal<["file"]>;
+export declare class BetaFileImageSourceType extends BetaFileImageSourceType_base {
+}
+declare const BetaFileImageSource_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaFileImageSourceType;
+}>;
+export declare class BetaFileImageSource extends BetaFileImageSource_base {
+}
+declare const BetaRequestImageBlockType_base: S.Literal<["image"]>;
+export declare class BetaRequestImageBlockType extends BetaRequestImageBlockType_base {
+}
+declare const BetaRequestImageBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    source: S.Union<[typeof BetaBase64ImageSource, typeof BetaURLImageSource, typeof BetaFileImageSource]>;
+    type: typeof BetaRequestImageBlockType;
+}>;
+export declare class BetaRequestImageBlock extends BetaRequestImageBlock_base {
+}
+declare const BetaRequestToolUseBlockType_base: S.Literal<["tool_use"]>;
+export declare class BetaRequestToolUseBlockType extends BetaRequestToolUseBlockType_base {
+}
+declare const BetaRequestToolUseBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: S.filter<S.filter<typeof S.String>>;
+    type: typeof BetaRequestToolUseBlockType;
+}>;
+export declare class BetaRequestToolUseBlock extends BetaRequestToolUseBlock_base {
+}
+declare const BetaRequestToolResultBlockType_base: S.Literal<["tool_result"]>;
+export declare class BetaRequestToolResultBlockType extends BetaRequestToolResultBlockType_base {
+}
+declare const BetaRequestToolResultBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    content: S.optionalWith<S.Union<[typeof S.String, S.Array$<S.Union<[typeof BetaRequestTextBlock, typeof BetaRequestImageBlock]>>]>, {
+        nullable: true;
+    }>;
+    is_error: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaRequestToolResultBlockType;
+}>;
+export declare class BetaRequestToolResultBlock extends BetaRequestToolResultBlock_base {
+}
+declare const BetaRequestCitationsConfig_base: S.Struct<{
+    enabled: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaRequestCitationsConfig extends BetaRequestCitationsConfig_base {
+}
+declare const BetaBase64PDFSourceMediaType_base: S.Literal<["application/pdf"]>;
+export declare class BetaBase64PDFSourceMediaType extends BetaBase64PDFSourceMediaType_base {
+}
+declare const BetaBase64PDFSourceType_base: S.Literal<["base64"]>;
+export declare class BetaBase64PDFSourceType extends BetaBase64PDFSourceType_base {
+}
+declare const BetaBase64PDFSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof BetaBase64PDFSourceMediaType;
+    type: typeof BetaBase64PDFSourceType;
+}>;
+export declare class BetaBase64PDFSource extends BetaBase64PDFSource_base {
+}
+declare const BetaPlainTextSourceMediaType_base: S.Literal<["text/plain"]>;
+export declare class BetaPlainTextSourceMediaType extends BetaPlainTextSourceMediaType_base {
+}
+declare const BetaPlainTextSourceType_base: S.Literal<["text"]>;
+export declare class BetaPlainTextSourceType extends BetaPlainTextSourceType_base {
+}
+declare const BetaPlainTextSource_base: S.Struct<{
+    data: typeof S.String;
+    media_type: typeof BetaPlainTextSourceMediaType;
+    type: typeof BetaPlainTextSourceType;
+}>;
+export declare class BetaPlainTextSource extends BetaPlainTextSource_base {
+}
+declare const BetaContentBlockSourceType_base: S.Literal<["content"]>;
+export declare class BetaContentBlockSourceType extends BetaContentBlockSourceType_base {
+}
+declare const BetaContentBlockSource_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<S.Union<[typeof BetaRequestTextBlock, typeof BetaRequestImageBlock]>>]>;
+    type: typeof BetaContentBlockSourceType;
+}>;
+export declare class BetaContentBlockSource extends BetaContentBlockSource_base {
+}
+declare const BetaURLPDFSourceType_base: S.Literal<["url"]>;
+export declare class BetaURLPDFSourceType extends BetaURLPDFSourceType_base {
+}
+declare const BetaURLPDFSource_base: S.Struct<{
+    type: typeof BetaURLPDFSourceType;
+    url: typeof S.String;
+}>;
+export declare class BetaURLPDFSource extends BetaURLPDFSource_base {
+}
+declare const BetaFileDocumentSourceType_base: S.Literal<["file"]>;
+export declare class BetaFileDocumentSourceType extends BetaFileDocumentSourceType_base {
+}
+declare const BetaFileDocumentSource_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaFileDocumentSourceType;
+}>;
+export declare class BetaFileDocumentSource extends BetaFileDocumentSource_base {
+}
+declare const BetaRequestDocumentBlockType_base: S.Literal<["document"]>;
+export declare class BetaRequestDocumentBlockType extends BetaRequestDocumentBlockType_base {
+}
+declare const BetaRequestDocumentBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    citations: S.optionalWith<typeof BetaRequestCitationsConfig, {
+        nullable: true;
+    }>;
+    context: S.optionalWith<S.Union<[S.filter<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    source: S.Union<[typeof BetaBase64PDFSource, typeof BetaPlainTextSource, typeof BetaContentBlockSource, typeof BetaURLPDFSource, typeof BetaFileDocumentSource]>;
+    title: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof BetaRequestDocumentBlockType;
+}>;
+export declare class BetaRequestDocumentBlock extends BetaRequestDocumentBlock_base {
+}
+declare const BetaRequestThinkingBlockType_base: S.Literal<["thinking"]>;
+export declare class BetaRequestThinkingBlockType extends BetaRequestThinkingBlockType_base {
+}
+declare const BetaRequestThinkingBlock_base: S.Struct<{
+    signature: typeof S.String;
+    thinking: typeof S.String;
+    type: typeof BetaRequestThinkingBlockType;
+}>;
+export declare class BetaRequestThinkingBlock extends BetaRequestThinkingBlock_base {
+}
+declare const BetaRequestRedactedThinkingBlockType_base: S.Literal<["redacted_thinking"]>;
+export declare class BetaRequestRedactedThinkingBlockType extends BetaRequestRedactedThinkingBlockType_base {
+}
+declare const BetaRequestRedactedThinkingBlock_base: S.Struct<{
+    data: typeof S.String;
+    type: typeof BetaRequestRedactedThinkingBlockType;
+}>;
+export declare class BetaRequestRedactedThinkingBlock extends BetaRequestRedactedThinkingBlock_base {
+}
+declare const BetaRequestContainerUploadBlockType_base: S.Literal<["container_upload"]>;
+export declare class BetaRequestContainerUploadBlockType extends BetaRequestContainerUploadBlockType_base {
+}
+declare const BetaRequestContainerUploadBlock_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    file_id: typeof S.String;
+    type: typeof BetaRequestContainerUploadBlockType;
+}>;
+export declare class BetaRequestContainerUploadBlock extends BetaRequestContainerUploadBlock_base {
+}
+declare const BetaInputContentBlock_base: S.Union<[typeof BetaRequestServerToolUseBlock, typeof BetaRequestWebSearchToolResultBlock, typeof BetaRequestCodeExecutionToolResultBlock, typeof BetaRequestMCPToolUseBlock, typeof BetaRequestMCPToolResultBlock, typeof BetaRequestTextBlock, typeof BetaRequestImageBlock, typeof BetaRequestToolUseBlock, typeof BetaRequestToolResultBlock, typeof BetaRequestDocumentBlock, typeof BetaRequestThinkingBlock, typeof BetaRequestRedactedThinkingBlock, typeof BetaRequestContainerUploadBlock]>;
+export declare class BetaInputContentBlock extends BetaInputContentBlock_base {
+}
+declare const BetaInputMessageRole_base: S.Literal<["user", "assistant"]>;
+export declare class BetaInputMessageRole extends BetaInputMessageRole_base {
+}
+declare const BetaInputMessage_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<typeof BetaInputContentBlock>]>;
+    role: typeof BetaInputMessageRole;
+}>;
+export declare class BetaInputMessage extends BetaInputMessage_base {
+}
+declare const BetaRequestMCPServerToolConfiguration_base: S.Struct<{
+    allowed_tools: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    enabled: S.optionalWith<S.Union<[typeof S.Boolean, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaRequestMCPServerToolConfiguration extends BetaRequestMCPServerToolConfiguration_base {
+}
+declare const BetaRequestMCPServerURLDefinitionType_base: S.Literal<["url"]>;
+export declare class BetaRequestMCPServerURLDefinitionType extends BetaRequestMCPServerURLDefinitionType_base {
+}
+declare const BetaRequestMCPServerURLDefinition_base: S.Struct<{
+    authorization_token: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof S.String;
+    tool_configuration: S.optionalWith<S.Union<[typeof BetaRequestMCPServerToolConfiguration, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof BetaRequestMCPServerURLDefinitionType;
+    url: typeof S.String;
+}>;
+export declare class BetaRequestMCPServerURLDefinition extends BetaRequestMCPServerURLDefinition_base {
+}
+declare const BetaMetadata_base: S.Struct<{
+    user_id: S.optionalWith<S.Union<[S.filter<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMetadata extends BetaMetadata_base {
+}
+declare const BetaCreateMessageParamsServiceTier_base: S.Literal<["auto", "standard_only"]>;
+export declare class BetaCreateMessageParamsServiceTier extends BetaCreateMessageParamsServiceTier_base {
+}
+declare const BetaThinkingConfigEnabledType_base: S.Literal<["enabled"]>;
+export declare class BetaThinkingConfigEnabledType extends BetaThinkingConfigEnabledType_base {
+}
+declare const BetaThinkingConfigEnabled_base: S.Struct<{
+    budget_tokens: S.filter<typeof S.Int>;
+    type: typeof BetaThinkingConfigEnabledType;
+}>;
+export declare class BetaThinkingConfigEnabled extends BetaThinkingConfigEnabled_base {
+}
+declare const BetaThinkingConfigDisabledType_base: S.Literal<["disabled"]>;
+export declare class BetaThinkingConfigDisabledType extends BetaThinkingConfigDisabledType_base {
+}
+declare const BetaThinkingConfigDisabled_base: S.Struct<{
+    type: typeof BetaThinkingConfigDisabledType;
+}>;
+export declare class BetaThinkingConfigDisabled extends BetaThinkingConfigDisabled_base {
+}
+declare const BetaThinkingConfigParam_base: S.Union<[typeof BetaThinkingConfigEnabled, typeof BetaThinkingConfigDisabled]>;
+export declare class BetaThinkingConfigParam extends BetaThinkingConfigParam_base {
+}
+declare const BetaToolChoiceAutoType_base: S.Literal<["auto"]>;
+export declare class BetaToolChoiceAutoType extends BetaToolChoiceAutoType_base {
+}
+declare const BetaToolChoiceAuto_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    type: typeof BetaToolChoiceAutoType;
+}>;
+export declare class BetaToolChoiceAuto extends BetaToolChoiceAuto_base {
+}
+declare const BetaToolChoiceAnyType_base: S.Literal<["any"]>;
+export declare class BetaToolChoiceAnyType extends BetaToolChoiceAnyType_base {
+}
+declare const BetaToolChoiceAny_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    type: typeof BetaToolChoiceAnyType;
+}>;
+export declare class BetaToolChoiceAny extends BetaToolChoiceAny_base {
+}
+declare const BetaToolChoiceToolType_base: S.Literal<["tool"]>;
+export declare class BetaToolChoiceToolType extends BetaToolChoiceToolType_base {
+}
+declare const BetaToolChoiceTool_base: S.Struct<{
+    disable_parallel_tool_use: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    name: typeof S.String;
+    type: typeof BetaToolChoiceToolType;
+}>;
+export declare class BetaToolChoiceTool extends BetaToolChoiceTool_base {
+}
+declare const BetaToolChoiceNoneType_base: S.Literal<["none"]>;
+export declare class BetaToolChoiceNoneType extends BetaToolChoiceNoneType_base {
+}
+declare const BetaToolChoiceNone_base: S.Struct<{
+    type: typeof BetaToolChoiceNoneType;
+}>;
+export declare class BetaToolChoiceNone extends BetaToolChoiceNone_base {
+}
+declare const BetaToolChoice_base: S.Union<[typeof BetaToolChoiceAuto, typeof BetaToolChoiceAny, typeof BetaToolChoiceTool, typeof BetaToolChoiceNone]>;
+export declare class BetaToolChoice extends BetaToolChoice_base {
+}
+declare const BetaToolTypeEnum_base: S.Literal<["custom"]>;
+export declare class BetaToolTypeEnum extends BetaToolTypeEnum_base {
+}
+declare const BetaInputSchemaType_base: S.Literal<["object"]>;
+export declare class BetaInputSchemaType extends BetaInputSchemaType_base {
+}
+declare const BetaInputSchema_base: S.Struct<{
+    properties: S.optionalWith<S.Union<[S.Record$<typeof S.String, typeof S.Unknown>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    required: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof BetaInputSchemaType;
+}>;
+export declare class BetaInputSchema extends BetaInputSchema_base {
+}
+declare const BetaTool_base: S.Struct<{
+    type: S.optionalWith<S.Union<[typeof S.Null, typeof BetaToolTypeEnum]>, {
+        nullable: true;
+    }>;
+    description: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    name: S.filter<S.filter<S.filter<typeof S.String>>>;
+    input_schema: typeof BetaInputSchema;
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaTool extends BetaTool_base {
+}
+declare const BetaComputerUseTool20241022Name_base: S.Literal<["computer"]>;
+export declare class BetaComputerUseTool20241022Name extends BetaComputerUseTool20241022Name_base {
+}
+declare const BetaComputerUseTool20241022Type_base: S.Literal<["computer_20241022"]>;
+export declare class BetaComputerUseTool20241022Type extends BetaComputerUseTool20241022Type_base {
+}
+declare const BetaComputerUseTool20241022_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    display_height_px: S.filter<typeof S.Int>;
+    display_number: S.optionalWith<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    display_width_px: S.filter<typeof S.Int>;
+    name: typeof BetaComputerUseTool20241022Name;
+    type: typeof BetaComputerUseTool20241022Type;
+}>;
+export declare class BetaComputerUseTool20241022 extends BetaComputerUseTool20241022_base {
+}
+declare const BetaBashTool20241022Name_base: S.Literal<["bash"]>;
+export declare class BetaBashTool20241022Name extends BetaBashTool20241022Name_base {
+}
+declare const BetaBashTool20241022Type_base: S.Literal<["bash_20241022"]>;
+export declare class BetaBashTool20241022Type extends BetaBashTool20241022Type_base {
+}
+declare const BetaBashTool20241022_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaBashTool20241022Name;
+    type: typeof BetaBashTool20241022Type;
+}>;
+export declare class BetaBashTool20241022 extends BetaBashTool20241022_base {
+}
+declare const BetaTextEditor20241022Name_base: S.Literal<["str_replace_editor"]>;
+export declare class BetaTextEditor20241022Name extends BetaTextEditor20241022Name_base {
+}
+declare const BetaTextEditor20241022Type_base: S.Literal<["text_editor_20241022"]>;
+export declare class BetaTextEditor20241022Type extends BetaTextEditor20241022Type_base {
+}
+declare const BetaTextEditor20241022_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaTextEditor20241022Name;
+    type: typeof BetaTextEditor20241022Type;
+}>;
+export declare class BetaTextEditor20241022 extends BetaTextEditor20241022_base {
+}
+declare const BetaComputerUseTool20250124Name_base: S.Literal<["computer"]>;
+export declare class BetaComputerUseTool20250124Name extends BetaComputerUseTool20250124Name_base {
+}
+declare const BetaComputerUseTool20250124Type_base: S.Literal<["computer_20250124"]>;
+export declare class BetaComputerUseTool20250124Type extends BetaComputerUseTool20250124Type_base {
+}
+declare const BetaComputerUseTool20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    display_height_px: S.filter<typeof S.Int>;
+    display_number: S.optionalWith<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    display_width_px: S.filter<typeof S.Int>;
+    name: typeof BetaComputerUseTool20250124Name;
+    type: typeof BetaComputerUseTool20250124Type;
+}>;
+export declare class BetaComputerUseTool20250124 extends BetaComputerUseTool20250124_base {
+}
+declare const BetaBashTool20250124Name_base: S.Literal<["bash"]>;
+export declare class BetaBashTool20250124Name extends BetaBashTool20250124Name_base {
+}
+declare const BetaBashTool20250124Type_base: S.Literal<["bash_20250124"]>;
+export declare class BetaBashTool20250124Type extends BetaBashTool20250124Type_base {
+}
+declare const BetaBashTool20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaBashTool20250124Name;
+    type: typeof BetaBashTool20250124Type;
+}>;
+export declare class BetaBashTool20250124 extends BetaBashTool20250124_base {
+}
+declare const BetaTextEditor20250124Name_base: S.Literal<["str_replace_editor"]>;
+export declare class BetaTextEditor20250124Name extends BetaTextEditor20250124Name_base {
+}
+declare const BetaTextEditor20250124Type_base: S.Literal<["text_editor_20250124"]>;
+export declare class BetaTextEditor20250124Type extends BetaTextEditor20250124Type_base {
+}
+declare const BetaTextEditor20250124_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaTextEditor20250124Name;
+    type: typeof BetaTextEditor20250124Type;
+}>;
+export declare class BetaTextEditor20250124 extends BetaTextEditor20250124_base {
+}
+declare const BetaTextEditor20250429Name_base: S.Literal<["str_replace_based_edit_tool"]>;
+export declare class BetaTextEditor20250429Name extends BetaTextEditor20250429Name_base {
+}
+declare const BetaTextEditor20250429Type_base: S.Literal<["text_editor_20250429"]>;
+export declare class BetaTextEditor20250429Type extends BetaTextEditor20250429Type_base {
+}
+declare const BetaTextEditor20250429_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaTextEditor20250429Name;
+    type: typeof BetaTextEditor20250429Type;
+}>;
+export declare class BetaTextEditor20250429 extends BetaTextEditor20250429_base {
+}
+declare const BetaWebSearchTool20250305Name_base: S.Literal<["web_search"]>;
+export declare class BetaWebSearchTool20250305Name extends BetaWebSearchTool20250305Name_base {
+}
+declare const BetaWebSearchTool20250305Type_base: S.Literal<["web_search_20250305"]>;
+export declare class BetaWebSearchTool20250305Type extends BetaWebSearchTool20250305Type_base {
+}
+declare const BetaUserLocationType_base: S.Literal<["approximate"]>;
+export declare class BetaUserLocationType extends BetaUserLocationType_base {
+}
+declare const BetaUserLocation_base: S.Struct<{
+    city: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    country: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    region: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    timezone: S.optionalWith<S.Union<[S.filter<S.filter<typeof S.String>>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    type: typeof BetaUserLocationType;
+}>;
+export declare class BetaUserLocation extends BetaUserLocation_base {
+}
+declare const BetaWebSearchTool20250305_base: S.Struct<{
+    allowed_domains: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    blocked_domains: S.optionalWith<S.Union<[S.Array$<typeof S.String>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    max_uses: S.optionalWith<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaWebSearchTool20250305Name;
+    type: typeof BetaWebSearchTool20250305Type;
+    user_location: S.optionalWith<S.Union<[typeof BetaUserLocation, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaWebSearchTool20250305 extends BetaWebSearchTool20250305_base {
+}
+declare const BetaCodeExecutionTool20250522Name_base: S.Literal<["code_execution"]>;
+export declare class BetaCodeExecutionTool20250522Name extends BetaCodeExecutionTool20250522Name_base {
+}
+declare const BetaCodeExecutionTool20250522Type_base: S.Literal<["code_execution_20250522"]>;
+export declare class BetaCodeExecutionTool20250522Type extends BetaCodeExecutionTool20250522Type_base {
+}
+declare const BetaCodeExecutionTool20250522_base: S.Struct<{
+    cache_control: S.optionalWith<S.Union<[typeof BetaCacheControlEphemeral, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    name: typeof BetaCodeExecutionTool20250522Name;
+    type: typeof BetaCodeExecutionTool20250522Type;
+}>;
+export declare class BetaCodeExecutionTool20250522 extends BetaCodeExecutionTool20250522_base {
+}
+declare const BetaCreateMessageParams_base: S.Class<BetaCreateMessageParams, {
+    model: S.Union<[typeof S.String, typeof Model]>;
+    messages: S.Array$<typeof BetaInputMessage>;
+    container: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    max_tokens: S.filter<typeof S.Int>;
+    mcp_servers: S.optionalWith<S.filter<S.Array$<typeof BetaRequestMCPServerURLDefinition>>, {
+        nullable: true;
+    }>;
+    metadata: S.optionalWith<typeof BetaMetadata, {
+        nullable: true;
+    }>;
+    service_tier: S.optionalWith<typeof BetaCreateMessageParamsServiceTier, {
+        nullable: true;
+    }>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof BetaThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof BetaToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof BetaTool, typeof BetaComputerUseTool20241022, typeof BetaBashTool20241022, typeof BetaTextEditor20241022, typeof BetaComputerUseTool20250124, typeof BetaBashTool20250124, typeof BetaTextEditor20250124, typeof BetaTextEditor20250429, typeof BetaWebSearchTool20250305, typeof BetaCodeExecutionTool20250522]>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    model: S.Union<[typeof S.String, typeof Model]>;
+    messages: S.Array$<typeof BetaInputMessage>;
+    container: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    max_tokens: S.filter<typeof S.Int>;
+    mcp_servers: S.optionalWith<S.filter<S.Array$<typeof BetaRequestMCPServerURLDefinition>>, {
+        nullable: true;
+    }>;
+    metadata: S.optionalWith<typeof BetaMetadata, {
+        nullable: true;
+    }>;
+    service_tier: S.optionalWith<typeof BetaCreateMessageParamsServiceTier, {
+        nullable: true;
+    }>;
+    stop_sequences: S.optionalWith<S.Array$<typeof S.String>, {
+        nullable: true;
+    }>;
+    stream: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    temperature: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof BetaThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof BetaToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof BetaTool, typeof BetaComputerUseTool20241022, typeof BetaBashTool20241022, typeof BetaTextEditor20241022, typeof BetaComputerUseTool20250124, typeof BetaBashTool20250124, typeof BetaTextEditor20250124, typeof BetaTextEditor20250429, typeof BetaWebSearchTool20250305, typeof BetaCodeExecutionTool20250522]>>, {
+        nullable: true;
+    }>;
+    top_k: S.optionalWith<S.filter<typeof S.Int>, {
+        nullable: true;
+    }>;
+    top_p: S.optionalWith<S.filter<S.filter<typeof S.Number>>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly thinking?: {
+        readonly type: "enabled";
+        readonly budget_tokens: number;
+    } | {
+        readonly type: "disabled";
+    } | undefined;
+} & {
+    readonly model: string;
+} & {
+    readonly messages: readonly {
+        readonly content: string | readonly ({
+            readonly type: "server_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: "web_search" | "code_execution";
+        } | {
+            readonly type: "web_search_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content: {
+                readonly type: "web_search_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+            } | readonly {
+                readonly type: "web_search_result";
+                readonly encrypted_content: string;
+                readonly page_age?: string | null | undefined;
+                readonly title: string;
+                readonly url: string;
+            }[];
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "code_execution_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content: {
+                readonly type: "code_execution_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "too_many_requests" | "execution_time_exceeded";
+            } | {
+                readonly type: "code_execution_result";
+                readonly content: readonly {
+                    readonly type: "code_execution_output";
+                    readonly file_id: string;
+                }[];
+                readonly return_code: number;
+                readonly stderr: string;
+                readonly stdout: string;
+            };
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "mcp_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+            readonly server_name: string;
+        } | {
+            readonly type: "text";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        } | {
+            readonly type: "mcp_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content?: string | readonly {
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            }[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "image";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            } | {
+                readonly type: "file";
+                readonly file_id: string;
+            };
+        } | {
+            readonly type: "tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+        } | {
+            readonly type: "tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content?: string | readonly ({
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            } | {
+                readonly type: "image";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly source: {
+                    readonly type: "base64";
+                    readonly data: string;
+                    readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                } | {
+                    readonly type: "url";
+                    readonly url: string;
+                } | {
+                    readonly type: "file";
+                    readonly file_id: string;
+                };
+            })[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "document";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly title?: string | null | undefined;
+            readonly citations?: {
+                readonly enabled?: boolean | undefined;
+            } | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "application/pdf";
+            } | {
+                readonly type: "text";
+                readonly data: string;
+                readonly media_type: "text/plain";
+            } | {
+                readonly type: "content";
+                readonly content: string | readonly ({
+                    readonly type: "text";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                        readonly ttl?: "5m" | "1h" | undefined;
+                    } | null | undefined;
+                    readonly text: string;
+                    readonly citations?: readonly ({
+                        readonly type: "char_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_char_index: number;
+                        readonly start_char_index: number;
+                    } | {
+                        readonly type: "page_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_page_number: number;
+                        readonly start_page_number: number;
+                    } | {
+                        readonly type: "content_block_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_block_index: number;
+                        readonly start_block_index: number;
+                    } | {
+                        readonly type: "web_search_result_location";
+                        readonly title: string | null;
+                        readonly url: string;
+                        readonly cited_text: string;
+                        readonly encrypted_index: string;
+                    })[] | null | undefined;
+                } | {
+                    readonly type: "image";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                        readonly ttl?: "5m" | "1h" | undefined;
+                    } | null | undefined;
+                    readonly source: {
+                        readonly type: "base64";
+                        readonly data: string;
+                        readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                    } | {
+                        readonly type: "url";
+                        readonly url: string;
+                    } | {
+                        readonly type: "file";
+                        readonly file_id: string;
+                    };
+                })[];
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            } | {
+                readonly type: "file";
+                readonly file_id: string;
+            };
+            readonly context?: string | null | undefined;
+        } | {
+            readonly type: "thinking";
+            readonly thinking: string;
+            readonly signature: string;
+        } | {
+            readonly type: "redacted_thinking";
+            readonly data: string;
+        } | {
+            readonly type: "container_upload";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly file_id: string;
+        })[];
+        readonly role: "user" | "assistant";
+    }[];
+} & {
+    readonly max_tokens: number;
+} & {
+    readonly metadata?: {
+        readonly user_id?: string | null | undefined;
+    } | undefined;
+} & {
+    readonly service_tier?: "auto" | "standard_only" | undefined;
+} & {
+    readonly stop_sequences?: readonly string[] | undefined;
+} & {
+    readonly stream?: boolean | undefined;
+} & {
+    readonly system?: string | readonly {
+        readonly type: "text";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    }[] | undefined;
+} & {
+    readonly temperature?: number | undefined;
+} & {
+    readonly tool_choice?: {
+        readonly type: "auto";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "any";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "tool";
+        readonly name: string;
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "none";
+    } | undefined;
+} & {
+    readonly tools?: readonly ({
+        readonly type?: "custom" | null | undefined;
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: string;
+        readonly description?: string | undefined;
+        readonly input_schema: {
+            readonly type: "object";
+            readonly properties?: {
+                readonly [x: string]: unknown;
+            } | null | undefined;
+            readonly required?: readonly string[] | null | undefined;
+        };
+    } | {
+        readonly type: "computer_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "computer";
+        readonly display_height_px: number;
+        readonly display_number?: number | null | undefined;
+        readonly display_width_px: number;
+    } | {
+        readonly type: "bash_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "computer_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "computer";
+        readonly display_height_px: number;
+        readonly display_number?: number | null | undefined;
+        readonly display_width_px: number;
+    } | {
+        readonly type: "bash_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "text_editor_20250429";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_based_edit_tool";
+    } | {
+        readonly type: "web_search_20250305";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "web_search";
+        readonly allowed_domains?: readonly string[] | null | undefined;
+        readonly blocked_domains?: readonly string[] | null | undefined;
+        readonly max_uses?: number | null | undefined;
+        readonly user_location?: {
+            readonly type: "approximate";
+            readonly city?: string | null | undefined;
+            readonly country?: string | null | undefined;
+            readonly region?: string | null | undefined;
+            readonly timezone?: string | null | undefined;
+        } | null | undefined;
+    } | {
+        readonly type: "code_execution_20250522";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "code_execution";
+    })[] | undefined;
+} & {
+    readonly top_k?: number | undefined;
+} & {
+    readonly top_p?: number | undefined;
+} & {
+    readonly container?: string | null | undefined;
+} & {
+    readonly mcp_servers?: readonly {
+        readonly type: "url";
+        readonly name: string;
+        readonly url: string;
+        readonly authorization_token?: string | null | undefined;
+        readonly tool_configuration?: {
+            readonly enabled?: boolean | null | undefined;
+            readonly allowed_tools?: readonly string[] | null | undefined;
+        } | null | undefined;
+    }[] | undefined;
+}, {}, {}>;
+export declare class BetaCreateMessageParams extends BetaCreateMessageParams_base {
+}
+declare const BetaMessageType_base: S.Literal<["message"]>;
+export declare class BetaMessageType extends BetaMessageType_base {
+}
+declare const BetaMessageRole_base: S.Literal<["assistant"]>;
+export declare class BetaMessageRole extends BetaMessageRole_base {
+}
+declare const BetaResponseCharLocationCitationType_base: S.Literal<["char_location"]>;
+export declare class BetaResponseCharLocationCitationType extends BetaResponseCharLocationCitationType_base {
+}
+declare const BetaResponseCharLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_char_index: typeof S.Int;
+    start_char_index: S.filter<typeof S.Int>;
+    type: typeof BetaResponseCharLocationCitationType;
+}>;
+export declare class BetaResponseCharLocationCitation extends BetaResponseCharLocationCitation_base {
+}
+declare const BetaResponsePageLocationCitationType_base: S.Literal<["page_location"]>;
+export declare class BetaResponsePageLocationCitationType extends BetaResponsePageLocationCitationType_base {
+}
+declare const BetaResponsePageLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_page_number: typeof S.Int;
+    start_page_number: S.filter<typeof S.Int>;
+    type: typeof BetaResponsePageLocationCitationType;
+}>;
+export declare class BetaResponsePageLocationCitation extends BetaResponsePageLocationCitation_base {
+}
+declare const BetaResponseContentBlockLocationCitationType_base: S.Literal<["content_block_location"]>;
+export declare class BetaResponseContentBlockLocationCitationType extends BetaResponseContentBlockLocationCitationType_base {
+}
+declare const BetaResponseContentBlockLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    document_index: S.filter<typeof S.Int>;
+    document_title: S.Union<[typeof S.String, typeof S.Null]>;
+    end_block_index: typeof S.Int;
+    start_block_index: S.filter<typeof S.Int>;
+    type: typeof BetaResponseContentBlockLocationCitationType;
+}>;
+export declare class BetaResponseContentBlockLocationCitation extends BetaResponseContentBlockLocationCitation_base {
+}
+declare const BetaResponseWebSearchResultLocationCitationType_base: S.Literal<["web_search_result_location"]>;
+export declare class BetaResponseWebSearchResultLocationCitationType extends BetaResponseWebSearchResultLocationCitationType_base {
+}
+declare const BetaResponseWebSearchResultLocationCitation_base: S.Struct<{
+    cited_text: typeof S.String;
+    encrypted_index: typeof S.String;
+    title: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof BetaResponseWebSearchResultLocationCitationType;
+    url: typeof S.String;
+}>;
+export declare class BetaResponseWebSearchResultLocationCitation extends BetaResponseWebSearchResultLocationCitation_base {
+}
+declare const BetaResponseTextBlockType_base: S.Literal<["text"]>;
+export declare class BetaResponseTextBlockType extends BetaResponseTextBlockType_base {
+}
+declare const BetaResponseTextBlock_base: S.Struct<{
+    citations: S.optional<S.NullOr<S.Array$<S.Union<[typeof BetaResponseCharLocationCitation, typeof BetaResponsePageLocationCitation, typeof BetaResponseContentBlockLocationCitation, typeof BetaResponseWebSearchResultLocationCitation]>>>>;
+    text: S.filter<S.filter<typeof S.String>>;
+    type: typeof BetaResponseTextBlockType;
+}>;
+export declare class BetaResponseTextBlock extends BetaResponseTextBlock_base {
+}
+declare const BetaResponseToolUseBlockType_base: S.Literal<["tool_use"]>;
+export declare class BetaResponseToolUseBlockType extends BetaResponseToolUseBlockType_base {
+}
+declare const BetaResponseToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: S.filter<typeof S.String>;
+    type: typeof BetaResponseToolUseBlockType;
+}>;
+export declare class BetaResponseToolUseBlock extends BetaResponseToolUseBlock_base {
+}
+declare const BetaResponseServerToolUseBlockName_base: S.Literal<["web_search", "code_execution"]>;
+export declare class BetaResponseServerToolUseBlockName extends BetaResponseServerToolUseBlockName_base {
+}
+declare const BetaResponseServerToolUseBlockType_base: S.Literal<["server_tool_use"]>;
+export declare class BetaResponseServerToolUseBlockType extends BetaResponseServerToolUseBlockType_base {
+}
+declare const BetaResponseServerToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof BetaResponseServerToolUseBlockName;
+    type: typeof BetaResponseServerToolUseBlockType;
+}>;
+export declare class BetaResponseServerToolUseBlock extends BetaResponseServerToolUseBlock_base {
+}
+declare const BetaResponseWebSearchToolResultErrorType_base: S.Literal<["web_search_tool_result_error"]>;
+export declare class BetaResponseWebSearchToolResultErrorType extends BetaResponseWebSearchToolResultErrorType_base {
+}
+declare const BetaResponseWebSearchToolResultError_base: S.Struct<{
+    error_code: typeof BetaWebSearchToolResultErrorCode;
+    type: typeof BetaResponseWebSearchToolResultErrorType;
+}>;
+export declare class BetaResponseWebSearchToolResultError extends BetaResponseWebSearchToolResultError_base {
+}
+declare const BetaResponseWebSearchResultBlockType_base: S.Literal<["web_search_result"]>;
+export declare class BetaResponseWebSearchResultBlockType extends BetaResponseWebSearchResultBlockType_base {
+}
+declare const BetaResponseWebSearchResultBlock_base: S.Struct<{
+    encrypted_content: typeof S.String;
+    page_age: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    title: typeof S.String;
+    type: typeof BetaResponseWebSearchResultBlockType;
+    url: typeof S.String;
+}>;
+export declare class BetaResponseWebSearchResultBlock extends BetaResponseWebSearchResultBlock_base {
+}
+declare const BetaResponseWebSearchToolResultBlockType_base: S.Literal<["web_search_tool_result"]>;
+export declare class BetaResponseWebSearchToolResultBlockType extends BetaResponseWebSearchToolResultBlockType_base {
+}
+declare const BetaResponseWebSearchToolResultBlock_base: S.Struct<{
+    content: S.Union<[typeof BetaResponseWebSearchToolResultError, S.Array$<typeof BetaResponseWebSearchResultBlock>]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaResponseWebSearchToolResultBlockType;
+}>;
+export declare class BetaResponseWebSearchToolResultBlock extends BetaResponseWebSearchToolResultBlock_base {
+}
+declare const BetaResponseCodeExecutionToolResultErrorType_base: S.Literal<["code_execution_tool_result_error"]>;
+export declare class BetaResponseCodeExecutionToolResultErrorType extends BetaResponseCodeExecutionToolResultErrorType_base {
+}
+declare const BetaResponseCodeExecutionToolResultError_base: S.Struct<{
+    error_code: typeof BetaCodeExecutionToolResultErrorCode;
+    type: typeof BetaResponseCodeExecutionToolResultErrorType;
+}>;
+export declare class BetaResponseCodeExecutionToolResultError extends BetaResponseCodeExecutionToolResultError_base {
+}
+declare const BetaResponseCodeExecutionOutputBlockType_base: S.Literal<["code_execution_output"]>;
+export declare class BetaResponseCodeExecutionOutputBlockType extends BetaResponseCodeExecutionOutputBlockType_base {
+}
+declare const BetaResponseCodeExecutionOutputBlock_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaResponseCodeExecutionOutputBlockType;
+}>;
+export declare class BetaResponseCodeExecutionOutputBlock extends BetaResponseCodeExecutionOutputBlock_base {
+}
+declare const BetaResponseCodeExecutionResultBlockType_base: S.Literal<["code_execution_result"]>;
+export declare class BetaResponseCodeExecutionResultBlockType extends BetaResponseCodeExecutionResultBlockType_base {
+}
+declare const BetaResponseCodeExecutionResultBlock_base: S.Struct<{
+    content: S.Array$<typeof BetaResponseCodeExecutionOutputBlock>;
+    return_code: typeof S.Int;
+    stderr: typeof S.String;
+    stdout: typeof S.String;
+    type: typeof BetaResponseCodeExecutionResultBlockType;
+}>;
+export declare class BetaResponseCodeExecutionResultBlock extends BetaResponseCodeExecutionResultBlock_base {
+}
+declare const BetaResponseCodeExecutionToolResultBlockType_base: S.Literal<["code_execution_tool_result"]>;
+export declare class BetaResponseCodeExecutionToolResultBlockType extends BetaResponseCodeExecutionToolResultBlockType_base {
+}
+declare const BetaResponseCodeExecutionToolResultBlock_base: S.Struct<{
+    content: S.Union<[typeof BetaResponseCodeExecutionToolResultError, typeof BetaResponseCodeExecutionResultBlock]>;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaResponseCodeExecutionToolResultBlockType;
+}>;
+export declare class BetaResponseCodeExecutionToolResultBlock extends BetaResponseCodeExecutionToolResultBlock_base {
+}
+declare const BetaResponseMCPToolUseBlockType_base: S.Literal<["mcp_tool_use"]>;
+export declare class BetaResponseMCPToolUseBlockType extends BetaResponseMCPToolUseBlockType_base {
+}
+declare const BetaResponseMCPToolUseBlock_base: S.Struct<{
+    id: S.filter<typeof S.String>;
+    input: S.Record$<typeof S.String, typeof S.Unknown>;
+    name: typeof S.String;
+    server_name: typeof S.String;
+    type: typeof BetaResponseMCPToolUseBlockType;
+}>;
+export declare class BetaResponseMCPToolUseBlock extends BetaResponseMCPToolUseBlock_base {
+}
+declare const BetaResponseMCPToolResultBlockType_base: S.Literal<["mcp_tool_result"]>;
+export declare class BetaResponseMCPToolResultBlockType extends BetaResponseMCPToolResultBlockType_base {
+}
+declare const BetaResponseMCPToolResultBlock_base: S.Struct<{
+    content: S.Union<[typeof S.String, S.Array$<typeof BetaResponseTextBlock>]>;
+    is_error: typeof S.Boolean;
+    tool_use_id: S.filter<typeof S.String>;
+    type: typeof BetaResponseMCPToolResultBlockType;
+}>;
+export declare class BetaResponseMCPToolResultBlock extends BetaResponseMCPToolResultBlock_base {
+}
+declare const BetaResponseContainerUploadBlockType_base: S.Literal<["container_upload"]>;
+export declare class BetaResponseContainerUploadBlockType extends BetaResponseContainerUploadBlockType_base {
+}
+declare const BetaResponseContainerUploadBlock_base: S.Struct<{
+    file_id: typeof S.String;
+    type: typeof BetaResponseContainerUploadBlockType;
+}>;
+export declare class BetaResponseContainerUploadBlock extends BetaResponseContainerUploadBlock_base {
+}
+declare const BetaResponseThinkingBlockType_base: S.Literal<["thinking"]>;
+export declare class BetaResponseThinkingBlockType extends BetaResponseThinkingBlockType_base {
+}
+declare const BetaResponseThinkingBlock_base: S.Struct<{
+    signature: typeof S.String;
+    thinking: typeof S.String;
+    type: typeof BetaResponseThinkingBlockType;
+}>;
+export declare class BetaResponseThinkingBlock extends BetaResponseThinkingBlock_base {
+}
+declare const BetaResponseRedactedThinkingBlockType_base: S.Literal<["redacted_thinking"]>;
+export declare class BetaResponseRedactedThinkingBlockType extends BetaResponseRedactedThinkingBlockType_base {
+}
+declare const BetaResponseRedactedThinkingBlock_base: S.Struct<{
+    data: typeof S.String;
+    type: typeof BetaResponseRedactedThinkingBlockType;
+}>;
+export declare class BetaResponseRedactedThinkingBlock extends BetaResponseRedactedThinkingBlock_base {
+}
+declare const BetaContentBlock_base: S.Union<[typeof BetaResponseTextBlock, typeof BetaResponseToolUseBlock, typeof BetaResponseServerToolUseBlock, typeof BetaResponseWebSearchToolResultBlock, typeof BetaResponseCodeExecutionToolResultBlock, typeof BetaResponseMCPToolUseBlock, typeof BetaResponseMCPToolResultBlock, typeof BetaResponseContainerUploadBlock, typeof BetaResponseThinkingBlock, typeof BetaResponseRedactedThinkingBlock]>;
+export declare class BetaContentBlock extends BetaContentBlock_base {
+}
+declare const BetaStopReason_base: S.Literal<["end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal"]>;
+export declare class BetaStopReason extends BetaStopReason_base {
+}
+declare const BetaCacheCreation_base: S.Struct<{
+    ephemeral_1h_input_tokens: S.filter<typeof S.Int>;
+    ephemeral_5m_input_tokens: S.filter<typeof S.Int>;
+}>;
+export declare class BetaCacheCreation extends BetaCacheCreation_base {
+}
+declare const BetaServerToolUsage_base: S.Struct<{
+    web_search_requests: S.filter<typeof S.Int>;
+}>;
+export declare class BetaServerToolUsage extends BetaServerToolUsage_base {
+}
+declare const BetaUsageServiceTierEnum_base: S.Literal<["standard", "priority", "batch"]>;
+export declare class BetaUsageServiceTierEnum extends BetaUsageServiceTierEnum_base {
+}
+declare const BetaUsage_base: S.Struct<{
+    cache_creation: S.NullOr<S.Union<[typeof BetaCacheCreation, typeof S.Null]>>;
+    cache_creation_input_tokens: S.NullOr<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>>;
+    cache_read_input_tokens: S.NullOr<S.Union<[S.filter<typeof S.Int>, typeof S.Null]>>;
+    input_tokens: S.filter<typeof S.Int>;
+    output_tokens: S.filter<typeof S.Int>;
+    server_tool_use: S.optional<S.NullOr<typeof BetaServerToolUsage>>;
+    service_tier: S.NullOr<S.Union<[typeof BetaUsageServiceTierEnum, typeof S.Null]>>;
+}>;
+export declare class BetaUsage extends BetaUsage_base {
+}
+declare const BetaContainer_base: S.Struct<{
+    expires_at: typeof S.String;
+    id: typeof S.String;
+}>;
+export declare class BetaContainer extends BetaContainer_base {
+}
+declare const BetaMessage_base: S.Class<BetaMessage, {
+    id: typeof S.String;
+    type: typeof BetaMessageType;
+    role: typeof BetaMessageRole;
+    content: S.Array$<typeof BetaContentBlock>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof BetaStopReason, typeof S.Null]>;
+    stop_sequence: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    usage: typeof BetaUsage;
+    container: S.NullOr<S.Union<[typeof BetaContainer, typeof S.Null]>>;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: typeof BetaMessageType;
+    role: typeof BetaMessageRole;
+    content: S.Array$<typeof BetaContentBlock>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    stop_reason: S.Union<[typeof BetaStopReason, typeof S.Null]>;
+    stop_sequence: S.NullOr<S.Union<[typeof S.String, typeof S.Null]>>;
+    usage: typeof BetaUsage;
+    container: S.NullOr<S.Union<[typeof BetaContainer, typeof S.Null]>>;
+}>, never, {
+    readonly type: "message";
+} & {
+    readonly id: string;
+} & {
+    readonly content: readonly ({
+        readonly type: "text";
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    } | {
+        readonly type: "tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: string;
+    } | {
+        readonly type: "server_tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: "web_search" | "code_execution";
+    } | {
+        readonly type: "web_search_tool_result";
+        readonly content: {
+            readonly type: "web_search_tool_result_error";
+            readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+        } | readonly {
+            readonly type: "web_search_result";
+            readonly encrypted_content: string;
+            readonly page_age: string | null;
+            readonly title: string;
+            readonly url: string;
+        }[];
+        readonly tool_use_id: string;
+    } | {
+        readonly type: "code_execution_tool_result";
+        readonly content: {
+            readonly type: "code_execution_tool_result_error";
+            readonly error_code: "invalid_tool_input" | "unavailable" | "too_many_requests" | "execution_time_exceeded";
+        } | {
+            readonly type: "code_execution_result";
+            readonly content: readonly {
+                readonly type: "code_execution_output";
+                readonly file_id: string;
+            }[];
+            readonly return_code: number;
+            readonly stderr: string;
+            readonly stdout: string;
+        };
+        readonly tool_use_id: string;
+    } | {
+        readonly type: "mcp_tool_use";
+        readonly id: string;
+        readonly input: {
+            readonly [x: string]: unknown;
+        };
+        readonly name: string;
+        readonly server_name: string;
+    } | {
+        readonly type: "mcp_tool_result";
+        readonly content: string | readonly {
+            readonly type: "text";
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        }[];
+        readonly tool_use_id: string;
+        readonly is_error: boolean;
+    } | {
+        readonly type: "container_upload";
+        readonly file_id: string;
+    } | {
+        readonly type: "thinking";
+        readonly thinking: string;
+        readonly signature: string;
+    } | {
+        readonly type: "redacted_thinking";
+        readonly data: string;
+    })[];
+} & {
+    readonly role: "assistant";
+} & {
+    readonly model: string;
+} & {
+    readonly stop_sequence: string | null;
+} & {
+    readonly usage: {
+        readonly server_tool_use?: {
+            readonly web_search_requests: number;
+        } | null | undefined;
+        readonly service_tier: "standard" | "priority" | "batch" | null;
+        readonly cache_creation_input_tokens: number | null;
+        readonly cache_read_input_tokens: number | null;
+        readonly input_tokens: number;
+        readonly output_tokens: number;
+        readonly cache_creation: {
+            readonly ephemeral_1h_input_tokens: number;
+            readonly ephemeral_5m_input_tokens: number;
+        } | null;
+    };
+} & {
+    readonly stop_reason: "tool_use" | "max_tokens" | "end_turn" | "stop_sequence" | "pause_turn" | "refusal" | null;
+} & {
+    readonly container: {
+        readonly id: string;
+        readonly expires_at: string;
+    } | null;
+}, {}, {}>;
+export declare class BetaMessage extends BetaMessage_base {
+}
+declare const BetaInvalidRequestErrorType_base: S.Literal<["invalid_request_error"]>;
+export declare class BetaInvalidRequestErrorType extends BetaInvalidRequestErrorType_base {
+}
+declare const BetaInvalidRequestError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaInvalidRequestErrorType;
+}>;
+export declare class BetaInvalidRequestError extends BetaInvalidRequestError_base {
+}
+declare const BetaAuthenticationErrorType_base: S.Literal<["authentication_error"]>;
+export declare class BetaAuthenticationErrorType extends BetaAuthenticationErrorType_base {
+}
+declare const BetaAuthenticationError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaAuthenticationErrorType;
+}>;
+export declare class BetaAuthenticationError extends BetaAuthenticationError_base {
+}
+declare const BetaBillingErrorType_base: S.Literal<["billing_error"]>;
+export declare class BetaBillingErrorType extends BetaBillingErrorType_base {
+}
+declare const BetaBillingError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaBillingErrorType;
+}>;
+export declare class BetaBillingError extends BetaBillingError_base {
+}
+declare const BetaPermissionErrorType_base: S.Literal<["permission_error"]>;
+export declare class BetaPermissionErrorType extends BetaPermissionErrorType_base {
+}
+declare const BetaPermissionError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaPermissionErrorType;
+}>;
+export declare class BetaPermissionError extends BetaPermissionError_base {
+}
+declare const BetaNotFoundErrorType_base: S.Literal<["not_found_error"]>;
+export declare class BetaNotFoundErrorType extends BetaNotFoundErrorType_base {
+}
+declare const BetaNotFoundError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaNotFoundErrorType;
+}>;
+export declare class BetaNotFoundError extends BetaNotFoundError_base {
+}
+declare const BetaRateLimitErrorType_base: S.Literal<["rate_limit_error"]>;
+export declare class BetaRateLimitErrorType extends BetaRateLimitErrorType_base {
+}
+declare const BetaRateLimitError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaRateLimitErrorType;
+}>;
+export declare class BetaRateLimitError extends BetaRateLimitError_base {
+}
+declare const BetaGatewayTimeoutErrorType_base: S.Literal<["timeout_error"]>;
+export declare class BetaGatewayTimeoutErrorType extends BetaGatewayTimeoutErrorType_base {
+}
+declare const BetaGatewayTimeoutError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaGatewayTimeoutErrorType;
+}>;
+export declare class BetaGatewayTimeoutError extends BetaGatewayTimeoutError_base {
+}
+declare const BetaAPIErrorType_base: S.Literal<["api_error"]>;
+export declare class BetaAPIErrorType extends BetaAPIErrorType_base {
+}
+declare const BetaAPIError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaAPIErrorType;
+}>;
+export declare class BetaAPIError extends BetaAPIError_base {
+}
+declare const BetaOverloadedErrorType_base: S.Literal<["overloaded_error"]>;
+export declare class BetaOverloadedErrorType extends BetaOverloadedErrorType_base {
+}
+declare const BetaOverloadedError_base: S.Struct<{
+    message: typeof S.String;
+    type: typeof BetaOverloadedErrorType;
+}>;
+export declare class BetaOverloadedError extends BetaOverloadedError_base {
+}
+declare const BetaErrorResponseType_base: S.Literal<["error"]>;
+export declare class BetaErrorResponseType extends BetaErrorResponseType_base {
+}
+declare const BetaErrorResponse_base: S.Class<BetaErrorResponse, {
+    error: S.Union<[typeof BetaInvalidRequestError, typeof BetaAuthenticationError, typeof BetaBillingError, typeof BetaPermissionError, typeof BetaNotFoundError, typeof BetaRateLimitError, typeof BetaGatewayTimeoutError, typeof BetaAPIError, typeof BetaOverloadedError]>;
+    type: typeof BetaErrorResponseType;
+}, S.Struct.Encoded<{
+    error: S.Union<[typeof BetaInvalidRequestError, typeof BetaAuthenticationError, typeof BetaBillingError, typeof BetaPermissionError, typeof BetaNotFoundError, typeof BetaRateLimitError, typeof BetaGatewayTimeoutError, typeof BetaAPIError, typeof BetaOverloadedError]>;
+    type: typeof BetaErrorResponseType;
+}>, never, {
+    readonly type: "error";
+} & {
+    readonly error: {
+        readonly type: "invalid_request_error";
+        readonly message: string;
+    } | {
+        readonly type: "authentication_error";
+        readonly message: string;
+    } | {
+        readonly type: "billing_error";
+        readonly message: string;
+    } | {
+        readonly type: "permission_error";
+        readonly message: string;
+    } | {
+        readonly type: "not_found_error";
+        readonly message: string;
+    } | {
+        readonly type: "rate_limit_error";
+        readonly message: string;
+    } | {
+        readonly type: "timeout_error";
+        readonly message: string;
+    } | {
+        readonly type: "api_error";
+        readonly message: string;
+    } | {
+        readonly type: "overloaded_error";
+        readonly message: string;
+    };
+}, {}, {}>;
+export declare class BetaErrorResponse extends BetaErrorResponse_base {
+}
+declare const BetaModelsListParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaModelsListParams extends BetaModelsListParams_base {
+}
+declare const BetaModelInfoType_base: S.Literal<["model"]>;
+export declare class BetaModelInfoType extends BetaModelInfoType_base {
+}
+declare const BetaModelInfo_base: S.Struct<{
+    created_at: typeof S.String;
+    display_name: typeof S.String;
+    id: typeof S.String;
+    type: typeof BetaModelInfoType;
+}>;
+export declare class BetaModelInfo extends BetaModelInfo_base {
+}
+declare const BetaListResponseModelInfo_base: S.Class<BetaListResponseModelInfo, {
+    data: S.Array$<typeof BetaModelInfo>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof BetaModelInfo>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "model";
+        readonly id: string;
+        readonly created_at: string;
+        readonly display_name: string;
+    }[];
+} & {
+    readonly has_more: boolean;
+} & {
+    readonly first_id: string | null;
+} & {
+    readonly last_id: string | null;
+}, {}, {}>;
+export declare class BetaListResponseModelInfo extends BetaListResponseModelInfo_base {
+}
+declare const BetaModelsGetParams_base: S.Struct<{
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaModelsGetParams extends BetaModelsGetParams_base {
+}
+declare const BetaMessageBatchesListParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesListParams extends BetaMessageBatchesListParams_base {
+}
+declare const BetaMessageBatchProcessingStatus_base: S.Literal<["in_progress", "canceling", "ended"]>;
+export declare class BetaMessageBatchProcessingStatus extends BetaMessageBatchProcessingStatus_base {
+}
+declare const BetaRequestCounts_base: S.Struct<{
+    canceled: typeof S.Int;
+    errored: typeof S.Int;
+    expired: typeof S.Int;
+    processing: typeof S.Int;
+    succeeded: typeof S.Int;
+}>;
+export declare class BetaRequestCounts extends BetaRequestCounts_base {
+}
+declare const BetaMessageBatchType_base: S.Literal<["message_batch"]>;
+export declare class BetaMessageBatchType extends BetaMessageBatchType_base {
+}
+declare const BetaMessageBatch_base: S.Struct<{
+    archived_at: S.Union<[typeof S.String, typeof S.Null]>;
+    cancel_initiated_at: S.Union<[typeof S.String, typeof S.Null]>;
+    created_at: typeof S.String;
+    ended_at: S.Union<[typeof S.String, typeof S.Null]>;
+    expires_at: typeof S.String;
+    id: typeof S.String;
+    processing_status: typeof BetaMessageBatchProcessingStatus;
+    request_counts: typeof BetaRequestCounts;
+    results_url: S.Union<[typeof S.String, typeof S.Null]>;
+    type: typeof BetaMessageBatchType;
+}>;
+export declare class BetaMessageBatch extends BetaMessageBatch_base {
+}
+declare const BetaListResponseMessageBatch_base: S.Class<BetaListResponseMessageBatch, {
+    data: S.Array$<typeof BetaMessageBatch>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof BetaMessageBatch>;
+    first_id: S.Union<[typeof S.String, typeof S.Null]>;
+    has_more: typeof S.Boolean;
+    last_id: S.Union<[typeof S.String, typeof S.Null]>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "message_batch";
+        readonly id: string;
+        readonly created_at: string;
+        readonly archived_at: string | null;
+        readonly cancel_initiated_at: string | null;
+        readonly ended_at: string | null;
+        readonly expires_at: string;
+        readonly processing_status: "in_progress" | "canceling" | "ended";
+        readonly request_counts: {
+            readonly canceled: number;
+            readonly errored: number;
+            readonly expired: number;
+            readonly processing: number;
+            readonly succeeded: number;
+        };
+        readonly results_url: string | null;
+    }[];
+} & {
+    readonly has_more: boolean;
+} & {
+    readonly first_id: string | null;
+} & {
+    readonly last_id: string | null;
+}, {}, {}>;
+export declare class BetaListResponseMessageBatch extends BetaListResponseMessageBatch_base {
+}
+declare const BetaMessageBatchesPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesPostParams extends BetaMessageBatchesPostParams_base {
+}
+declare const BetaMessageBatchIndividualRequestParams_base: S.Struct<{
+    custom_id: S.filter<S.filter<S.filter<typeof S.String>>>;
+    params: typeof BetaCreateMessageParams;
+}>;
+export declare class BetaMessageBatchIndividualRequestParams extends BetaMessageBatchIndividualRequestParams_base {
+}
+declare const BetaCreateMessageBatchParams_base: S.Class<BetaCreateMessageBatchParams, {
+    requests: S.filter<S.filter<S.Array$<typeof BetaMessageBatchIndividualRequestParams>>>;
+}, S.Struct.Encoded<{
+    requests: S.filter<S.filter<S.Array$<typeof BetaMessageBatchIndividualRequestParams>>>;
+}>, never, {
+    readonly requests: readonly {
+        readonly custom_id: string;
+        readonly params: BetaCreateMessageParams;
+    }[];
+}, {}, {}>;
+export declare class BetaCreateMessageBatchParams extends BetaCreateMessageBatchParams_base {
+}
+declare const BetaMessageBatchesRetrieveParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesRetrieveParams extends BetaMessageBatchesRetrieveParams_base {
+}
+declare const BetaMessageBatchesDeleteParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesDeleteParams extends BetaMessageBatchesDeleteParams_base {
+}
+declare const BetaDeleteMessageBatchResponseType_base: S.Literal<["message_batch_deleted"]>;
+export declare class BetaDeleteMessageBatchResponseType extends BetaDeleteMessageBatchResponseType_base {
+}
+declare const BetaDeleteMessageBatchResponse_base: S.Class<BetaDeleteMessageBatchResponse, {
+    id: typeof S.String;
+    type: typeof BetaDeleteMessageBatchResponseType;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: typeof BetaDeleteMessageBatchResponseType;
+}>, never, {
+    readonly type: "message_batch_deleted";
+} & {
+    readonly id: string;
+}, {}, {}>;
+export declare class BetaDeleteMessageBatchResponse extends BetaDeleteMessageBatchResponse_base {
+}
+declare const BetaMessageBatchesCancelParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesCancelParams extends BetaMessageBatchesCancelParams_base {
+}
+declare const BetaMessageBatchesResultsParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessageBatchesResultsParams extends BetaMessageBatchesResultsParams_base {
+}
+declare const BetaMessagesCountTokensPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaMessagesCountTokensPostParams extends BetaMessagesCountTokensPostParams_base {
+}
+declare const BetaCountMessageTokensParams_base: S.Class<BetaCountMessageTokensParams, {
+    mcp_servers: S.optionalWith<S.filter<S.Array$<typeof BetaRequestMCPServerURLDefinition>>, {
+        nullable: true;
+    }>;
+    messages: S.Array$<typeof BetaInputMessage>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof BetaThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof BetaToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof BetaTool, typeof BetaComputerUseTool20241022, typeof BetaBashTool20241022, typeof BetaTextEditor20241022, typeof BetaComputerUseTool20250124, typeof BetaBashTool20250124, typeof BetaTextEditor20250124, typeof BetaTextEditor20250429, typeof BetaWebSearchTool20250305, typeof BetaCodeExecutionTool20250522]>>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    mcp_servers: S.optionalWith<S.filter<S.Array$<typeof BetaRequestMCPServerURLDefinition>>, {
+        nullable: true;
+    }>;
+    messages: S.Array$<typeof BetaInputMessage>;
+    model: S.Union<[typeof S.String, typeof Model]>;
+    system: S.optionalWith<S.Union<[typeof S.String, S.Array$<typeof BetaRequestTextBlock>]>, {
+        nullable: true;
+    }>;
+    thinking: S.optionalWith<typeof BetaThinkingConfigParam, {
+        nullable: true;
+    }>;
+    tool_choice: S.optionalWith<typeof BetaToolChoice, {
+        nullable: true;
+    }>;
+    tools: S.optionalWith<S.Array$<S.Union<[typeof BetaTool, typeof BetaComputerUseTool20241022, typeof BetaBashTool20241022, typeof BetaTextEditor20241022, typeof BetaComputerUseTool20250124, typeof BetaBashTool20250124, typeof BetaTextEditor20250124, typeof BetaTextEditor20250429, typeof BetaWebSearchTool20250305, typeof BetaCodeExecutionTool20250522]>>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly thinking?: {
+        readonly type: "enabled";
+        readonly budget_tokens: number;
+    } | {
+        readonly type: "disabled";
+    } | undefined;
+} & {
+    readonly model: string;
+} & {
+    readonly messages: readonly {
+        readonly content: string | readonly ({
+            readonly type: "server_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: "web_search" | "code_execution";
+        } | {
+            readonly type: "web_search_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content: {
+                readonly type: "web_search_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "max_uses_exceeded" | "too_many_requests" | "query_too_long";
+            } | readonly {
+                readonly type: "web_search_result";
+                readonly encrypted_content: string;
+                readonly page_age?: string | null | undefined;
+                readonly title: string;
+                readonly url: string;
+            }[];
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "code_execution_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content: {
+                readonly type: "code_execution_tool_result_error";
+                readonly error_code: "invalid_tool_input" | "unavailable" | "too_many_requests" | "execution_time_exceeded";
+            } | {
+                readonly type: "code_execution_result";
+                readonly content: readonly {
+                    readonly type: "code_execution_output";
+                    readonly file_id: string;
+                }[];
+                readonly return_code: number;
+                readonly stderr: string;
+                readonly stdout: string;
+            };
+            readonly tool_use_id: string;
+        } | {
+            readonly type: "mcp_tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+            readonly server_name: string;
+        } | {
+            readonly type: "text";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly text: string;
+            readonly citations?: readonly ({
+                readonly type: "char_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_char_index: number;
+                readonly start_char_index: number;
+            } | {
+                readonly type: "page_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_page_number: number;
+                readonly start_page_number: number;
+            } | {
+                readonly type: "content_block_location";
+                readonly cited_text: string;
+                readonly document_index: number;
+                readonly document_title: string | null;
+                readonly end_block_index: number;
+                readonly start_block_index: number;
+            } | {
+                readonly type: "web_search_result_location";
+                readonly title: string | null;
+                readonly url: string;
+                readonly cited_text: string;
+                readonly encrypted_index: string;
+            })[] | null | undefined;
+        } | {
+            readonly type: "mcp_tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content?: string | readonly {
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            }[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "image";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            } | {
+                readonly type: "file";
+                readonly file_id: string;
+            };
+        } | {
+            readonly type: "tool_use";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly id: string;
+            readonly input: {
+                readonly [x: string]: unknown;
+            };
+            readonly name: string;
+        } | {
+            readonly type: "tool_result";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly content?: string | readonly ({
+                readonly type: "text";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly text: string;
+                readonly citations?: readonly ({
+                    readonly type: "char_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_char_index: number;
+                    readonly start_char_index: number;
+                } | {
+                    readonly type: "page_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_page_number: number;
+                    readonly start_page_number: number;
+                } | {
+                    readonly type: "content_block_location";
+                    readonly cited_text: string;
+                    readonly document_index: number;
+                    readonly document_title: string | null;
+                    readonly end_block_index: number;
+                    readonly start_block_index: number;
+                } | {
+                    readonly type: "web_search_result_location";
+                    readonly title: string | null;
+                    readonly url: string;
+                    readonly cited_text: string;
+                    readonly encrypted_index: string;
+                })[] | null | undefined;
+            } | {
+                readonly type: "image";
+                readonly cache_control?: {
+                    readonly type: "ephemeral";
+                    readonly ttl?: "5m" | "1h" | undefined;
+                } | null | undefined;
+                readonly source: {
+                    readonly type: "base64";
+                    readonly data: string;
+                    readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                } | {
+                    readonly type: "url";
+                    readonly url: string;
+                } | {
+                    readonly type: "file";
+                    readonly file_id: string;
+                };
+            })[] | undefined;
+            readonly tool_use_id: string;
+            readonly is_error?: boolean | undefined;
+        } | {
+            readonly type: "document";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly title?: string | null | undefined;
+            readonly citations?: {
+                readonly enabled?: boolean | undefined;
+            } | undefined;
+            readonly source: {
+                readonly type: "base64";
+                readonly data: string;
+                readonly media_type: "application/pdf";
+            } | {
+                readonly type: "text";
+                readonly data: string;
+                readonly media_type: "text/plain";
+            } | {
+                readonly type: "content";
+                readonly content: string | readonly ({
+                    readonly type: "text";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                        readonly ttl?: "5m" | "1h" | undefined;
+                    } | null | undefined;
+                    readonly text: string;
+                    readonly citations?: readonly ({
+                        readonly type: "char_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_char_index: number;
+                        readonly start_char_index: number;
+                    } | {
+                        readonly type: "page_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_page_number: number;
+                        readonly start_page_number: number;
+                    } | {
+                        readonly type: "content_block_location";
+                        readonly cited_text: string;
+                        readonly document_index: number;
+                        readonly document_title: string | null;
+                        readonly end_block_index: number;
+                        readonly start_block_index: number;
+                    } | {
+                        readonly type: "web_search_result_location";
+                        readonly title: string | null;
+                        readonly url: string;
+                        readonly cited_text: string;
+                        readonly encrypted_index: string;
+                    })[] | null | undefined;
+                } | {
+                    readonly type: "image";
+                    readonly cache_control?: {
+                        readonly type: "ephemeral";
+                        readonly ttl?: "5m" | "1h" | undefined;
+                    } | null | undefined;
+                    readonly source: {
+                        readonly type: "base64";
+                        readonly data: string;
+                        readonly media_type: "image/jpeg" | "image/png" | "image/gif" | "image/webp";
+                    } | {
+                        readonly type: "url";
+                        readonly url: string;
+                    } | {
+                        readonly type: "file";
+                        readonly file_id: string;
+                    };
+                })[];
+            } | {
+                readonly type: "url";
+                readonly url: string;
+            } | {
+                readonly type: "file";
+                readonly file_id: string;
+            };
+            readonly context?: string | null | undefined;
+        } | {
+            readonly type: "thinking";
+            readonly thinking: string;
+            readonly signature: string;
+        } | {
+            readonly type: "redacted_thinking";
+            readonly data: string;
+        } | {
+            readonly type: "container_upload";
+            readonly cache_control?: {
+                readonly type: "ephemeral";
+                readonly ttl?: "5m" | "1h" | undefined;
+            } | null | undefined;
+            readonly file_id: string;
+        })[];
+        readonly role: "user" | "assistant";
+    }[];
+} & {
+    readonly system?: string | readonly {
+        readonly type: "text";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly text: string;
+        readonly citations?: readonly ({
+            readonly type: "char_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_char_index: number;
+            readonly start_char_index: number;
+        } | {
+            readonly type: "page_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_page_number: number;
+            readonly start_page_number: number;
+        } | {
+            readonly type: "content_block_location";
+            readonly cited_text: string;
+            readonly document_index: number;
+            readonly document_title: string | null;
+            readonly end_block_index: number;
+            readonly start_block_index: number;
+        } | {
+            readonly type: "web_search_result_location";
+            readonly title: string | null;
+            readonly url: string;
+            readonly cited_text: string;
+            readonly encrypted_index: string;
+        })[] | null | undefined;
+    }[] | undefined;
+} & {
+    readonly tool_choice?: {
+        readonly type: "auto";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "any";
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "tool";
+        readonly name: string;
+        readonly disable_parallel_tool_use?: boolean | undefined;
+    } | {
+        readonly type: "none";
+    } | undefined;
+} & {
+    readonly tools?: readonly ({
+        readonly type?: "custom" | null | undefined;
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: string;
+        readonly description?: string | undefined;
+        readonly input_schema: {
+            readonly type: "object";
+            readonly properties?: {
+                readonly [x: string]: unknown;
+            } | null | undefined;
+            readonly required?: readonly string[] | null | undefined;
+        };
+    } | {
+        readonly type: "computer_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "computer";
+        readonly display_height_px: number;
+        readonly display_number?: number | null | undefined;
+        readonly display_width_px: number;
+    } | {
+        readonly type: "bash_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20241022";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "computer_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "computer";
+        readonly display_height_px: number;
+        readonly display_number?: number | null | undefined;
+        readonly display_width_px: number;
+    } | {
+        readonly type: "bash_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "bash";
+    } | {
+        readonly type: "text_editor_20250124";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_editor";
+    } | {
+        readonly type: "text_editor_20250429";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "str_replace_based_edit_tool";
+    } | {
+        readonly type: "web_search_20250305";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "web_search";
+        readonly allowed_domains?: readonly string[] | null | undefined;
+        readonly blocked_domains?: readonly string[] | null | undefined;
+        readonly max_uses?: number | null | undefined;
+        readonly user_location?: {
+            readonly type: "approximate";
+            readonly city?: string | null | undefined;
+            readonly country?: string | null | undefined;
+            readonly region?: string | null | undefined;
+            readonly timezone?: string | null | undefined;
+        } | null | undefined;
+    } | {
+        readonly type: "code_execution_20250522";
+        readonly cache_control?: {
+            readonly type: "ephemeral";
+            readonly ttl?: "5m" | "1h" | undefined;
+        } | null | undefined;
+        readonly name: "code_execution";
+    })[] | undefined;
+} & {
+    readonly mcp_servers?: readonly {
+        readonly type: "url";
+        readonly name: string;
+        readonly url: string;
+        readonly authorization_token?: string | null | undefined;
+        readonly tool_configuration?: {
+            readonly enabled?: boolean | null | undefined;
+            readonly allowed_tools?: readonly string[] | null | undefined;
+        } | null | undefined;
+    }[] | undefined;
+}, {}, {}>;
+export declare class BetaCountMessageTokensParams extends BetaCountMessageTokensParams_base {
+}
+declare const BetaCountMessageTokensResponse_base: S.Class<BetaCountMessageTokensResponse, {
+    input_tokens: typeof S.Int;
+}, S.Struct.Encoded<{
+    input_tokens: typeof S.Int;
+}>, never, {
+    readonly input_tokens: number;
+}, {}, {}>;
+export declare class BetaCountMessageTokensResponse extends BetaCountMessageTokensResponse_base {
+}
+declare const BetaListFilesV1FilesGetParams_base: S.Struct<{
+    before_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    after_id: S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    limit: S.optionalWith<S.filter<S.filter<typeof S.Int>>, {
+        nullable: true;
+    }>;
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaListFilesV1FilesGetParams extends BetaListFilesV1FilesGetParams_base {
+}
+declare const BetaFileMetadataSchemaType_base: S.Literal<["file"]>;
+export declare class BetaFileMetadataSchemaType extends BetaFileMetadataSchemaType_base {
+}
+declare const BetaFileMetadataSchema_base: S.Struct<{
+    created_at: typeof S.String;
+    downloadable: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    filename: S.filter<S.filter<typeof S.String>>;
+    id: typeof S.String;
+    mime_type: S.filter<S.filter<typeof S.String>>;
+    size_bytes: S.filter<typeof S.Int>;
+    type: typeof BetaFileMetadataSchemaType;
+}>;
+export declare class BetaFileMetadataSchema extends BetaFileMetadataSchema_base {
+}
+declare const BetaFileListResponse_base: S.Class<BetaFileListResponse, {
+    data: S.Array$<typeof BetaFileMetadataSchema>;
+    first_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    has_more: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    last_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    data: S.Array$<typeof BetaFileMetadataSchema>;
+    first_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+    has_more: S.optionalWith<typeof S.Boolean, {
+        nullable: true;
+    }>;
+    last_id: S.optionalWith<S.Union<[typeof S.String, typeof S.Null]>, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly data: readonly {
+        readonly type: "file";
+        readonly id: string;
+        readonly created_at: string;
+        readonly downloadable?: boolean | undefined;
+        readonly filename: string;
+        readonly mime_type: string;
+        readonly size_bytes: number;
+    }[];
+} & {
+    readonly has_more?: boolean | undefined;
+} & {
+    readonly first_id?: string | null | undefined;
+} & {
+    readonly last_id?: string | null | undefined;
+}, {}, {}>;
+export declare class BetaFileListResponse extends BetaFileListResponse_base {
+}
+declare const BetaUploadFileV1FilesPostParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaUploadFileV1FilesPostParams extends BetaUploadFileV1FilesPostParams_base {
+}
+declare const BetaGetFileMetadataV1FilesFileIdGetParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaGetFileMetadataV1FilesFileIdGetParams extends BetaGetFileMetadataV1FilesFileIdGetParams_base {
+}
+declare const BetaDeleteFileV1FilesFileIdDeleteParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaDeleteFileV1FilesFileIdDeleteParams extends BetaDeleteFileV1FilesFileIdDeleteParams_base {
+}
+declare const BetaFileDeleteResponseType_base: S.Literal<["file_deleted"]>;
+export declare class BetaFileDeleteResponseType extends BetaFileDeleteResponseType_base {
+}
+declare const BetaFileDeleteResponse_base: S.Class<BetaFileDeleteResponse, {
+    id: typeof S.String;
+    type: S.optionalWith<typeof BetaFileDeleteResponseType, {
+        nullable: true;
+    }>;
+}, S.Struct.Encoded<{
+    id: typeof S.String;
+    type: S.optionalWith<typeof BetaFileDeleteResponseType, {
+        nullable: true;
+    }>;
+}>, never, {
+    readonly type?: "file_deleted" | undefined;
+} & {
+    readonly id: string;
+}, {}, {}>;
+export declare class BetaFileDeleteResponse extends BetaFileDeleteResponse_base {
+}
+declare const BetaDownloadFileV1FilesFileIdContentGetParams_base: S.Struct<{
+    "anthropic-beta": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "anthropic-version": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+    "x-api-key": S.optionalWith<typeof S.String, {
+        nullable: true;
+    }>;
+}>;
+export declare class BetaDownloadFileV1FilesFileIdContentGetParams extends BetaDownloadFileV1FilesFileIdContentGetParams_base {
+}
+export declare const make: (httpClient: HttpClient.HttpClient, options?: {
+    readonly transformClient?: ((client: HttpClient.HttpClient) => Effect.Effect<HttpClient.HttpClient>) | undefined;
+}) => Client;
+export interface Client {
+    readonly httpClient: HttpClient.HttpClient;
+    readonly "messagesPost": (options: {
+        readonly params?: typeof MessagesPostParams.Encoded | undefined;
+        readonly payload: typeof CreateMessageParams.Encoded;
+    }) => Effect.Effect<typeof Message.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "completePost": (options: {
+        readonly params?: typeof CompletePostParams.Encoded | undefined;
+        readonly payload: typeof CompletionRequest.Encoded;
+    }) => Effect.Effect<typeof CompletionResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "modelsList": (options?: typeof ModelsListParams.Encoded | undefined) => Effect.Effect<typeof ListResponseModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "modelsGet": (modelId: string, options?: typeof ModelsGetParams.Encoded | undefined) => Effect.Effect<typeof ModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesList": (options?: typeof MessageBatchesListParams.Encoded | undefined) => Effect.Effect<typeof ListResponseMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesPost": (options: {
+        readonly params?: typeof MessageBatchesPostParams.Encoded | undefined;
+        readonly payload: typeof CreateMessageBatchParams.Encoded;
+    }) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesRetrieve": (messageBatchId: string, options?: typeof MessageBatchesRetrieveParams.Encoded | undefined) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesDelete": (messageBatchId: string, options?: typeof MessageBatchesDeleteParams.Encoded | undefined) => Effect.Effect<typeof DeleteMessageBatchResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesCancel": (messageBatchId: string, options?: typeof MessageBatchesCancelParams.Encoded | undefined) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messageBatchesResults": (messageBatchId: string, options?: typeof MessageBatchesResultsParams.Encoded | undefined) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "messagesCountTokensPost": (options: {
+        readonly params?: typeof MessagesCountTokensPostParams.Encoded | undefined;
+        readonly payload: typeof CountMessageTokensParams.Encoded;
+    }) => Effect.Effect<typeof CountMessageTokensResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "listFilesV1FilesGet": (options?: typeof ListFilesV1FilesGetParams.Encoded | undefined) => Effect.Effect<typeof FileListResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "uploadFileV1FilesPost": (options: {
+        readonly params?: typeof UploadFileV1FilesPostParams.Encoded | undefined;
+        readonly payload: globalThis.FormData;
+    }) => Effect.Effect<typeof FileMetadataSchema.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "getFileMetadataV1FilesFileIdGet": (fileId: string, options?: typeof GetFileMetadataV1FilesFileIdGetParams.Encoded | undefined) => Effect.Effect<typeof FileMetadataSchema.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "deleteFileV1FilesFileIdDelete": (fileId: string, options?: typeof DeleteFileV1FilesFileIdDeleteParams.Encoded | undefined) => Effect.Effect<typeof FileDeleteResponse.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>;
+    readonly "downloadFileV1FilesFileIdContentGet": (fileId: string, options?: typeof DownloadFileV1FilesFileIdContentGetParams.Encoded | undefined) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError>;
+    readonly "betaMessagesPost": (options: {
+        readonly params?: typeof BetaMessagesPostParams.Encoded | undefined;
+        readonly payload: typeof BetaCreateMessageParams.Encoded;
+    }) => Effect.Effect<typeof BetaMessage.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaModelsList": (options?: typeof BetaModelsListParams.Encoded | undefined) => Effect.Effect<typeof BetaListResponseModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaModelsGet": (modelId: string, options?: typeof BetaModelsGetParams.Encoded | undefined) => Effect.Effect<typeof BetaModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesList": (options?: typeof BetaMessageBatchesListParams.Encoded | undefined) => Effect.Effect<typeof BetaListResponseMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesPost": (options: {
+        readonly params?: typeof BetaMessageBatchesPostParams.Encoded | undefined;
+        readonly payload: typeof BetaCreateMessageBatchParams.Encoded;
+    }) => Effect.Effect<typeof BetaMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesRetrieve": (messageBatchId: string, options?: typeof BetaMessageBatchesRetrieveParams.Encoded | undefined) => Effect.Effect<typeof BetaMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesDelete": (messageBatchId: string, options?: typeof BetaMessageBatchesDeleteParams.Encoded | undefined) => Effect.Effect<typeof BetaDeleteMessageBatchResponse.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesCancel": (messageBatchId: string, options?: typeof BetaMessageBatchesCancelParams.Encoded | undefined) => Effect.Effect<typeof BetaMessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessageBatchesResults": (messageBatchId: string, options?: typeof BetaMessageBatchesResultsParams.Encoded | undefined) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaMessagesCountTokensPost": (options: {
+        readonly params?: typeof BetaMessagesCountTokensPostParams.Encoded | undefined;
+        readonly payload: typeof BetaCountMessageTokensParams.Encoded;
+    }) => Effect.Effect<typeof BetaCountMessageTokensResponse.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaListFilesV1FilesGet": (options?: typeof BetaListFilesV1FilesGetParams.Encoded | undefined) => Effect.Effect<typeof BetaFileListResponse.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaUploadFileV1FilesPost": (options: {
+        readonly params?: typeof BetaUploadFileV1FilesPostParams.Encoded | undefined;
+        readonly payload: globalThis.FormData;
+    }) => Effect.Effect<typeof BetaFileMetadataSchema.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaGetFileMetadataV1FilesFileIdGet": (fileId: string, options?: typeof BetaGetFileMetadataV1FilesFileIdGetParams.Encoded | undefined) => Effect.Effect<typeof BetaFileMetadataSchema.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaDeleteFileV1FilesFileIdDelete": (fileId: string, options?: typeof BetaDeleteFileV1FilesFileIdDeleteParams.Encoded | undefined) => Effect.Effect<typeof BetaFileDeleteResponse.Type, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>;
+    readonly "betaDownloadFileV1FilesFileIdContentGet": (fileId: string, options?: typeof BetaDownloadFileV1FilesFileIdContentGetParams.Encoded | undefined) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError>;
+}
+export {};
+//# sourceMappingURL=Generated.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dts/Generated.d.ts.map b/dist/dist/dts/Generated.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..c51002312f33f27c447b013da9e00a74f6930f73
--- /dev/null
+++ b/dist/dist/dts/Generated.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Generated.d.ts","sourceRoot":"","sources":["../../src/Generated.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dist/dts/index.d.ts b/dist/dist/dts/index.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..8960456adef3639343f0be66b469661f2d93b47b
--- /dev/null
+++ b/dist/dist/dts/index.d.ts
@@ -0,0 +1,21 @@
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicClient from "./AnthropicClient.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicConfig from "./AnthropicConfig.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicLanguageModel from "./AnthropicLanguageModel.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicTokenizer from "./AnthropicTokenizer.js";
+/**
+ * @since 1.0.0
+ */
+export * as Generated from "./Generated.js";
+//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dts/index.d.ts.map b/dist/dist/dts/index.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..a9e213e6b4ad2807ae4f3a3a4b32be3e696e8ec7
--- /dev/null
+++ b/dist/dist/dts/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,KAAK,eAAe,MAAM,sBAAsB,CAAA;AAEvD;;GAEG;AACH,OAAO,KAAK,eAAe,MAAM,sBAAsB,CAAA;AAEvD;;GAEG;AACH,OAAO,KAAK,sBAAsB,MAAM,6BAA6B,CAAA;AAErE;;GAEG;AACH,OAAO,KAAK,kBAAkB,MAAM,yBAAyB,CAAA;AAE7D;;GAEG;AACH,OAAO,KAAK,SAAS,MAAM,gBAAgB,CAAA"}
\ No newline at end of file
diff --git a/dist/dist/dts/internal/utilities.d.ts b/dist/dist/dts/internal/utilities.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..78fd121274a7a45fd47da29a99ec5a06be5cf38a
--- /dev/null
+++ b/dist/dist/dts/internal/utilities.d.ts
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=utilities.d.ts.map
\ No newline at end of file
diff --git a/dist/dist/dts/internal/utilities.d.ts.map b/dist/dist/dts/internal/utilities.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..7a9c238cf441e5b451f895b373acf7bf14ceaaf5
--- /dev/null
+++ b/dist/dist/dts/internal/utilities.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"utilities.d.ts","sourceRoot":"","sources":["../../../src/internal/utilities.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/dist/dist/esm/AnthropicClient.js b/dist/dist/esm/AnthropicClient.js
new file mode 100644
index 0000000000000000000000000000000000000000..5f8c899ffe84fae965deac3cc246e244af0de2c7
--- /dev/null
+++ b/dist/dist/esm/AnthropicClient.js
@@ -0,0 +1,247 @@
+/**
+ * @since 1.0.0
+ */
+import * as AiError from "@effect/ai/AiError";
+import * as AiInput from "@effect/ai/AiInput";
+import * as AiResponse from "@effect/ai/AiResponse";
+import * as Sse from "@effect/experimental/Sse";
+import * as HttpBody from "@effect/platform/HttpBody";
+import * as HttpClient from "@effect/platform/HttpClient";
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest";
+import * as Config from "effect/Config";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import { identity } from "effect/Function";
+import * as Layer from "effect/Layer";
+import * as Option from "effect/Option";
+import * as Predicate from "effect/Predicate";
+import * as Redacted from "effect/Redacted";
+import * as Stream from "effect/Stream";
+import { AnthropicConfig } from "./AnthropicConfig.js";
+import * as Generated from "./Generated.js";
+import * as InternalUtilities from "./internal/utilities.js";
+const constDisableValidation = {
+  disableValidation: true
+};
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class AnthropicClient extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicClient")() {}
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = options => Effect.gen(function* () {
+  const httpClient = (yield* HttpClient.HttpClient).pipe(HttpClient.mapRequest(request => request.pipe(HttpClientRequest.prependUrl(options.apiUrl ?? "https://api.anthropic.com"), options.apiKey ? HttpClientRequest.setHeader("x-api-key", Redacted.value(options.apiKey)) : identity, HttpClientRequest.setHeader("anthropic-version", options.anthropicVersion ?? "2023-06-01"), HttpClientRequest.acceptJson)), options.transformClient ? options.transformClient : identity);
+  const httpClientOk = HttpClient.filterStatusOk(httpClient);
+  const client = Generated.make(httpClient, {
+    transformClient: client => AnthropicConfig.getOrUndefined.pipe(Effect.map(config => config?.transformClient ? config.transformClient(client) : client))
+  });
+  const streamRequest = request => httpClientOk.execute(request).pipe(Effect.map(r => r.stream), Stream.unwrapScoped, Stream.decodeText(), Stream.pipeThroughChannel(Sse.makeChannel()), Stream.takeUntil(event => event.event === "message_stop"), Stream.map(event => JSON.parse(event.data)));
+  const stream = request => Stream.suspend(() => {
+    const toolCalls = {};
+    let finishReason = "unknown";
+    let reasoning = undefined;
+    let usage = {
+      inputTokens: 0,
+      outputTokens: 0,
+      totalTokens: 0,
+      reasoningTokens: 0,
+      cacheReadInputTokens: 0,
+      cacheWriteInputTokens: 0
+    };
+    const metadata = {};
+    return streamRequest(HttpClientRequest.post("/v1/messages", {
+      body: HttpBody.unsafeJson({
+        ...request,
+        stream: true
+      })
+    })).pipe(Stream.filterMapEffect(chunk => {
+      const parts = [];
+      switch (chunk.type) {
+        case "message_start":
+          {
+            usage = {
+              inputTokens: chunk.message.usage.input_tokens,
+              outputTokens: chunk.message.usage.output_tokens,
+              totalTokens: chunk.message.usage.input_tokens + chunk.message.usage.output_tokens,
+              reasoningTokens: 0,
+              cacheWriteInputTokens: chunk.message.usage.cache_creation_input_tokens ?? 0,
+              cacheReadInputTokens: chunk.message.usage.cache_read_input_tokens ?? 0
+            };
+            console.error("message_start", JSON.stringify(usage, null, 2));
+            parts.push(new AiResponse.MetadataPart({
+              id: chunk.message.id,
+              model: chunk.message.model
+            }, constDisableValidation));
+            break;
+          }
+        case "message_delta":
+          {
+            usage = {
+              ...usage,
+              outputTokens: chunk.usage.output_tokens,
+              totalTokens: usage.inputTokens + chunk.usage.output_tokens
+            };
+            console.error("message_delta", JSON.stringify(usage, null, 2));
+            if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
+              metadata.stopSequence = chunk.delta.stop_sequence;
+            }
+            finishReason = InternalUtilities.resolveFinishReason(chunk.delta.stop_reason);
+            break;
+          }
+        case "message_stop":
+          {
+            parts.push(new AiResponse.FinishPart({
+              usage,
+              reason: finishReason,
+              providerMetadata: {
+                [InternalUtilities.ProviderMetadataKey]: metadata
+              }
+            }, constDisableValidation));
+            break;
+          }
+        case "content_block_start":
+          {
+            const content = chunk.content_block;
+            switch (content.type) {
+              case "text":
+                {
+                  break;
+                }
+              case "thinking":
+                {
+                  reasoning = {
+                    content: [content.thinking]
+                  };
+                  break;
+                }
+              case "tool_use":
+                {
+                  toolCalls[chunk.index] = {
+                    id: content.id,
+                    name: content.name,
+                    params: ""
+                  };
+                  break;
+                }
+              case "redacted_thinking":
+                {
+                  parts.push(new AiResponse.RedactedReasoningPart({
+                    redactedText: content.data
+                  }, constDisableValidation));
+                  break;
+                }
+            }
+            break;
+          }
+        case "content_block_delta":
+          {
+            switch (chunk.delta.type) {
+              case "text_delta":
+                {
+                  parts.push(new AiResponse.TextPart({
+                    text: chunk.delta.text
+                  }, constDisableValidation));
+                  break;
+                }
+              case "thinking_delta":
+                {
+                  if (Predicate.isNotUndefined(reasoning)) {
+                    reasoning.content.push(chunk.delta.thinking);
+                  }
+                  break;
+                }
+              case "signature_delta":
+                {
+                  if (Predicate.isNotUndefined(reasoning)) {
+                    reasoning = {
+                      ...reasoning,
+                      signature: chunk.delta.signature
+                    };
+                  }
+                  break;
+                }
+              case "input_json_delta":
+                {
+                  const tool = toolCalls[chunk.index];
+                  if (Predicate.isNotUndefined(tool)) {
+                    tool.params += chunk.delta.partial_json;
+                  }
+                  break;
+                }
+              // TODO: add support for citations (?)
+              case "citations_delta":
+                {
+                  break;
+                }
+            }
+            break;
+          }
+        case "content_block_stop":
+          {
+            if (Predicate.isNotUndefined(toolCalls[chunk.index])) {
+              const tool = toolCalls[chunk.index];
+              try {
+                // If the tool call has no parameters, the model sends an empty string.
+                const inputJson = tool.params === "" ? "{}" : tool.params;
+                const params = JSON.parse(inputJson);
+                parts.push(new AiResponse.ToolCallPart({
+                  id: AiInput.ToolCallId.make(tool.id, constDisableValidation),
+                  name: tool.name,
+                  params
+                }, constDisableValidation));
+                delete toolCalls[chunk.index];
+                // eslint-disable-next-line no-empty
+              } catch {}
+            }
+            if (Predicate.isNotUndefined(reasoning)) {
+              parts.push(new AiResponse.ReasoningPart({
+                reasoningText: reasoning.content.join(""),
+                signature: reasoning.signature
+              }, constDisableValidation));
+              reasoning = undefined;
+            }
+            break;
+          }
+        case "error":
+          {
+            return Option.some(Effect.die(new AiError.AiError({
+              module: "AnthropicClient",
+              method: "stream",
+              description: `${chunk.error.type}: ${chunk.error.message}`
+            })));
+          }
+      }
+      return parts.length === 0 ? Option.none() : Option.some(Effect.succeed(AiResponse.AiResponse.make({
+        parts
+      }, constDisableValidation)));
+    }));
+  });
+  return AnthropicClient.of({
+    client,
+    streamRequest,
+    stream
+  });
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = options => Layer.effect(AnthropicClient, make(options));
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layerConfig = options => {
+  const {
+    transformClient,
+    ...configs
+  } = options;
+  return Config.all(configs).pipe(Effect.flatMap(configs => make({
+    ...configs,
+    transformClient
+  })), Layer.effect(AnthropicClient));
+};
+//# sourceMappingURL=AnthropicClient.js.map
\ No newline at end of file
diff --git a/dist/dist/esm/AnthropicClient.js.map b/dist/dist/esm/AnthropicClient.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..8a01c73fbf7691b245650445dfbd458f0b8222dd
--- /dev/null
+++ b/dist/dist/esm/AnthropicClient.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicClient.js","names":["AiError","AiInput","AiResponse","Sse","HttpBody","HttpClient","HttpClientRequest","Config","Context","Effect","identity","Layer","Option","Predicate","Redacted","Stream","AnthropicConfig","Generated","InternalUtilities","constDisableValidation","disableValidation","AnthropicClient","Tag","make","options","gen","httpClient","pipe","mapRequest","request","prependUrl","apiUrl","apiKey","setHeader","value","anthropicVersion","acceptJson","transformClient","httpClientOk","filterStatusOk","client","getOrUndefined","map","config","streamRequest","execute","r","stream","unwrapScoped","decodeText","pipeThroughChannel","makeChannel","takeUntil","event","JSON","parse","data","suspend","toolCalls","finishReason","reasoning","undefined","usage","inputTokens","outputTokens","totalTokens","reasoningTokens","cacheReadInputTokens","cacheWriteInputTokens","metadata","post","body","unsafeJson","filterMapEffect","chunk","parts","type","message","input_tokens","output_tokens","cache_creation_input_tokens","cache_read_input_tokens","console","error","stringify","push","MetadataPart","id","model","isNotNullable","delta","stop_sequence","stopSequence","resolveFinishReason","stop_reason","FinishPart","reason","providerMetadata","ProviderMetadataKey","content","content_block","thinking","index","name","params","RedactedReasoningPart","redactedText","TextPart","text","isNotUndefined","signature","tool","partial_json","inputJson","ToolCallPart","ToolCallId","ReasoningPart","reasoningText","join","some","die","module","method","description","length","none","succeed","of","layer","effect","layerConfig","configs","all","flatMap"],"sources":["../../src/AnthropicClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/esm/AnthropicConfig.js b/dist/dist/esm/AnthropicConfig.js
new file mode 100644
index 0000000000000000000000000000000000000000..3967b0120157caf861750f8abefa3182ae001c90
--- /dev/null
+++ b/dist/dist/esm/AnthropicConfig.js
@@ -0,0 +1,22 @@
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import { dual } from "effect/Function";
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class AnthropicConfig extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicConfig")() {
+  /**
+   * @since 1.0.0
+   */
+  static getOrUndefined = /*#__PURE__*/Effect.map(/*#__PURE__*/Effect.context(), context => context.unsafeMap.get(AnthropicConfig.key));
+}
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export const withClientTransform = /*#__PURE__*/dual(2, (self, transformClient) => Effect.flatMap(AnthropicConfig.getOrUndefined, config => Effect.provideService(self, AnthropicConfig, {
+  ...config,
+  transformClient
+})));
+//# sourceMappingURL=AnthropicConfig.js.map
\ No newline at end of file
diff --git a/dist/dist/esm/AnthropicConfig.js.map b/dist/dist/esm/AnthropicConfig.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..0941473279b56a21778d44493694b1771d2960ba
--- /dev/null
+++ b/dist/dist/esm/AnthropicConfig.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicConfig.js","names":["Context","Effect","dual","AnthropicConfig","Tag","getOrUndefined","map","context","unsafeMap","get","key","withClientTransform","self","transformClient","flatMap","config","provideService"],"sources":["../../src/AnthropicConfig.ts"],"sourcesContent":[null],"mappings":"AAIA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AAEtC;;;;AAIA,OAAM,MAAOC,eAAgB,sBAAQH,OAAO,CAACI,GAAG,CAAC,sCAAsC,CAAC,EAGrF;EACD;;;EAGA,OAAgBC,cAAc,gBAA8DJ,MAAM,CAACK,GAAG,cACpGL,MAAM,CAACM,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACC,GAAG,CAACN,eAAe,CAACO,GAAG,CAAC,CACxD;;AAgBH;;;;AAIA,OAAO,MAAMC,mBAAmB,gBAG5BT,IAAI,CAIN,CAAC,EACD,CAACU,IAAI,EAAEC,eAAe,KACpBZ,MAAM,CAACa,OAAO,CACZX,eAAe,CAACE,cAAc,EAC7BU,MAAM,IAAKd,MAAM,CAACe,cAAc,CAACJ,IAAI,EAAET,eAAe,EAAE;EAAE,GAAGY,MAAM;EAAEF;AAAe,CAAE,CAAC,CACzF,CACJ","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/esm/AnthropicLanguageModel.js b/dist/dist/esm/AnthropicLanguageModel.js
new file mode 100644
index 0000000000000000000000000000000000000000..1197e9f309b7482861ec7ea89e40d66431776089
--- /dev/null
+++ b/dist/dist/esm/AnthropicLanguageModel.js
@@ -0,0 +1,482 @@
+/**
+ * @since 1.0.0
+ */
+import { AiError } from "@effect/ai/AiError";
+import * as AiLanguageModel from "@effect/ai/AiLanguageModel";
+import * as AiModel from "@effect/ai/AiModel";
+import * as AiResponse from "@effect/ai/AiResponse";
+import { addGenAIAnnotations } from "@effect/ai/AiTelemetry";
+import * as Arr from "effect/Array";
+import * as Context from "effect/Context";
+import * as Effect from "effect/Effect";
+import * as Encoding from "effect/Encoding";
+import { dual } from "effect/Function";
+import * as Layer from "effect/Layer";
+import * as Option from "effect/Option";
+import * as Predicate from "effect/Predicate";
+import * as Stream from "effect/Stream";
+import { AnthropicClient } from "./AnthropicClient.js";
+import * as AnthropicTokenizer from "./AnthropicTokenizer.js";
+import * as InternalUtilities from "./internal/utilities.js";
+const constDisableValidation = {
+  disableValidation: true
+};
+// =============================================================================
+// Configuration
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class Config extends /*#__PURE__*/Context.Tag("@effect/ai-anthropic/AnthropicLanguageModel/Config")() {
+  /**
+   * @since 1.0.0
+   */
+  static getOrUndefined = /*#__PURE__*/Effect.map(/*#__PURE__*/Effect.context(), context => context.unsafeMap.get(Config.key));
+}
+// =============================================================================
+// Anthropic Provider Metadata
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class ProviderMetadata extends /*#__PURE__*/Context.Tag(InternalUtilities.ProviderMetadataKey)() {}
+// =============================================================================
+// Anthropic Language Model
+// =============================================================================
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export const model = (model, config) => AiModel.make(layer({
+  model,
+  config
+}));
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export const modelWithTokenizer = (model, config) => AiModel.make(layerWithTokenizer({
+  model,
+  config
+}));
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = /*#__PURE__*/Effect.fnUntraced(function* (options) {
+  const client = yield* AnthropicClient;
+  const makeRequest = Effect.fnUntraced(function* (method, {
+    prompt,
+    system,
+    toolChoice,
+    tools
+  }) {
+    const context = yield* Effect.context();
+    const useStructured = tools.length === 1 && tools[0].structured;
+    let tool_choice = undefined;
+    if (useStructured) {
+      tool_choice = {
+        type: "tool",
+        name: tools[0].name
+      };
+    } else if (tools.length > 0) {
+      if (toolChoice === "required") {
+        tool_choice = {
+          type: "any"
+        };
+      } else if (typeof toolChoice === "object") {
+        tool_choice = {
+          type: "tool",
+          name: toolChoice.tool
+        };
+      } else {
+        tool_choice = {
+          type: toolChoice
+        };
+      }
+    }
+    const messages = yield* makeMessages(method, prompt);
+    return {
+      model: options.model,
+      max_tokens: 4096,
+      ...options.config,
+      ...context.unsafeMap.get(Config.key),
+      // TODO: re-evaluate a better way to do this
+      system: Option.getOrUndefined(system),
+      messages,
+      tools: tools.length === 0 ? undefined : tools.map(tool => ({
+        name: tool.name,
+        description: tool.description,
+        input_schema: tool.parameters
+      })),
+      tool_choice
+    };
+  });
+  return yield* AiLanguageModel.make({
+    generateText: Effect.fnUntraced(function* (options) {
+      const request = yield* makeRequest("generateText", options);
+      annotateRequest(options.span, request);
+      const rawResponse = yield* client.client.messagesPost({
+        params: {},
+        payload: request
+      });
+      annotateChatResponse(options.span, rawResponse);
+      const response = yield* makeResponse(rawResponse);
+      return response;
+    }, Effect.catchAll(cause => AiError.is(cause) ? cause : new AiError({
+      module: "AnthropicLanguageModel",
+      method: "generateText",
+      description: "An error occurred",
+      cause
+    }))),
+    streamText(options) {
+      return makeRequest("streamText", options).pipe(Effect.tap(request => annotateRequest(options.span, request)), Effect.map(client.stream), Stream.unwrap, Stream.map(response => {
+        annotateStreamResponse(options.span, response);
+        return response;
+      }), Stream.catchAll(cause => AiError.is(cause) ? Effect.fail(cause) : Effect.fail(new AiError({
+        module: "AnthropicLanguageModel",
+        method: "streamText",
+        description: "An error occurred",
+        cause
+      }))));
+    }
+  });
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = options => Layer.effect(AiLanguageModel.AiLanguageModel, make({
+  model: options.model,
+  config: options.config
+}));
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layerWithTokenizer = options => Layer.merge(layer(options), AnthropicTokenizer.layer);
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export const withConfigOverride = /*#__PURE__*/dual(2, (self, overrides) => Effect.flatMap(Config.getOrUndefined, config => Effect.provideService(self, Config, {
+  ...config,
+  ...overrides
+})));
+const groupMessages = prompt => {
+  const messages = [];
+  let current = undefined;
+  for (const message of prompt.messages) {
+    switch (message._tag) {
+      case "AssistantMessage":
+        {
+          if (current?.type !== "assistant") {
+            current = {
+              type: "assistant",
+              messages: []
+            };
+            messages.push(current);
+          }
+          current.messages.push(message);
+          break;
+        }
+      case "ToolMessage":
+      case "UserMessage":
+        {
+          if (current?.type !== "user") {
+            current = {
+              type: "user",
+              messages: []
+            };
+            messages.push(current);
+          }
+          current.messages.push(message);
+          break;
+        }
+    }
+  }
+  return messages;
+};
+const makeMessages = /*#__PURE__*/Effect.fnUntraced(function* (method, prompt) {
+  const messages = [];
+  const groups = groupMessages(prompt);
+  for (let i = 0; i < groups.length; i++) {
+    const group = groups[i];
+    const isLastGroup = i === groups.length - 1;
+    switch (group.type) {
+      case "assistant":
+        {
+          const content = [];
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j];
+            const isLastMessage = j === group.messages.length - 1;
+            for (let k = 0; k < message.parts.length; k++) {
+              const part = message.parts[k];
+              const isLastPart = k === message.parts.length - 1;
+              switch (part._tag) {
+                case "ReasoningPart":
+                  {
+                    content.push({
+                      type: "thinking",
+                      thinking: part.reasoningText,
+                      signature: part.signature
+                    });
+                    break;
+                  }
+                case "RedactedReasoningPart":
+                  {
+                    content.push({
+                      type: "redacted_thinking",
+                      data: part.redactedText
+                    });
+                    break;
+                  }
+                case "TextPart":
+                  {
+                    content.push({
+                      type: "text",
+                      text:
+                      // Anthropic does not allow trailing whitespace in assistant
+                      // content blocks
+                      isLastGroup && isLastMessage && isLastPart ? part.text.trim() : part.text
+                    });
+                    break;
+                  }
+                case "ToolCallPart":
+                  {
+                    content.push({
+                      type: "tool_use",
+                      id: part.id,
+                      name: part.name,
+                      input: part.params
+                    });
+                    break;
+                  }
+              }
+            }
+          }
+          messages.push({
+            role: "assistant",
+            content
+          });
+          break;
+        }
+      case "user":
+        {
+          const content = [];
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j];
+            switch (message._tag) {
+              case "ToolMessage":
+                {
+                  for (let k = 0; k < message.parts.length; k++) {
+                    const part = message.parts[k];
+                    // TODO: support advanced tool result content parts
+                    content.push({
+                      type: "tool_result",
+                      tool_use_id: part.id,
+                      content: JSON.stringify(part.result)
+                    });
+                  }
+                  break;
+                }
+              case "UserMessage":
+                {
+                  for (let k = 0; k < message.parts.length; k++) {
+                    const part = message.parts[k];
+                    switch (part._tag) {
+                      case "FilePart":
+                        {
+                          if (Predicate.isUndefined(part.mediaType) || part.mediaType !== "application/pdf") {
+                            return yield* new AiError({
+                              module: "AnthropicLanguageModel",
+                              method,
+                              description: "AnthropicLanguageModel only supports PDF file inputs"
+                            });
+                          }
+                          content.push({
+                            type: "document",
+                            source: {
+                              type: "base64",
+                              media_type: "application/pdf",
+                              data: Encoding.encodeBase64(part.data)
+                            }
+                          });
+                          break;
+                        }
+                      case "FileUrlPart":
+                        {
+                          content.push({
+                            type: "document",
+                            source: {
+                              type: "url",
+                              url: part.url.toString()
+                            }
+                          });
+                          break;
+                        }
+                      case "TextPart":
+                        {
+                          content.push({
+                            type: "text",
+                            text: part.text
+                          });
+                          break;
+                        }
+                      case "ImagePart":
+                        {
+                          content.push({
+                            type: "image",
+                            source: {
+                              type: "base64",
+                              media_type: part.mediaType ?? "image/jpeg",
+                              data: Encoding.encodeBase64(part.data)
+                            }
+                          });
+                          break;
+                        }
+                      case "ImageUrlPart":
+                        {
+                          content.push({
+                            type: "image",
+                            source: {
+                              type: "url",
+                              url: part.url.toString()
+                            }
+                          });
+                          break;
+                        }
+                    }
+                  }
+                  break;
+                }
+            }
+          }
+          messages.push({
+            role: "user",
+            content
+          });
+          break;
+        }
+    }
+  }
+  if (Arr.isNonEmptyReadonlyArray(messages)) {
+    return messages;
+  }
+  return yield* new AiError({
+    module: "AnthropicLanguageModel",
+    method,
+    description: "Prompt contained no messages"
+  });
+});
+const makeResponse = /*#__PURE__*/Effect.fnUntraced(function* (response) {
+  const parts = [];
+  parts.push(new AiResponse.MetadataPart({
+    id: response.id,
+    model: response.model
+  }, constDisableValidation));
+  for (const part of response.content) {
+    switch (part.type) {
+      case "text":
+        {
+          parts.push(new AiResponse.TextPart({
+            text: part.text
+          }, constDisableValidation));
+          break;
+        }
+      case "tool_use":
+        {
+          parts.push(AiResponse.ToolCallPart.fromUnknown({
+            id: part.id,
+            name: part.name,
+            params: part.input
+          }));
+          break;
+        }
+      case "thinking":
+        {
+          parts.push(new AiResponse.ReasoningPart({
+            reasoningText: part.thinking,
+            signature: part.signature
+          }, constDisableValidation));
+          break;
+        }
+      case "redacted_thinking":
+        {
+          parts.push(new AiResponse.RedactedReasoningPart({
+            redactedText: part.data
+          }, constDisableValidation));
+          break;
+        }
+    }
+  }
+  const metadata = {};
+  if (response.stop_sequence !== null) {
+    metadata.stopSequence = response.stop_sequence;
+  }
+  parts.push(new AiResponse.FinishPart({
+    // Anthropic always returns a non-null `stop_reason` for non-streaming responses
+    reason: InternalUtilities.resolveFinishReason(response.stop_reason),
+    usage: new AiResponse.Usage({
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens,
+      totalTokens: response.usage.input_tokens + response.usage.output_tokens,
+      reasoningTokens: 0,
+      cacheReadInputTokens: response.usage.cache_read_input_tokens ?? 0,
+      cacheWriteInputTokens: response.usage.cache_creation_input_tokens ?? 0
+    }),
+    providerMetadata: {
+      [InternalUtilities.ProviderMetadataKey]: metadata
+    }
+  }, constDisableValidation));
+  return new AiResponse.AiResponse({
+    parts
+  }, constDisableValidation);
+});
+const annotateRequest = (span, request) => {
+  addGenAIAnnotations(span, {
+    system: "anthropic",
+    operation: {
+      name: "chat"
+    },
+    request: {
+      model: request.model,
+      temperature: request.temperature,
+      topK: request.top_k,
+      topP: request.top_p,
+      maxTokens: request.max_tokens,
+      stopSequences: Arr.ensure(request.stop_sequences).filter(Predicate.isNotNullable)
+    }
+  });
+};
+const annotateChatResponse = (span, response) => {
+  addGenAIAnnotations(span, {
+    response: {
+      id: response.id,
+      model: response.model,
+      finishReasons: response.stop_reason ? [response.stop_reason] : undefined
+    },
+    usage: {
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens
+    }
+  });
+};
+const annotateStreamResponse = (span, response) => {
+  const metadataPart = response.parts.find(part => part._tag === "MetadataPart");
+  const finishPart = response.parts.find(part => part._tag === "FinishPart");
+  addGenAIAnnotations(span, {
+    response: {
+      id: metadataPart?.id,
+      model: metadataPart?.model,
+      finishReasons: finishPart?.reason ? [finishPart.reason] : undefined
+    },
+    usage: {
+      inputTokens: finishPart?.usage.inputTokens,
+      outputTokens: finishPart?.usage.outputTokens
+    }
+  });
+};
+//# sourceMappingURL=AnthropicLanguageModel.js.map
\ No newline at end of file
diff --git a/dist/dist/esm/AnthropicLanguageModel.js.map b/dist/dist/esm/AnthropicLanguageModel.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..1396cf41f39bcd1a5fcca8b220b7ee4df6aeac45
--- /dev/null
+++ b/dist/dist/esm/AnthropicLanguageModel.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicLanguageModel.js","names":["AiError","AiLanguageModel","AiModel","AiResponse","addGenAIAnnotations","Arr","Context","Effect","Encoding","dual","Layer","Option","Predicate","Stream","AnthropicClient","AnthropicTokenizer","InternalUtilities","constDisableValidation","disableValidation","Config","Tag","getOrUndefined","map","context","unsafeMap","get","key","ProviderMetadata","ProviderMetadataKey","model","config","make","layer","modelWithTokenizer","layerWithTokenizer","fnUntraced","options","client","makeRequest","method","prompt","system","toolChoice","tools","useStructured","length","structured","tool_choice","undefined","type","name","tool","messages","makeMessages","max_tokens","description","input_schema","parameters","generateText","request","annotateRequest","span","rawResponse","messagesPost","params","payload","annotateChatResponse","response","makeResponse","catchAll","cause","is","module","streamText","pipe","tap","stream","unwrap","annotateStreamResponse","fail","effect","merge","withConfigOverride","self","overrides","flatMap","provideService","groupMessages","current","message","_tag","push","groups","i","group","isLastGroup","content","j","isLastMessage","k","parts","part","isLastPart","thinking","reasoningText","signature","data","redactedText","text","trim","id","input","role","tool_use_id","JSON","stringify","result","isUndefined","mediaType","source","media_type","encodeBase64","url","toString","isNonEmptyReadonlyArray","MetadataPart","TextPart","ToolCallPart","fromUnknown","ReasoningPart","RedactedReasoningPart","metadata","stop_sequence","stopSequence","FinishPart","reason","resolveFinishReason","stop_reason","usage","Usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","reasoningTokens","cacheReadInputTokens","cache_read_input_tokens","cacheWriteInputTokens","cache_creation_input_tokens","providerMetadata","operation","temperature","topK","top_k","topP","top_p","maxTokens","stopSequences","ensure","stop_sequences","filter","isNotNullable","finishReasons","metadataPart","find","finishPart"],"sources":["../../src/AnthropicLanguageModel.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/esm/AnthropicTokenizer.js b/dist/dist/esm/AnthropicTokenizer.js
new file mode 100644
index 0000000000000000000000000000000000000000..4bad1bc7893402c25c6e039daf4d22dd3d5fd465
--- /dev/null
+++ b/dist/dist/esm/AnthropicTokenizer.js
@@ -0,0 +1,42 @@
+/**
+ * @since 1.0.0
+ */
+import { getTokenizer } from "@anthropic-ai/tokenizer";
+import { AiError } from "@effect/ai/AiError";
+import * as Tokenizer from "@effect/ai/Tokenizer";
+import * as Arr from "effect/Array";
+import * as Effect from "effect/Effect";
+import * as Layer from "effect/Layer";
+import * as Option from "effect/Option";
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = /*#__PURE__*/Tokenizer.make({
+  tokenize(input) {
+    return Effect.try({
+      try: () => {
+        const tokenizer = getTokenizer();
+        const text = Arr.flatMap(input.messages, message => Arr.filterMap(message.parts, part => {
+          if (part._tag === "FilePart" || part._tag === "FileUrlPart" || part._tag === "ImagePart" || part._tag === "ImageUrlPart" || part._tag === "ReasoningPart" || part._tag === "RedactedReasoningPart") return Option.none();
+          return Option.some(part._tag === "TextPart" ? part.text : JSON.stringify(part._tag === "ToolCallPart" ? part.params : part.result));
+        })).join("");
+        const encoded = tokenizer.encode(text.normalize("NFKC"), "all");
+        tokenizer.free();
+        return Array.from(encoded);
+      },
+      catch: cause => new AiError({
+        module: "AnthropicTokenizer",
+        method: "tokenize",
+        description: "Could not tokenize",
+        cause
+      })
+    });
+  }
+});
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = /*#__PURE__*/Layer.succeed(Tokenizer.Tokenizer, make);
+//# sourceMappingURL=AnthropicTokenizer.js.map
\ No newline at end of file
diff --git a/dist/dist/esm/AnthropicTokenizer.js.map b/dist/dist/esm/AnthropicTokenizer.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..b8e62a51de7c8f290b6ff49ab2b22659c02a6870
--- /dev/null
+++ b/dist/dist/esm/AnthropicTokenizer.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AnthropicTokenizer.js","names":["getTokenizer","AiError","Tokenizer","Arr","Effect","Layer","Option","make","tokenize","input","try","tokenizer","text","flatMap","messages","message","filterMap","parts","part","_tag","none","some","JSON","stringify","params","result","join","encoded","encode","normalize","free","Array","from","catch","cause","module","method","description","layer","succeed"],"sources":["../../src/AnthropicTokenizer.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAGA,SAASA,YAAY,QAAQ,yBAAyB;AACtD,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,OAAO,KAAKC,SAAS,MAAM,sBAAsB;AACjD,OAAO,KAAKC,GAAG,MAAM,cAAc;AACnC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,MAAM,MAAM,eAAe;AAEvC;;;;AAIA,OAAO,MAAMC,IAAI,gBAAGL,SAAS,CAACK,IAAI,CAAC;EACjCC,QAAQA,CAACC,KAAK;IACZ,OAAOL,MAAM,CAACM,GAAG,CAAC;MAChBA,GAAG,EAAEA,CAAA,KAAK;QACR,MAAMC,SAAS,GAAGX,YAAY,EAAE;QAChC,MAAMY,IAAI,GAAGT,GAAG,CAACU,OAAO,CAACJ,KAAK,CAACK,QAAQ,EAAGC,OAAO,IAC/CZ,GAAG,CAACa,SAAS,CACXD,OAAO,CAACE,KAIP,EACAC,IAAI,IAAI;UACP,IACEA,IAAI,CAACC,IAAI,KAAK,UAAU,IACxBD,IAAI,CAACC,IAAI,KAAK,aAAa,IAC3BD,IAAI,CAACC,IAAI,KAAK,WAAW,IACzBD,IAAI,CAACC,IAAI,KAAK,cAAc,IAC5BD,IAAI,CAACC,IAAI,KAAK,eAAe,IAC7BD,IAAI,CAACC,IAAI,KAAK,uBAAuB,EACrC,OAAOb,MAAM,CAACc,IAAI,EAAE;UACtB,OAAOd,MAAM,CAACe,IAAI,CAChBH,IAAI,CAACC,IAAI,KAAK,UAAU,GACpBD,IAAI,CAACN,IAAI,GACTU,IAAI,CAACC,SAAS,CACdL,IAAI,CAACC,IAAI,KAAK,cAAc,GACxBD,IAAI,CAACM,MAAM,GACbN,IAAI,CAACO,MAAM,CACd,CACJ;QACH,CAAC,CACF,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;QACb,MAAMC,OAAO,GAAGhB,SAAS,CAACiB,MAAM,CAAChB,IAAI,CAACiB,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;QAC/DlB,SAAS,CAACmB,IAAI,EAAE;QAChB,OAAOC,KAAK,CAACC,IAAI,CAACL,OAAO,CAAC;MAC5B,CAAC;MACDM,KAAK,EAAGC,KAAK,IACX,IAAIjC,OAAO,CAAC;QACVkC,MAAM,EAAE,oBAAoB;QAC5BC,MAAM,EAAE,UAAU;QAClBC,WAAW,EAAE,oBAAoB;QACjCH;OACD;KACJ,CAAC;EACJ;CACD,CAAC;AAEF;;;;AAIA,OAAO,MAAMI,KAAK,gBAAqCjC,KAAK,CAACkC,OAAO,CAACrC,SAAS,CAACA,SAAS,EAAEK,IAAI,CAAC","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/esm/Generated.js b/dist/dist/esm/Generated.js
new file mode 100644
index 0000000000000000000000000000000000000000..5614db0b21ccd52b118392e977f89cc2f51cd966
--- /dev/null
+++ b/dist/dist/esm/Generated.js
@@ -0,0 +1,2168 @@
+import * as HttpClientError from "@effect/platform/HttpClientError";
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest";
+import * as HttpClientResponse from "@effect/platform/HttpClientResponse";
+import * as Effect from "effect/Effect";
+import * as S from "effect/Schema";
+export class MessagesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class Model extends /*#__PURE__*/S.Literal("claude-3-7-sonnet-latest", "claude-3-7-sonnet-20250219", "claude-3-5-haiku-latest", "claude-3-5-haiku-20241022", "claude-sonnet-4-20250514", "claude-sonnet-4-0", "claude-4-sonnet-20250514", "claude-3-5-sonnet-latest", "claude-3-5-sonnet-20241022", "claude-3-5-sonnet-20240620", "claude-opus-4-0", "claude-opus-4-20250514", "claude-4-opus-20250514", "claude-3-opus-latest", "claude-3-opus-20240229", "claude-3-sonnet-20240229", "claude-3-haiku-20240307", "claude-2.1", "claude-2.0") {}
+export class CacheControlEphemeralType extends /*#__PURE__*/S.Literal("ephemeral") {}
+export class CacheControlEphemeral extends /*#__PURE__*/S.Struct({
+  "type": CacheControlEphemeralType
+}) {}
+export class RequestServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search") {}
+export class RequestServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+export class RequestServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": RequestServerToolUseBlockName,
+  "type": RequestServerToolUseBlockType
+}) {}
+export class RequestWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+export class RequestWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "title": S.String,
+  "type": RequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+export class WebSearchToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long") {}
+export class RequestWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+export class RequestWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": RequestWebSearchToolResultErrorType
+}) {}
+export class RequestWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+export class RequestWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(/*#__PURE__*/S.Array(RequestWebSearchResultBlock), RequestWebSearchToolResultError),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": RequestWebSearchToolResultBlockType
+}) {}
+export class RequestCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+export class RequestCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": RequestCharLocationCitationType
+}) {}
+export class RequestPageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+export class RequestPageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": RequestPageLocationCitationType
+}) {}
+export class RequestContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+export class RequestContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": RequestContentBlockLocationCitationType
+}) {}
+export class RequestWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+export class RequestWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "type": RequestWebSearchResultLocationCitationType,
+  "url": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(2048))
+}) {}
+export class RequestTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+export class RequestTextBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestCharLocationCitation, RequestPageLocationCitation, RequestContentBlockLocationCitation, RequestWebSearchResultLocationCitation)), S.Null), {
+    nullable: true
+  }),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": RequestTextBlockType
+}) {}
+export class Base64ImageSourceMediaType extends /*#__PURE__*/S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+export class Base64ImageSourceType extends /*#__PURE__*/S.Literal("base64") {}
+export class Base64ImageSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": Base64ImageSourceMediaType,
+  "type": Base64ImageSourceType
+}) {}
+export class URLImageSourceType extends /*#__PURE__*/S.Literal("url") {}
+export class URLImageSource extends /*#__PURE__*/S.Struct({
+  "type": URLImageSourceType,
+  "url": S.String
+}) {}
+export class RequestImageBlockType extends /*#__PURE__*/S.Literal("image") {}
+export class RequestImageBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(Base64ImageSource, URLImageSource),
+  "type": RequestImageBlockType
+}) {}
+export class RequestToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+export class RequestToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(200)),
+  "type": RequestToolUseBlockType
+}) {}
+export class RequestToolResultBlockType extends /*#__PURE__*/S.Literal("tool_result") {}
+export class RequestToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestTextBlock, RequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": RequestToolResultBlockType
+}) {}
+export class RequestCitationsConfig extends /*#__PURE__*/S.Struct({
+  "enabled": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+export class Base64PDFSourceMediaType extends /*#__PURE__*/S.Literal("application/pdf") {}
+export class Base64PDFSourceType extends /*#__PURE__*/S.Literal("base64") {}
+export class Base64PDFSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": Base64PDFSourceMediaType,
+  "type": Base64PDFSourceType
+}) {}
+export class PlainTextSourceMediaType extends /*#__PURE__*/S.Literal("text/plain") {}
+export class PlainTextSourceType extends /*#__PURE__*/S.Literal("text") {}
+export class PlainTextSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": PlainTextSourceMediaType,
+  "type": PlainTextSourceType
+}) {}
+export class ContentBlockSourceType extends /*#__PURE__*/S.Literal("content") {}
+export class ContentBlockSource extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(RequestTextBlock, RequestImageBlock))),
+  "type": ContentBlockSourceType
+}) {}
+export class URLPDFSourceType extends /*#__PURE__*/S.Literal("url") {}
+export class URLPDFSource extends /*#__PURE__*/S.Struct({
+  "type": URLPDFSourceType,
+  "url": S.String
+}) {}
+export class RequestDocumentBlockType extends /*#__PURE__*/S.Literal("document") {}
+export class RequestDocumentBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(RequestCitationsConfig, {
+    nullable: true
+  }),
+  "context": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)), S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(Base64PDFSource, PlainTextSource, ContentBlockSource, URLPDFSource),
+  "title": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)), S.Null), {
+    nullable: true
+  }),
+  "type": RequestDocumentBlockType
+}) {}
+export class RequestThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+export class RequestThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": RequestThinkingBlockType
+}) {}
+export class RequestRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+export class RequestRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": RequestRedactedThinkingBlockType
+}) {}
+export class InputContentBlock extends /*#__PURE__*/S.Union(RequestServerToolUseBlock, RequestWebSearchToolResultBlock, RequestTextBlock, RequestImageBlock, RequestToolUseBlock, RequestToolResultBlock, RequestDocumentBlock, RequestThinkingBlock, RequestRedactedThinkingBlock) {}
+export class InputMessageRole extends /*#__PURE__*/S.Literal("user", "assistant") {}
+export class InputMessage extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(InputContentBlock)),
+  "role": InputMessageRole
+}) {}
+export class Metadata extends /*#__PURE__*/S.Struct({
+  "user_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.maxLength(256)), S.Null), {
+    nullable: true
+  })
+}) {}
+export class CreateMessageParamsServiceTier extends /*#__PURE__*/S.Literal("auto", "standard_only") {}
+export class ThinkingConfigEnabledType extends /*#__PURE__*/S.Literal("enabled") {}
+export class ThinkingConfigEnabled extends /*#__PURE__*/S.Struct({
+  "budget_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1024)),
+  "type": ThinkingConfigEnabledType
+}) {}
+export class ThinkingConfigDisabledType extends /*#__PURE__*/S.Literal("disabled") {}
+export class ThinkingConfigDisabled extends /*#__PURE__*/S.Struct({
+  "type": ThinkingConfigDisabledType
+}) {}
+export class ThinkingConfigParam extends /*#__PURE__*/S.Union(ThinkingConfigEnabled, ThinkingConfigDisabled) {}
+export class ToolChoiceAutoType extends /*#__PURE__*/S.Literal("auto") {}
+export class ToolChoiceAuto extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": ToolChoiceAutoType
+}) {}
+export class ToolChoiceAnyType extends /*#__PURE__*/S.Literal("any") {}
+export class ToolChoiceAny extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": ToolChoiceAnyType
+}) {}
+export class ToolChoiceToolType extends /*#__PURE__*/S.Literal("tool") {}
+export class ToolChoiceTool extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "name": S.String,
+  "type": ToolChoiceToolType
+}) {}
+export class ToolChoiceNoneType extends /*#__PURE__*/S.Literal("none") {}
+export class ToolChoiceNone extends /*#__PURE__*/S.Struct({
+  "type": ToolChoiceNoneType
+}) {}
+export class ToolChoice extends /*#__PURE__*/S.Union(ToolChoiceAuto, ToolChoiceAny, ToolChoiceTool, ToolChoiceNone) {}
+export class ToolTypeEnum extends /*#__PURE__*/S.Literal("custom") {}
+export class InputSchemaType extends /*#__PURE__*/S.Literal("object") {}
+export class InputSchema extends /*#__PURE__*/S.Struct({
+  "properties": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }), S.Null), {
+    nullable: true
+  }),
+  "required": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "type": InputSchemaType
+}) {}
+export class Tool extends /*#__PURE__*/S.Struct({
+  "type": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Null, ToolTypeEnum), {
+    nullable: true
+  }),
+  "description": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": InputSchema,
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BashTool20250124Name extends /*#__PURE__*/S.Literal("bash") {}
+export class BashTool20250124Type extends /*#__PURE__*/S.Literal("bash_20250124") {}
+export class BashTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BashTool20250124Name,
+  "type": BashTool20250124Type
+}) {}
+export class TextEditor20250124Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+export class TextEditor20250124Type extends /*#__PURE__*/S.Literal("text_editor_20250124") {}
+export class TextEditor20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": TextEditor20250124Name,
+  "type": TextEditor20250124Type
+}) {}
+export class TextEditor20250429Name extends /*#__PURE__*/S.Literal("str_replace_based_edit_tool") {}
+export class TextEditor20250429Type extends /*#__PURE__*/S.Literal("text_editor_20250429") {}
+export class TextEditor20250429 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": TextEditor20250429Name,
+  "type": TextEditor20250429Type
+}) {}
+export class WebSearchTool20250305Name extends /*#__PURE__*/S.Literal("web_search") {}
+export class WebSearchTool20250305Type extends /*#__PURE__*/S.Literal("web_search_20250305") {}
+export class UserLocationType extends /*#__PURE__*/S.Literal("approximate") {}
+export class UserLocation extends /*#__PURE__*/S.Struct({
+  "city": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "country": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(2), /*#__PURE__*/S.maxLength(2)), S.Null), {
+    nullable: true
+  }),
+  "region": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "timezone": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "type": UserLocationType
+}) {}
+export class WebSearchTool20250305 extends /*#__PURE__*/S.Struct({
+  "allowed_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "blocked_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(CacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "max_uses": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThan(0)), S.Null), {
+    nullable: true
+  }),
+  "name": WebSearchTool20250305Name,
+  "type": WebSearchTool20250305Type,
+  "user_location": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(UserLocation, S.Null), {
+    nullable: true
+  })
+}) {}
+export class CreateMessageParams extends /*#__PURE__*/S.Class("CreateMessageParams")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "messages": /*#__PURE__*/S.Array(InputMessage),
+  "max_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "metadata": /*#__PURE__*/S.optionalWith(Metadata, {
+    nullable: true
+  }),
+  "service_tier": /*#__PURE__*/S.optionalWith(CreateMessageParamsServiceTier, {
+    nullable: true
+  }),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(RequestTextBlock)), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(ThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(ToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  })
+}) {}
+export class MessageType extends /*#__PURE__*/S.Literal("message") {}
+export class MessageRole extends /*#__PURE__*/S.Literal("assistant") {}
+export class ResponseCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+export class ResponseCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": ResponseCharLocationCitationType
+}) {}
+export class ResponsePageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+export class ResponsePageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": ResponsePageLocationCitationType
+}) {}
+export class ResponseContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+export class ResponseContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": ResponseContentBlockLocationCitationType
+}) {}
+export class ResponseWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+export class ResponseWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": ResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+export class ResponseTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+export class ResponseTextBlock extends /*#__PURE__*/S.Struct({
+  "citations": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(ResponseCharLocationCitation, ResponsePageLocationCitation, ResponseContentBlockLocationCitation, ResponseWebSearchResultLocationCitation)))),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(0), /*#__PURE__*/S.maxLength(5000000)),
+  "type": ResponseTextBlockType
+}) {}
+export class ResponseToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+export class ResponseToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": ResponseToolUseBlockType
+}) {}
+export class ResponseServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search") {}
+export class ResponseServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+export class ResponseServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": ResponseServerToolUseBlockName,
+  "type": ResponseServerToolUseBlockType
+}) {}
+export class ResponseWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+export class ResponseWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": ResponseWebSearchToolResultErrorType
+}) {}
+export class ResponseWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+export class ResponseWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": ResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+export class ResponseWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+export class ResponseWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(ResponseWebSearchToolResultError, /*#__PURE__*/S.Array(ResponseWebSearchResultBlock)),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": ResponseWebSearchToolResultBlockType
+}) {}
+export class ResponseThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+export class ResponseThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": ResponseThinkingBlockType
+}) {}
+export class ResponseRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+export class ResponseRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": ResponseRedactedThinkingBlockType
+}) {}
+export class ContentBlock extends /*#__PURE__*/S.Union(ResponseTextBlock, ResponseToolUseBlock, ResponseServerToolUseBlock, ResponseWebSearchToolResultBlock, ResponseThinkingBlock, ResponseRedactedThinkingBlock) {}
+export class StopReason extends /*#__PURE__*/S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal") {}
+export class ServerToolUsage extends /*#__PURE__*/S.Struct({
+  "web_search_requests": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+export class UsageServiceTierEnum extends /*#__PURE__*/S.Literal("standard", "priority", "batch") {}
+export class Usage extends /*#__PURE__*/S.Struct({
+  "cache_creation_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "output_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "server_tool_use": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(ServerToolUsage)),
+  "service_tier": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(UsageServiceTierEnum, S.Null))
+}) {}
+export class Message extends /*#__PURE__*/S.Class("Message")({
+  "id": S.String,
+  "type": MessageType,
+  "role": MessageRole,
+  "content": /*#__PURE__*/S.Array(ContentBlock),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(StopReason, S.Null),
+  "stop_sequence": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "usage": Usage
+}) {}
+export class InvalidRequestErrorType extends /*#__PURE__*/S.Literal("invalid_request_error") {}
+export class InvalidRequestError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": InvalidRequestErrorType
+}) {}
+export class AuthenticationErrorType extends /*#__PURE__*/S.Literal("authentication_error") {}
+export class AuthenticationError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": AuthenticationErrorType
+}) {}
+export class BillingErrorType extends /*#__PURE__*/S.Literal("billing_error") {}
+export class BillingError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BillingErrorType
+}) {}
+export class PermissionErrorType extends /*#__PURE__*/S.Literal("permission_error") {}
+export class PermissionError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": PermissionErrorType
+}) {}
+export class NotFoundErrorType extends /*#__PURE__*/S.Literal("not_found_error") {}
+export class NotFoundError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": NotFoundErrorType
+}) {}
+export class RateLimitErrorType extends /*#__PURE__*/S.Literal("rate_limit_error") {}
+export class RateLimitError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": RateLimitErrorType
+}) {}
+export class GatewayTimeoutErrorType extends /*#__PURE__*/S.Literal("timeout_error") {}
+export class GatewayTimeoutError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": GatewayTimeoutErrorType
+}) {}
+export class APIErrorType extends /*#__PURE__*/S.Literal("api_error") {}
+export class APIError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": APIErrorType
+}) {}
+export class OverloadedErrorType extends /*#__PURE__*/S.Literal("overloaded_error") {}
+export class OverloadedError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": OverloadedErrorType
+}) {}
+export class ErrorResponseType extends /*#__PURE__*/S.Literal("error") {}
+export class ErrorResponse extends /*#__PURE__*/S.Class("ErrorResponse")({
+  "error": /*#__PURE__*/S.Union(InvalidRequestError, AuthenticationError, BillingError, PermissionError, NotFoundError, RateLimitError, GatewayTimeoutError, APIError, OverloadedError),
+  "type": ErrorResponseType
+}) {}
+export class CompletePostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class CompletionRequest extends /*#__PURE__*/S.Class("CompletionRequest")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "prompt": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "max_tokens_to_sample": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "metadata": /*#__PURE__*/S.optionalWith(Metadata, {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+export class CompletionResponseType extends /*#__PURE__*/S.Literal("completion") {}
+export class CompletionResponse extends /*#__PURE__*/S.Class("CompletionResponse")({
+  "completion": S.String,
+  "id": S.String,
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": CompletionResponseType
+}) {}
+export class ModelsListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class ModelInfoType extends /*#__PURE__*/S.Literal("model") {}
+export class ModelInfo extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": ModelInfoType
+}) {}
+export class ListResponseModelInfo extends /*#__PURE__*/S.Class("ListResponseModelInfo")({
+  "data": /*#__PURE__*/S.Array(ModelInfo),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+export class ModelsGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchesListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchProcessingStatus extends /*#__PURE__*/S.Literal("in_progress", "canceling", "ended") {}
+export class RequestCounts extends /*#__PURE__*/S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+export class MessageBatchType extends /*#__PURE__*/S.Literal("message_batch") {}
+export class MessageBatch extends /*#__PURE__*/S.Struct({
+  "archived_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "cancel_initiated_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": MessageBatchProcessingStatus,
+  "request_counts": RequestCounts,
+  "results_url": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": MessageBatchType
+}) {}
+export class ListResponseMessageBatch extends /*#__PURE__*/S.Class("ListResponseMessageBatch")({
+  "data": /*#__PURE__*/S.Array(MessageBatch),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+export class MessageBatchesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchIndividualRequestParams extends /*#__PURE__*/S.Struct({
+  "custom_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": CreateMessageParams
+}) {}
+export class CreateMessageBatchParams extends /*#__PURE__*/S.Class("CreateMessageBatchParams")({
+  "requests": /*#__PURE__*/S.Array(MessageBatchIndividualRequestParams).pipe(/*#__PURE__*/S.minItems(1), /*#__PURE__*/S.maxItems(10000))
+}) {}
+export class MessageBatchesRetrieveParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchesDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class DeleteMessageBatchResponseType extends /*#__PURE__*/S.Literal("message_batch_deleted") {}
+export class DeleteMessageBatchResponse extends /*#__PURE__*/S.Class("DeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": DeleteMessageBatchResponseType
+}) {}
+export class MessageBatchesCancelParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessageBatchesResultsParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class MessagesCountTokensPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class CountMessageTokensParams extends /*#__PURE__*/S.Class("CountMessageTokensParams")({
+  "messages": /*#__PURE__*/S.Array(InputMessage),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(RequestTextBlock)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(ThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(ToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)), {
+    nullable: true
+  })
+}) {}
+export class CountMessageTokensResponse extends /*#__PURE__*/S.Class("CountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+export class ListFilesV1FilesGetParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class FileMetadataSchemaType extends /*#__PURE__*/S.Literal("file") {}
+export class FileMetadataSchema extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "downloadable": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "filename": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)),
+  "id": S.String,
+  "mime_type": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)),
+  "size_bytes": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": FileMetadataSchemaType
+}) {}
+export class FileListResponse extends /*#__PURE__*/S.Class("FileListResponse")({
+  "data": /*#__PURE__*/S.Array(FileMetadataSchema),
+  "first_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "has_more": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "last_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  })
+}) {}
+export class UploadFileV1FilesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class GetFileMetadataV1FilesFileIdGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class DeleteFileV1FilesFileIdDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class FileDeleteResponseType extends /*#__PURE__*/S.Literal("file_deleted") {}
+export class FileDeleteResponse extends /*#__PURE__*/S.Class("FileDeleteResponse")({
+  "id": S.String,
+  "type": /*#__PURE__*/S.optionalWith(FileDeleteResponseType, {
+    nullable: true
+  })
+}) {}
+export class DownloadFileV1FilesFileIdContentGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessagesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaCacheControlEphemeralTtl extends /*#__PURE__*/S.Literal("5m", "1h") {}
+export class BetaCacheControlEphemeralType extends /*#__PURE__*/S.Literal("ephemeral") {}
+export class BetaCacheControlEphemeral extends /*#__PURE__*/S.Struct({
+  "ttl": /*#__PURE__*/S.optionalWith(BetaCacheControlEphemeralTtl, {
+    nullable: true
+  }),
+  "type": BetaCacheControlEphemeralType
+}) {}
+export class BetaRequestServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search", "code_execution") {}
+export class BetaRequestServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+export class BetaRequestServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": BetaRequestServerToolUseBlockName,
+  "type": BetaRequestServerToolUseBlockType
+}) {}
+export class BetaRequestWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+export class BetaRequestWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "title": S.String,
+  "type": BetaRequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+export class BetaWebSearchToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long") {}
+export class BetaRequestWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+export class BetaRequestWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaRequestWebSearchToolResultErrorType
+}) {}
+export class BetaRequestWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+export class BetaRequestWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(/*#__PURE__*/S.Array(BetaRequestWebSearchResultBlock), BetaRequestWebSearchToolResultError),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestWebSearchToolResultBlockType
+}) {}
+export class BetaCodeExecutionToolResultErrorCode extends /*#__PURE__*/S.Literal("invalid_tool_input", "unavailable", "too_many_requests", "execution_time_exceeded") {}
+export class BetaRequestCodeExecutionToolResultErrorType extends /*#__PURE__*/S.Literal("code_execution_tool_result_error") {}
+export class BetaRequestCodeExecutionToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaRequestCodeExecutionToolResultErrorType
+}) {}
+export class BetaRequestCodeExecutionOutputBlockType extends /*#__PURE__*/S.Literal("code_execution_output") {}
+export class BetaRequestCodeExecutionOutputBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaRequestCodeExecutionOutputBlockType
+}) {}
+export class BetaRequestCodeExecutionResultBlockType extends /*#__PURE__*/S.Literal("code_execution_result") {}
+export class BetaRequestCodeExecutionResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Array(BetaRequestCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaRequestCodeExecutionResultBlockType
+}) {}
+export class BetaRequestCodeExecutionToolResultBlockType extends /*#__PURE__*/S.Literal("code_execution_tool_result") {}
+export class BetaRequestCodeExecutionToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.Union(BetaRequestCodeExecutionToolResultError, BetaRequestCodeExecutionResultBlock),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestCodeExecutionToolResultBlockType
+}) {}
+export class BetaRequestMCPToolUseBlockType extends /*#__PURE__*/S.Literal("mcp_tool_use") {}
+export class BetaRequestMCPToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaRequestMCPToolUseBlockType
+}) {}
+export class BetaRequestCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+export class BetaRequestCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestCharLocationCitationType
+}) {}
+export class BetaRequestPageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+export class BetaRequestPageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": BetaRequestPageLocationCitationType
+}) {}
+export class BetaRequestContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+export class BetaRequestContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestContentBlockLocationCitationType
+}) {}
+export class BetaRequestWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+export class BetaRequestWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null),
+  "type": BetaRequestWebSearchResultLocationCitationType,
+  "url": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(2048))
+}) {}
+export class BetaRequestTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+export class BetaRequestTextBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestCharLocationCitation, BetaRequestPageLocationCitation, BetaRequestContentBlockLocationCitation, BetaRequestWebSearchResultLocationCitation)), S.Null), {
+    nullable: true
+  }),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": BetaRequestTextBlockType
+}) {}
+export class BetaRequestMCPToolResultBlockType extends /*#__PURE__*/S.Literal("mcp_tool_result") {}
+export class BetaRequestMCPToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestMCPToolResultBlockType
+}) {}
+export class BetaBase64ImageSourceMediaType extends /*#__PURE__*/S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+export class BetaBase64ImageSourceType extends /*#__PURE__*/S.Literal("base64") {}
+export class BetaBase64ImageSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64ImageSourceMediaType,
+  "type": BetaBase64ImageSourceType
+}) {}
+export class BetaURLImageSourceType extends /*#__PURE__*/S.Literal("url") {}
+export class BetaURLImageSource extends /*#__PURE__*/S.Struct({
+  "type": BetaURLImageSourceType,
+  "url": S.String
+}) {}
+export class BetaFileImageSourceType extends /*#__PURE__*/S.Literal("file") {}
+export class BetaFileImageSource extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaFileImageSourceType
+}) {}
+export class BetaRequestImageBlockType extends /*#__PURE__*/S.Literal("image") {}
+export class BetaRequestImageBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(BetaBase64ImageSource, BetaURLImageSource, BetaFileImageSource),
+  "type": BetaRequestImageBlockType
+}) {}
+export class BetaRequestToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+export class BetaRequestToolUseBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(200)),
+  "type": BetaRequestToolUseBlockType
+}) {}
+export class BetaRequestToolResultBlockType extends /*#__PURE__*/S.Literal("tool_result") {}
+export class BetaRequestToolResultBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "content": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestTextBlock, BetaRequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestToolResultBlockType
+}) {}
+export class BetaRequestCitationsConfig extends /*#__PURE__*/S.Struct({
+  "enabled": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  })
+}) {}
+export class BetaBase64PDFSourceMediaType extends /*#__PURE__*/S.Literal("application/pdf") {}
+export class BetaBase64PDFSourceType extends /*#__PURE__*/S.Literal("base64") {}
+export class BetaBase64PDFSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64PDFSourceMediaType,
+  "type": BetaBase64PDFSourceType
+}) {}
+export class BetaPlainTextSourceMediaType extends /*#__PURE__*/S.Literal("text/plain") {}
+export class BetaPlainTextSourceType extends /*#__PURE__*/S.Literal("text") {}
+export class BetaPlainTextSource extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "media_type": BetaPlainTextSourceMediaType,
+  "type": BetaPlainTextSourceType
+}) {}
+export class BetaContentBlockSourceType extends /*#__PURE__*/S.Literal("content") {}
+export class BetaContentBlockSource extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaRequestTextBlock, BetaRequestImageBlock))),
+  "type": BetaContentBlockSourceType
+}) {}
+export class BetaURLPDFSourceType extends /*#__PURE__*/S.Literal("url") {}
+export class BetaURLPDFSource extends /*#__PURE__*/S.Struct({
+  "type": BetaURLPDFSourceType,
+  "url": S.String
+}) {}
+export class BetaFileDocumentSourceType extends /*#__PURE__*/S.Literal("file") {}
+export class BetaFileDocumentSource extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaFileDocumentSourceType
+}) {}
+export class BetaRequestDocumentBlockType extends /*#__PURE__*/S.Literal("document") {}
+export class BetaRequestDocumentBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "citations": /*#__PURE__*/S.optionalWith(BetaRequestCitationsConfig, {
+    nullable: true
+  }),
+  "context": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)), S.Null), {
+    nullable: true
+  }),
+  "source": /*#__PURE__*/S.Union(BetaBase64PDFSource, BetaPlainTextSource, BetaContentBlockSource, BetaURLPDFSource, BetaFileDocumentSource),
+  "title": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)), S.Null), {
+    nullable: true
+  }),
+  "type": BetaRequestDocumentBlockType
+}) {}
+export class BetaRequestThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+export class BetaRequestThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaRequestThinkingBlockType
+}) {}
+export class BetaRequestRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+export class BetaRequestRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": BetaRequestRedactedThinkingBlockType
+}) {}
+export class BetaRequestContainerUploadBlockType extends /*#__PURE__*/S.Literal("container_upload") {}
+export class BetaRequestContainerUploadBlock extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "file_id": S.String,
+  "type": BetaRequestContainerUploadBlockType
+}) {}
+export class BetaInputContentBlock extends /*#__PURE__*/S.Union(BetaRequestServerToolUseBlock, BetaRequestWebSearchToolResultBlock, BetaRequestCodeExecutionToolResultBlock, BetaRequestMCPToolUseBlock, BetaRequestMCPToolResultBlock, BetaRequestTextBlock, BetaRequestImageBlock, BetaRequestToolUseBlock, BetaRequestToolResultBlock, BetaRequestDocumentBlock, BetaRequestThinkingBlock, BetaRequestRedactedThinkingBlock, BetaRequestContainerUploadBlock) {}
+export class BetaInputMessageRole extends /*#__PURE__*/S.Literal("user", "assistant") {}
+export class BetaInputMessage extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaInputContentBlock)),
+  "role": BetaInputMessageRole
+}) {}
+export class BetaRequestMCPServerToolConfiguration extends /*#__PURE__*/S.Struct({
+  "allowed_tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "enabled": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Boolean, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaRequestMCPServerURLDefinitionType extends /*#__PURE__*/S.Literal("url") {}
+export class BetaRequestMCPServerURLDefinition extends /*#__PURE__*/S.Struct({
+  "authorization_token": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "name": S.String,
+  "tool_configuration": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaRequestMCPServerToolConfiguration, S.Null), {
+    nullable: true
+  }),
+  "type": BetaRequestMCPServerURLDefinitionType,
+  "url": S.String
+}) {}
+export class BetaMetadata extends /*#__PURE__*/S.Struct({
+  "user_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.maxLength(256)), S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaCreateMessageParamsServiceTier extends /*#__PURE__*/S.Literal("auto", "standard_only") {}
+export class BetaThinkingConfigEnabledType extends /*#__PURE__*/S.Literal("enabled") {}
+export class BetaThinkingConfigEnabled extends /*#__PURE__*/S.Struct({
+  "budget_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1024)),
+  "type": BetaThinkingConfigEnabledType
+}) {}
+export class BetaThinkingConfigDisabledType extends /*#__PURE__*/S.Literal("disabled") {}
+export class BetaThinkingConfigDisabled extends /*#__PURE__*/S.Struct({
+  "type": BetaThinkingConfigDisabledType
+}) {}
+export class BetaThinkingConfigParam extends /*#__PURE__*/S.Union(BetaThinkingConfigEnabled, BetaThinkingConfigDisabled) {}
+export class BetaToolChoiceAutoType extends /*#__PURE__*/S.Literal("auto") {}
+export class BetaToolChoiceAuto extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": BetaToolChoiceAutoType
+}) {}
+export class BetaToolChoiceAnyType extends /*#__PURE__*/S.Literal("any") {}
+export class BetaToolChoiceAny extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "type": BetaToolChoiceAnyType
+}) {}
+export class BetaToolChoiceToolType extends /*#__PURE__*/S.Literal("tool") {}
+export class BetaToolChoiceTool extends /*#__PURE__*/S.Struct({
+  "disable_parallel_tool_use": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "name": S.String,
+  "type": BetaToolChoiceToolType
+}) {}
+export class BetaToolChoiceNoneType extends /*#__PURE__*/S.Literal("none") {}
+export class BetaToolChoiceNone extends /*#__PURE__*/S.Struct({
+  "type": BetaToolChoiceNoneType
+}) {}
+export class BetaToolChoice extends /*#__PURE__*/S.Union(BetaToolChoiceAuto, BetaToolChoiceAny, BetaToolChoiceTool, BetaToolChoiceNone) {}
+export class BetaToolTypeEnum extends /*#__PURE__*/S.Literal("custom") {}
+export class BetaInputSchemaType extends /*#__PURE__*/S.Literal("object") {}
+export class BetaInputSchema extends /*#__PURE__*/S.Struct({
+  "properties": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }), S.Null), {
+    nullable: true
+  }),
+  "required": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "type": BetaInputSchemaType
+}) {}
+export class BetaTool extends /*#__PURE__*/S.Struct({
+  "type": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.Null, BetaToolTypeEnum), {
+    nullable: true
+  }),
+  "description": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": BetaInputSchema,
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaComputerUseTool20241022Name extends /*#__PURE__*/S.Literal("computer") {}
+export class BetaComputerUseTool20241022Type extends /*#__PURE__*/S.Literal("computer_20241022") {}
+export class BetaComputerUseTool20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "display_height_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "display_number": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null), {
+    nullable: true
+  }),
+  "display_width_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20241022Name,
+  "type": BetaComputerUseTool20241022Type
+}) {}
+export class BetaBashTool20241022Name extends /*#__PURE__*/S.Literal("bash") {}
+export class BetaBashTool20241022Type extends /*#__PURE__*/S.Literal("bash_20241022") {}
+export class BetaBashTool20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaBashTool20241022Name,
+  "type": BetaBashTool20241022Type
+}) {}
+export class BetaTextEditor20241022Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+export class BetaTextEditor20241022Type extends /*#__PURE__*/S.Literal("text_editor_20241022") {}
+export class BetaTextEditor20241022 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20241022Name,
+  "type": BetaTextEditor20241022Type
+}) {}
+export class BetaComputerUseTool20250124Name extends /*#__PURE__*/S.Literal("computer") {}
+export class BetaComputerUseTool20250124Type extends /*#__PURE__*/S.Literal("computer_20250124") {}
+export class BetaComputerUseTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "display_height_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "display_number": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null), {
+    nullable: true
+  }),
+  "display_width_px": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20250124Name,
+  "type": BetaComputerUseTool20250124Type
+}) {}
+export class BetaBashTool20250124Name extends /*#__PURE__*/S.Literal("bash") {}
+export class BetaBashTool20250124Type extends /*#__PURE__*/S.Literal("bash_20250124") {}
+export class BetaBashTool20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaBashTool20250124Name,
+  "type": BetaBashTool20250124Type
+}) {}
+export class BetaTextEditor20250124Name extends /*#__PURE__*/S.Literal("str_replace_editor") {}
+export class BetaTextEditor20250124Type extends /*#__PURE__*/S.Literal("text_editor_20250124") {}
+export class BetaTextEditor20250124 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20250124Name,
+  "type": BetaTextEditor20250124Type
+}) {}
+export class BetaTextEditor20250429Name extends /*#__PURE__*/S.Literal("str_replace_based_edit_tool") {}
+export class BetaTextEditor20250429Type extends /*#__PURE__*/S.Literal("text_editor_20250429") {}
+export class BetaTextEditor20250429 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaTextEditor20250429Name,
+  "type": BetaTextEditor20250429Type
+}) {}
+export class BetaWebSearchTool20250305Name extends /*#__PURE__*/S.Literal("web_search") {}
+export class BetaWebSearchTool20250305Type extends /*#__PURE__*/S.Literal("web_search_20250305") {}
+export class BetaUserLocationType extends /*#__PURE__*/S.Literal("approximate") {}
+export class BetaUserLocation extends /*#__PURE__*/S.Struct({
+  "city": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "country": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(2), /*#__PURE__*/S.maxLength(2)), S.Null), {
+    nullable: true
+  }),
+  "region": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "timezone": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)), S.Null), {
+    nullable: true
+  }),
+  "type": BetaUserLocationType
+}) {}
+export class BetaWebSearchTool20250305 extends /*#__PURE__*/S.Struct({
+  "allowed_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "blocked_domains": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Array(S.String), S.Null), {
+    nullable: true
+  }),
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "max_uses": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThan(0)), S.Null), {
+    nullable: true
+  }),
+  "name": BetaWebSearchTool20250305Name,
+  "type": BetaWebSearchTool20250305Type,
+  "user_location": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaUserLocation, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaCodeExecutionTool20250522Name extends /*#__PURE__*/S.Literal("code_execution") {}
+export class BetaCodeExecutionTool20250522Type extends /*#__PURE__*/S.Literal("code_execution_20250522") {}
+export class BetaCodeExecutionTool20250522 extends /*#__PURE__*/S.Struct({
+  "cache_control": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(BetaCacheControlEphemeral, S.Null), {
+    nullable: true
+  }),
+  "name": BetaCodeExecutionTool20250522Name,
+  "type": BetaCodeExecutionTool20250522Type
+}) {}
+export class BetaCreateMessageParams extends /*#__PURE__*/S.Class("BetaCreateMessageParams")({
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "messages": /*#__PURE__*/S.Array(BetaInputMessage),
+  "container": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "max_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "mcp_servers": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(BetaRequestMCPServerURLDefinition).pipe(/*#__PURE__*/S.maxItems(20)), {
+    nullable: true
+  }),
+  "metadata": /*#__PURE__*/S.optionalWith(BetaMetadata, {
+    nullable: true
+  }),
+  "service_tier": /*#__PURE__*/S.optionalWith(BetaCreateMessageParamsServiceTier, {
+    nullable: true
+  }),
+  "stop_sequences": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(S.String), {
+    nullable: true
+  }),
+  "stream": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "temperature": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(BetaThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(BetaToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaTool, BetaComputerUseTool20241022, BetaBashTool20241022, BetaTextEditor20241022, BetaComputerUseTool20250124, BetaBashTool20250124, BetaTextEditor20250124, BetaTextEditor20250429, BetaWebSearchTool20250305, BetaCodeExecutionTool20250522)), {
+    nullable: true
+  }),
+  "top_k": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), {
+    nullable: true
+  }),
+  "top_p": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Number.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0), /*#__PURE__*/S.lessThanOrEqualTo(1)), {
+    nullable: true
+  })
+}) {}
+export class BetaMessageType extends /*#__PURE__*/S.Literal("message") {}
+export class BetaMessageRole extends /*#__PURE__*/S.Literal("assistant") {}
+export class BetaResponseCharLocationCitationType extends /*#__PURE__*/S.Literal("char_location") {}
+export class BetaResponseCharLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseCharLocationCitationType
+}) {}
+export class BetaResponsePageLocationCitationType extends /*#__PURE__*/S.Literal("page_location") {}
+export class BetaResponsePageLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1)),
+  "type": BetaResponsePageLocationCitationType
+}) {}
+export class BetaResponseContentBlockLocationCitationType extends /*#__PURE__*/S.Literal("content_block_location") {}
+export class BetaResponseContentBlockLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "document_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "document_title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseContentBlockLocationCitationType
+}) {}
+export class BetaResponseWebSearchResultLocationCitationType extends /*#__PURE__*/S.Literal("web_search_result_location") {}
+export class BetaResponseWebSearchResultLocationCitation extends /*#__PURE__*/S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": BetaResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+export class BetaResponseTextBlockType extends /*#__PURE__*/S.Literal("text") {}
+export class BetaResponseTextBlock extends /*#__PURE__*/S.Struct({
+  "citations": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaResponseCharLocationCitation, BetaResponsePageLocationCitation, BetaResponseContentBlockLocationCitation, BetaResponseWebSearchResultLocationCitation)))),
+  "text": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(0), /*#__PURE__*/S.maxLength(5000000)),
+  "type": BetaResponseTextBlockType
+}) {}
+export class BetaResponseToolUseBlockType extends /*#__PURE__*/S.Literal("tool_use") {}
+export class BetaResponseToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1)),
+  "type": BetaResponseToolUseBlockType
+}) {}
+export class BetaResponseServerToolUseBlockName extends /*#__PURE__*/S.Literal("web_search", "code_execution") {}
+export class BetaResponseServerToolUseBlockType extends /*#__PURE__*/S.Literal("server_tool_use") {}
+export class BetaResponseServerToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": BetaResponseServerToolUseBlockName,
+  "type": BetaResponseServerToolUseBlockType
+}) {}
+export class BetaResponseWebSearchToolResultErrorType extends /*#__PURE__*/S.Literal("web_search_tool_result_error") {}
+export class BetaResponseWebSearchToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaResponseWebSearchToolResultErrorType
+}) {}
+export class BetaResponseWebSearchResultBlockType extends /*#__PURE__*/S.Literal("web_search_result") {}
+export class BetaResponseWebSearchResultBlock extends /*#__PURE__*/S.Struct({
+  "encrypted_content": S.String,
+  "page_age": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": BetaResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+export class BetaResponseWebSearchToolResultBlockType extends /*#__PURE__*/S.Literal("web_search_tool_result") {}
+export class BetaResponseWebSearchToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(BetaResponseWebSearchToolResultError, /*#__PURE__*/S.Array(BetaResponseWebSearchResultBlock)),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseWebSearchToolResultBlockType
+}) {}
+export class BetaResponseCodeExecutionToolResultErrorType extends /*#__PURE__*/S.Literal("code_execution_tool_result_error") {}
+export class BetaResponseCodeExecutionToolResultError extends /*#__PURE__*/S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaResponseCodeExecutionToolResultErrorType
+}) {}
+export class BetaResponseCodeExecutionOutputBlockType extends /*#__PURE__*/S.Literal("code_execution_output") {}
+export class BetaResponseCodeExecutionOutputBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseCodeExecutionOutputBlockType
+}) {}
+export class BetaResponseCodeExecutionResultBlockType extends /*#__PURE__*/S.Literal("code_execution_result") {}
+export class BetaResponseCodeExecutionResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Array(BetaResponseCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaResponseCodeExecutionResultBlockType
+}) {}
+export class BetaResponseCodeExecutionToolResultBlockType extends /*#__PURE__*/S.Literal("code_execution_tool_result") {}
+export class BetaResponseCodeExecutionToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(BetaResponseCodeExecutionToolResultError, BetaResponseCodeExecutionResultBlock),
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseCodeExecutionToolResultBlockType
+}) {}
+export class BetaResponseMCPToolUseBlockType extends /*#__PURE__*/S.Literal("mcp_tool_use") {}
+export class BetaResponseMCPToolUseBlock extends /*#__PURE__*/S.Struct({
+  "id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": /*#__PURE__*/S.Record({
+    key: S.String,
+    value: S.Unknown
+  }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaResponseMCPToolUseBlockType
+}) {}
+export class BetaResponseMCPToolResultBlockType extends /*#__PURE__*/S.Literal("mcp_tool_result") {}
+export class BetaResponseMCPToolResultBlock extends /*#__PURE__*/S.Struct({
+  "content": /*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaResponseTextBlock)),
+  "is_error": S.Boolean,
+  "tool_use_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaResponseMCPToolResultBlockType
+}) {}
+export class BetaResponseContainerUploadBlockType extends /*#__PURE__*/S.Literal("container_upload") {}
+export class BetaResponseContainerUploadBlock extends /*#__PURE__*/S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseContainerUploadBlockType
+}) {}
+export class BetaResponseThinkingBlockType extends /*#__PURE__*/S.Literal("thinking") {}
+export class BetaResponseThinkingBlock extends /*#__PURE__*/S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaResponseThinkingBlockType
+}) {}
+export class BetaResponseRedactedThinkingBlockType extends /*#__PURE__*/S.Literal("redacted_thinking") {}
+export class BetaResponseRedactedThinkingBlock extends /*#__PURE__*/S.Struct({
+  "data": S.String,
+  "type": BetaResponseRedactedThinkingBlockType
+}) {}
+export class BetaContentBlock extends /*#__PURE__*/S.Union(BetaResponseTextBlock, BetaResponseToolUseBlock, BetaResponseServerToolUseBlock, BetaResponseWebSearchToolResultBlock, BetaResponseCodeExecutionToolResultBlock, BetaResponseMCPToolUseBlock, BetaResponseMCPToolResultBlock, BetaResponseContainerUploadBlock, BetaResponseThinkingBlock, BetaResponseRedactedThinkingBlock) {}
+export class BetaStopReason extends /*#__PURE__*/S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal") {}
+export class BetaCacheCreation extends /*#__PURE__*/S.Struct({
+  "ephemeral_1h_input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "ephemeral_5m_input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+export class BetaServerToolUsage extends /*#__PURE__*/S.Struct({
+  "web_search_requests": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0))
+}) {}
+export class BetaUsageServiceTierEnum extends /*#__PURE__*/S.Literal("standard", "priority", "batch") {}
+export class BetaUsage extends /*#__PURE__*/S.Struct({
+  "cache_creation": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaCacheCreation, S.Null)),
+  "cache_creation_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "output_tokens": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "server_tool_use": /*#__PURE__*/S.optional(/*#__PURE__*/S.NullOr(BetaServerToolUsage)),
+  "service_tier": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaUsageServiceTierEnum, S.Null))
+}) {}
+export class BetaContainer extends /*#__PURE__*/S.Struct({
+  "expires_at": S.String,
+  "id": S.String
+}) {}
+export class BetaMessage extends /*#__PURE__*/S.Class("BetaMessage")({
+  "id": S.String,
+  "type": BetaMessageType,
+  "role": BetaMessageRole,
+  "content": /*#__PURE__*/S.Array(BetaContentBlock),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "stop_reason": /*#__PURE__*/S.Union(BetaStopReason, S.Null),
+  "stop_sequence": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(S.String, S.Null)),
+  "usage": BetaUsage,
+  "container": /*#__PURE__*/S.NullOr(/*#__PURE__*/S.Union(BetaContainer, S.Null))
+}) {}
+export class BetaInvalidRequestErrorType extends /*#__PURE__*/S.Literal("invalid_request_error") {}
+export class BetaInvalidRequestError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaInvalidRequestErrorType
+}) {}
+export class BetaAuthenticationErrorType extends /*#__PURE__*/S.Literal("authentication_error") {}
+export class BetaAuthenticationError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaAuthenticationErrorType
+}) {}
+export class BetaBillingErrorType extends /*#__PURE__*/S.Literal("billing_error") {}
+export class BetaBillingError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaBillingErrorType
+}) {}
+export class BetaPermissionErrorType extends /*#__PURE__*/S.Literal("permission_error") {}
+export class BetaPermissionError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaPermissionErrorType
+}) {}
+export class BetaNotFoundErrorType extends /*#__PURE__*/S.Literal("not_found_error") {}
+export class BetaNotFoundError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaNotFoundErrorType
+}) {}
+export class BetaRateLimitErrorType extends /*#__PURE__*/S.Literal("rate_limit_error") {}
+export class BetaRateLimitError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaRateLimitErrorType
+}) {}
+export class BetaGatewayTimeoutErrorType extends /*#__PURE__*/S.Literal("timeout_error") {}
+export class BetaGatewayTimeoutError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaGatewayTimeoutErrorType
+}) {}
+export class BetaAPIErrorType extends /*#__PURE__*/S.Literal("api_error") {}
+export class BetaAPIError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaAPIErrorType
+}) {}
+export class BetaOverloadedErrorType extends /*#__PURE__*/S.Literal("overloaded_error") {}
+export class BetaOverloadedError extends /*#__PURE__*/S.Struct({
+  "message": S.String,
+  "type": BetaOverloadedErrorType
+}) {}
+export class BetaErrorResponseType extends /*#__PURE__*/S.Literal("error") {}
+export class BetaErrorResponse extends /*#__PURE__*/S.Class("BetaErrorResponse")({
+  "error": /*#__PURE__*/S.Union(BetaInvalidRequestError, BetaAuthenticationError, BetaBillingError, BetaPermissionError, BetaNotFoundError, BetaRateLimitError, BetaGatewayTimeoutError, BetaAPIError, BetaOverloadedError),
+  "type": BetaErrorResponseType
+}) {}
+export class BetaModelsListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaModelInfoType extends /*#__PURE__*/S.Literal("model") {}
+export class BetaModelInfo extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": BetaModelInfoType
+}) {}
+export class BetaListResponseModelInfo extends /*#__PURE__*/S.Class("BetaListResponseModelInfo")({
+  "data": /*#__PURE__*/S.Array(BetaModelInfo),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+export class BetaModelsGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchesListParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchProcessingStatus extends /*#__PURE__*/S.Literal("in_progress", "canceling", "ended") {}
+export class BetaRequestCounts extends /*#__PURE__*/S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+export class BetaMessageBatchType extends /*#__PURE__*/S.Literal("message_batch") {}
+export class BetaMessageBatch extends /*#__PURE__*/S.Struct({
+  "archived_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "cancel_initiated_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": /*#__PURE__*/S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": BetaMessageBatchProcessingStatus,
+  "request_counts": BetaRequestCounts,
+  "results_url": /*#__PURE__*/S.Union(S.String, S.Null),
+  "type": BetaMessageBatchType
+}) {}
+export class BetaListResponseMessageBatch extends /*#__PURE__*/S.Class("BetaListResponseMessageBatch")({
+  "data": /*#__PURE__*/S.Array(BetaMessageBatch),
+  "first_id": /*#__PURE__*/S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": /*#__PURE__*/S.Union(S.String, S.Null)
+}) {}
+export class BetaMessageBatchesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchIndividualRequestParams extends /*#__PURE__*/S.Struct({
+  "custom_id": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(64), /*#__PURE__*/S.pattern(/*#__PURE__*/new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": BetaCreateMessageParams
+}) {}
+export class BetaCreateMessageBatchParams extends /*#__PURE__*/S.Class("BetaCreateMessageBatchParams")({
+  "requests": /*#__PURE__*/S.Array(BetaMessageBatchIndividualRequestParams).pipe(/*#__PURE__*/S.minItems(1), /*#__PURE__*/S.maxItems(10000))
+}) {}
+export class BetaMessageBatchesRetrieveParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchesDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaDeleteMessageBatchResponseType extends /*#__PURE__*/S.Literal("message_batch_deleted") {}
+export class BetaDeleteMessageBatchResponse extends /*#__PURE__*/S.Class("BetaDeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": BetaDeleteMessageBatchResponseType
+}) {}
+export class BetaMessageBatchesCancelParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessageBatchesResultsParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaMessagesCountTokensPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaCountMessageTokensParams extends /*#__PURE__*/S.Class("BetaCountMessageTokensParams")({
+  "mcp_servers": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(BetaRequestMCPServerURLDefinition).pipe(/*#__PURE__*/S.maxItems(20)), {
+    nullable: true
+  }),
+  "messages": /*#__PURE__*/S.Array(BetaInputMessage),
+  "model": /*#__PURE__*/S.Union(S.String, Model),
+  "system": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, /*#__PURE__*/S.Array(BetaRequestTextBlock)), {
+    nullable: true
+  }),
+  "thinking": /*#__PURE__*/S.optionalWith(BetaThinkingConfigParam, {
+    nullable: true
+  }),
+  "tool_choice": /*#__PURE__*/S.optionalWith(BetaToolChoice, {
+    nullable: true
+  }),
+  "tools": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Array(/*#__PURE__*/S.Union(BetaTool, BetaComputerUseTool20241022, BetaBashTool20241022, BetaTextEditor20241022, BetaComputerUseTool20250124, BetaBashTool20250124, BetaTextEditor20250124, BetaTextEditor20250429, BetaWebSearchTool20250305, BetaCodeExecutionTool20250522)), {
+    nullable: true
+  })
+}) {}
+export class BetaCountMessageTokensResponse extends /*#__PURE__*/S.Class("BetaCountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+export class BetaListFilesV1FilesGetParams extends /*#__PURE__*/S.Struct({
+  "before_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "after_id": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "limit": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(1), /*#__PURE__*/S.lessThanOrEqualTo(1000)), {
+    nullable: true
+  }),
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaFileMetadataSchemaType extends /*#__PURE__*/S.Literal("file") {}
+export class BetaFileMetadataSchema extends /*#__PURE__*/S.Struct({
+  "created_at": S.String,
+  "downloadable": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "filename": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(500)),
+  "id": S.String,
+  "mime_type": /*#__PURE__*/S.String.pipe(/*#__PURE__*/S.minLength(1), /*#__PURE__*/S.maxLength(255)),
+  "size_bytes": /*#__PURE__*/S.Int.pipe(/*#__PURE__*/S.greaterThanOrEqualTo(0)),
+  "type": BetaFileMetadataSchemaType
+}) {}
+export class BetaFileListResponse extends /*#__PURE__*/S.Class("BetaFileListResponse")({
+  "data": /*#__PURE__*/S.Array(BetaFileMetadataSchema),
+  "first_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  }),
+  "has_more": /*#__PURE__*/S.optionalWith(S.Boolean, {
+    nullable: true
+  }),
+  "last_id": /*#__PURE__*/S.optionalWith(/*#__PURE__*/S.Union(S.String, S.Null), {
+    nullable: true
+  })
+}) {}
+export class BetaUploadFileV1FilesPostParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaGetFileMetadataV1FilesFileIdGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaDeleteFileV1FilesFileIdDeleteParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export class BetaFileDeleteResponseType extends /*#__PURE__*/S.Literal("file_deleted") {}
+export class BetaFileDeleteResponse extends /*#__PURE__*/S.Class("BetaFileDeleteResponse")({
+  "id": S.String,
+  "type": /*#__PURE__*/S.optionalWith(BetaFileDeleteResponseType, {
+    nullable: true
+  })
+}) {}
+export class BetaDownloadFileV1FilesFileIdContentGetParams extends /*#__PURE__*/S.Struct({
+  "anthropic-beta": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "anthropic-version": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  }),
+  "x-api-key": /*#__PURE__*/S.optionalWith(S.String, {
+    nullable: true
+  })
+}) {}
+export const make = (httpClient, options = {}) => {
+  const unexpectedStatus = (request, response) => Effect.flatMap(Effect.orElseSucceed(response.text, () => "Unexpected status code"), description => Effect.fail(new HttpClientError.ResponseError({
+    request,
+    response,
+    reason: "StatusCode",
+    description
+  })));
+  const applyClientTransform = client => options.transformClient ? options.transformClient(client) : Effect.succeed(client);
+  const decodeError = (response, schema) => Effect.flatMap(HttpClientResponse.schemaBodyJson(schema)(response), Effect.fail);
+  return {
+    httpClient,
+    "messagesPost": options => HttpClientRequest.make("POST")(`/v1/messages`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(Message)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "completePost": options => HttpClientRequest.make("POST")(`/v1/complete`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined,
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(CompletionResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "modelsList": options => HttpClientRequest.make("GET")(`/v1/models`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ListResponseModelInfo)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "modelsGet": (modelId, options) => HttpClientRequest.make("GET")(`/v1/models/${modelId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ModelInfo)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesList": options => HttpClientRequest.make("GET")(`/v1/messages/batches`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(ListResponseMessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesPost": options => HttpClientRequest.make("POST")(`/v1/messages/batches`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesRetrieve": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesDelete": (messageBatchId, options) => HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(DeleteMessageBatchResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesCancel": (messageBatchId, options) => HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messageBatchesResults": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "messagesCountTokensPost": options => HttpClientRequest.make("POST")(`/v1/messages/count_tokens`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(CountMessageTokensResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "listFilesV1FilesGet": options => HttpClientRequest.make("GET")(`/v1/files`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileListResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "uploadFileV1FilesPost": options => HttpClientRequest.make("POST")(`/v1/files`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), HttpClientRequest.bodyFormData(options.payload), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "getFileMetadataV1FilesFileIdGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "deleteFileV1FilesFileIdDelete": (fileId, options) => HttpClientRequest.make("DELETE")(`/v1/files/${fileId}`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(FileDeleteResponse)(r),
+      "4xx": r => decodeError(r, ErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "downloadFileV1FilesFileIdContentGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}/content`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessagesPost": options => HttpClientRequest.make("POST")(`/v1/messages?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessage)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaModelsList": options => HttpClientRequest.make("GET")(`/v1/models?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaListResponseModelInfo)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaModelsGet": (modelId, options) => HttpClientRequest.make("GET")(`/v1/models/${modelId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined,
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaModelInfo)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesList": options => HttpClientRequest.make("GET")(`/v1/messages/batches?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaListResponseMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesPost": options => HttpClientRequest.make("POST")(`/v1/messages/batches?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesRetrieve": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesDelete": (messageBatchId, options) => HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaDeleteMessageBatchResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesCancel": (messageBatchId, options) => HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessageBatchesResults": (messageBatchId, options) => HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaMessagesCountTokensPost": options => HttpClientRequest.make("POST")(`/v1/messages/count_tokens?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), req => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)), Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaCountMessageTokensResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaListFilesV1FilesGet": options => HttpClientRequest.make("GET")(`/v1/files?beta=true`).pipe(HttpClientRequest.setUrlParams({
+      "before_id": options?.["before_id"],
+      "after_id": options?.["after_id"],
+      "limit": options?.["limit"]
+    }), HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileListResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaUploadFileV1FilesPost": options => HttpClientRequest.make("POST")(`/v1/files?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+    }), HttpClientRequest.bodyFormData(options.payload), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaGetFileMetadataV1FilesFileIdGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaDeleteFileV1FilesFileIdDelete": (fileId, options) => HttpClientRequest.make("DELETE")(`/v1/files/${fileId}?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      "200": r => HttpClientResponse.schemaBodyJson(BetaFileDeleteResponse)(r),
+      "4xx": r => decodeError(r, BetaErrorResponse),
+      orElse: response => unexpectedStatus(request, response)
+    }))))),
+    "betaDownloadFileV1FilesFileIdContentGet": (fileId, options) => HttpClientRequest.make("GET")(`/v1/files/${fileId}/content?beta=true`).pipe(HttpClientRequest.setHeaders({
+      "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+      "anthropic-version": options?.["anthropic-version"] ?? undefined,
+      "x-api-key": options?.["x-api-key"] ?? undefined
+    }), Effect.succeed, Effect.flatMap(request => Effect.flatMap(applyClientTransform(httpClient), httpClient => Effect.flatMap(httpClient.execute(request), HttpClientResponse.matchStatus({
+      orElse: response => unexpectedStatus(request, response)
+    })))))
+  };
+};
+//# sourceMappingURL=Generated.js.map
\ No newline at end of file
diff --git a/dist/dist/esm/Generated.js.map b/dist/dist/esm/Generated.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..6ba8c39df13a9052ef0167e9bd369d4eb247b410
--- /dev/null
+++ b/dist/dist/esm/Generated.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"Generated.js","names":["HttpClientError","HttpClientRequest","HttpClientResponse","Effect","S","MessagesPostParams","Struct","optionalWith","String","nullable","Model","Literal","CacheControlEphemeralType","CacheControlEphemeral","RequestServerToolUseBlockName","RequestServerToolUseBlockType","RequestServerToolUseBlock","Union","Null","pipe","pattern","RegExp","Record","key","value","Unknown","RequestWebSearchResultBlockType","RequestWebSearchResultBlock","WebSearchToolResultErrorCode","RequestWebSearchToolResultErrorType","RequestWebSearchToolResultError","RequestWebSearchToolResultBlockType","RequestWebSearchToolResultBlock","Array","RequestCharLocationCitationType","RequestCharLocationCitation","Int","greaterThanOrEqualTo","minLength","maxLength","RequestPageLocationCitationType","RequestPageLocationCitation","RequestContentBlockLocationCitationType","RequestContentBlockLocationCitation","RequestWebSearchResultLocationCitationType","RequestWebSearchResultLocationCitation","RequestTextBlockType","RequestTextBlock","Base64ImageSourceMediaType","Base64ImageSourceType","Base64ImageSource","URLImageSourceType","URLImageSource","RequestImageBlockType","RequestImageBlock","RequestToolUseBlockType","RequestToolUseBlock","RequestToolResultBlockType","RequestToolResultBlock","Boolean","RequestCitationsConfig","Base64PDFSourceMediaType","Base64PDFSourceType","Base64PDFSource","PlainTextSourceMediaType","PlainTextSourceType","PlainTextSource","ContentBlockSourceType","ContentBlockSource","URLPDFSourceType","URLPDFSource","RequestDocumentBlockType","RequestDocumentBlock","RequestThinkingBlockType","RequestThinkingBlock","RequestRedactedThinkingBlockType","RequestRedactedThinkingBlock","InputContentBlock","InputMessageRole","InputMessage","Metadata","CreateMessageParamsServiceTier","ThinkingConfigEnabledType","ThinkingConfigEnabled","ThinkingConfigDisabledType","ThinkingConfigDisabled","ThinkingConfigParam","ToolChoiceAutoType","ToolChoiceAuto","ToolChoiceAnyType","ToolChoiceAny","ToolChoiceToolType","ToolChoiceTool","ToolChoiceNoneType","ToolChoiceNone","ToolChoice","ToolTypeEnum","InputSchemaType","InputSchema","Tool","BashTool20250124Name","BashTool20250124Type","BashTool20250124","TextEditor20250124Name","TextEditor20250124Type","TextEditor20250124","TextEditor20250429Name","TextEditor20250429Type","TextEditor20250429","WebSearchTool20250305Name","WebSearchTool20250305Type","UserLocationType","UserLocation","WebSearchTool20250305","greaterThan","CreateMessageParams","Class","Number","lessThanOrEqualTo","MessageType","MessageRole","ResponseCharLocationCitationType","ResponseCharLocationCitation","ResponsePageLocationCitationType","ResponsePageLocationCitation","ResponseContentBlockLocationCitationType","ResponseContentBlockLocationCitation","ResponseWebSearchResultLocationCitationType","ResponseWebSearchResultLocationCitation","ResponseTextBlockType","ResponseTextBlock","optional","NullOr","ResponseToolUseBlockType","ResponseToolUseBlock","ResponseServerToolUseBlockName","ResponseServerToolUseBlockType","ResponseServerToolUseBlock","ResponseWebSearchToolResultErrorType","ResponseWebSearchToolResultError","ResponseWebSearchResultBlockType","ResponseWebSearchResultBlock","ResponseWebSearchToolResultBlockType","ResponseWebSearchToolResultBlock","ResponseThinkingBlockType","ResponseThinkingBlock","ResponseRedactedThinkingBlockType","ResponseRedactedThinkingBlock","ContentBlock","StopReason","ServerToolUsage","UsageServiceTierEnum","Usage","Message","InvalidRequestErrorType","InvalidRequestError","AuthenticationErrorType","AuthenticationError","BillingErrorType","BillingError","PermissionErrorType","PermissionError","NotFoundErrorType","NotFoundError","RateLimitErrorType","RateLimitError","GatewayTimeoutErrorType","GatewayTimeoutError","APIErrorType","APIError","OverloadedErrorType","OverloadedError","ErrorResponseType","ErrorResponse","CompletePostParams","CompletionRequest","CompletionResponseType","CompletionResponse","ModelsListParams","ModelInfoType","ModelInfo","ListResponseModelInfo","ModelsGetParams","MessageBatchesListParams","MessageBatchProcessingStatus","RequestCounts","MessageBatchType","MessageBatch","ListResponseMessageBatch","MessageBatchesPostParams","MessageBatchIndividualRequestParams","CreateMessageBatchParams","minItems","maxItems","MessageBatchesRetrieveParams","MessageBatchesDeleteParams","DeleteMessageBatchResponseType","DeleteMessageBatchResponse","MessageBatchesCancelParams","MessageBatchesResultsParams","MessagesCountTokensPostParams","CountMessageTokensParams","CountMessageTokensResponse","ListFilesV1FilesGetParams","FileMetadataSchemaType","FileMetadataSchema","FileListResponse","UploadFileV1FilesPostParams","GetFileMetadataV1FilesFileIdGetParams","DeleteFileV1FilesFileIdDeleteParams","FileDeleteResponseType","FileDeleteResponse","DownloadFileV1FilesFileIdContentGetParams","BetaMessagesPostParams","BetaCacheControlEphemeralTtl","BetaCacheControlEphemeralType","BetaCacheControlEphemeral","BetaRequestServerToolUseBlockName","BetaRequestServerToolUseBlockType","BetaRequestServerToolUseBlock","BetaRequestWebSearchResultBlockType","BetaRequestWebSearchResultBlock","BetaWebSearchToolResultErrorCode","BetaRequestWebSearchToolResultErrorType","BetaRequestWebSearchToolResultError","BetaRequestWebSearchToolResultBlockType","BetaRequestWebSearchToolResultBlock","BetaCodeExecutionToolResultErrorCode","BetaRequestCodeExecutionToolResultErrorType","BetaRequestCodeExecutionToolResultError","BetaRequestCodeExecutionOutputBlockType","BetaRequestCodeExecutionOutputBlock","BetaRequestCodeExecutionResultBlockType","BetaRequestCodeExecutionResultBlock","BetaRequestCodeExecutionToolResultBlockType","BetaRequestCodeExecutionToolResultBlock","BetaRequestMCPToolUseBlockType","BetaRequestMCPToolUseBlock","BetaRequestCharLocationCitationType","BetaRequestCharLocationCitation","BetaRequestPageLocationCitationType","BetaRequestPageLocationCitation","BetaRequestContentBlockLocationCitationType","BetaRequestContentBlockLocationCitation","BetaRequestWebSearchResultLocationCitationType","BetaRequestWebSearchResultLocationCitation","BetaRequestTextBlockType","BetaRequestTextBlock","BetaRequestMCPToolResultBlockType","BetaRequestMCPToolResultBlock","BetaBase64ImageSourceMediaType","BetaBase64ImageSourceType","BetaBase64ImageSource","BetaURLImageSourceType","BetaURLImageSource","BetaFileImageSourceType","BetaFileImageSource","BetaRequestImageBlockType","BetaRequestImageBlock","BetaRequestToolUseBlockType","BetaRequestToolUseBlock","BetaRequestToolResultBlockType","BetaRequestToolResultBlock","BetaRequestCitationsConfig","BetaBase64PDFSourceMediaType","BetaBase64PDFSourceType","BetaBase64PDFSource","BetaPlainTextSourceMediaType","BetaPlainTextSourceType","BetaPlainTextSource","BetaContentBlockSourceType","BetaContentBlockSource","BetaURLPDFSourceType","BetaURLPDFSource","BetaFileDocumentSourceType","BetaFileDocumentSource","BetaRequestDocumentBlockType","BetaRequestDocumentBlock","BetaRequestThinkingBlockType","BetaRequestThinkingBlock","BetaRequestRedactedThinkingBlockType","BetaRequestRedactedThinkingBlock","BetaRequestContainerUploadBlockType","BetaRequestContainerUploadBlock","BetaInputContentBlock","BetaInputMessageRole","BetaInputMessage","BetaRequestMCPServerToolConfiguration","BetaRequestMCPServerURLDefinitionType","BetaRequestMCPServerURLDefinition","BetaMetadata","BetaCreateMessageParamsServiceTier","BetaThinkingConfigEnabledType","BetaThinkingConfigEnabled","BetaThinkingConfigDisabledType","BetaThinkingConfigDisabled","BetaThinkingConfigParam","BetaToolChoiceAutoType","BetaToolChoiceAuto","BetaToolChoiceAnyType","BetaToolChoiceAny","BetaToolChoiceToolType","BetaToolChoiceTool","BetaToolChoiceNoneType","BetaToolChoiceNone","BetaToolChoice","BetaToolTypeEnum","BetaInputSchemaType","BetaInputSchema","BetaTool","BetaComputerUseTool20241022Name","BetaComputerUseTool20241022Type","BetaComputerUseTool20241022","BetaBashTool20241022Name","BetaBashTool20241022Type","BetaBashTool20241022","BetaTextEditor20241022Name","BetaTextEditor20241022Type","BetaTextEditor20241022","BetaComputerUseTool20250124Name","BetaComputerUseTool20250124Type","BetaComputerUseTool20250124","BetaBashTool20250124Name","BetaBashTool20250124Type","BetaBashTool20250124","BetaTextEditor20250124Name","BetaTextEditor20250124Type","BetaTextEditor20250124","BetaTextEditor20250429Name","BetaTextEditor20250429Type","BetaTextEditor20250429","BetaWebSearchTool20250305Name","BetaWebSearchTool20250305Type","BetaUserLocationType","BetaUserLocation","BetaWebSearchTool20250305","BetaCodeExecutionTool20250522Name","BetaCodeExecutionTool20250522Type","BetaCodeExecutionTool20250522","BetaCreateMessageParams","BetaMessageType","BetaMessageRole","BetaResponseCharLocationCitationType","BetaResponseCharLocationCitation","BetaResponsePageLocationCitationType","BetaResponsePageLocationCitation","BetaResponseContentBlockLocationCitationType","BetaResponseContentBlockLocationCitation","BetaResponseWebSearchResultLocationCitationType","BetaResponseWebSearchResultLocationCitation","BetaResponseTextBlockType","BetaResponseTextBlock","BetaResponseToolUseBlockType","BetaResponseToolUseBlock","BetaResponseServerToolUseBlockName","BetaResponseServerToolUseBlockType","BetaResponseServerToolUseBlock","BetaResponseWebSearchToolResultErrorType","BetaResponseWebSearchToolResultError","BetaResponseWebSearchResultBlockType","BetaResponseWebSearchResultBlock","BetaResponseWebSearchToolResultBlockType","BetaResponseWebSearchToolResultBlock","BetaResponseCodeExecutionToolResultErrorType","BetaResponseCodeExecutionToolResultError","BetaResponseCodeExecutionOutputBlockType","BetaResponseCodeExecutionOutputBlock","BetaResponseCodeExecutionResultBlockType","BetaResponseCodeExecutionResultBlock","BetaResponseCodeExecutionToolResultBlockType","BetaResponseCodeExecutionToolResultBlock","BetaResponseMCPToolUseBlockType","BetaResponseMCPToolUseBlock","BetaResponseMCPToolResultBlockType","BetaResponseMCPToolResultBlock","BetaResponseContainerUploadBlockType","BetaResponseContainerUploadBlock","BetaResponseThinkingBlockType","BetaResponseThinkingBlock","BetaResponseRedactedThinkingBlockType","BetaResponseRedactedThinkingBlock","BetaContentBlock","BetaStopReason","BetaCacheCreation","BetaServerToolUsage","BetaUsageServiceTierEnum","BetaUsage","BetaContainer","BetaMessage","BetaInvalidRequestErrorType","BetaInvalidRequestError","BetaAuthenticationErrorType","BetaAuthenticationError","BetaBillingErrorType","BetaBillingError","BetaPermissionErrorType","BetaPermissionError","BetaNotFoundErrorType","BetaNotFoundError","BetaRateLimitErrorType","BetaRateLimitError","BetaGatewayTimeoutErrorType","BetaGatewayTimeoutError","BetaAPIErrorType","BetaAPIError","BetaOverloadedErrorType","BetaOverloadedError","BetaErrorResponseType","BetaErrorResponse","BetaModelsListParams","BetaModelInfoType","BetaModelInfo","BetaListResponseModelInfo","BetaModelsGetParams","BetaMessageBatchesListParams","BetaMessageBatchProcessingStatus","BetaRequestCounts","BetaMessageBatchType","BetaMessageBatch","BetaListResponseMessageBatch","BetaMessageBatchesPostParams","BetaMessageBatchIndividualRequestParams","BetaCreateMessageBatchParams","BetaMessageBatchesRetrieveParams","BetaMessageBatchesDeleteParams","BetaDeleteMessageBatchResponseType","BetaDeleteMessageBatchResponse","BetaMessageBatchesCancelParams","BetaMessageBatchesResultsParams","BetaMessagesCountTokensPostParams","BetaCountMessageTokensParams","BetaCountMessageTokensResponse","BetaListFilesV1FilesGetParams","BetaFileMetadataSchemaType","BetaFileMetadataSchema","BetaFileListResponse","BetaUploadFileV1FilesPostParams","BetaGetFileMetadataV1FilesFileIdGetParams","BetaDeleteFileV1FilesFileIdDeleteParams","BetaFileDeleteResponseType","BetaFileDeleteResponse","BetaDownloadFileV1FilesFileIdContentGetParams","make","httpClient","options","unexpectedStatus","request","response","flatMap","orElseSucceed","text","description","fail","ResponseError","reason","applyClientTransform","client","transformClient","succeed","decodeError","schema","schemaBodyJson","setHeaders","params","undefined","req","orDie","bodyJson","payload","execute","matchStatus","r","orElse","setUrlParams","modelsGet","modelId","messageBatchesRetrieve","messageBatchId","messageBatchesDelete","messageBatchesCancel","messageBatchesResults","bodyFormData","getFileMetadataV1FilesFileIdGet","fileId","deleteFileV1FilesFileIdDelete","downloadFileV1FilesFileIdContentGet","betaModelsGet","betaMessageBatchesRetrieve","betaMessageBatchesDelete","betaMessageBatchesCancel","betaMessageBatchesResults","betaGetFileMetadataV1FilesFileIdGet","betaDeleteFileV1FilesFileIdDelete","betaDownloadFileV1FilesFileIdContentGet"],"sources":["../../src/Generated.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/esm/index.js b/dist/dist/esm/index.js
new file mode 100644
index 0000000000000000000000000000000000000000..5bed725a2978372cf6b1fecd0295b01df235068f
--- /dev/null
+++ b/dist/dist/esm/index.js
@@ -0,0 +1,21 @@
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicClient from "./AnthropicClient.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicConfig from "./AnthropicConfig.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicLanguageModel from "./AnthropicLanguageModel.js";
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicTokenizer from "./AnthropicTokenizer.js";
+/**
+ * @since 1.0.0
+ */
+export * as Generated from "./Generated.js";
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/dist/esm/index.js.map b/dist/dist/esm/index.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..bca38f6c96792587dbc71b0bcae160068fbaab17
--- /dev/null
+++ b/dist/dist/esm/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","names":["AnthropicClient","AnthropicConfig","AnthropicLanguageModel","AnthropicTokenizer","Generated"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAGA,OAAO,KAAKA,eAAe,MAAM,sBAAsB;AAEvD;;;AAGA,OAAO,KAAKC,eAAe,MAAM,sBAAsB;AAEvD;;;AAGA,OAAO,KAAKC,sBAAsB,MAAM,6BAA6B;AAErE;;;AAGA,OAAO,KAAKC,kBAAkB,MAAM,yBAAyB;AAE7D;;;AAGA,OAAO,KAAKC,SAAS,MAAM,gBAAgB","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/esm/internal/utilities.js b/dist/dist/esm/internal/utilities.js
new file mode 100644
index 0000000000000000000000000000000000000000..5caa56d3b264e08de76de16c2598c9d26c32a96c
--- /dev/null
+++ b/dist/dist/esm/internal/utilities.js
@@ -0,0 +1,15 @@
+import * as Predicate from "effect/Predicate";
+/** @internal */
+export const ProviderMetadataKey = "@effect/ai-anthropic/AnthropicLanguageModel/ProviderMetadata";
+const finishReasonMap = {
+  end_turn: "stop",
+  max_tokens: "length",
+  stop_sequence: "stop",
+  tool_use: "tool-calls"
+};
+/** @internal */
+export const resolveFinishReason = finishReason => {
+  const reason = finishReasonMap[finishReason];
+  return Predicate.isUndefined(reason) ? "unknown" : reason;
+};
+//# sourceMappingURL=utilities.js.map
\ No newline at end of file
diff --git a/dist/dist/esm/internal/utilities.js.map b/dist/dist/esm/internal/utilities.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..5e6cf08d1c69ceaf3cefcd2fe29af562ec7f6d29
--- /dev/null
+++ b/dist/dist/esm/internal/utilities.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utilities.js","names":["Predicate","ProviderMetadataKey","finishReasonMap","end_turn","max_tokens","stop_sequence","tool_use","resolveFinishReason","finishReason","reason","isUndefined"],"sources":["../../../src/internal/utilities.ts"],"sourcesContent":[null],"mappings":"AACA,OAAO,KAAKA,SAAS,MAAM,kBAAkB;AAE7C;AACA,OAAO,MAAMC,mBAAmB,GAAG,8DAA8D;AAEjG,MAAMC,eAAe,GAA4C;EAC/DC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,QAAQ;EACpBC,aAAa,EAAE,MAAM;EACrBC,QAAQ,EAAE;CACX;AAED;AACA,OAAO,MAAMC,mBAAmB,GAAIC,YAAoB,IAA6B;EACnF,MAAMC,MAAM,GAAGP,eAAe,CAACM,YAAY,CAAC;EAC5C,OAAOR,SAAS,CAACU,WAAW,CAACD,MAAM,CAAC,GAAG,SAAS,GAAGA,MAAM;AAC3D,CAAC","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/dist/esm/package.json b/dist/dist/esm/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..5e8d4f8b206ed6b50641a6b833fd656cd98e12ca
--- /dev/null
+++ b/dist/dist/esm/package.json
@@ -0,0 +1,4 @@
+{
+  "type": "module",
+  "sideEffects": []
+}
diff --git a/dist/dist/index/package.json b/dist/dist/index/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..e405185f21eeaeb59f65d92b2a1430b635217694
--- /dev/null
+++ b/dist/dist/index/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/index.js",
+  "module": "../dist/esm/index.js",
+  "types": "../dist/dts/index.d.ts"
+}
diff --git a/dist/dist/package.json b/dist/dist/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..df43766d5f0d805c927fef895cf7fdd324062b13
--- /dev/null
+++ b/dist/dist/package.json
@@ -0,0 +1,88 @@
+{
+  "name": "@effect/ai-anthropic",
+  "version": "0.16.1",
+  "description": "Effect modules for working with AI apis",
+  "license": "MIT",
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/Effect-TS/effect.git",
+    "directory": "packages/ai/anthropic"
+  },
+  "sideEffects": [],
+  "homepage": "https://effect.website",
+  "dependencies": {
+    "@anthropic-ai/tokenizer": "^0.0.4"
+  },
+  "peerDependencies": {
+    "@effect/ai": "workspace:^",
+    "@effect/experimental": "workspace:^",
+    "@effect/platform": "workspace:^",
+    "effect": "workspace:^"
+  },
+  "publishConfig": {
+    "provenance": true
+  },
+  "main": "./dist/cjs/index.js",
+  "module": "./dist/esm/index.js",
+  "types": "./dist/dts/index.d.ts",
+  "exports": {
+    "./package.json": "./package.json",
+    ".": {
+      "types": "./dist/dts/index.d.ts",
+      "import": "./dist/esm/index.js",
+      "default": "./dist/cjs/index.js"
+    },
+    "./AnthropicClient": {
+      "types": "./dist/dts/AnthropicClient.d.ts",
+      "import": "./dist/esm/AnthropicClient.js",
+      "default": "./dist/cjs/AnthropicClient.js"
+    },
+    "./AnthropicConfig": {
+      "types": "./dist/dts/AnthropicConfig.d.ts",
+      "import": "./dist/esm/AnthropicConfig.js",
+      "default": "./dist/cjs/AnthropicConfig.js"
+    },
+    "./AnthropicLanguageModel": {
+      "types": "./dist/dts/AnthropicLanguageModel.d.ts",
+      "import": "./dist/esm/AnthropicLanguageModel.js",
+      "default": "./dist/cjs/AnthropicLanguageModel.js"
+    },
+    "./AnthropicTokenizer": {
+      "types": "./dist/dts/AnthropicTokenizer.d.ts",
+      "import": "./dist/esm/AnthropicTokenizer.js",
+      "default": "./dist/cjs/AnthropicTokenizer.js"
+    },
+    "./Generated": {
+      "types": "./dist/dts/Generated.d.ts",
+      "import": "./dist/esm/Generated.js",
+      "default": "./dist/cjs/Generated.js"
+    },
+    "./index": {
+      "types": "./dist/dts/index.d.ts",
+      "import": "./dist/esm/index.js",
+      "default": "./dist/cjs/index.js"
+    }
+  },
+  "typesVersions": {
+    "*": {
+      "AnthropicClient": [
+        "./dist/dts/AnthropicClient.d.ts"
+      ],
+      "AnthropicConfig": [
+        "./dist/dts/AnthropicConfig.d.ts"
+      ],
+      "AnthropicLanguageModel": [
+        "./dist/dts/AnthropicLanguageModel.d.ts"
+      ],
+      "AnthropicTokenizer": [
+        "./dist/dts/AnthropicTokenizer.d.ts"
+      ],
+      "Generated": [
+        "./dist/dts/Generated.d.ts"
+      ],
+      "index": [
+        "./dist/dts/index.d.ts"
+      ]
+    }
+  }
+}
\ No newline at end of file
diff --git a/dist/dist/src/AnthropicClient.ts b/dist/dist/src/AnthropicClient.ts
new file mode 100644
index 0000000000000000000000000000000000000000..ca18dfbdcb37d23d6c9e55ad7c82e74687eda883
--- /dev/null
+++ b/dist/dist/src/AnthropicClient.ts
@@ -0,0 +1,447 @@
+/**
+ * @since 1.0.0
+ */
+import * as AiError from "@effect/ai/AiError"
+import * as AiInput from "@effect/ai/AiInput"
+import * as AiResponse from "@effect/ai/AiResponse"
+import * as Sse from "@effect/experimental/Sse"
+import * as HttpBody from "@effect/platform/HttpBody"
+import * as HttpClient from "@effect/platform/HttpClient"
+import type * as HttpClientError from "@effect/platform/HttpClientError"
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest"
+import * as Config from "effect/Config"
+import type { ConfigError } from "effect/ConfigError"
+import * as Context from "effect/Context"
+import * as Effect from "effect/Effect"
+import { identity } from "effect/Function"
+import * as Layer from "effect/Layer"
+import * as Option from "effect/Option"
+import * as Predicate from "effect/Predicate"
+import * as Redacted from "effect/Redacted"
+import * as Stream from "effect/Stream"
+import { AnthropicConfig } from "./AnthropicConfig.js"
+import * as Generated from "./Generated.js"
+import * as InternalUtilities from "./internal/utilities.js"
+
+const constDisableValidation = { disableValidation: true } as const
+
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class AnthropicClient extends Context.Tag(
+  "@effect/ai-anthropic/AnthropicClient"
+)<AnthropicClient, AnthropicClient.Service>() {}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace AnthropicClient {
+  /**
+   * @since 1.0.0
+   * @category Models
+   */
+  export interface Service {
+    readonly client: Generated.Client
+    readonly streamRequest: <A>(
+      request: HttpClientRequest.HttpClientRequest
+    ) => Stream.Stream<A, HttpClientError.HttpClientError>
+    readonly stream: (
+      request: StreamCompletionRequest
+    ) => Stream.Stream<AiResponse.AiResponse, HttpClientError.HttpClientError>
+  }
+}
+
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = (options: {
+  readonly apiKey?: Redacted.Redacted | undefined
+  readonly apiUrl?: string | undefined
+  readonly anthropicVersion?: string | undefined
+  readonly organizationId?: Redacted.Redacted | undefined
+  readonly projectId?: Redacted.Redacted | undefined
+  readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined
+}): Effect.Effect<AnthropicClient.Service, never, HttpClient.HttpClient> =>
+  Effect.gen(function*() {
+    const httpClient = (yield* HttpClient.HttpClient).pipe(
+      HttpClient.mapRequest((request) =>
+        request.pipe(
+          HttpClientRequest.prependUrl(
+            options.apiUrl ?? "https://api.anthropic.com"
+          ),
+          options.apiKey
+            ? HttpClientRequest.setHeader(
+              "x-api-key",
+              Redacted.value(options.apiKey)
+            )
+            : identity,
+          HttpClientRequest.setHeader(
+            "anthropic-version",
+            options.anthropicVersion ?? "2023-06-01"
+          ),
+          HttpClientRequest.acceptJson
+        )
+      ),
+      options.transformClient ? options.transformClient : identity
+    )
+    const httpClientOk = HttpClient.filterStatusOk(httpClient)
+    const client = Generated.make(httpClient, {
+      transformClient: (client) =>
+        AnthropicConfig.getOrUndefined.pipe(
+          Effect.map((config) => config?.transformClient ? config.transformClient(client) : client)
+        )
+    })
+    const streamRequest = <A = unknown>(
+      request: HttpClientRequest.HttpClientRequest
+    ) =>
+      httpClientOk.execute(request).pipe(
+        Effect.map((r) => r.stream),
+        Stream.unwrapScoped,
+        Stream.decodeText(),
+        Stream.pipeThroughChannel(Sse.makeChannel()),
+        Stream.takeUntil((event) => event.event === "message_stop"),
+        Stream.map((event) => JSON.parse(event.data) as A)
+      )
+    const stream = (request: StreamCompletionRequest) =>
+      Stream.suspend(() => {
+        const toolCalls = {} as Record<number, RawToolCall>
+        let finishReason: AiResponse.FinishReason = "unknown"
+        let reasoning:
+          | {
+            readonly content: Array<string>
+            readonly signature?: string
+          }
+          | undefined = undefined
+        let usage: AiResponse.Usage = {
+          inputTokens: 0,
+          outputTokens: 0,
+          totalTokens: 0,
+          reasoningTokens: 0,
+          cacheReadInputTokens: 0,
+          cacheWriteInputTokens: 0
+        }
+        const metadata: Record<string, unknown> = {}
+        return streamRequest<MessageStreamEvent>(
+          HttpClientRequest.post("/v1/messages", {
+            body: HttpBody.unsafeJson({ ...request, stream: true })
+          })
+        ).pipe(
+          Stream.filterMapEffect((chunk) => {
+            const parts: Array<AiResponse.Part> = []
+            switch (chunk.type) {
+              case "message_start": {
+                usage = {
+                  inputTokens: chunk.message.usage.input_tokens,
+                  outputTokens: chunk.message.usage.output_tokens,
+                  totalTokens: chunk.message.usage.input_tokens +
+                    chunk.message.usage.output_tokens,
+                  reasoningTokens: 0,
+                  cacheWriteInputTokens: chunk.message.usage.cache_creation_input_tokens ?? 0,
+                  cacheReadInputTokens: chunk.message.usage.cache_read_input_tokens ?? 0
+                }
+                console.error("message_start", JSON.stringify(usage, null, 2))
+                parts.push(
+                  new AiResponse.MetadataPart(
+                    {
+                      id: chunk.message.id,
+                      model: chunk.message.model
+                    },
+                    constDisableValidation
+                  )
+                )
+                break
+              }
+              case "message_delta": {
+                usage = {
+                  ...usage,
+                  outputTokens: chunk.usage.output_tokens,
+                  totalTokens: usage.inputTokens + chunk.usage.output_tokens
+                }
+                console.error("message_delta", JSON.stringify(usage, null, 2))
+                if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
+                  metadata.stopSequence = chunk.delta.stop_sequence
+                }
+                finishReason = InternalUtilities.resolveFinishReason(chunk.delta.stop_reason)
+                break
+              }
+              case "message_stop": {
+                parts.push(
+                  new AiResponse.FinishPart({
+                    usage,
+                    reason: finishReason,
+                    providerMetadata: { [InternalUtilities.ProviderMetadataKey]: metadata }
+                  }, constDisableValidation)
+                )
+                break
+              }
+              case "content_block_start": {
+                const content = chunk.content_block
+                switch (content.type) {
+                  case "text": {
+                    break
+                  }
+                  case "thinking": {
+                    reasoning = { content: [content.thinking] }
+                    break
+                  }
+                  case "tool_use": {
+                    toolCalls[chunk.index] = {
+                      id: content.id,
+                      name: content.name,
+                      params: ""
+                    }
+                    break
+                  }
+                  case "redacted_thinking": {
+                    parts.push(
+                      new AiResponse.RedactedReasoningPart(
+                        { redactedText: content.data },
+                        constDisableValidation
+                      )
+                    )
+                    break
+                  }
+                }
+                break
+              }
+              case "content_block_delta": {
+                switch (chunk.delta.type) {
+                  case "text_delta": {
+                    parts.push(
+                      new AiResponse.TextPart(
+                        { text: chunk.delta.text },
+                        constDisableValidation
+                      )
+                    )
+                    break
+                  }
+                  case "thinking_delta": {
+                    if (Predicate.isNotUndefined(reasoning)) {
+                      reasoning.content.push(chunk.delta.thinking)
+                    }
+                    break
+                  }
+                  case "signature_delta": {
+                    if (Predicate.isNotUndefined(reasoning)) {
+                      reasoning = {
+                        ...reasoning,
+                        signature: chunk.delta.signature
+                      }
+                    }
+                    break
+                  }
+                  case "input_json_delta": {
+                    const tool = toolCalls[chunk.index]
+                    if (Predicate.isNotUndefined(tool)) {
+                      tool.params += chunk.delta.partial_json
+                    }
+                    break
+                  }
+                  // TODO: add support for citations (?)
+                  case "citations_delta": {
+                    break
+                  }
+                }
+                break
+              }
+              case "content_block_stop": {
+                if (Predicate.isNotUndefined(toolCalls[chunk.index])) {
+                  const tool = toolCalls[chunk.index]
+                  try {
+                    // If the tool call has no parameters, the model sends an empty string.
+                    const inputJson = tool.params === "" ? "{}" : tool.params
+                    const params = JSON.parse(inputJson)
+                    parts.push(
+                      new AiResponse.ToolCallPart({
+                        id: AiInput.ToolCallId.make(tool.id, constDisableValidation),
+                        name: tool.name,
+                        params
+                      }, constDisableValidation)
+                    )
+                    delete toolCalls[chunk.index]
+                    // eslint-disable-next-line no-empty
+                  } catch {}
+                }
+                if (Predicate.isNotUndefined(reasoning)) {
+                  parts.push(
+                    new AiResponse.ReasoningPart({
+                      reasoningText: reasoning.content.join(""),
+                      signature: reasoning.signature
+                    }, constDisableValidation)
+                  )
+                  reasoning = undefined
+                }
+                break
+              }
+              case "error": {
+                return Option.some(
+                  Effect.die(
+                    new AiError.AiError({
+                      module: "AnthropicClient",
+                      method: "stream",
+                      description: `${chunk.error.type}: ${chunk.error.message}`
+                    })
+                  )
+                )
+              }
+            }
+            return parts.length === 0
+              ? Option.none()
+              : Option.some(
+                Effect.succeed(
+                  AiResponse.AiResponse.make(
+                    { parts },
+                    constDisableValidation
+                  )
+                )
+              )
+          })
+        )
+      })
+    return AnthropicClient.of({ client, streamRequest, stream })
+  })
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = (options: {
+  readonly apiKey?: Redacted.Redacted | undefined
+  readonly apiUrl?: string | undefined
+  readonly anthropicVersion?: string | undefined
+  readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined
+}): Layer.Layer<AnthropicClient, never, HttpClient.HttpClient> => Layer.effect(AnthropicClient, make(options))
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layerConfig = (
+  options: {
+    readonly apiKey?: Config.Config<Redacted.Redacted | undefined> | undefined
+    readonly apiUrl?: Config.Config<string | undefined> | undefined
+    readonly anthropicVersion?: Config.Config<string | undefined> | undefined
+    readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined
+  }
+): Layer.Layer<AnthropicClient, ConfigError, HttpClient.HttpClient> => {
+  const { transformClient, ...configs } = options
+  return Config.all(configs).pipe(
+    Effect.flatMap((configs) => make({ ...configs, transformClient })),
+    Layer.effect(AnthropicClient)
+  )
+}
+
+/**
+ * @since 1.0.0
+ * @category Models
+ */
+export type StreamCompletionRequest = Omit<
+  typeof Generated.CreateMessageParams.Encoded,
+  "stream"
+>
+
+type MessageStreamEvent =
+  | ErrorEvent
+  | MessageStartEvent
+  | MessageDeltaEvent
+  | MessageStopEvent
+  | ContentBlockStartEvent
+  | ContentBlockDeltaEvent
+  | ContentBlockStopEvent
+
+interface MessageStartEvent {
+  readonly type: "message_start"
+  readonly message: typeof Generated.Message.Encoded
+}
+
+interface MessageDeltaEvent {
+  readonly type: "message_delta"
+  readonly delta: {
+    readonly stop_reason:
+      | "end_turn"
+      | "max_tokens"
+      | "stop_sequence"
+      | "tool_use"
+    readonly stop_sequence: string | null
+  }
+  readonly usage: {
+    readonly output_tokens: number
+  }
+}
+
+interface MessageStopEvent {
+  readonly type: "message_stop"
+}
+
+interface ContentBlockStartEvent {
+  readonly type: "content_block_start"
+  readonly index: number
+  readonly content_block: typeof Generated.ContentBlock.Encoded
+}
+
+interface ContentBlockDeltaEvent {
+  readonly type: "content_block_delta"
+  readonly index: number
+  readonly delta:
+    | CitationsDelta
+    | InputJsonContentBlockDelta
+    | SignatureDelta
+    | TextContentBlockDelta
+    | ThinkingDelta
+}
+
+interface CitationsDelta {
+  readonly type: "citations_delta"
+  readonly citation: NonNullable<
+    (typeof Generated.ResponseTextBlock.Encoded)["citations"]
+  >[number]
+}
+
+interface InputJsonContentBlockDelta {
+  readonly type: "input_json_delta"
+  readonly partial_json: string
+}
+
+interface SignatureDelta {
+  readonly type: "signature_delta"
+  readonly signature: string
+}
+
+interface TextContentBlockDelta {
+  readonly type: "text_delta"
+  readonly text: string
+}
+
+interface ThinkingDelta {
+  readonly type: "thinking_delta"
+  readonly thinking: string
+}
+
+interface ContentBlockStopEvent {
+  readonly type: "content_block_stop"
+  readonly index: number
+}
+
+interface ErrorEvent {
+  readonly type: "error"
+  readonly error: {
+    readonly type:
+      | "api_error"
+      | "authentication_error"
+      | "invalid_request_error"
+      | "not_found_error"
+      | "overloaded_error"
+      | "permission_error"
+      | "rate_limit_error"
+      | "request_too_large"
+    readonly message: string
+  }
+}
+
+type RawToolCall = {
+  readonly id: string
+  readonly name: string
+  params: string
+}
diff --git a/dist/dist/src/AnthropicConfig.ts b/dist/dist/src/AnthropicConfig.ts
new file mode 100644
index 0000000000000000000000000000000000000000..b6fde44ea8ef4148a7b634de5b67989acb1b17ae
--- /dev/null
+++ b/dist/dist/src/AnthropicConfig.ts
@@ -0,0 +1,56 @@
+/**
+ * @since 1.0.0
+ */
+import type { HttpClient } from "@effect/platform/HttpClient"
+import * as Context from "effect/Context"
+import * as Effect from "effect/Effect"
+import { dual } from "effect/Function"
+
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class AnthropicConfig extends Context.Tag("@effect/ai-anthropic/AnthropicConfig")<
+  AnthropicConfig,
+  AnthropicConfig.Service
+>() {
+  /**
+   * @since 1.0.0
+   */
+  static readonly getOrUndefined: Effect.Effect<typeof AnthropicConfig.Service | undefined> = Effect.map(
+    Effect.context<never>(),
+    (context) => context.unsafeMap.get(AnthropicConfig.key)
+  )
+}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace AnthropicConfig {
+  /**
+   * @since 1.0.0
+   * @category Models
+   */
+  export interface Service {
+    readonly transformClient?: (client: HttpClient) => HttpClient
+  }
+}
+
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export const withClientTransform: {
+  (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>
+  <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>
+} = dual<
+  (transform: (client: HttpClient) => HttpClient) => <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,
+  <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient) => Effect.Effect<A, E, R>
+>(
+  2,
+  (self, transformClient) =>
+    Effect.flatMap(
+      AnthropicConfig.getOrUndefined,
+      (config) => Effect.provideService(self, AnthropicConfig, { ...config, transformClient })
+    )
+)
diff --git a/dist/dist/src/AnthropicLanguageModel.ts b/dist/dist/src/AnthropicLanguageModel.ts
new file mode 100644
index 0000000000000000000000000000000000000000..872b3fbf38521ee070d091e525e461c03040b6d6
--- /dev/null
+++ b/dist/dist/src/AnthropicLanguageModel.ts
@@ -0,0 +1,583 @@
+/**
+ * @since 1.0.0
+ */
+import { AiError } from "@effect/ai/AiError"
+import type * as AiInput from "@effect/ai/AiInput"
+import * as AiLanguageModel from "@effect/ai/AiLanguageModel"
+import * as AiModel from "@effect/ai/AiModel"
+import * as AiResponse from "@effect/ai/AiResponse"
+import { addGenAIAnnotations } from "@effect/ai/AiTelemetry"
+import type * as Tokenizer from "@effect/ai/Tokenizer"
+import * as Arr from "effect/Array"
+import * as Context from "effect/Context"
+import * as Effect from "effect/Effect"
+import * as Encoding from "effect/Encoding"
+import { dual } from "effect/Function"
+import * as Layer from "effect/Layer"
+import * as Option from "effect/Option"
+import * as Predicate from "effect/Predicate"
+import * as Stream from "effect/Stream"
+import type { Span } from "effect/Tracer"
+import type { Mutable, Simplify } from "effect/Types"
+import { AnthropicClient } from "./AnthropicClient.js"
+import * as AnthropicTokenizer from "./AnthropicTokenizer.js"
+import type * as Generated from "./Generated.js"
+import * as InternalUtilities from "./internal/utilities.js"
+
+const constDisableValidation = { disableValidation: true } as const
+
+/**
+ * @since 1.0.0
+ * @category Models
+ */
+export type Model = typeof Generated.Model.Encoded
+
+// =============================================================================
+// Configuration
+// =============================================================================
+
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class Config extends Context.Tag("@effect/ai-anthropic/AnthropicLanguageModel/Config")<
+  Config,
+  Config.Service
+>() {
+  /**
+   * @since 1.0.0
+   */
+  static readonly getOrUndefined: Effect.Effect<typeof Config.Service | undefined> = Effect.map(
+    Effect.context<never>(),
+    (context) => context.unsafeMap.get(Config.key)
+  )
+}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace Config {
+  /**
+   * @since 1.0.0
+   * @category Configuration
+   */
+  export interface Service extends
+    Simplify<
+      Partial<
+        Omit<
+          typeof Generated.CreateMessageParams.Encoded,
+          "messages" | "tools" | "tool_choice" | "stream"
+        >
+      >
+    >
+  {}
+}
+
+// =============================================================================
+// Anthropic Provider Metadata
+// =============================================================================
+
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class ProviderMetadata extends Context.Tag(InternalUtilities.ProviderMetadataKey)<
+  ProviderMetadata,
+  ProviderMetadata.Service
+>() {}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace ProviderMetadata {
+  /**
+   * @since 1.0.0
+   * @category Provider Metadata
+   */
+  export interface Service {
+    /**
+     * Which custom stop sequence was generated, if any.
+     *
+     * Will be a non-null string if one of your custom stop sequences was
+     * generated.
+     */
+    readonly stopSequence?: string
+  }
+}
+
+// =============================================================================
+// Anthropic Language Model
+// =============================================================================
+
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export const model = (
+  model: (string & {}) | Model,
+  config?: Omit<Config.Service, "model">
+): AiModel.AiModel<AiLanguageModel.AiLanguageModel, AnthropicClient> => AiModel.make(layer({ model, config }))
+
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export const modelWithTokenizer = (
+  model: (string & {}) | Model,
+  config?: Omit<Config.Service, "model">
+): AiModel.AiModel<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, AnthropicClient> =>
+  AiModel.make(layerWithTokenizer({ model, config }))
+
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = Effect.fnUntraced(function*(options: {
+  readonly model: (string & {}) | Model
+  readonly config?: Omit<Config.Service, "model">
+}) {
+  const client = yield* AnthropicClient
+
+  const makeRequest = Effect.fnUntraced(
+    function*(method: string, { prompt, system, toolChoice, tools }: AiLanguageModel.AiLanguageModelOptions) {
+      const context = yield* Effect.context<never>()
+      const useStructured = tools.length === 1 && tools[0].structured
+      let tool_choice: typeof Generated.ToolChoice.Encoded | undefined = undefined
+      if (useStructured) {
+        tool_choice = { type: "tool", name: tools[0].name }
+      } else if (tools.length > 0) {
+        if (toolChoice === "required") {
+          tool_choice = { type: "any" }
+        } else if (typeof toolChoice === "object") {
+          tool_choice = { type: "tool", name: toolChoice.tool }
+        } else {
+          tool_choice = { type: toolChoice }
+        }
+      }
+      const messages = yield* makeMessages(method, prompt)
+      return {
+        model: options.model,
+        max_tokens: 4096,
+        ...options.config,
+        ...context.unsafeMap.get(Config.key),
+        // TODO: re-evaluate a better way to do this
+        system: Option.getOrUndefined(system),
+        messages,
+        tools: tools.length === 0 ? undefined : tools.map((tool) => ({
+          name: tool.name,
+          description: tool.description,
+          input_schema: tool.parameters as any
+        })),
+        tool_choice
+      } satisfies typeof Generated.CreateMessageParams.Encoded
+    }
+  )
+
+  return yield* AiLanguageModel.make({
+    generateText: Effect.fnUntraced(
+      function*(options) {
+        const request = yield* makeRequest("generateText", options)
+        annotateRequest(options.span, request)
+        const rawResponse = yield* client.client.messagesPost({ params: {}, payload: request })
+        annotateChatResponse(options.span, rawResponse)
+        const response = yield* makeResponse(rawResponse)
+        return response
+      },
+      Effect.catchAll((cause) =>
+        AiError.is(cause) ? cause : new AiError({
+          module: "AnthropicLanguageModel",
+          method: "generateText",
+          description: "An error occurred",
+          cause
+        })
+      )
+    ),
+    streamText(options) {
+      return makeRequest("streamText", options).pipe(
+        Effect.tap((request) => annotateRequest(options.span, request)),
+        Effect.map(client.stream),
+        Stream.unwrap,
+        Stream.map((response) => {
+          annotateStreamResponse(options.span, response)
+          return response
+        }),
+        Stream.catchAll((cause) =>
+          AiError.is(cause) ? Effect.fail(cause) : Effect.fail(
+            new AiError({
+              module: "AnthropicLanguageModel",
+              method: "streamText",
+              description: "An error occurred",
+              cause
+            })
+          )
+        )
+      )
+    }
+  })
+})
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = (options: {
+  readonly model: (string & {}) | Model
+  readonly config?: Omit<Config.Service, "model">
+}): Layer.Layer<AiLanguageModel.AiLanguageModel, never, AnthropicClient> =>
+  Layer.effect(AiLanguageModel.AiLanguageModel, make({ model: options.model, config: options.config }))
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layerWithTokenizer = (options: {
+  readonly model: (string & {}) | Model
+  readonly config?: Omit<Config.Service, "model">
+}): Layer.Layer<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, never, AnthropicClient> =>
+  Layer.merge(layer(options), AnthropicTokenizer.layer)
+
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export const withConfigOverride: {
+  (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>
+  <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>
+} = dual<
+  (config: Config.Service) => <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,
+  <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service) => Effect.Effect<A, E, R>
+>(2, (self, overrides) =>
+  Effect.flatMap(
+    Config.getOrUndefined,
+    (config) => Effect.provideService(self, Config, { ...config, ...overrides })
+  ))
+
+// =============================================================================
+// Utilities
+// =============================================================================
+
+type MessageGroup = AssistantMessageGroup | UserMessageGroup
+
+interface AssistantMessageGroup {
+  readonly type: "assistant"
+  readonly messages: Array<AiInput.AssistantMessage>
+}
+
+interface UserMessageGroup {
+  readonly type: "user"
+  readonly messages: Array<AiInput.ToolMessage | AiInput.UserMessage>
+}
+
+const groupMessages = (prompt: AiInput.AiInput): Array<MessageGroup> => {
+  const messages: Array<MessageGroup> = []
+  let current: MessageGroup | undefined = undefined
+  for (const message of prompt.messages) {
+    switch (message._tag) {
+      case "AssistantMessage": {
+        if (current?.type !== "assistant") {
+          current = { type: "assistant", messages: [] }
+          messages.push(current)
+        }
+        current.messages.push(message)
+        break
+      }
+      case "ToolMessage":
+      case "UserMessage": {
+        if (current?.type !== "user") {
+          current = { type: "user", messages: [] }
+          messages.push(current)
+        }
+        current.messages.push(message)
+        break
+      }
+    }
+  }
+  return messages
+}
+
+const makeMessages = Effect.fnUntraced(
+  function*(method: string, prompt: AiInput.AiInput) {
+    const messages: Array<typeof Generated.InputMessage.Encoded> = []
+    const groups = groupMessages(prompt)
+    for (let i = 0; i < groups.length; i++) {
+      const group = groups[i]
+      const isLastGroup = i === groups.length - 1
+      switch (group.type) {
+        case "assistant": {
+          const content: Array<typeof Generated.InputContentBlock.Encoded> = []
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j]
+            const isLastMessage = j === group.messages.length - 1
+            for (let k = 0; k < message.parts.length; k++) {
+              const part = message.parts[k]
+              const isLastPart = k === message.parts.length - 1
+              switch (part._tag) {
+                case "ReasoningPart": {
+                  content.push({
+                    type: "thinking",
+                    thinking: part.reasoningText,
+                    signature: part.signature!
+                  })
+                  break
+                }
+                case "RedactedReasoningPart": {
+                  content.push({
+                    type: "redacted_thinking",
+                    data: part.redactedText
+                  })
+                  break
+                }
+                case "TextPart": {
+                  content.push({
+                    type: "text",
+                    text:
+                      // Anthropic does not allow trailing whitespace in assistant
+                      // content blocks
+                      isLastGroup && isLastMessage && isLastPart
+                        ? part.text.trim()
+                        : part.text
+                  })
+                  break
+                }
+                case "ToolCallPart": {
+                  content.push({
+                    type: "tool_use",
+                    id: part.id,
+                    name: part.name,
+                    input: part.params as any
+                  })
+                  break
+                }
+              }
+            }
+          }
+          messages.push({ role: "assistant", content })
+          break
+        }
+        case "user": {
+          const content: Array<typeof Generated.InputContentBlock.Encoded> = []
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j]
+            switch (message._tag) {
+              case "ToolMessage": {
+                for (let k = 0; k < message.parts.length; k++) {
+                  const part = message.parts[k]
+                  // TODO: support advanced tool result content parts
+                  content.push({
+                    type: "tool_result",
+                    tool_use_id: part.id,
+                    content: JSON.stringify(part.result)
+                  })
+                }
+                break
+              }
+              case "UserMessage": {
+                for (let k = 0; k < message.parts.length; k++) {
+                  const part = message.parts[k]
+                  switch (part._tag) {
+                    case "FilePart": {
+                      if (Predicate.isUndefined(part.mediaType) || part.mediaType !== "application/pdf") {
+                        return yield* new AiError({
+                          module: "AnthropicLanguageModel",
+                          method,
+                          description: "AnthropicLanguageModel only supports PDF file inputs"
+                        })
+                      }
+                      content.push({
+                        type: "document",
+                        source: {
+                          type: "base64",
+                          media_type: "application/pdf",
+                          data: Encoding.encodeBase64(part.data)
+                        }
+                      })
+                      break
+                    }
+                    case "FileUrlPart": {
+                      content.push({
+                        type: "document",
+                        source: {
+                          type: "url",
+                          url: part.url.toString()
+                        }
+                      })
+                      break
+                    }
+                    case "TextPart": {
+                      content.push({
+                        type: "text",
+                        text: part.text
+                      })
+                      break
+                    }
+                    case "ImagePart": {
+                      content.push({
+                        type: "image",
+                        source: {
+                          type: "base64",
+                          media_type: part.mediaType ?? "image/jpeg" as any,
+                          data: Encoding.encodeBase64(part.data)
+                        }
+                      })
+                      break
+                    }
+                    case "ImageUrlPart": {
+                      content.push({
+                        type: "image",
+                        source: {
+                          type: "url",
+                          url: part.url.toString()
+                        }
+                      })
+                      break
+                    }
+                  }
+                }
+                break
+              }
+            }
+          }
+          messages.push({ role: "user", content })
+          break
+        }
+      }
+    }
+    if (Arr.isNonEmptyReadonlyArray(messages)) {
+      return messages
+    }
+    return yield* new AiError({
+      module: "AnthropicLanguageModel",
+      method,
+      description: "Prompt contained no messages"
+    })
+  }
+)
+
+const makeResponse = Effect.fnUntraced(
+  function*(response: Generated.Message) {
+    const parts: Array<AiResponse.Part> = []
+    parts.push(
+      new AiResponse.MetadataPart({
+        id: response.id,
+        model: response.model
+      }, constDisableValidation)
+    )
+    for (const part of response.content) {
+      switch (part.type) {
+        case "text": {
+          parts.push(
+            new AiResponse.TextPart({
+              text: part.text
+            }, constDisableValidation)
+          )
+          break
+        }
+        case "tool_use": {
+          parts.push(
+            AiResponse.ToolCallPart.fromUnknown({
+              id: part.id,
+              name: part.name,
+              params: part.input
+            })
+          )
+          break
+        }
+        case "thinking": {
+          parts.push(
+            new AiResponse.ReasoningPart({
+              reasoningText: part.thinking,
+              signature: part.signature
+            }, constDisableValidation)
+          )
+          break
+        }
+        case "redacted_thinking": {
+          parts.push(
+            new AiResponse.RedactedReasoningPart({
+              redactedText: part.data
+            }, constDisableValidation)
+          )
+          break
+        }
+      }
+    }
+    const metadata: Mutable<ProviderMetadata.Service> = {}
+    if (response.stop_sequence !== null) {
+      metadata.stopSequence = response.stop_sequence
+    }
+    parts.push(
+      new AiResponse.FinishPart({
+        // Anthropic always returns a non-null `stop_reason` for non-streaming responses
+        reason: InternalUtilities.resolveFinishReason(response.stop_reason!),
+        usage: new AiResponse.Usage({
+          inputTokens: response.usage.input_tokens,
+          outputTokens: response.usage.output_tokens,
+          totalTokens: response.usage.input_tokens + response.usage.output_tokens,
+          reasoningTokens: 0,
+          cacheReadInputTokens: response.usage.cache_read_input_tokens ?? 0,
+          cacheWriteInputTokens: response.usage.cache_creation_input_tokens ?? 0
+        }),
+        providerMetadata: { [InternalUtilities.ProviderMetadataKey]: metadata }
+      }, constDisableValidation)
+    )
+    return new AiResponse.AiResponse({
+      parts
+    }, constDisableValidation)
+  }
+)
+
+const annotateRequest = (
+  span: Span,
+  request: typeof Generated.CreateMessageParams.Encoded
+): void => {
+  addGenAIAnnotations(span, {
+    system: "anthropic",
+    operation: { name: "chat" },
+    request: {
+      model: request.model,
+      temperature: request.temperature,
+      topK: request.top_k,
+      topP: request.top_p,
+      maxTokens: request.max_tokens,
+      stopSequences: Arr.ensure(request.stop_sequences).filter(
+        Predicate.isNotNullable
+      )
+    }
+  })
+}
+
+const annotateChatResponse = (
+  span: Span,
+  response: typeof Generated.Message.Encoded
+): void => {
+  addGenAIAnnotations(span, {
+    response: {
+      id: response.id,
+      model: response.model,
+      finishReasons: response.stop_reason ? [response.stop_reason] : undefined
+    },
+    usage: {
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens
+    }
+  })
+}
+
+const annotateStreamResponse = (
+  span: Span,
+  response: AiResponse.AiResponse
+) => {
+  const metadataPart = response.parts.find((part) => part._tag === "MetadataPart")
+  const finishPart = response.parts.find((part) => part._tag === "FinishPart")
+  addGenAIAnnotations(span, {
+    response: {
+      id: metadataPart?.id,
+      model: metadataPart?.model,
+      finishReasons: finishPart?.reason ? [finishPart.reason] : undefined
+    },
+    usage: {
+      inputTokens: finishPart?.usage.inputTokens,
+      outputTokens: finishPart?.usage.outputTokens
+    }
+  })
+}
diff --git a/dist/dist/src/AnthropicTokenizer.ts b/dist/dist/src/AnthropicTokenizer.ts
new file mode 100644
index 0000000000000000000000000000000000000000..d0f415d2b9200d9d4f25c290916dcfae9e1af5ba
--- /dev/null
+++ b/dist/dist/src/AnthropicTokenizer.ts
@@ -0,0 +1,68 @@
+/**
+ * @since 1.0.0
+ */
+import { getTokenizer } from "@anthropic-ai/tokenizer"
+import { AiError } from "@effect/ai/AiError"
+import type * as AiInput from "@effect/ai/AiInput"
+import * as Tokenizer from "@effect/ai/Tokenizer"
+import * as Arr from "effect/Array"
+import * as Effect from "effect/Effect"
+import * as Layer from "effect/Layer"
+import * as Option from "effect/Option"
+
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = Tokenizer.make({
+  tokenize(input) {
+    return Effect.try({
+      try: () => {
+        const tokenizer = getTokenizer()
+        const text = Arr.flatMap(input.messages, (message) =>
+          Arr.filterMap(
+            message.parts as Array<
+              | AiInput.AssistantMessagePart
+              | AiInput.ToolMessagePart
+              | AiInput.UserMessagePart
+            >,
+            (part) => {
+              if (
+                part._tag === "FilePart" ||
+                part._tag === "FileUrlPart" ||
+                part._tag === "ImagePart" ||
+                part._tag === "ImageUrlPart" ||
+                part._tag === "ReasoningPart" ||
+                part._tag === "RedactedReasoningPart"
+              ) return Option.none()
+              return Option.some(
+                part._tag === "TextPart"
+                  ? part.text
+                  : JSON.stringify(
+                    part._tag === "ToolCallPart"
+                      ? part.params :
+                      part.result
+                  )
+              )
+            }
+          )).join("")
+        const encoded = tokenizer.encode(text.normalize("NFKC"), "all")
+        tokenizer.free()
+        return Array.from(encoded)
+      },
+      catch: (cause) =>
+        new AiError({
+          module: "AnthropicTokenizer",
+          method: "tokenize",
+          description: "Could not tokenize",
+          cause
+        })
+    })
+  }
+})
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer: Layer.Layer<Tokenizer.Tokenizer> = Layer.succeed(Tokenizer.Tokenizer, make)
diff --git a/dist/dist/src/Generated.ts b/dist/dist/src/Generated.ts
new file mode 100644
index 0000000000000000000000000000000000000000..644ad429aedf47d4fb1a4b845c2e1e2f311fef59
--- /dev/null
+++ b/dist/dist/src/Generated.ts
@@ -0,0 +1,2884 @@
+/**
+ * @since 1.0.0
+ */
+import type * as HttpClient from "@effect/platform/HttpClient"
+import * as HttpClientError from "@effect/platform/HttpClientError"
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest"
+import * as HttpClientResponse from "@effect/platform/HttpClientResponse"
+import type * as UrlParams from "@effect/platform/UrlParams"
+import * as Effect from "effect/Effect"
+import type { ParseError } from "effect/ParseResult"
+import * as S from "effect/Schema"
+
+export class MessagesPostParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class Model extends S.Literal(
+  "claude-3-7-sonnet-latest",
+  "claude-3-7-sonnet-20250219",
+  "claude-3-5-haiku-latest",
+  "claude-3-5-haiku-20241022",
+  "claude-sonnet-4-20250514",
+  "claude-sonnet-4-0",
+  "claude-4-sonnet-20250514",
+  "claude-3-5-sonnet-latest",
+  "claude-3-5-sonnet-20241022",
+  "claude-3-5-sonnet-20240620",
+  "claude-opus-4-0",
+  "claude-opus-4-20250514",
+  "claude-4-opus-20250514",
+  "claude-3-opus-latest",
+  "claude-3-opus-20240229",
+  "claude-3-sonnet-20240229",
+  "claude-3-haiku-20240307",
+  "claude-2.1",
+  "claude-2.0"
+) {}
+
+export class CacheControlEphemeralType extends S.Literal("ephemeral") {}
+
+export class CacheControlEphemeral extends S.Struct({
+  "type": CacheControlEphemeralType
+}) {}
+
+export class RequestServerToolUseBlockName extends S.Literal("web_search") {}
+
+export class RequestServerToolUseBlockType extends S.Literal("server_tool_use") {}
+
+export class RequestServerToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": RequestServerToolUseBlockName,
+  "type": RequestServerToolUseBlockType
+}) {}
+
+export class RequestWebSearchResultBlockType extends S.Literal("web_search_result") {}
+
+export class RequestWebSearchResultBlock extends S.Struct({
+  "encrypted_content": S.String,
+  "page_age": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "title": S.String,
+  "type": RequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+
+export class WebSearchToolResultErrorCode
+  extends S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long")
+{}
+
+export class RequestWebSearchToolResultErrorType extends S.Literal("web_search_tool_result_error") {}
+
+export class RequestWebSearchToolResultError extends S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": RequestWebSearchToolResultErrorType
+}) {}
+
+export class RequestWebSearchToolResultBlockType extends S.Literal("web_search_tool_result") {}
+
+export class RequestWebSearchToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.Union(S.Array(RequestWebSearchResultBlock), RequestWebSearchToolResultError),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": RequestWebSearchToolResultBlockType
+}) {}
+
+export class RequestCharLocationCitationType extends S.Literal("char_location") {}
+
+export class RequestCharLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": RequestCharLocationCitationType
+}) {}
+
+export class RequestPageLocationCitationType extends S.Literal("page_location") {}
+
+export class RequestPageLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "type": RequestPageLocationCitationType
+}) {}
+
+export class RequestContentBlockLocationCitationType extends S.Literal("content_block_location") {}
+
+export class RequestContentBlockLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": RequestContentBlockLocationCitationType
+}) {}
+
+export class RequestWebSearchResultLocationCitationType extends S.Literal("web_search_result_location") {}
+
+export class RequestWebSearchResultLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "type": RequestWebSearchResultLocationCitationType,
+  "url": S.String.pipe(S.minLength(1), S.maxLength(2048))
+}) {}
+
+export class RequestTextBlockType extends S.Literal("text") {}
+
+export class RequestTextBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "citations": S.optionalWith(
+    S.Union(
+      S.Array(
+        S.Union(
+          RequestCharLocationCitation,
+          RequestPageLocationCitation,
+          RequestContentBlockLocationCitation,
+          RequestWebSearchResultLocationCitation
+        )
+      ),
+      S.Null
+    ),
+    { nullable: true }
+  ),
+  "text": S.String.pipe(S.minLength(1)),
+  "type": RequestTextBlockType
+}) {}
+
+export class Base64ImageSourceMediaType extends S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+
+export class Base64ImageSourceType extends S.Literal("base64") {}
+
+export class Base64ImageSource extends S.Struct({
+  "data": S.String,
+  "media_type": Base64ImageSourceMediaType,
+  "type": Base64ImageSourceType
+}) {}
+
+export class URLImageSourceType extends S.Literal("url") {}
+
+export class URLImageSource extends S.Struct({
+  "type": URLImageSourceType,
+  "url": S.String
+}) {}
+
+export class RequestImageBlockType extends S.Literal("image") {}
+
+export class RequestImageBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "source": S.Union(Base64ImageSource, URLImageSource),
+  "type": RequestImageBlockType
+}) {}
+
+export class RequestToolUseBlockType extends S.Literal("tool_use") {}
+
+export class RequestToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String.pipe(S.minLength(1), S.maxLength(200)),
+  "type": RequestToolUseBlockType
+}) {}
+
+export class RequestToolResultBlockType extends S.Literal("tool_result") {}
+
+export class RequestToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.optionalWith(S.Union(S.String, S.Array(S.Union(RequestTextBlock, RequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": S.optionalWith(S.Boolean, { nullable: true }),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": RequestToolResultBlockType
+}) {}
+
+export class RequestCitationsConfig extends S.Struct({
+  "enabled": S.optionalWith(S.Boolean, { nullable: true })
+}) {}
+
+export class Base64PDFSourceMediaType extends S.Literal("application/pdf") {}
+
+export class Base64PDFSourceType extends S.Literal("base64") {}
+
+export class Base64PDFSource extends S.Struct({
+  "data": S.String,
+  "media_type": Base64PDFSourceMediaType,
+  "type": Base64PDFSourceType
+}) {}
+
+export class PlainTextSourceMediaType extends S.Literal("text/plain") {}
+
+export class PlainTextSourceType extends S.Literal("text") {}
+
+export class PlainTextSource extends S.Struct({
+  "data": S.String,
+  "media_type": PlainTextSourceMediaType,
+  "type": PlainTextSourceType
+}) {}
+
+export class ContentBlockSourceType extends S.Literal("content") {}
+
+export class ContentBlockSource extends S.Struct({
+  "content": S.Union(S.String, S.Array(S.Union(RequestTextBlock, RequestImageBlock))),
+  "type": ContentBlockSourceType
+}) {}
+
+export class URLPDFSourceType extends S.Literal("url") {}
+
+export class URLPDFSource extends S.Struct({
+  "type": URLPDFSourceType,
+  "url": S.String
+}) {}
+
+export class RequestDocumentBlockType extends S.Literal("document") {}
+
+export class RequestDocumentBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "citations": S.optionalWith(RequestCitationsConfig, { nullable: true }),
+  "context": S.optionalWith(S.Union(S.String.pipe(S.minLength(1)), S.Null), { nullable: true }),
+  "source": S.Union(Base64PDFSource, PlainTextSource, ContentBlockSource, URLPDFSource),
+  "title": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(500)), S.Null), { nullable: true }),
+  "type": RequestDocumentBlockType
+}) {}
+
+export class RequestThinkingBlockType extends S.Literal("thinking") {}
+
+export class RequestThinkingBlock extends S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": RequestThinkingBlockType
+}) {}
+
+export class RequestRedactedThinkingBlockType extends S.Literal("redacted_thinking") {}
+
+export class RequestRedactedThinkingBlock extends S.Struct({
+  "data": S.String,
+  "type": RequestRedactedThinkingBlockType
+}) {}
+
+export class InputContentBlock extends S.Union(
+  RequestServerToolUseBlock,
+  RequestWebSearchToolResultBlock,
+  RequestTextBlock,
+  RequestImageBlock,
+  RequestToolUseBlock,
+  RequestToolResultBlock,
+  RequestDocumentBlock,
+  RequestThinkingBlock,
+  RequestRedactedThinkingBlock
+) {}
+
+export class InputMessageRole extends S.Literal("user", "assistant") {}
+
+export class InputMessage extends S.Struct({
+  "content": S.Union(S.String, S.Array(InputContentBlock)),
+  "role": InputMessageRole
+}) {}
+
+export class Metadata extends S.Struct({
+  "user_id": S.optionalWith(S.Union(S.String.pipe(S.maxLength(256)), S.Null), { nullable: true })
+}) {}
+
+export class CreateMessageParamsServiceTier extends S.Literal("auto", "standard_only") {}
+
+export class ThinkingConfigEnabledType extends S.Literal("enabled") {}
+
+export class ThinkingConfigEnabled extends S.Struct({
+  "budget_tokens": S.Int.pipe(S.greaterThanOrEqualTo(1024)),
+  "type": ThinkingConfigEnabledType
+}) {}
+
+export class ThinkingConfigDisabledType extends S.Literal("disabled") {}
+
+export class ThinkingConfigDisabled extends S.Struct({
+  "type": ThinkingConfigDisabledType
+}) {}
+
+export class ThinkingConfigParam extends S.Union(ThinkingConfigEnabled, ThinkingConfigDisabled) {}
+
+export class ToolChoiceAutoType extends S.Literal("auto") {}
+
+export class ToolChoiceAuto extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "type": ToolChoiceAutoType
+}) {}
+
+export class ToolChoiceAnyType extends S.Literal("any") {}
+
+export class ToolChoiceAny extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "type": ToolChoiceAnyType
+}) {}
+
+export class ToolChoiceToolType extends S.Literal("tool") {}
+
+export class ToolChoiceTool extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "name": S.String,
+  "type": ToolChoiceToolType
+}) {}
+
+export class ToolChoiceNoneType extends S.Literal("none") {}
+
+export class ToolChoiceNone extends S.Struct({
+  "type": ToolChoiceNoneType
+}) {}
+
+export class ToolChoice extends S.Union(ToolChoiceAuto, ToolChoiceAny, ToolChoiceTool, ToolChoiceNone) {}
+
+export class ToolTypeEnum extends S.Literal("custom") {}
+
+export class InputSchemaType extends S.Literal("object") {}
+
+export class InputSchema extends S.Struct({
+  "properties": S.optionalWith(S.Union(S.Record({ key: S.String, value: S.Unknown }), S.Null), { nullable: true }),
+  "required": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "type": InputSchemaType
+}) {}
+
+export class Tool extends S.Struct({
+  "type": S.optionalWith(S.Union(S.Null, ToolTypeEnum), { nullable: true }),
+  "description": S.optionalWith(S.String, { nullable: true }),
+  "name": S.String.pipe(S.minLength(1), S.maxLength(64), S.pattern(new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": InputSchema,
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true })
+}) {}
+
+export class BashTool20250124Name extends S.Literal("bash") {}
+
+export class BashTool20250124Type extends S.Literal("bash_20250124") {}
+
+export class BashTool20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BashTool20250124Name,
+  "type": BashTool20250124Type
+}) {}
+
+export class TextEditor20250124Name extends S.Literal("str_replace_editor") {}
+
+export class TextEditor20250124Type extends S.Literal("text_editor_20250124") {}
+
+export class TextEditor20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "name": TextEditor20250124Name,
+  "type": TextEditor20250124Type
+}) {}
+
+export class TextEditor20250429Name extends S.Literal("str_replace_based_edit_tool") {}
+
+export class TextEditor20250429Type extends S.Literal("text_editor_20250429") {}
+
+export class TextEditor20250429 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "name": TextEditor20250429Name,
+  "type": TextEditor20250429Type
+}) {}
+
+export class WebSearchTool20250305Name extends S.Literal("web_search") {}
+
+export class WebSearchTool20250305Type extends S.Literal("web_search_20250305") {}
+
+export class UserLocationType extends S.Literal("approximate") {}
+
+export class UserLocation extends S.Struct({
+  "city": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "country": S.optionalWith(S.Union(S.String.pipe(S.minLength(2), S.maxLength(2)), S.Null), { nullable: true }),
+  "region": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "timezone": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "type": UserLocationType
+}) {}
+
+export class WebSearchTool20250305 extends S.Struct({
+  "allowed_domains": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "blocked_domains": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "max_uses": S.optionalWith(S.Union(S.Int.pipe(S.greaterThan(0)), S.Null), { nullable: true }),
+  "name": WebSearchTool20250305Name,
+  "type": WebSearchTool20250305Type,
+  "user_location": S.optionalWith(S.Union(UserLocation, S.Null), { nullable: true })
+}) {}
+
+export class CreateMessageParams extends S.Class<CreateMessageParams>("CreateMessageParams")({
+  "model": S.Union(S.String, Model),
+  "messages": S.Array(InputMessage),
+  "max_tokens": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "metadata": S.optionalWith(Metadata, { nullable: true }),
+  "service_tier": S.optionalWith(CreateMessageParamsServiceTier, { nullable: true }),
+  "stop_sequences": S.optionalWith(S.Array(S.String), { nullable: true }),
+  "stream": S.optionalWith(S.Boolean, { nullable: true }),
+  "system": S.optionalWith(S.Union(S.String, S.Array(RequestTextBlock)), { nullable: true }),
+  "temperature": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true }),
+  "thinking": S.optionalWith(ThinkingConfigParam, { nullable: true }),
+  "tool_choice": S.optionalWith(ToolChoice, { nullable: true }),
+  "tools": S.optionalWith(
+    S.Array(S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)),
+    { nullable: true }
+  ),
+  "top_k": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(0)), { nullable: true }),
+  "top_p": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true })
+}) {}
+
+export class MessageType extends S.Literal("message") {}
+
+export class MessageRole extends S.Literal("assistant") {}
+
+export class ResponseCharLocationCitationType extends S.Literal("char_location") {}
+
+export class ResponseCharLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": ResponseCharLocationCitationType
+}) {}
+
+export class ResponsePageLocationCitationType extends S.Literal("page_location") {}
+
+export class ResponsePageLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "type": ResponsePageLocationCitationType
+}) {}
+
+export class ResponseContentBlockLocationCitationType extends S.Literal("content_block_location") {}
+
+export class ResponseContentBlockLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": ResponseContentBlockLocationCitationType
+}) {}
+
+export class ResponseWebSearchResultLocationCitationType extends S.Literal("web_search_result_location") {}
+
+export class ResponseWebSearchResultLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": S.Union(S.String, S.Null),
+  "type": ResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+
+export class ResponseTextBlockType extends S.Literal("text") {}
+
+export class ResponseTextBlock extends S.Struct({
+  "citations": S.optional(S.NullOr(
+    S.Array(
+      S.Union(
+        ResponseCharLocationCitation,
+        ResponsePageLocationCitation,
+        ResponseContentBlockLocationCitation,
+        ResponseWebSearchResultLocationCitation
+      )
+    )
+  )),
+  "text": S.String.pipe(S.minLength(0), S.maxLength(5000000)),
+  "type": ResponseTextBlockType
+}) {}
+
+export class ResponseToolUseBlockType extends S.Literal("tool_use") {}
+
+export class ResponseToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String.pipe(S.minLength(1)),
+  "type": ResponseToolUseBlockType
+}) {}
+
+export class ResponseServerToolUseBlockName extends S.Literal("web_search") {}
+
+export class ResponseServerToolUseBlockType extends S.Literal("server_tool_use") {}
+
+export class ResponseServerToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": ResponseServerToolUseBlockName,
+  "type": ResponseServerToolUseBlockType
+}) {}
+
+export class ResponseWebSearchToolResultErrorType extends S.Literal("web_search_tool_result_error") {}
+
+export class ResponseWebSearchToolResultError extends S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": ResponseWebSearchToolResultErrorType
+}) {}
+
+export class ResponseWebSearchResultBlockType extends S.Literal("web_search_result") {}
+
+export class ResponseWebSearchResultBlock extends S.Struct({
+  "encrypted_content": S.String,
+  "page_age": S.NullOr(S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": ResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+
+export class ResponseWebSearchToolResultBlockType extends S.Literal("web_search_tool_result") {}
+
+export class ResponseWebSearchToolResultBlock extends S.Struct({
+  "content": S.Union(ResponseWebSearchToolResultError, S.Array(ResponseWebSearchResultBlock)),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": ResponseWebSearchToolResultBlockType
+}) {}
+
+export class ResponseThinkingBlockType extends S.Literal("thinking") {}
+
+export class ResponseThinkingBlock extends S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": ResponseThinkingBlockType
+}) {}
+
+export class ResponseRedactedThinkingBlockType extends S.Literal("redacted_thinking") {}
+
+export class ResponseRedactedThinkingBlock extends S.Struct({
+  "data": S.String,
+  "type": ResponseRedactedThinkingBlockType
+}) {}
+
+export class ContentBlock extends S.Union(
+  ResponseTextBlock,
+  ResponseToolUseBlock,
+  ResponseServerToolUseBlock,
+  ResponseWebSearchToolResultBlock,
+  ResponseThinkingBlock,
+  ResponseRedactedThinkingBlock
+) {}
+
+export class StopReason
+  extends S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal")
+{}
+
+export class ServerToolUsage extends S.Struct({
+  "web_search_requests": S.Int.pipe(S.greaterThanOrEqualTo(0))
+}) {}
+
+export class UsageServiceTierEnum extends S.Literal("standard", "priority", "batch") {}
+
+export class Usage extends S.Struct({
+  "cache_creation_input_tokens": S.NullOr(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": S.NullOr(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "output_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "server_tool_use": S.optional(S.NullOr(ServerToolUsage)),
+  "service_tier": S.NullOr(S.Union(UsageServiceTierEnum, S.Null))
+}) {}
+
+export class Message extends S.Class<Message>("Message")({
+  "id": S.String,
+  "type": MessageType,
+  "role": MessageRole,
+  "content": S.Array(ContentBlock),
+  "model": S.Union(S.String, Model),
+  "stop_reason": S.Union(StopReason, S.Null),
+  "stop_sequence": S.NullOr(S.Union(S.String, S.Null)),
+  "usage": Usage
+}) {}
+
+export class InvalidRequestErrorType extends S.Literal("invalid_request_error") {}
+
+export class InvalidRequestError extends S.Struct({
+  "message": S.String,
+  "type": InvalidRequestErrorType
+}) {}
+
+export class AuthenticationErrorType extends S.Literal("authentication_error") {}
+
+export class AuthenticationError extends S.Struct({
+  "message": S.String,
+  "type": AuthenticationErrorType
+}) {}
+
+export class BillingErrorType extends S.Literal("billing_error") {}
+
+export class BillingError extends S.Struct({
+  "message": S.String,
+  "type": BillingErrorType
+}) {}
+
+export class PermissionErrorType extends S.Literal("permission_error") {}
+
+export class PermissionError extends S.Struct({
+  "message": S.String,
+  "type": PermissionErrorType
+}) {}
+
+export class NotFoundErrorType extends S.Literal("not_found_error") {}
+
+export class NotFoundError extends S.Struct({
+  "message": S.String,
+  "type": NotFoundErrorType
+}) {}
+
+export class RateLimitErrorType extends S.Literal("rate_limit_error") {}
+
+export class RateLimitError extends S.Struct({
+  "message": S.String,
+  "type": RateLimitErrorType
+}) {}
+
+export class GatewayTimeoutErrorType extends S.Literal("timeout_error") {}
+
+export class GatewayTimeoutError extends S.Struct({
+  "message": S.String,
+  "type": GatewayTimeoutErrorType
+}) {}
+
+export class APIErrorType extends S.Literal("api_error") {}
+
+export class APIError extends S.Struct({
+  "message": S.String,
+  "type": APIErrorType
+}) {}
+
+export class OverloadedErrorType extends S.Literal("overloaded_error") {}
+
+export class OverloadedError extends S.Struct({
+  "message": S.String,
+  "type": OverloadedErrorType
+}) {}
+
+export class ErrorResponseType extends S.Literal("error") {}
+
+export class ErrorResponse extends S.Class<ErrorResponse>("ErrorResponse")({
+  "error": S.Union(
+    InvalidRequestError,
+    AuthenticationError,
+    BillingError,
+    PermissionError,
+    NotFoundError,
+    RateLimitError,
+    GatewayTimeoutError,
+    APIError,
+    OverloadedError
+  ),
+  "type": ErrorResponseType
+}) {}
+
+export class CompletePostParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class CompletionRequest extends S.Class<CompletionRequest>("CompletionRequest")({
+  "model": S.Union(S.String, Model),
+  "prompt": S.String.pipe(S.minLength(1)),
+  "max_tokens_to_sample": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "stop_sequences": S.optionalWith(S.Array(S.String), { nullable: true }),
+  "temperature": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true }),
+  "top_p": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true }),
+  "top_k": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(0)), { nullable: true }),
+  "metadata": S.optionalWith(Metadata, { nullable: true }),
+  "stream": S.optionalWith(S.Boolean, { nullable: true })
+}) {}
+
+export class CompletionResponseType extends S.Literal("completion") {}
+
+export class CompletionResponse extends S.Class<CompletionResponse>("CompletionResponse")({
+  "completion": S.String,
+  "id": S.String,
+  "model": S.Union(S.String, Model),
+  "stop_reason": S.Union(S.String, S.Null),
+  "type": CompletionResponseType
+}) {}
+
+export class ModelsListParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class ModelInfoType extends S.Literal("model") {}
+
+export class ModelInfo extends S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": ModelInfoType
+}) {}
+
+export class ListResponseModelInfo extends S.Class<ListResponseModelInfo>("ListResponseModelInfo")({
+  "data": S.Array(ModelInfo),
+  "first_id": S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": S.Union(S.String, S.Null)
+}) {}
+
+export class ModelsGetParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchesListParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchProcessingStatus extends S.Literal("in_progress", "canceling", "ended") {}
+
+export class RequestCounts extends S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+
+export class MessageBatchType extends S.Literal("message_batch") {}
+
+export class MessageBatch extends S.Struct({
+  "archived_at": S.Union(S.String, S.Null),
+  "cancel_initiated_at": S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": MessageBatchProcessingStatus,
+  "request_counts": RequestCounts,
+  "results_url": S.Union(S.String, S.Null),
+  "type": MessageBatchType
+}) {}
+
+export class ListResponseMessageBatch extends S.Class<ListResponseMessageBatch>("ListResponseMessageBatch")({
+  "data": S.Array(MessageBatch),
+  "first_id": S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": S.Union(S.String, S.Null)
+}) {}
+
+export class MessageBatchesPostParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchIndividualRequestParams extends S.Struct({
+  "custom_id": S.String.pipe(S.minLength(1), S.maxLength(64), S.pattern(new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": CreateMessageParams
+}) {}
+
+export class CreateMessageBatchParams extends S.Class<CreateMessageBatchParams>("CreateMessageBatchParams")({
+  "requests": S.Array(MessageBatchIndividualRequestParams).pipe(S.minItems(1), S.maxItems(10000))
+}) {}
+
+export class MessageBatchesRetrieveParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchesDeleteParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class DeleteMessageBatchResponseType extends S.Literal("message_batch_deleted") {}
+
+export class DeleteMessageBatchResponse extends S.Class<DeleteMessageBatchResponse>("DeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": DeleteMessageBatchResponseType
+}) {}
+
+export class MessageBatchesCancelParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchesResultsParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessagesCountTokensPostParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class CountMessageTokensParams extends S.Class<CountMessageTokensParams>("CountMessageTokensParams")({
+  "messages": S.Array(InputMessage),
+  "model": S.Union(S.String, Model),
+  "system": S.optionalWith(S.Union(S.String, S.Array(RequestTextBlock)), { nullable: true }),
+  "thinking": S.optionalWith(ThinkingConfigParam, { nullable: true }),
+  "tool_choice": S.optionalWith(ToolChoice, { nullable: true }),
+  "tools": S.optionalWith(
+    S.Array(S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)),
+    { nullable: true }
+  )
+}) {}
+
+export class CountMessageTokensResponse extends S.Class<CountMessageTokensResponse>("CountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+
+export class ListFilesV1FilesGetParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class FileMetadataSchemaType extends S.Literal("file") {}
+
+export class FileMetadataSchema extends S.Struct({
+  "created_at": S.String,
+  "downloadable": S.optionalWith(S.Boolean, { nullable: true }),
+  "filename": S.String.pipe(S.minLength(1), S.maxLength(500)),
+  "id": S.String,
+  "mime_type": S.String.pipe(S.minLength(1), S.maxLength(255)),
+  "size_bytes": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": FileMetadataSchemaType
+}) {}
+
+export class FileListResponse extends S.Class<FileListResponse>("FileListResponse")({
+  "data": S.Array(FileMetadataSchema),
+  "first_id": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "has_more": S.optionalWith(S.Boolean, { nullable: true }),
+  "last_id": S.optionalWith(S.Union(S.String, S.Null), { nullable: true })
+}) {}
+
+export class UploadFileV1FilesPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class GetFileMetadataV1FilesFileIdGetParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class DeleteFileV1FilesFileIdDeleteParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class FileDeleteResponseType extends S.Literal("file_deleted") {}
+
+export class FileDeleteResponse extends S.Class<FileDeleteResponse>("FileDeleteResponse")({
+  "id": S.String,
+  "type": S.optionalWith(FileDeleteResponseType, { nullable: true })
+}) {}
+
+export class DownloadFileV1FilesFileIdContentGetParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessagesPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaCacheControlEphemeralTtl extends S.Literal("5m", "1h") {}
+
+export class BetaCacheControlEphemeralType extends S.Literal("ephemeral") {}
+
+export class BetaCacheControlEphemeral extends S.Struct({
+  "ttl": S.optionalWith(BetaCacheControlEphemeralTtl, { nullable: true }),
+  "type": BetaCacheControlEphemeralType
+}) {}
+
+export class BetaRequestServerToolUseBlockName extends S.Literal("web_search", "code_execution") {}
+
+export class BetaRequestServerToolUseBlockType extends S.Literal("server_tool_use") {}
+
+export class BetaRequestServerToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": BetaRequestServerToolUseBlockName,
+  "type": BetaRequestServerToolUseBlockType
+}) {}
+
+export class BetaRequestWebSearchResultBlockType extends S.Literal("web_search_result") {}
+
+export class BetaRequestWebSearchResultBlock extends S.Struct({
+  "encrypted_content": S.String,
+  "page_age": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "title": S.String,
+  "type": BetaRequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+
+export class BetaWebSearchToolResultErrorCode
+  extends S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long")
+{}
+
+export class BetaRequestWebSearchToolResultErrorType extends S.Literal("web_search_tool_result_error") {}
+
+export class BetaRequestWebSearchToolResultError extends S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaRequestWebSearchToolResultErrorType
+}) {}
+
+export class BetaRequestWebSearchToolResultBlockType extends S.Literal("web_search_tool_result") {}
+
+export class BetaRequestWebSearchToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.Union(S.Array(BetaRequestWebSearchResultBlock), BetaRequestWebSearchToolResultError),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestWebSearchToolResultBlockType
+}) {}
+
+export class BetaCodeExecutionToolResultErrorCode
+  extends S.Literal("invalid_tool_input", "unavailable", "too_many_requests", "execution_time_exceeded")
+{}
+
+export class BetaRequestCodeExecutionToolResultErrorType extends S.Literal("code_execution_tool_result_error") {}
+
+export class BetaRequestCodeExecutionToolResultError extends S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaRequestCodeExecutionToolResultErrorType
+}) {}
+
+export class BetaRequestCodeExecutionOutputBlockType extends S.Literal("code_execution_output") {}
+
+export class BetaRequestCodeExecutionOutputBlock extends S.Struct({
+  "file_id": S.String,
+  "type": BetaRequestCodeExecutionOutputBlockType
+}) {}
+
+export class BetaRequestCodeExecutionResultBlockType extends S.Literal("code_execution_result") {}
+
+export class BetaRequestCodeExecutionResultBlock extends S.Struct({
+  "content": S.Array(BetaRequestCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaRequestCodeExecutionResultBlockType
+}) {}
+
+export class BetaRequestCodeExecutionToolResultBlockType extends S.Literal("code_execution_tool_result") {}
+
+export class BetaRequestCodeExecutionToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.Union(BetaRequestCodeExecutionToolResultError, BetaRequestCodeExecutionResultBlock),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestCodeExecutionToolResultBlockType
+}) {}
+
+export class BetaRequestMCPToolUseBlockType extends S.Literal("mcp_tool_use") {}
+
+export class BetaRequestMCPToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaRequestMCPToolUseBlockType
+}) {}
+
+export class BetaRequestCharLocationCitationType extends S.Literal("char_location") {}
+
+export class BetaRequestCharLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestCharLocationCitationType
+}) {}
+
+export class BetaRequestPageLocationCitationType extends S.Literal("page_location") {}
+
+export class BetaRequestPageLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "type": BetaRequestPageLocationCitationType
+}) {}
+
+export class BetaRequestContentBlockLocationCitationType extends S.Literal("content_block_location") {}
+
+export class BetaRequestContentBlockLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestContentBlockLocationCitationType
+}) {}
+
+export class BetaRequestWebSearchResultLocationCitationType extends S.Literal("web_search_result_location") {}
+
+export class BetaRequestWebSearchResultLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "type": BetaRequestWebSearchResultLocationCitationType,
+  "url": S.String.pipe(S.minLength(1), S.maxLength(2048))
+}) {}
+
+export class BetaRequestTextBlockType extends S.Literal("text") {}
+
+export class BetaRequestTextBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "citations": S.optionalWith(
+    S.Union(
+      S.Array(
+        S.Union(
+          BetaRequestCharLocationCitation,
+          BetaRequestPageLocationCitation,
+          BetaRequestContentBlockLocationCitation,
+          BetaRequestWebSearchResultLocationCitation
+        )
+      ),
+      S.Null
+    ),
+    { nullable: true }
+  ),
+  "text": S.String.pipe(S.minLength(1)),
+  "type": BetaRequestTextBlockType
+}) {}
+
+export class BetaRequestMCPToolResultBlockType extends S.Literal("mcp_tool_result") {}
+
+export class BetaRequestMCPToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.optionalWith(S.Union(S.String, S.Array(BetaRequestTextBlock)), { nullable: true }),
+  "is_error": S.optionalWith(S.Boolean, { nullable: true }),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestMCPToolResultBlockType
+}) {}
+
+export class BetaBase64ImageSourceMediaType extends S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+
+export class BetaBase64ImageSourceType extends S.Literal("base64") {}
+
+export class BetaBase64ImageSource extends S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64ImageSourceMediaType,
+  "type": BetaBase64ImageSourceType
+}) {}
+
+export class BetaURLImageSourceType extends S.Literal("url") {}
+
+export class BetaURLImageSource extends S.Struct({
+  "type": BetaURLImageSourceType,
+  "url": S.String
+}) {}
+
+export class BetaFileImageSourceType extends S.Literal("file") {}
+
+export class BetaFileImageSource extends S.Struct({
+  "file_id": S.String,
+  "type": BetaFileImageSourceType
+}) {}
+
+export class BetaRequestImageBlockType extends S.Literal("image") {}
+
+export class BetaRequestImageBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "source": S.Union(BetaBase64ImageSource, BetaURLImageSource, BetaFileImageSource),
+  "type": BetaRequestImageBlockType
+}) {}
+
+export class BetaRequestToolUseBlockType extends S.Literal("tool_use") {}
+
+export class BetaRequestToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String.pipe(S.minLength(1), S.maxLength(200)),
+  "type": BetaRequestToolUseBlockType
+}) {}
+
+export class BetaRequestToolResultBlockType extends S.Literal("tool_result") {}
+
+export class BetaRequestToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.optionalWith(S.Union(S.String, S.Array(S.Union(BetaRequestTextBlock, BetaRequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": S.optionalWith(S.Boolean, { nullable: true }),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestToolResultBlockType
+}) {}
+
+export class BetaRequestCitationsConfig extends S.Struct({
+  "enabled": S.optionalWith(S.Boolean, { nullable: true })
+}) {}
+
+export class BetaBase64PDFSourceMediaType extends S.Literal("application/pdf") {}
+
+export class BetaBase64PDFSourceType extends S.Literal("base64") {}
+
+export class BetaBase64PDFSource extends S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64PDFSourceMediaType,
+  "type": BetaBase64PDFSourceType
+}) {}
+
+export class BetaPlainTextSourceMediaType extends S.Literal("text/plain") {}
+
+export class BetaPlainTextSourceType extends S.Literal("text") {}
+
+export class BetaPlainTextSource extends S.Struct({
+  "data": S.String,
+  "media_type": BetaPlainTextSourceMediaType,
+  "type": BetaPlainTextSourceType
+}) {}
+
+export class BetaContentBlockSourceType extends S.Literal("content") {}
+
+export class BetaContentBlockSource extends S.Struct({
+  "content": S.Union(S.String, S.Array(S.Union(BetaRequestTextBlock, BetaRequestImageBlock))),
+  "type": BetaContentBlockSourceType
+}) {}
+
+export class BetaURLPDFSourceType extends S.Literal("url") {}
+
+export class BetaURLPDFSource extends S.Struct({
+  "type": BetaURLPDFSourceType,
+  "url": S.String
+}) {}
+
+export class BetaFileDocumentSourceType extends S.Literal("file") {}
+
+export class BetaFileDocumentSource extends S.Struct({
+  "file_id": S.String,
+  "type": BetaFileDocumentSourceType
+}) {}
+
+export class BetaRequestDocumentBlockType extends S.Literal("document") {}
+
+export class BetaRequestDocumentBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "citations": S.optionalWith(BetaRequestCitationsConfig, { nullable: true }),
+  "context": S.optionalWith(S.Union(S.String.pipe(S.minLength(1)), S.Null), { nullable: true }),
+  "source": S.Union(
+    BetaBase64PDFSource,
+    BetaPlainTextSource,
+    BetaContentBlockSource,
+    BetaURLPDFSource,
+    BetaFileDocumentSource
+  ),
+  "title": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(500)), S.Null), { nullable: true }),
+  "type": BetaRequestDocumentBlockType
+}) {}
+
+export class BetaRequestThinkingBlockType extends S.Literal("thinking") {}
+
+export class BetaRequestThinkingBlock extends S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaRequestThinkingBlockType
+}) {}
+
+export class BetaRequestRedactedThinkingBlockType extends S.Literal("redacted_thinking") {}
+
+export class BetaRequestRedactedThinkingBlock extends S.Struct({
+  "data": S.String,
+  "type": BetaRequestRedactedThinkingBlockType
+}) {}
+
+export class BetaRequestContainerUploadBlockType extends S.Literal("container_upload") {}
+
+export class BetaRequestContainerUploadBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "file_id": S.String,
+  "type": BetaRequestContainerUploadBlockType
+}) {}
+
+export class BetaInputContentBlock extends S.Union(
+  BetaRequestServerToolUseBlock,
+  BetaRequestWebSearchToolResultBlock,
+  BetaRequestCodeExecutionToolResultBlock,
+  BetaRequestMCPToolUseBlock,
+  BetaRequestMCPToolResultBlock,
+  BetaRequestTextBlock,
+  BetaRequestImageBlock,
+  BetaRequestToolUseBlock,
+  BetaRequestToolResultBlock,
+  BetaRequestDocumentBlock,
+  BetaRequestThinkingBlock,
+  BetaRequestRedactedThinkingBlock,
+  BetaRequestContainerUploadBlock
+) {}
+
+export class BetaInputMessageRole extends S.Literal("user", "assistant") {}
+
+export class BetaInputMessage extends S.Struct({
+  "content": S.Union(S.String, S.Array(BetaInputContentBlock)),
+  "role": BetaInputMessageRole
+}) {}
+
+export class BetaRequestMCPServerToolConfiguration extends S.Struct({
+  "allowed_tools": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "enabled": S.optionalWith(S.Union(S.Boolean, S.Null), { nullable: true })
+}) {}
+
+export class BetaRequestMCPServerURLDefinitionType extends S.Literal("url") {}
+
+export class BetaRequestMCPServerURLDefinition extends S.Struct({
+  "authorization_token": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "name": S.String,
+  "tool_configuration": S.optionalWith(S.Union(BetaRequestMCPServerToolConfiguration, S.Null), { nullable: true }),
+  "type": BetaRequestMCPServerURLDefinitionType,
+  "url": S.String
+}) {}
+
+export class BetaMetadata extends S.Struct({
+  "user_id": S.optionalWith(S.Union(S.String.pipe(S.maxLength(256)), S.Null), { nullable: true })
+}) {}
+
+export class BetaCreateMessageParamsServiceTier extends S.Literal("auto", "standard_only") {}
+
+export class BetaThinkingConfigEnabledType extends S.Literal("enabled") {}
+
+export class BetaThinkingConfigEnabled extends S.Struct({
+  "budget_tokens": S.Int.pipe(S.greaterThanOrEqualTo(1024)),
+  "type": BetaThinkingConfigEnabledType
+}) {}
+
+export class BetaThinkingConfigDisabledType extends S.Literal("disabled") {}
+
+export class BetaThinkingConfigDisabled extends S.Struct({
+  "type": BetaThinkingConfigDisabledType
+}) {}
+
+export class BetaThinkingConfigParam extends S.Union(BetaThinkingConfigEnabled, BetaThinkingConfigDisabled) {}
+
+export class BetaToolChoiceAutoType extends S.Literal("auto") {}
+
+export class BetaToolChoiceAuto extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "type": BetaToolChoiceAutoType
+}) {}
+
+export class BetaToolChoiceAnyType extends S.Literal("any") {}
+
+export class BetaToolChoiceAny extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "type": BetaToolChoiceAnyType
+}) {}
+
+export class BetaToolChoiceToolType extends S.Literal("tool") {}
+
+export class BetaToolChoiceTool extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "name": S.String,
+  "type": BetaToolChoiceToolType
+}) {}
+
+export class BetaToolChoiceNoneType extends S.Literal("none") {}
+
+export class BetaToolChoiceNone extends S.Struct({
+  "type": BetaToolChoiceNoneType
+}) {}
+
+export class BetaToolChoice
+  extends S.Union(BetaToolChoiceAuto, BetaToolChoiceAny, BetaToolChoiceTool, BetaToolChoiceNone)
+{}
+
+export class BetaToolTypeEnum extends S.Literal("custom") {}
+
+export class BetaInputSchemaType extends S.Literal("object") {}
+
+export class BetaInputSchema extends S.Struct({
+  "properties": S.optionalWith(S.Union(S.Record({ key: S.String, value: S.Unknown }), S.Null), { nullable: true }),
+  "required": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "type": BetaInputSchemaType
+}) {}
+
+export class BetaTool extends S.Struct({
+  "type": S.optionalWith(S.Union(S.Null, BetaToolTypeEnum), { nullable: true }),
+  "description": S.optionalWith(S.String, { nullable: true }),
+  "name": S.String.pipe(S.minLength(1), S.maxLength(64), S.pattern(new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": BetaInputSchema,
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true })
+}) {}
+
+export class BetaComputerUseTool20241022Name extends S.Literal("computer") {}
+
+export class BetaComputerUseTool20241022Type extends S.Literal("computer_20241022") {}
+
+export class BetaComputerUseTool20241022 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "display_height_px": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "display_number": S.optionalWith(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null), { nullable: true }),
+  "display_width_px": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20241022Name,
+  "type": BetaComputerUseTool20241022Type
+}) {}
+
+export class BetaBashTool20241022Name extends S.Literal("bash") {}
+
+export class BetaBashTool20241022Type extends S.Literal("bash_20241022") {}
+
+export class BetaBashTool20241022 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaBashTool20241022Name,
+  "type": BetaBashTool20241022Type
+}) {}
+
+export class BetaTextEditor20241022Name extends S.Literal("str_replace_editor") {}
+
+export class BetaTextEditor20241022Type extends S.Literal("text_editor_20241022") {}
+
+export class BetaTextEditor20241022 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaTextEditor20241022Name,
+  "type": BetaTextEditor20241022Type
+}) {}
+
+export class BetaComputerUseTool20250124Name extends S.Literal("computer") {}
+
+export class BetaComputerUseTool20250124Type extends S.Literal("computer_20250124") {}
+
+export class BetaComputerUseTool20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "display_height_px": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "display_number": S.optionalWith(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null), { nullable: true }),
+  "display_width_px": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20250124Name,
+  "type": BetaComputerUseTool20250124Type
+}) {}
+
+export class BetaBashTool20250124Name extends S.Literal("bash") {}
+
+export class BetaBashTool20250124Type extends S.Literal("bash_20250124") {}
+
+export class BetaBashTool20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaBashTool20250124Name,
+  "type": BetaBashTool20250124Type
+}) {}
+
+export class BetaTextEditor20250124Name extends S.Literal("str_replace_editor") {}
+
+export class BetaTextEditor20250124Type extends S.Literal("text_editor_20250124") {}
+
+export class BetaTextEditor20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaTextEditor20250124Name,
+  "type": BetaTextEditor20250124Type
+}) {}
+
+export class BetaTextEditor20250429Name extends S.Literal("str_replace_based_edit_tool") {}
+
+export class BetaTextEditor20250429Type extends S.Literal("text_editor_20250429") {}
+
+export class BetaTextEditor20250429 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaTextEditor20250429Name,
+  "type": BetaTextEditor20250429Type
+}) {}
+
+export class BetaWebSearchTool20250305Name extends S.Literal("web_search") {}
+
+export class BetaWebSearchTool20250305Type extends S.Literal("web_search_20250305") {}
+
+export class BetaUserLocationType extends S.Literal("approximate") {}
+
+export class BetaUserLocation extends S.Struct({
+  "city": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "country": S.optionalWith(S.Union(S.String.pipe(S.minLength(2), S.maxLength(2)), S.Null), { nullable: true }),
+  "region": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "timezone": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "type": BetaUserLocationType
+}) {}
+
+export class BetaWebSearchTool20250305 extends S.Struct({
+  "allowed_domains": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "blocked_domains": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "max_uses": S.optionalWith(S.Union(S.Int.pipe(S.greaterThan(0)), S.Null), { nullable: true }),
+  "name": BetaWebSearchTool20250305Name,
+  "type": BetaWebSearchTool20250305Type,
+  "user_location": S.optionalWith(S.Union(BetaUserLocation, S.Null), { nullable: true })
+}) {}
+
+export class BetaCodeExecutionTool20250522Name extends S.Literal("code_execution") {}
+
+export class BetaCodeExecutionTool20250522Type extends S.Literal("code_execution_20250522") {}
+
+export class BetaCodeExecutionTool20250522 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaCodeExecutionTool20250522Name,
+  "type": BetaCodeExecutionTool20250522Type
+}) {}
+
+export class BetaCreateMessageParams extends S.Class<BetaCreateMessageParams>("BetaCreateMessageParams")({
+  "model": S.Union(S.String, Model),
+  "messages": S.Array(BetaInputMessage),
+  "container": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "max_tokens": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "mcp_servers": S.optionalWith(S.Array(BetaRequestMCPServerURLDefinition).pipe(S.maxItems(20)), { nullable: true }),
+  "metadata": S.optionalWith(BetaMetadata, { nullable: true }),
+  "service_tier": S.optionalWith(BetaCreateMessageParamsServiceTier, { nullable: true }),
+  "stop_sequences": S.optionalWith(S.Array(S.String), { nullable: true }),
+  "stream": S.optionalWith(S.Boolean, { nullable: true }),
+  "system": S.optionalWith(S.Union(S.String, S.Array(BetaRequestTextBlock)), { nullable: true }),
+  "temperature": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true }),
+  "thinking": S.optionalWith(BetaThinkingConfigParam, { nullable: true }),
+  "tool_choice": S.optionalWith(BetaToolChoice, { nullable: true }),
+  "tools": S.optionalWith(
+    S.Array(
+      S.Union(
+        BetaTool,
+        BetaComputerUseTool20241022,
+        BetaBashTool20241022,
+        BetaTextEditor20241022,
+        BetaComputerUseTool20250124,
+        BetaBashTool20250124,
+        BetaTextEditor20250124,
+        BetaTextEditor20250429,
+        BetaWebSearchTool20250305,
+        BetaCodeExecutionTool20250522
+      )
+    ),
+    { nullable: true }
+  ),
+  "top_k": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(0)), { nullable: true }),
+  "top_p": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true })
+}) {}
+
+export class BetaMessageType extends S.Literal("message") {}
+
+export class BetaMessageRole extends S.Literal("assistant") {}
+
+export class BetaResponseCharLocationCitationType extends S.Literal("char_location") {}
+
+export class BetaResponseCharLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseCharLocationCitationType
+}) {}
+
+export class BetaResponsePageLocationCitationType extends S.Literal("page_location") {}
+
+export class BetaResponsePageLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "type": BetaResponsePageLocationCitationType
+}) {}
+
+export class BetaResponseContentBlockLocationCitationType extends S.Literal("content_block_location") {}
+
+export class BetaResponseContentBlockLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseContentBlockLocationCitationType
+}) {}
+
+export class BetaResponseWebSearchResultLocationCitationType extends S.Literal("web_search_result_location") {}
+
+export class BetaResponseWebSearchResultLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": S.Union(S.String, S.Null),
+  "type": BetaResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+
+export class BetaResponseTextBlockType extends S.Literal("text") {}
+
+export class BetaResponseTextBlock extends S.Struct({
+  "citations": S.optional(S.NullOr(
+    S.Array(
+      S.Union(
+        BetaResponseCharLocationCitation,
+        BetaResponsePageLocationCitation,
+        BetaResponseContentBlockLocationCitation,
+        BetaResponseWebSearchResultLocationCitation
+      )
+    )
+  )),
+  "text": S.String.pipe(S.minLength(0), S.maxLength(5000000)),
+  "type": BetaResponseTextBlockType
+}) {}
+
+export class BetaResponseToolUseBlockType extends S.Literal("tool_use") {}
+
+export class BetaResponseToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String.pipe(S.minLength(1)),
+  "type": BetaResponseToolUseBlockType
+}) {}
+
+export class BetaResponseServerToolUseBlockName extends S.Literal("web_search", "code_execution") {}
+
+export class BetaResponseServerToolUseBlockType extends S.Literal("server_tool_use") {}
+
+export class BetaResponseServerToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": BetaResponseServerToolUseBlockName,
+  "type": BetaResponseServerToolUseBlockType
+}) {}
+
+export class BetaResponseWebSearchToolResultErrorType extends S.Literal("web_search_tool_result_error") {}
+
+export class BetaResponseWebSearchToolResultError extends S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaResponseWebSearchToolResultErrorType
+}) {}
+
+export class BetaResponseWebSearchResultBlockType extends S.Literal("web_search_result") {}
+
+export class BetaResponseWebSearchResultBlock extends S.Struct({
+  "encrypted_content": S.String,
+  "page_age": S.NullOr(S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": BetaResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+
+export class BetaResponseWebSearchToolResultBlockType extends S.Literal("web_search_tool_result") {}
+
+export class BetaResponseWebSearchToolResultBlock extends S.Struct({
+  "content": S.Union(BetaResponseWebSearchToolResultError, S.Array(BetaResponseWebSearchResultBlock)),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseWebSearchToolResultBlockType
+}) {}
+
+export class BetaResponseCodeExecutionToolResultErrorType extends S.Literal("code_execution_tool_result_error") {}
+
+export class BetaResponseCodeExecutionToolResultError extends S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaResponseCodeExecutionToolResultErrorType
+}) {}
+
+export class BetaResponseCodeExecutionOutputBlockType extends S.Literal("code_execution_output") {}
+
+export class BetaResponseCodeExecutionOutputBlock extends S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseCodeExecutionOutputBlockType
+}) {}
+
+export class BetaResponseCodeExecutionResultBlockType extends S.Literal("code_execution_result") {}
+
+export class BetaResponseCodeExecutionResultBlock extends S.Struct({
+  "content": S.Array(BetaResponseCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaResponseCodeExecutionResultBlockType
+}) {}
+
+export class BetaResponseCodeExecutionToolResultBlockType extends S.Literal("code_execution_tool_result") {}
+
+export class BetaResponseCodeExecutionToolResultBlock extends S.Struct({
+  "content": S.Union(BetaResponseCodeExecutionToolResultError, BetaResponseCodeExecutionResultBlock),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseCodeExecutionToolResultBlockType
+}) {}
+
+export class BetaResponseMCPToolUseBlockType extends S.Literal("mcp_tool_use") {}
+
+export class BetaResponseMCPToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaResponseMCPToolUseBlockType
+}) {}
+
+export class BetaResponseMCPToolResultBlockType extends S.Literal("mcp_tool_result") {}
+
+export class BetaResponseMCPToolResultBlock extends S.Struct({
+  "content": S.Union(S.String, S.Array(BetaResponseTextBlock)),
+  "is_error": S.Boolean,
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaResponseMCPToolResultBlockType
+}) {}
+
+export class BetaResponseContainerUploadBlockType extends S.Literal("container_upload") {}
+
+export class BetaResponseContainerUploadBlock extends S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseContainerUploadBlockType
+}) {}
+
+export class BetaResponseThinkingBlockType extends S.Literal("thinking") {}
+
+export class BetaResponseThinkingBlock extends S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaResponseThinkingBlockType
+}) {}
+
+export class BetaResponseRedactedThinkingBlockType extends S.Literal("redacted_thinking") {}
+
+export class BetaResponseRedactedThinkingBlock extends S.Struct({
+  "data": S.String,
+  "type": BetaResponseRedactedThinkingBlockType
+}) {}
+
+export class BetaContentBlock extends S.Union(
+  BetaResponseTextBlock,
+  BetaResponseToolUseBlock,
+  BetaResponseServerToolUseBlock,
+  BetaResponseWebSearchToolResultBlock,
+  BetaResponseCodeExecutionToolResultBlock,
+  BetaResponseMCPToolUseBlock,
+  BetaResponseMCPToolResultBlock,
+  BetaResponseContainerUploadBlock,
+  BetaResponseThinkingBlock,
+  BetaResponseRedactedThinkingBlock
+) {}
+
+export class BetaStopReason
+  extends S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal")
+{}
+
+export class BetaCacheCreation extends S.Struct({
+  "ephemeral_1h_input_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "ephemeral_5m_input_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0))
+}) {}
+
+export class BetaServerToolUsage extends S.Struct({
+  "web_search_requests": S.Int.pipe(S.greaterThanOrEqualTo(0))
+}) {}
+
+export class BetaUsageServiceTierEnum extends S.Literal("standard", "priority", "batch") {}
+
+export class BetaUsage extends S.Struct({
+  "cache_creation": S.NullOr(S.Union(BetaCacheCreation, S.Null)),
+  "cache_creation_input_tokens": S.NullOr(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": S.NullOr(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "output_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "server_tool_use": S.optional(S.NullOr(BetaServerToolUsage)),
+  "service_tier": S.NullOr(S.Union(BetaUsageServiceTierEnum, S.Null))
+}) {}
+
+export class BetaContainer extends S.Struct({
+  "expires_at": S.String,
+  "id": S.String
+}) {}
+
+export class BetaMessage extends S.Class<BetaMessage>("BetaMessage")({
+  "id": S.String,
+  "type": BetaMessageType,
+  "role": BetaMessageRole,
+  "content": S.Array(BetaContentBlock),
+  "model": S.Union(S.String, Model),
+  "stop_reason": S.Union(BetaStopReason, S.Null),
+  "stop_sequence": S.NullOr(S.Union(S.String, S.Null)),
+  "usage": BetaUsage,
+  "container": S.NullOr(S.Union(BetaContainer, S.Null))
+}) {}
+
+export class BetaInvalidRequestErrorType extends S.Literal("invalid_request_error") {}
+
+export class BetaInvalidRequestError extends S.Struct({
+  "message": S.String,
+  "type": BetaInvalidRequestErrorType
+}) {}
+
+export class BetaAuthenticationErrorType extends S.Literal("authentication_error") {}
+
+export class BetaAuthenticationError extends S.Struct({
+  "message": S.String,
+  "type": BetaAuthenticationErrorType
+}) {}
+
+export class BetaBillingErrorType extends S.Literal("billing_error") {}
+
+export class BetaBillingError extends S.Struct({
+  "message": S.String,
+  "type": BetaBillingErrorType
+}) {}
+
+export class BetaPermissionErrorType extends S.Literal("permission_error") {}
+
+export class BetaPermissionError extends S.Struct({
+  "message": S.String,
+  "type": BetaPermissionErrorType
+}) {}
+
+export class BetaNotFoundErrorType extends S.Literal("not_found_error") {}
+
+export class BetaNotFoundError extends S.Struct({
+  "message": S.String,
+  "type": BetaNotFoundErrorType
+}) {}
+
+export class BetaRateLimitErrorType extends S.Literal("rate_limit_error") {}
+
+export class BetaRateLimitError extends S.Struct({
+  "message": S.String,
+  "type": BetaRateLimitErrorType
+}) {}
+
+export class BetaGatewayTimeoutErrorType extends S.Literal("timeout_error") {}
+
+export class BetaGatewayTimeoutError extends S.Struct({
+  "message": S.String,
+  "type": BetaGatewayTimeoutErrorType
+}) {}
+
+export class BetaAPIErrorType extends S.Literal("api_error") {}
+
+export class BetaAPIError extends S.Struct({
+  "message": S.String,
+  "type": BetaAPIErrorType
+}) {}
+
+export class BetaOverloadedErrorType extends S.Literal("overloaded_error") {}
+
+export class BetaOverloadedError extends S.Struct({
+  "message": S.String,
+  "type": BetaOverloadedErrorType
+}) {}
+
+export class BetaErrorResponseType extends S.Literal("error") {}
+
+export class BetaErrorResponse extends S.Class<BetaErrorResponse>("BetaErrorResponse")({
+  "error": S.Union(
+    BetaInvalidRequestError,
+    BetaAuthenticationError,
+    BetaBillingError,
+    BetaPermissionError,
+    BetaNotFoundError,
+    BetaRateLimitError,
+    BetaGatewayTimeoutError,
+    BetaAPIError,
+    BetaOverloadedError
+  ),
+  "type": BetaErrorResponseType
+}) {}
+
+export class BetaModelsListParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaModelInfoType extends S.Literal("model") {}
+
+export class BetaModelInfo extends S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": BetaModelInfoType
+}) {}
+
+export class BetaListResponseModelInfo extends S.Class<BetaListResponseModelInfo>("BetaListResponseModelInfo")({
+  "data": S.Array(BetaModelInfo),
+  "first_id": S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": S.Union(S.String, S.Null)
+}) {}
+
+export class BetaModelsGetParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchesListParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchProcessingStatus extends S.Literal("in_progress", "canceling", "ended") {}
+
+export class BetaRequestCounts extends S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+
+export class BetaMessageBatchType extends S.Literal("message_batch") {}
+
+export class BetaMessageBatch extends S.Struct({
+  "archived_at": S.Union(S.String, S.Null),
+  "cancel_initiated_at": S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": BetaMessageBatchProcessingStatus,
+  "request_counts": BetaRequestCounts,
+  "results_url": S.Union(S.String, S.Null),
+  "type": BetaMessageBatchType
+}) {}
+
+export class BetaListResponseMessageBatch
+  extends S.Class<BetaListResponseMessageBatch>("BetaListResponseMessageBatch")({
+    "data": S.Array(BetaMessageBatch),
+    "first_id": S.Union(S.String, S.Null),
+    "has_more": S.Boolean,
+    "last_id": S.Union(S.String, S.Null)
+  })
+{}
+
+export class BetaMessageBatchesPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchIndividualRequestParams extends S.Struct({
+  "custom_id": S.String.pipe(S.minLength(1), S.maxLength(64), S.pattern(new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": BetaCreateMessageParams
+}) {}
+
+export class BetaCreateMessageBatchParams
+  extends S.Class<BetaCreateMessageBatchParams>("BetaCreateMessageBatchParams")({
+    "requests": S.Array(BetaMessageBatchIndividualRequestParams).pipe(S.minItems(1), S.maxItems(10000))
+  })
+{}
+
+export class BetaMessageBatchesRetrieveParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchesDeleteParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaDeleteMessageBatchResponseType extends S.Literal("message_batch_deleted") {}
+
+export class BetaDeleteMessageBatchResponse
+  extends S.Class<BetaDeleteMessageBatchResponse>("BetaDeleteMessageBatchResponse")({
+    "id": S.String,
+    "type": BetaDeleteMessageBatchResponseType
+  })
+{}
+
+export class BetaMessageBatchesCancelParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchesResultsParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessagesCountTokensPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaCountMessageTokensParams
+  extends S.Class<BetaCountMessageTokensParams>("BetaCountMessageTokensParams")({
+    "mcp_servers": S.optionalWith(S.Array(BetaRequestMCPServerURLDefinition).pipe(S.maxItems(20)), { nullable: true }),
+    "messages": S.Array(BetaInputMessage),
+    "model": S.Union(S.String, Model),
+    "system": S.optionalWith(S.Union(S.String, S.Array(BetaRequestTextBlock)), { nullable: true }),
+    "thinking": S.optionalWith(BetaThinkingConfigParam, { nullable: true }),
+    "tool_choice": S.optionalWith(BetaToolChoice, { nullable: true }),
+    "tools": S.optionalWith(
+      S.Array(
+        S.Union(
+          BetaTool,
+          BetaComputerUseTool20241022,
+          BetaBashTool20241022,
+          BetaTextEditor20241022,
+          BetaComputerUseTool20250124,
+          BetaBashTool20250124,
+          BetaTextEditor20250124,
+          BetaTextEditor20250429,
+          BetaWebSearchTool20250305,
+          BetaCodeExecutionTool20250522
+        )
+      ),
+      { nullable: true }
+    )
+  })
+{}
+
+export class BetaCountMessageTokensResponse
+  extends S.Class<BetaCountMessageTokensResponse>("BetaCountMessageTokensResponse")({
+    "input_tokens": S.Int
+  })
+{}
+
+export class BetaListFilesV1FilesGetParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaFileMetadataSchemaType extends S.Literal("file") {}
+
+export class BetaFileMetadataSchema extends S.Struct({
+  "created_at": S.String,
+  "downloadable": S.optionalWith(S.Boolean, { nullable: true }),
+  "filename": S.String.pipe(S.minLength(1), S.maxLength(500)),
+  "id": S.String,
+  "mime_type": S.String.pipe(S.minLength(1), S.maxLength(255)),
+  "size_bytes": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaFileMetadataSchemaType
+}) {}
+
+export class BetaFileListResponse extends S.Class<BetaFileListResponse>("BetaFileListResponse")({
+  "data": S.Array(BetaFileMetadataSchema),
+  "first_id": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "has_more": S.optionalWith(S.Boolean, { nullable: true }),
+  "last_id": S.optionalWith(S.Union(S.String, S.Null), { nullable: true })
+}) {}
+
+export class BetaUploadFileV1FilesPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaGetFileMetadataV1FilesFileIdGetParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaDeleteFileV1FilesFileIdDeleteParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaFileDeleteResponseType extends S.Literal("file_deleted") {}
+
+export class BetaFileDeleteResponse extends S.Class<BetaFileDeleteResponse>("BetaFileDeleteResponse")({
+  "id": S.String,
+  "type": S.optionalWith(BetaFileDeleteResponseType, { nullable: true })
+}) {}
+
+export class BetaDownloadFileV1FilesFileIdContentGetParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export const make = (
+  httpClient: HttpClient.HttpClient,
+  options: {
+    readonly transformClient?: ((client: HttpClient.HttpClient) => Effect.Effect<HttpClient.HttpClient>) | undefined
+  } = {}
+): Client => {
+  const unexpectedStatus = (
+    request: HttpClientRequest.HttpClientRequest,
+    response: HttpClientResponse.HttpClientResponse
+  ) =>
+    Effect.flatMap(
+      Effect.orElseSucceed(response.text, () => "Unexpected status code"),
+      (description) =>
+        Effect.fail(
+          new HttpClientError.ResponseError({
+            request,
+            response,
+            reason: "StatusCode",
+            description
+          })
+        )
+    )
+  const applyClientTransform = (client: HttpClient.HttpClient): Effect.Effect<HttpClient.HttpClient> =>
+    options.transformClient ? options.transformClient(client) : Effect.succeed(client)
+  const decodeError = <A, I, R>(response: HttpClientResponse.HttpClientResponse, schema: S.Schema<A, I, R>) =>
+    Effect.flatMap(HttpClientResponse.schemaBodyJson(schema)(response), Effect.fail)
+  return {
+    httpClient,
+    "messagesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages`).pipe(
+        HttpClientRequest.setHeaders({ "anthropic-version": options.params?.["anthropic-version"] ?? undefined }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(Message)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "completePost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/complete`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined,
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined
+        }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(CompletionResponse)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "modelsList": (options) =>
+      HttpClientRequest.make("GET")(`/v1/models`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined,
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(ListResponseModelInfo)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "modelsGet": (modelId, options) =>
+      HttpClientRequest.make("GET")(`/v1/models/${modelId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined,
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(ModelInfo)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "messageBatchesList": (options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(ListResponseMessageBatch)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "messageBatchesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/batches`).pipe(
+        HttpClientRequest.setHeaders({ "anthropic-version": options.params?.["anthropic-version"] ?? undefined }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "messageBatchesRetrieve": (messageBatchId, options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+                  "4xx": (r) => decodeError(r, ErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "messageBatchesDelete": (messageBatchId, options) =>
+      HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(DeleteMessageBatchResponse)(r),
+                  "4xx": (r) => decodeError(r, ErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "messageBatchesCancel": (messageBatchId, options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel`).pipe(
+        HttpClientRequest.setHeaders({ "anthropic-version": options?.["anthropic-version"] ?? undefined }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+                  "4xx": (r) => decodeError(r, ErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "messageBatchesResults": (messageBatchId, options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "4xx": (r) => decodeError(r, ErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "messagesCountTokensPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/count_tokens`).pipe(
+        HttpClientRequest.setHeaders({ "anthropic-version": options.params?.["anthropic-version"] ?? undefined }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(CountMessageTokensResponse)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "listFilesV1FilesGet": (options) =>
+      HttpClientRequest.make("GET")(`/v1/files`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(FileListResponse)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "uploadFileV1FilesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/files`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        HttpClientRequest.bodyFormData(options.payload),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "getFileMetadataV1FilesFileIdGet": (fileId, options) =>
+      HttpClientRequest.make("GET")(`/v1/files/${fileId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "deleteFileV1FilesFileIdDelete": (fileId, options) =>
+      HttpClientRequest.make("DELETE")(`/v1/files/${fileId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(FileDeleteResponse)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "downloadFileV1FilesFileIdContentGet": (fileId, options) =>
+      HttpClientRequest.make("GET")(`/v1/files/${fileId}/content`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessagesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaMessage)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaModelsList": (options) =>
+      HttpClientRequest.make("GET")(`/v1/models?beta=true`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined,
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaListResponseModelInfo)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaModelsGet": (modelId, options) =>
+      HttpClientRequest.make("GET")(`/v1/models/${modelId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined,
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaModelInfo)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaMessageBatchesList": (options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches?beta=true`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaListResponseMessageBatch)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaMessageBatchesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/batches?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaMessageBatchesRetrieve": (messageBatchId, options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessageBatchesDelete": (messageBatchId, options) =>
+      HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaDeleteMessageBatchResponse)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessageBatchesCancel": (messageBatchId, options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessageBatchesResults": (messageBatchId, options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessagesCountTokensPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/count_tokens?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaCountMessageTokensResponse)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaListFilesV1FilesGet": (options) =>
+      HttpClientRequest.make("GET")(`/v1/files?beta=true`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaFileListResponse)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaUploadFileV1FilesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/files?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        HttpClientRequest.bodyFormData(options.payload),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaGetFileMetadataV1FilesFileIdGet": (fileId, options) =>
+      HttpClientRequest.make("GET")(`/v1/files/${fileId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaDeleteFileV1FilesFileIdDelete": (fileId, options) =>
+      HttpClientRequest.make("DELETE")(`/v1/files/${fileId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaFileDeleteResponse)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaDownloadFileV1FilesFileIdContentGet": (fileId, options) =>
+      HttpClientRequest.make("GET")(`/v1/files/${fileId}/content?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      )
+  }
+}
+
+export interface Client {
+  readonly httpClient: HttpClient.HttpClient
+  readonly "messagesPost": (
+    options: {
+      readonly params?: typeof MessagesPostParams.Encoded | undefined
+      readonly payload: typeof CreateMessageParams.Encoded
+    }
+  ) => Effect.Effect<typeof Message.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "completePost": (
+    options: {
+      readonly params?: typeof CompletePostParams.Encoded | undefined
+      readonly payload: typeof CompletionRequest.Encoded
+    }
+  ) => Effect.Effect<
+    typeof CompletionResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "modelsList": (
+    options?: typeof ModelsListParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof ListResponseModelInfo.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "modelsGet": (
+    modelId: string,
+    options?: typeof ModelsGetParams.Encoded | undefined
+  ) => Effect.Effect<typeof ModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messageBatchesList": (
+    options?: typeof MessageBatchesListParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof ListResponseMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "messageBatchesPost": (
+    options: {
+      readonly params?: typeof MessageBatchesPostParams.Encoded | undefined
+      readonly payload: typeof CreateMessageBatchParams.Encoded
+    }
+  ) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messageBatchesRetrieve": (
+    messageBatchId: string,
+    options?: typeof MessageBatchesRetrieveParams.Encoded | undefined
+  ) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messageBatchesDelete": (
+    messageBatchId: string,
+    options?: typeof MessageBatchesDeleteParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof DeleteMessageBatchResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "messageBatchesCancel": (
+    messageBatchId: string,
+    options?: typeof MessageBatchesCancelParams.Encoded | undefined
+  ) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messageBatchesResults": (
+    messageBatchId: string,
+    options?: typeof MessageBatchesResultsParams.Encoded | undefined
+  ) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messagesCountTokensPost": (
+    options: {
+      readonly params?: typeof MessagesCountTokensPostParams.Encoded | undefined
+      readonly payload: typeof CountMessageTokensParams.Encoded
+    }
+  ) => Effect.Effect<
+    typeof CountMessageTokensResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "listFilesV1FilesGet": (
+    options?: typeof ListFilesV1FilesGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof FileListResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "uploadFileV1FilesPost": (
+    options: {
+      readonly params?: typeof UploadFileV1FilesPostParams.Encoded | undefined
+      readonly payload: globalThis.FormData
+    }
+  ) => Effect.Effect<
+    typeof FileMetadataSchema.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "getFileMetadataV1FilesFileIdGet": (
+    fileId: string,
+    options?: typeof GetFileMetadataV1FilesFileIdGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof FileMetadataSchema.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "deleteFileV1FilesFileIdDelete": (
+    fileId: string,
+    options?: typeof DeleteFileV1FilesFileIdDeleteParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof FileDeleteResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "downloadFileV1FilesFileIdContentGet": (
+    fileId: string,
+    options?: typeof DownloadFileV1FilesFileIdContentGetParams.Encoded | undefined
+  ) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError>
+  readonly "betaMessagesPost": (
+    options: {
+      readonly params?: typeof BetaMessagesPostParams.Encoded | undefined
+      readonly payload: typeof BetaCreateMessageParams.Encoded
+    }
+  ) => Effect.Effect<
+    typeof BetaMessage.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaModelsList": (
+    options?: typeof BetaModelsListParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaListResponseModelInfo.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaModelsGet": (
+    modelId: string,
+    options?: typeof BetaModelsGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaModelInfo.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesList": (
+    options?: typeof BetaMessageBatchesListParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaListResponseMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesPost": (
+    options: {
+      readonly params?: typeof BetaMessageBatchesPostParams.Encoded | undefined
+      readonly payload: typeof BetaCreateMessageBatchParams.Encoded
+    }
+  ) => Effect.Effect<
+    typeof BetaMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesRetrieve": (
+    messageBatchId: string,
+    options?: typeof BetaMessageBatchesRetrieveParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesDelete": (
+    messageBatchId: string,
+    options?: typeof BetaMessageBatchesDeleteParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaDeleteMessageBatchResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesCancel": (
+    messageBatchId: string,
+    options?: typeof BetaMessageBatchesCancelParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesResults": (
+    messageBatchId: string,
+    options?: typeof BetaMessageBatchesResultsParams.Encoded | undefined
+  ) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>
+  readonly "betaMessagesCountTokensPost": (
+    options: {
+      readonly params?: typeof BetaMessagesCountTokensPostParams.Encoded | undefined
+      readonly payload: typeof BetaCountMessageTokensParams.Encoded
+    }
+  ) => Effect.Effect<
+    typeof BetaCountMessageTokensResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaListFilesV1FilesGet": (
+    options?: typeof BetaListFilesV1FilesGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaFileListResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaUploadFileV1FilesPost": (
+    options: {
+      readonly params?: typeof BetaUploadFileV1FilesPostParams.Encoded | undefined
+      readonly payload: globalThis.FormData
+    }
+  ) => Effect.Effect<
+    typeof BetaFileMetadataSchema.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaGetFileMetadataV1FilesFileIdGet": (
+    fileId: string,
+    options?: typeof BetaGetFileMetadataV1FilesFileIdGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaFileMetadataSchema.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaDeleteFileV1FilesFileIdDelete": (
+    fileId: string,
+    options?: typeof BetaDeleteFileV1FilesFileIdDeleteParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaFileDeleteResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaDownloadFileV1FilesFileIdContentGet": (
+    fileId: string,
+    options?: typeof BetaDownloadFileV1FilesFileIdContentGetParams.Encoded | undefined
+  ) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError>
+}
diff --git a/dist/dist/src/index.ts b/dist/dist/src/index.ts
new file mode 100644
index 0000000000000000000000000000000000000000..8f7f6ce43abad7dbe3530bd17ba2d360cce11c5f
--- /dev/null
+++ b/dist/dist/src/index.ts
@@ -0,0 +1,24 @@
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicClient from "./AnthropicClient.js"
+
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicConfig from "./AnthropicConfig.js"
+
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicLanguageModel from "./AnthropicLanguageModel.js"
+
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicTokenizer from "./AnthropicTokenizer.js"
+
+/**
+ * @since 1.0.0
+ */
+export * as Generated from "./Generated.js"
diff --git a/dist/dist/src/internal/utilities.ts b/dist/dist/src/internal/utilities.ts
new file mode 100644
index 0000000000000000000000000000000000000000..dfe7e425e999732f1bdbfcce34e2605be3ed77f0
--- /dev/null
+++ b/dist/dist/src/internal/utilities.ts
@@ -0,0 +1,18 @@
+import type * as AiResponse from "@effect/ai/AiResponse"
+import * as Predicate from "effect/Predicate"
+
+/** @internal */
+export const ProviderMetadataKey = "@effect/ai-anthropic/AnthropicLanguageModel/ProviderMetadata"
+
+const finishReasonMap: Record<string, AiResponse.FinishReason> = {
+  end_turn: "stop",
+  max_tokens: "length",
+  stop_sequence: "stop",
+  tool_use: "tool-calls"
+}
+
+/** @internal */
+export const resolveFinishReason = (finishReason: string): AiResponse.FinishReason => {
+  const reason = finishReasonMap[finishReason]
+  return Predicate.isUndefined(reason) ? "unknown" : reason
+}
diff --git a/dist/dts/AnthropicClient.d.ts.map b/dist/dts/AnthropicClient.d.ts.map
index f46077084f2d0e9a047cc19b7adb88aad644f19f..bd98044881c2ff23f25cdffaa931086c050ca778 100644
--- a/dist/dts/AnthropicClient.d.ts.map
+++ b/dist/dts/AnthropicClient.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicClient.d.ts","sourceRoot":"","sources":["../../src/AnthropicClient.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"AnthropicClient.d.ts","sourceRoot":"","sources":["../../src/AnthropicClient.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/dts/AnthropicConfig.d.ts b/dist/dts/AnthropicConfig.d.ts
index 3057a4f07bf1f1f19614fb079a30bfb00fcb4e2e..bcdc9c2f105450fbf533c1c3d94a6215129ae59a 100644
--- a/dist/dts/AnthropicConfig.d.ts
+++ b/dist/dts/AnthropicConfig.d.ts
@@ -32,15 +32,7 @@ export declare namespace AnthropicConfig {
  * @category Configuration
  */
 export declare const withClientTransform: {
-    /**
-     * @since 1.0.0
-     * @category Configuration
-     */
     (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>;
-    /**
-     * @since 1.0.0
-     * @category Configuration
-     */
     <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>;
 };
 export {};
diff --git a/dist/dts/AnthropicConfig.d.ts.map b/dist/dts/AnthropicConfig.d.ts.map
index e00eebad727ef6fc05361f07e6d47f41a43a04c7..3bc94d002522908b156f4992d471690284a9f619 100644
--- a/dist/dts/AnthropicConfig.d.ts.map
+++ b/dist/dts/AnthropicConfig.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicConfig.d.ts","sourceRoot":"","sources":["../../src/AnthropicConfig.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAA;AAC7D,OAAO,KAAK,OAAO,MAAM,gBAAgB,CAAA;AACzC,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;;AAGvC;;;GAGG;AACH,qBAAa,eAAgB,SAAQ,oBAGlC;IACD;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,eAAe,CAAC,OAAO,GAAG,SAAS,CAAC,CAGxF;CACF;AAED;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,eAAe,CAAC;IACvC;;;OAGG;IACH,UAAiB,OAAO;QACtB,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,CAAA;KAC9D;CACF;AAED;;;GAGG;AACH,eAAO,MAAM,mBAAmB,EAAE;IAChC;;;OAGG;IACH,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClH;;;OAGG;IACH,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EACN,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC5B,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,GAC5C,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CAsB1B,CAAA"}
\ No newline at end of file
+{"version":3,"file":"AnthropicConfig.d.ts","sourceRoot":"","sources":["../../src/AnthropicConfig.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,OAAO,KAAK,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAA;AAC7D,OAAO,KAAK,OAAO,MAAM,gBAAgB,CAAA;AACzC,OAAO,KAAK,MAAM,MAAM,eAAe,CAAA;;AAGvC;;;GAGG;AACH,qBAAa,eAAgB,SAAQ,oBAGlC;IACD;;OAEG;IACH,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,eAAe,CAAC,OAAO,GAAG,SAAS,CAAC,CAGxF;CACF;AAED;;GAEG;AACH,MAAM,CAAC,OAAO,WAAW,eAAe,CAAC;IACvC;;;OAGG;IACH,UAAiB,OAAO;QACtB,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,CAAA;KAC9D;CACF;AAED;;;GAGG;AACH,eAAO,MAAM,mBAAmB,EAAE;IAChC,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClH,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CAW/G,CAAA"}
\ No newline at end of file
diff --git a/dist/dts/AnthropicLanguageModel.d.ts b/dist/dts/AnthropicLanguageModel.d.ts
index 137f84dafba793a8fafeaa9c9eefa395f4dd7f2e..e2c015069f729ed1619d990aaea616fe79f35a06 100644
--- a/dist/dts/AnthropicLanguageModel.d.ts
+++ b/dist/dts/AnthropicLanguageModel.d.ts
@@ -98,15 +98,7 @@ export declare const layerWithTokenizer: (options: {
  * @category Configuration
  */
 export declare const withConfigOverride: {
-    /**
-     * @since 1.0.0
-     * @category Configuration
-     */
     (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>;
-    /**
-     * @since 1.0.0
-     * @category Configuration
-     */
     <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>;
 };
 export {};
diff --git a/dist/dts/AnthropicLanguageModel.d.ts.map b/dist/dts/AnthropicLanguageModel.d.ts.map
index aa0cba0d26e2c1a506a943cb3e9688748e5f2909..010e66ce6626a7016f3fe5020b094e147662e301 100644
--- a/dist/dts/AnthropicLanguageModel.d.ts.map
+++ b/dist/dts/AnthropicLanguageModel.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicLanguageModel.d.ts","sourceRoot":"","sources":["../../src/AnthropicLanguageModel.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"AnthropicLanguageModel.d.ts","sourceRoot":"","sources":["../../src/AnthropicLanguageModel.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/esm/AnthropicClient.js b/dist/esm/AnthropicClient.js
index 6e723b27384be55463bc8a6baff843125fa5a9fc..0a9c0ebb8b97235679835d72a4b24028fcb5c286 100644
--- a/dist/esm/AnthropicClient.js
+++ b/dist/esm/AnthropicClient.js
@@ -80,7 +80,8 @@ export const make = options => Effect.gen(function* () {
           {
             usage = {
               ...usage,
-              outputTokens: chunk.usage.output_tokens
+              outputTokens: chunk.usage.output_tokens,
+              totalTokens: usage.inputTokens + chunk.usage.output_tokens
             };
             if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
               metadata.stopSequence = chunk.delta.stop_sequence;
diff --git a/dist/esm/AnthropicClient.js.map b/dist/esm/AnthropicClient.js.map
index a206b501673c1e1d7921dbd95b9da636a47b92a1..ff299e7f8706c5d21d25d0c1df9eca9b6e1165d0 100644
--- a/dist/esm/AnthropicClient.js.map
+++ b/dist/esm/AnthropicClient.js.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicClient.js","names":["AiError","AiInput","AiResponse","Sse","HttpBody","HttpClient","HttpClientRequest","Config","Context","Effect","identity","Layer","Option","Predicate","Redacted","Stream","AnthropicConfig","Generated","InternalUtilities","constDisableValidation","disableValidation","AnthropicClient","Tag","make","options","gen","httpClient","pipe","mapRequest","request","prependUrl","apiUrl","apiKey","setHeader","value","anthropicVersion","acceptJson","transformClient","httpClientOk","filterStatusOk","client","getOrUndefined","map","config","streamRequest","execute","r","stream","unwrapScoped","decodeText","pipeThroughChannel","makeChannel","takeUntil","event","JSON","parse","data","suspend","toolCalls","finishReason","reasoning","undefined","usage","inputTokens","outputTokens","totalTokens","reasoningTokens","cacheReadInputTokens","cacheWriteInputTokens","metadata","post","body","unsafeJson","filterMapEffect","chunk","parts","type","message","input_tokens","output_tokens","cache_creation_input_tokens","cache_read_input_tokens","push","MetadataPart","id","model","isNotNullable","delta","stop_sequence","stopSequence","resolveFinishReason","stop_reason","FinishPart","reason","providerMetadata","ProviderMetadataKey","content","content_block","thinking","index","name","params","RedactedReasoningPart","redactedText","TextPart","text","isNotUndefined","signature","tool","partial_json","inputJson","ToolCallPart","ToolCallId","ReasoningPart","reasoningText","join","some","die","module","method","description","error","length","none","succeed","of","layer","effect","layerConfig","configs","all","flatMap"],"sources":["../../src/AnthropicClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"AnthropicClient.js","names":["AiError","AiInput","AiResponse","Sse","HttpBody","HttpClient","HttpClientRequest","Config","Context","Effect","identity","Layer","Option","Predicate","Redacted","Stream","AnthropicConfig","Generated","InternalUtilities","constDisableValidation","disableValidation","AnthropicClient","Tag","make","options","gen","httpClient","pipe","mapRequest","request","prependUrl","apiUrl","apiKey","setHeader","value","anthropicVersion","acceptJson","transformClient","httpClientOk","filterStatusOk","client","getOrUndefined","map","config","streamRequest","execute","r","stream","unwrapScoped","decodeText","pipeThroughChannel","makeChannel","takeUntil","event","JSON","parse","data","suspend","toolCalls","finishReason","reasoning","undefined","usage","inputTokens","outputTokens","totalTokens","reasoningTokens","cacheReadInputTokens","cacheWriteInputTokens","metadata","post","body","unsafeJson","filterMapEffect","chunk","parts","type","message","input_tokens","output_tokens","cache_creation_input_tokens","cache_read_input_tokens","push","MetadataPart","id","model","isNotNullable","delta","stop_sequence","stopSequence","resolveFinishReason","stop_reason","FinishPart","reason","providerMetadata","ProviderMetadataKey","content","content_block","thinking","index","name","params","RedactedReasoningPart","redactedText","TextPart","text","isNotUndefined","signature","tool","partial_json","inputJson","ToolCallPart","ToolCallId","ReasoningPart","reasoningText","join","some","die","module","method","description","error","length","none","succeed","of","layer","effect","layerConfig","configs","all","flatMap"],"sources":["../../src/AnthropicClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/AnthropicConfig.js.map b/dist/esm/AnthropicConfig.js.map
index 6434544ea259797af19a800bd6397a0407ceb770..0941473279b56a21778d44493694b1771d2960ba 100644
--- a/dist/esm/AnthropicConfig.js.map
+++ b/dist/esm/AnthropicConfig.js.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicConfig.js","names":["Context","Effect","dual","AnthropicConfig","Tag","getOrUndefined","map","context","unsafeMap","get","key","withClientTransform","self","transformClient","flatMap","config","provideService"],"sources":["../../src/AnthropicConfig.ts"],"sourcesContent":[null],"mappings":"AAIA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AAEtC;;;;AAIA,OAAM,MAAOC,eAAgB,sBAAQH,OAAO,CAACI,GAAG,CAAC,sCAAsC,CAAC,EAGrF;EACD;;;EAGA,OAAgBC,cAAc,gBAA8DJ,MAAM,CAACK,GAAG,cACpGL,MAAM,CAACM,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACC,GAAG,CAACN,eAAe,CAACO,GAAG,CAAC,CACxD;;AAgBH;;;;AAIA,OAAO,MAAMC,mBAAmB,gBAc5BT,IAAI,CAeN,CAAC,EACD,CAACU,IAAI,EAAEC,eAAe,KACpBZ,MAAM,CAACa,OAAO,CACZX,eAAe,CAACE,cAAc,EAC7BU,MAAM,IAAKd,MAAM,CAACe,cAAc,CAACJ,IAAI,EAAET,eAAe,EAAE;EAAE,GAAGY,MAAM;EAAEF;AAAe,CAAE,CAAC,CACzF,CACJ","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"AnthropicConfig.js","names":["Context","Effect","dual","AnthropicConfig","Tag","getOrUndefined","map","context","unsafeMap","get","key","withClientTransform","self","transformClient","flatMap","config","provideService"],"sources":["../../src/AnthropicConfig.ts"],"sourcesContent":[null],"mappings":"AAIA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AAEtC;;;;AAIA,OAAM,MAAOC,eAAgB,sBAAQH,OAAO,CAACI,GAAG,CAAC,sCAAsC,CAAC,EAGrF;EACD;;;EAGA,OAAgBC,cAAc,gBAA8DJ,MAAM,CAACK,GAAG,cACpGL,MAAM,CAACM,OAAO,EAAS,EACtBA,OAAO,IAAKA,OAAO,CAACC,SAAS,CAACC,GAAG,CAACN,eAAe,CAACO,GAAG,CAAC,CACxD;;AAgBH;;;;AAIA,OAAO,MAAMC,mBAAmB,gBAG5BT,IAAI,CAIN,CAAC,EACD,CAACU,IAAI,EAAEC,eAAe,KACpBZ,MAAM,CAACa,OAAO,CACZX,eAAe,CAACE,cAAc,EAC7BU,MAAM,IAAKd,MAAM,CAACe,cAAc,CAACJ,IAAI,EAAET,eAAe,EAAE;EAAE,GAAGY,MAAM;EAAEF;AAAe,CAAE,CAAC,CACzF,CACJ","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/esm/AnthropicLanguageModel.js.map b/dist/esm/AnthropicLanguageModel.js.map
index e3f7a843f67352d5279501e6f9642d685a53694a..1396cf41f39bcd1a5fcca8b220b7ee4df6aeac45 100644
--- a/dist/esm/AnthropicLanguageModel.js.map
+++ b/dist/esm/AnthropicLanguageModel.js.map
@@ -1 +1 @@
-{"version":3,"file":"AnthropicLanguageModel.js","names":["AiError","AiLanguageModel","AiModel","AiResponse","addGenAIAnnotations","Arr","Context","Effect","Encoding","dual","Layer","Option","Predicate","Stream","AnthropicClient","AnthropicTokenizer","InternalUtilities","constDisableValidation","disableValidation","Config","Tag","getOrUndefined","map","context","unsafeMap","get","key","ProviderMetadata","ProviderMetadataKey","model","config","make","layer","modelWithTokenizer","layerWithTokenizer","fnUntraced","options","client","makeRequest","method","prompt","system","toolChoice","tools","useStructured","length","structured","tool_choice","undefined","type","name","tool","messages","makeMessages","max_tokens","description","input_schema","parameters","generateText","request","annotateRequest","span","rawResponse","messagesPost","params","payload","annotateChatResponse","response","makeResponse","catchAll","cause","is","module","streamText","pipe","tap","stream","unwrap","annotateStreamResponse","fail","effect","merge","withConfigOverride","self","overrides","flatMap","provideService","groupMessages","current","message","_tag","push","groups","i","group","isLastGroup","content","j","isLastMessage","k","parts","part","isLastPart","thinking","reasoningText","signature","data","redactedText","text","trim","id","input","role","tool_use_id","JSON","stringify","result","isUndefined","mediaType","source","media_type","encodeBase64","url","toString","isNonEmptyReadonlyArray","MetadataPart","TextPart","ToolCallPart","fromUnknown","ReasoningPart","RedactedReasoningPart","metadata","stop_sequence","stopSequence","FinishPart","reason","resolveFinishReason","stop_reason","usage","Usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","reasoningTokens","cacheReadInputTokens","cache_read_input_tokens","cacheWriteInputTokens","cache_creation_input_tokens","providerMetadata","operation","temperature","topK","top_k","topP","top_p","maxTokens","stopSequences","ensure","stop_sequences","filter","isNotNullable","finishReasons","metadataPart","find","finishPart"],"sources":["../../src/AnthropicLanguageModel.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
+{"version":3,"file":"AnthropicLanguageModel.js","names":["AiError","AiLanguageModel","AiModel","AiResponse","addGenAIAnnotations","Arr","Context","Effect","Encoding","dual","Layer","Option","Predicate","Stream","AnthropicClient","AnthropicTokenizer","InternalUtilities","constDisableValidation","disableValidation","Config","Tag","getOrUndefined","map","context","unsafeMap","get","key","ProviderMetadata","ProviderMetadataKey","model","config","make","layer","modelWithTokenizer","layerWithTokenizer","fnUntraced","options","client","makeRequest","method","prompt","system","toolChoice","tools","useStructured","length","structured","tool_choice","undefined","type","name","tool","messages","makeMessages","max_tokens","description","input_schema","parameters","generateText","request","annotateRequest","span","rawResponse","messagesPost","params","payload","annotateChatResponse","response","makeResponse","catchAll","cause","is","module","streamText","pipe","tap","stream","unwrap","annotateStreamResponse","fail","effect","merge","withConfigOverride","self","overrides","flatMap","provideService","groupMessages","current","message","_tag","push","groups","i","group","isLastGroup","content","j","isLastMessage","k","parts","part","isLastPart","thinking","reasoningText","signature","data","redactedText","text","trim","id","input","role","tool_use_id","JSON","stringify","result","isUndefined","mediaType","source","media_type","encodeBase64","url","toString","isNonEmptyReadonlyArray","MetadataPart","TextPart","ToolCallPart","fromUnknown","ReasoningPart","RedactedReasoningPart","metadata","stop_sequence","stopSequence","FinishPart","reason","resolveFinishReason","stop_reason","usage","Usage","inputTokens","input_tokens","outputTokens","output_tokens","totalTokens","reasoningTokens","cacheReadInputTokens","cache_read_input_tokens","cacheWriteInputTokens","cache_creation_input_tokens","providerMetadata","operation","temperature","topK","top_k","topP","top_p","maxTokens","stopSequences","ensure","stop_sequences","filter","isNotNullable","finishReasons","metadataPart","find","finishPart"],"sources":["../../src/AnthropicLanguageModel.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]}
\ No newline at end of file
diff --git a/dist/index/package.json b/dist/index/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..e405185f21eeaeb59f65d92b2a1430b635217694
--- /dev/null
+++ b/dist/index/package.json
@@ -0,0 +1,6 @@
+{
+  "sideEffects": [],
+  "main": "../dist/cjs/index.js",
+  "module": "../dist/esm/index.js",
+  "types": "../dist/dts/index.d.ts"
+}
diff --git a/dist/package.json b/dist/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..df43766d5f0d805c927fef895cf7fdd324062b13
--- /dev/null
+++ b/dist/package.json
@@ -0,0 +1,88 @@
+{
+  "name": "@effect/ai-anthropic",
+  "version": "0.16.1",
+  "description": "Effect modules for working with AI apis",
+  "license": "MIT",
+  "repository": {
+    "type": "git",
+    "url": "https://github.com/Effect-TS/effect.git",
+    "directory": "packages/ai/anthropic"
+  },
+  "sideEffects": [],
+  "homepage": "https://effect.website",
+  "dependencies": {
+    "@anthropic-ai/tokenizer": "^0.0.4"
+  },
+  "peerDependencies": {
+    "@effect/ai": "workspace:^",
+    "@effect/experimental": "workspace:^",
+    "@effect/platform": "workspace:^",
+    "effect": "workspace:^"
+  },
+  "publishConfig": {
+    "provenance": true
+  },
+  "main": "./dist/cjs/index.js",
+  "module": "./dist/esm/index.js",
+  "types": "./dist/dts/index.d.ts",
+  "exports": {
+    "./package.json": "./package.json",
+    ".": {
+      "types": "./dist/dts/index.d.ts",
+      "import": "./dist/esm/index.js",
+      "default": "./dist/cjs/index.js"
+    },
+    "./AnthropicClient": {
+      "types": "./dist/dts/AnthropicClient.d.ts",
+      "import": "./dist/esm/AnthropicClient.js",
+      "default": "./dist/cjs/AnthropicClient.js"
+    },
+    "./AnthropicConfig": {
+      "types": "./dist/dts/AnthropicConfig.d.ts",
+      "import": "./dist/esm/AnthropicConfig.js",
+      "default": "./dist/cjs/AnthropicConfig.js"
+    },
+    "./AnthropicLanguageModel": {
+      "types": "./dist/dts/AnthropicLanguageModel.d.ts",
+      "import": "./dist/esm/AnthropicLanguageModel.js",
+      "default": "./dist/cjs/AnthropicLanguageModel.js"
+    },
+    "./AnthropicTokenizer": {
+      "types": "./dist/dts/AnthropicTokenizer.d.ts",
+      "import": "./dist/esm/AnthropicTokenizer.js",
+      "default": "./dist/cjs/AnthropicTokenizer.js"
+    },
+    "./Generated": {
+      "types": "./dist/dts/Generated.d.ts",
+      "import": "./dist/esm/Generated.js",
+      "default": "./dist/cjs/Generated.js"
+    },
+    "./index": {
+      "types": "./dist/dts/index.d.ts",
+      "import": "./dist/esm/index.js",
+      "default": "./dist/cjs/index.js"
+    }
+  },
+  "typesVersions": {
+    "*": {
+      "AnthropicClient": [
+        "./dist/dts/AnthropicClient.d.ts"
+      ],
+      "AnthropicConfig": [
+        "./dist/dts/AnthropicConfig.d.ts"
+      ],
+      "AnthropicLanguageModel": [
+        "./dist/dts/AnthropicLanguageModel.d.ts"
+      ],
+      "AnthropicTokenizer": [
+        "./dist/dts/AnthropicTokenizer.d.ts"
+      ],
+      "Generated": [
+        "./dist/dts/Generated.d.ts"
+      ],
+      "index": [
+        "./dist/dts/index.d.ts"
+      ]
+    }
+  }
+}
\ No newline at end of file
diff --git a/dist/src/AnthropicClient.ts b/dist/src/AnthropicClient.ts
new file mode 100644
index 0000000000000000000000000000000000000000..ca18dfbdcb37d23d6c9e55ad7c82e74687eda883
--- /dev/null
+++ b/dist/src/AnthropicClient.ts
@@ -0,0 +1,447 @@
+/**
+ * @since 1.0.0
+ */
+import * as AiError from "@effect/ai/AiError"
+import * as AiInput from "@effect/ai/AiInput"
+import * as AiResponse from "@effect/ai/AiResponse"
+import * as Sse from "@effect/experimental/Sse"
+import * as HttpBody from "@effect/platform/HttpBody"
+import * as HttpClient from "@effect/platform/HttpClient"
+import type * as HttpClientError from "@effect/platform/HttpClientError"
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest"
+import * as Config from "effect/Config"
+import type { ConfigError } from "effect/ConfigError"
+import * as Context from "effect/Context"
+import * as Effect from "effect/Effect"
+import { identity } from "effect/Function"
+import * as Layer from "effect/Layer"
+import * as Option from "effect/Option"
+import * as Predicate from "effect/Predicate"
+import * as Redacted from "effect/Redacted"
+import * as Stream from "effect/Stream"
+import { AnthropicConfig } from "./AnthropicConfig.js"
+import * as Generated from "./Generated.js"
+import * as InternalUtilities from "./internal/utilities.js"
+
+const constDisableValidation = { disableValidation: true } as const
+
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class AnthropicClient extends Context.Tag(
+  "@effect/ai-anthropic/AnthropicClient"
+)<AnthropicClient, AnthropicClient.Service>() {}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace AnthropicClient {
+  /**
+   * @since 1.0.0
+   * @category Models
+   */
+  export interface Service {
+    readonly client: Generated.Client
+    readonly streamRequest: <A>(
+      request: HttpClientRequest.HttpClientRequest
+    ) => Stream.Stream<A, HttpClientError.HttpClientError>
+    readonly stream: (
+      request: StreamCompletionRequest
+    ) => Stream.Stream<AiResponse.AiResponse, HttpClientError.HttpClientError>
+  }
+}
+
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = (options: {
+  readonly apiKey?: Redacted.Redacted | undefined
+  readonly apiUrl?: string | undefined
+  readonly anthropicVersion?: string | undefined
+  readonly organizationId?: Redacted.Redacted | undefined
+  readonly projectId?: Redacted.Redacted | undefined
+  readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined
+}): Effect.Effect<AnthropicClient.Service, never, HttpClient.HttpClient> =>
+  Effect.gen(function*() {
+    const httpClient = (yield* HttpClient.HttpClient).pipe(
+      HttpClient.mapRequest((request) =>
+        request.pipe(
+          HttpClientRequest.prependUrl(
+            options.apiUrl ?? "https://api.anthropic.com"
+          ),
+          options.apiKey
+            ? HttpClientRequest.setHeader(
+              "x-api-key",
+              Redacted.value(options.apiKey)
+            )
+            : identity,
+          HttpClientRequest.setHeader(
+            "anthropic-version",
+            options.anthropicVersion ?? "2023-06-01"
+          ),
+          HttpClientRequest.acceptJson
+        )
+      ),
+      options.transformClient ? options.transformClient : identity
+    )
+    const httpClientOk = HttpClient.filterStatusOk(httpClient)
+    const client = Generated.make(httpClient, {
+      transformClient: (client) =>
+        AnthropicConfig.getOrUndefined.pipe(
+          Effect.map((config) => config?.transformClient ? config.transformClient(client) : client)
+        )
+    })
+    const streamRequest = <A = unknown>(
+      request: HttpClientRequest.HttpClientRequest
+    ) =>
+      httpClientOk.execute(request).pipe(
+        Effect.map((r) => r.stream),
+        Stream.unwrapScoped,
+        Stream.decodeText(),
+        Stream.pipeThroughChannel(Sse.makeChannel()),
+        Stream.takeUntil((event) => event.event === "message_stop"),
+        Stream.map((event) => JSON.parse(event.data) as A)
+      )
+    const stream = (request: StreamCompletionRequest) =>
+      Stream.suspend(() => {
+        const toolCalls = {} as Record<number, RawToolCall>
+        let finishReason: AiResponse.FinishReason = "unknown"
+        let reasoning:
+          | {
+            readonly content: Array<string>
+            readonly signature?: string
+          }
+          | undefined = undefined
+        let usage: AiResponse.Usage = {
+          inputTokens: 0,
+          outputTokens: 0,
+          totalTokens: 0,
+          reasoningTokens: 0,
+          cacheReadInputTokens: 0,
+          cacheWriteInputTokens: 0
+        }
+        const metadata: Record<string, unknown> = {}
+        return streamRequest<MessageStreamEvent>(
+          HttpClientRequest.post("/v1/messages", {
+            body: HttpBody.unsafeJson({ ...request, stream: true })
+          })
+        ).pipe(
+          Stream.filterMapEffect((chunk) => {
+            const parts: Array<AiResponse.Part> = []
+            switch (chunk.type) {
+              case "message_start": {
+                usage = {
+                  inputTokens: chunk.message.usage.input_tokens,
+                  outputTokens: chunk.message.usage.output_tokens,
+                  totalTokens: chunk.message.usage.input_tokens +
+                    chunk.message.usage.output_tokens,
+                  reasoningTokens: 0,
+                  cacheWriteInputTokens: chunk.message.usage.cache_creation_input_tokens ?? 0,
+                  cacheReadInputTokens: chunk.message.usage.cache_read_input_tokens ?? 0
+                }
+                console.error("message_start", JSON.stringify(usage, null, 2))
+                parts.push(
+                  new AiResponse.MetadataPart(
+                    {
+                      id: chunk.message.id,
+                      model: chunk.message.model
+                    },
+                    constDisableValidation
+                  )
+                )
+                break
+              }
+              case "message_delta": {
+                usage = {
+                  ...usage,
+                  outputTokens: chunk.usage.output_tokens,
+                  totalTokens: usage.inputTokens + chunk.usage.output_tokens
+                }
+                console.error("message_delta", JSON.stringify(usage, null, 2))
+                if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
+                  metadata.stopSequence = chunk.delta.stop_sequence
+                }
+                finishReason = InternalUtilities.resolveFinishReason(chunk.delta.stop_reason)
+                break
+              }
+              case "message_stop": {
+                parts.push(
+                  new AiResponse.FinishPart({
+                    usage,
+                    reason: finishReason,
+                    providerMetadata: { [InternalUtilities.ProviderMetadataKey]: metadata }
+                  }, constDisableValidation)
+                )
+                break
+              }
+              case "content_block_start": {
+                const content = chunk.content_block
+                switch (content.type) {
+                  case "text": {
+                    break
+                  }
+                  case "thinking": {
+                    reasoning = { content: [content.thinking] }
+                    break
+                  }
+                  case "tool_use": {
+                    toolCalls[chunk.index] = {
+                      id: content.id,
+                      name: content.name,
+                      params: ""
+                    }
+                    break
+                  }
+                  case "redacted_thinking": {
+                    parts.push(
+                      new AiResponse.RedactedReasoningPart(
+                        { redactedText: content.data },
+                        constDisableValidation
+                      )
+                    )
+                    break
+                  }
+                }
+                break
+              }
+              case "content_block_delta": {
+                switch (chunk.delta.type) {
+                  case "text_delta": {
+                    parts.push(
+                      new AiResponse.TextPart(
+                        { text: chunk.delta.text },
+                        constDisableValidation
+                      )
+                    )
+                    break
+                  }
+                  case "thinking_delta": {
+                    if (Predicate.isNotUndefined(reasoning)) {
+                      reasoning.content.push(chunk.delta.thinking)
+                    }
+                    break
+                  }
+                  case "signature_delta": {
+                    if (Predicate.isNotUndefined(reasoning)) {
+                      reasoning = {
+                        ...reasoning,
+                        signature: chunk.delta.signature
+                      }
+                    }
+                    break
+                  }
+                  case "input_json_delta": {
+                    const tool = toolCalls[chunk.index]
+                    if (Predicate.isNotUndefined(tool)) {
+                      tool.params += chunk.delta.partial_json
+                    }
+                    break
+                  }
+                  // TODO: add support for citations (?)
+                  case "citations_delta": {
+                    break
+                  }
+                }
+                break
+              }
+              case "content_block_stop": {
+                if (Predicate.isNotUndefined(toolCalls[chunk.index])) {
+                  const tool = toolCalls[chunk.index]
+                  try {
+                    // If the tool call has no parameters, the model sends an empty string.
+                    const inputJson = tool.params === "" ? "{}" : tool.params
+                    const params = JSON.parse(inputJson)
+                    parts.push(
+                      new AiResponse.ToolCallPart({
+                        id: AiInput.ToolCallId.make(tool.id, constDisableValidation),
+                        name: tool.name,
+                        params
+                      }, constDisableValidation)
+                    )
+                    delete toolCalls[chunk.index]
+                    // eslint-disable-next-line no-empty
+                  } catch {}
+                }
+                if (Predicate.isNotUndefined(reasoning)) {
+                  parts.push(
+                    new AiResponse.ReasoningPart({
+                      reasoningText: reasoning.content.join(""),
+                      signature: reasoning.signature
+                    }, constDisableValidation)
+                  )
+                  reasoning = undefined
+                }
+                break
+              }
+              case "error": {
+                return Option.some(
+                  Effect.die(
+                    new AiError.AiError({
+                      module: "AnthropicClient",
+                      method: "stream",
+                      description: `${chunk.error.type}: ${chunk.error.message}`
+                    })
+                  )
+                )
+              }
+            }
+            return parts.length === 0
+              ? Option.none()
+              : Option.some(
+                Effect.succeed(
+                  AiResponse.AiResponse.make(
+                    { parts },
+                    constDisableValidation
+                  )
+                )
+              )
+          })
+        )
+      })
+    return AnthropicClient.of({ client, streamRequest, stream })
+  })
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = (options: {
+  readonly apiKey?: Redacted.Redacted | undefined
+  readonly apiUrl?: string | undefined
+  readonly anthropicVersion?: string | undefined
+  readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined
+}): Layer.Layer<AnthropicClient, never, HttpClient.HttpClient> => Layer.effect(AnthropicClient, make(options))
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layerConfig = (
+  options: {
+    readonly apiKey?: Config.Config<Redacted.Redacted | undefined> | undefined
+    readonly apiUrl?: Config.Config<string | undefined> | undefined
+    readonly anthropicVersion?: Config.Config<string | undefined> | undefined
+    readonly transformClient?: ((client: HttpClient.HttpClient) => HttpClient.HttpClient) | undefined
+  }
+): Layer.Layer<AnthropicClient, ConfigError, HttpClient.HttpClient> => {
+  const { transformClient, ...configs } = options
+  return Config.all(configs).pipe(
+    Effect.flatMap((configs) => make({ ...configs, transformClient })),
+    Layer.effect(AnthropicClient)
+  )
+}
+
+/**
+ * @since 1.0.0
+ * @category Models
+ */
+export type StreamCompletionRequest = Omit<
+  typeof Generated.CreateMessageParams.Encoded,
+  "stream"
+>
+
+type MessageStreamEvent =
+  | ErrorEvent
+  | MessageStartEvent
+  | MessageDeltaEvent
+  | MessageStopEvent
+  | ContentBlockStartEvent
+  | ContentBlockDeltaEvent
+  | ContentBlockStopEvent
+
+interface MessageStartEvent {
+  readonly type: "message_start"
+  readonly message: typeof Generated.Message.Encoded
+}
+
+interface MessageDeltaEvent {
+  readonly type: "message_delta"
+  readonly delta: {
+    readonly stop_reason:
+      | "end_turn"
+      | "max_tokens"
+      | "stop_sequence"
+      | "tool_use"
+    readonly stop_sequence: string | null
+  }
+  readonly usage: {
+    readonly output_tokens: number
+  }
+}
+
+interface MessageStopEvent {
+  readonly type: "message_stop"
+}
+
+interface ContentBlockStartEvent {
+  readonly type: "content_block_start"
+  readonly index: number
+  readonly content_block: typeof Generated.ContentBlock.Encoded
+}
+
+interface ContentBlockDeltaEvent {
+  readonly type: "content_block_delta"
+  readonly index: number
+  readonly delta:
+    | CitationsDelta
+    | InputJsonContentBlockDelta
+    | SignatureDelta
+    | TextContentBlockDelta
+    | ThinkingDelta
+}
+
+interface CitationsDelta {
+  readonly type: "citations_delta"
+  readonly citation: NonNullable<
+    (typeof Generated.ResponseTextBlock.Encoded)["citations"]
+  >[number]
+}
+
+interface InputJsonContentBlockDelta {
+  readonly type: "input_json_delta"
+  readonly partial_json: string
+}
+
+interface SignatureDelta {
+  readonly type: "signature_delta"
+  readonly signature: string
+}
+
+interface TextContentBlockDelta {
+  readonly type: "text_delta"
+  readonly text: string
+}
+
+interface ThinkingDelta {
+  readonly type: "thinking_delta"
+  readonly thinking: string
+}
+
+interface ContentBlockStopEvent {
+  readonly type: "content_block_stop"
+  readonly index: number
+}
+
+interface ErrorEvent {
+  readonly type: "error"
+  readonly error: {
+    readonly type:
+      | "api_error"
+      | "authentication_error"
+      | "invalid_request_error"
+      | "not_found_error"
+      | "overloaded_error"
+      | "permission_error"
+      | "rate_limit_error"
+      | "request_too_large"
+    readonly message: string
+  }
+}
+
+type RawToolCall = {
+  readonly id: string
+  readonly name: string
+  params: string
+}
diff --git a/dist/src/AnthropicConfig.ts b/dist/src/AnthropicConfig.ts
new file mode 100644
index 0000000000000000000000000000000000000000..b6fde44ea8ef4148a7b634de5b67989acb1b17ae
--- /dev/null
+++ b/dist/src/AnthropicConfig.ts
@@ -0,0 +1,56 @@
+/**
+ * @since 1.0.0
+ */
+import type { HttpClient } from "@effect/platform/HttpClient"
+import * as Context from "effect/Context"
+import * as Effect from "effect/Effect"
+import { dual } from "effect/Function"
+
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class AnthropicConfig extends Context.Tag("@effect/ai-anthropic/AnthropicConfig")<
+  AnthropicConfig,
+  AnthropicConfig.Service
+>() {
+  /**
+   * @since 1.0.0
+   */
+  static readonly getOrUndefined: Effect.Effect<typeof AnthropicConfig.Service | undefined> = Effect.map(
+    Effect.context<never>(),
+    (context) => context.unsafeMap.get(AnthropicConfig.key)
+  )
+}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace AnthropicConfig {
+  /**
+   * @since 1.0.0
+   * @category Models
+   */
+  export interface Service {
+    readonly transformClient?: (client: HttpClient) => HttpClient
+  }
+}
+
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export const withClientTransform: {
+  (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>
+  <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>
+} = dual<
+  (transform: (client: HttpClient) => HttpClient) => <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,
+  <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient) => Effect.Effect<A, E, R>
+>(
+  2,
+  (self, transformClient) =>
+    Effect.flatMap(
+      AnthropicConfig.getOrUndefined,
+      (config) => Effect.provideService(self, AnthropicConfig, { ...config, transformClient })
+    )
+)
diff --git a/dist/src/AnthropicLanguageModel.ts b/dist/src/AnthropicLanguageModel.ts
new file mode 100644
index 0000000000000000000000000000000000000000..872b3fbf38521ee070d091e525e461c03040b6d6
--- /dev/null
+++ b/dist/src/AnthropicLanguageModel.ts
@@ -0,0 +1,583 @@
+/**
+ * @since 1.0.0
+ */
+import { AiError } from "@effect/ai/AiError"
+import type * as AiInput from "@effect/ai/AiInput"
+import * as AiLanguageModel from "@effect/ai/AiLanguageModel"
+import * as AiModel from "@effect/ai/AiModel"
+import * as AiResponse from "@effect/ai/AiResponse"
+import { addGenAIAnnotations } from "@effect/ai/AiTelemetry"
+import type * as Tokenizer from "@effect/ai/Tokenizer"
+import * as Arr from "effect/Array"
+import * as Context from "effect/Context"
+import * as Effect from "effect/Effect"
+import * as Encoding from "effect/Encoding"
+import { dual } from "effect/Function"
+import * as Layer from "effect/Layer"
+import * as Option from "effect/Option"
+import * as Predicate from "effect/Predicate"
+import * as Stream from "effect/Stream"
+import type { Span } from "effect/Tracer"
+import type { Mutable, Simplify } from "effect/Types"
+import { AnthropicClient } from "./AnthropicClient.js"
+import * as AnthropicTokenizer from "./AnthropicTokenizer.js"
+import type * as Generated from "./Generated.js"
+import * as InternalUtilities from "./internal/utilities.js"
+
+const constDisableValidation = { disableValidation: true } as const
+
+/**
+ * @since 1.0.0
+ * @category Models
+ */
+export type Model = typeof Generated.Model.Encoded
+
+// =============================================================================
+// Configuration
+// =============================================================================
+
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class Config extends Context.Tag("@effect/ai-anthropic/AnthropicLanguageModel/Config")<
+  Config,
+  Config.Service
+>() {
+  /**
+   * @since 1.0.0
+   */
+  static readonly getOrUndefined: Effect.Effect<typeof Config.Service | undefined> = Effect.map(
+    Effect.context<never>(),
+    (context) => context.unsafeMap.get(Config.key)
+  )
+}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace Config {
+  /**
+   * @since 1.0.0
+   * @category Configuration
+   */
+  export interface Service extends
+    Simplify<
+      Partial<
+        Omit<
+          typeof Generated.CreateMessageParams.Encoded,
+          "messages" | "tools" | "tool_choice" | "stream"
+        >
+      >
+    >
+  {}
+}
+
+// =============================================================================
+// Anthropic Provider Metadata
+// =============================================================================
+
+/**
+ * @since 1.0.0
+ * @category Context
+ */
+export class ProviderMetadata extends Context.Tag(InternalUtilities.ProviderMetadataKey)<
+  ProviderMetadata,
+  ProviderMetadata.Service
+>() {}
+
+/**
+ * @since 1.0.0
+ */
+export declare namespace ProviderMetadata {
+  /**
+   * @since 1.0.0
+   * @category Provider Metadata
+   */
+  export interface Service {
+    /**
+     * Which custom stop sequence was generated, if any.
+     *
+     * Will be a non-null string if one of your custom stop sequences was
+     * generated.
+     */
+    readonly stopSequence?: string
+  }
+}
+
+// =============================================================================
+// Anthropic Language Model
+// =============================================================================
+
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export const model = (
+  model: (string & {}) | Model,
+  config?: Omit<Config.Service, "model">
+): AiModel.AiModel<AiLanguageModel.AiLanguageModel, AnthropicClient> => AiModel.make(layer({ model, config }))
+
+/**
+ * @since 1.0.0
+ * @category AiModels
+ */
+export const modelWithTokenizer = (
+  model: (string & {}) | Model,
+  config?: Omit<Config.Service, "model">
+): AiModel.AiModel<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, AnthropicClient> =>
+  AiModel.make(layerWithTokenizer({ model, config }))
+
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = Effect.fnUntraced(function*(options: {
+  readonly model: (string & {}) | Model
+  readonly config?: Omit<Config.Service, "model">
+}) {
+  const client = yield* AnthropicClient
+
+  const makeRequest = Effect.fnUntraced(
+    function*(method: string, { prompt, system, toolChoice, tools }: AiLanguageModel.AiLanguageModelOptions) {
+      const context = yield* Effect.context<never>()
+      const useStructured = tools.length === 1 && tools[0].structured
+      let tool_choice: typeof Generated.ToolChoice.Encoded | undefined = undefined
+      if (useStructured) {
+        tool_choice = { type: "tool", name: tools[0].name }
+      } else if (tools.length > 0) {
+        if (toolChoice === "required") {
+          tool_choice = { type: "any" }
+        } else if (typeof toolChoice === "object") {
+          tool_choice = { type: "tool", name: toolChoice.tool }
+        } else {
+          tool_choice = { type: toolChoice }
+        }
+      }
+      const messages = yield* makeMessages(method, prompt)
+      return {
+        model: options.model,
+        max_tokens: 4096,
+        ...options.config,
+        ...context.unsafeMap.get(Config.key),
+        // TODO: re-evaluate a better way to do this
+        system: Option.getOrUndefined(system),
+        messages,
+        tools: tools.length === 0 ? undefined : tools.map((tool) => ({
+          name: tool.name,
+          description: tool.description,
+          input_schema: tool.parameters as any
+        })),
+        tool_choice
+      } satisfies typeof Generated.CreateMessageParams.Encoded
+    }
+  )
+
+  return yield* AiLanguageModel.make({
+    generateText: Effect.fnUntraced(
+      function*(options) {
+        const request = yield* makeRequest("generateText", options)
+        annotateRequest(options.span, request)
+        const rawResponse = yield* client.client.messagesPost({ params: {}, payload: request })
+        annotateChatResponse(options.span, rawResponse)
+        const response = yield* makeResponse(rawResponse)
+        return response
+      },
+      Effect.catchAll((cause) =>
+        AiError.is(cause) ? cause : new AiError({
+          module: "AnthropicLanguageModel",
+          method: "generateText",
+          description: "An error occurred",
+          cause
+        })
+      )
+    ),
+    streamText(options) {
+      return makeRequest("streamText", options).pipe(
+        Effect.tap((request) => annotateRequest(options.span, request)),
+        Effect.map(client.stream),
+        Stream.unwrap,
+        Stream.map((response) => {
+          annotateStreamResponse(options.span, response)
+          return response
+        }),
+        Stream.catchAll((cause) =>
+          AiError.is(cause) ? Effect.fail(cause) : Effect.fail(
+            new AiError({
+              module: "AnthropicLanguageModel",
+              method: "streamText",
+              description: "An error occurred",
+              cause
+            })
+          )
+        )
+      )
+    }
+  })
+})
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer = (options: {
+  readonly model: (string & {}) | Model
+  readonly config?: Omit<Config.Service, "model">
+}): Layer.Layer<AiLanguageModel.AiLanguageModel, never, AnthropicClient> =>
+  Layer.effect(AiLanguageModel.AiLanguageModel, make({ model: options.model, config: options.config }))
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layerWithTokenizer = (options: {
+  readonly model: (string & {}) | Model
+  readonly config?: Omit<Config.Service, "model">
+}): Layer.Layer<AiLanguageModel.AiLanguageModel | Tokenizer.Tokenizer, never, AnthropicClient> =>
+  Layer.merge(layer(options), AnthropicTokenizer.layer)
+
+/**
+ * @since 1.0.0
+ * @category Configuration
+ */
+export const withConfigOverride: {
+  (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>
+  <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>
+} = dual<
+  (config: Config.Service) => <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,
+  <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service) => Effect.Effect<A, E, R>
+>(2, (self, overrides) =>
+  Effect.flatMap(
+    Config.getOrUndefined,
+    (config) => Effect.provideService(self, Config, { ...config, ...overrides })
+  ))
+
+// =============================================================================
+// Utilities
+// =============================================================================
+
+type MessageGroup = AssistantMessageGroup | UserMessageGroup
+
+interface AssistantMessageGroup {
+  readonly type: "assistant"
+  readonly messages: Array<AiInput.AssistantMessage>
+}
+
+interface UserMessageGroup {
+  readonly type: "user"
+  readonly messages: Array<AiInput.ToolMessage | AiInput.UserMessage>
+}
+
+const groupMessages = (prompt: AiInput.AiInput): Array<MessageGroup> => {
+  const messages: Array<MessageGroup> = []
+  let current: MessageGroup | undefined = undefined
+  for (const message of prompt.messages) {
+    switch (message._tag) {
+      case "AssistantMessage": {
+        if (current?.type !== "assistant") {
+          current = { type: "assistant", messages: [] }
+          messages.push(current)
+        }
+        current.messages.push(message)
+        break
+      }
+      case "ToolMessage":
+      case "UserMessage": {
+        if (current?.type !== "user") {
+          current = { type: "user", messages: [] }
+          messages.push(current)
+        }
+        current.messages.push(message)
+        break
+      }
+    }
+  }
+  return messages
+}
+
+const makeMessages = Effect.fnUntraced(
+  function*(method: string, prompt: AiInput.AiInput) {
+    const messages: Array<typeof Generated.InputMessage.Encoded> = []
+    const groups = groupMessages(prompt)
+    for (let i = 0; i < groups.length; i++) {
+      const group = groups[i]
+      const isLastGroup = i === groups.length - 1
+      switch (group.type) {
+        case "assistant": {
+          const content: Array<typeof Generated.InputContentBlock.Encoded> = []
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j]
+            const isLastMessage = j === group.messages.length - 1
+            for (let k = 0; k < message.parts.length; k++) {
+              const part = message.parts[k]
+              const isLastPart = k === message.parts.length - 1
+              switch (part._tag) {
+                case "ReasoningPart": {
+                  content.push({
+                    type: "thinking",
+                    thinking: part.reasoningText,
+                    signature: part.signature!
+                  })
+                  break
+                }
+                case "RedactedReasoningPart": {
+                  content.push({
+                    type: "redacted_thinking",
+                    data: part.redactedText
+                  })
+                  break
+                }
+                case "TextPart": {
+                  content.push({
+                    type: "text",
+                    text:
+                      // Anthropic does not allow trailing whitespace in assistant
+                      // content blocks
+                      isLastGroup && isLastMessage && isLastPart
+                        ? part.text.trim()
+                        : part.text
+                  })
+                  break
+                }
+                case "ToolCallPart": {
+                  content.push({
+                    type: "tool_use",
+                    id: part.id,
+                    name: part.name,
+                    input: part.params as any
+                  })
+                  break
+                }
+              }
+            }
+          }
+          messages.push({ role: "assistant", content })
+          break
+        }
+        case "user": {
+          const content: Array<typeof Generated.InputContentBlock.Encoded> = []
+          for (let j = 0; j < group.messages.length; j++) {
+            const message = group.messages[j]
+            switch (message._tag) {
+              case "ToolMessage": {
+                for (let k = 0; k < message.parts.length; k++) {
+                  const part = message.parts[k]
+                  // TODO: support advanced tool result content parts
+                  content.push({
+                    type: "tool_result",
+                    tool_use_id: part.id,
+                    content: JSON.stringify(part.result)
+                  })
+                }
+                break
+              }
+              case "UserMessage": {
+                for (let k = 0; k < message.parts.length; k++) {
+                  const part = message.parts[k]
+                  switch (part._tag) {
+                    case "FilePart": {
+                      if (Predicate.isUndefined(part.mediaType) || part.mediaType !== "application/pdf") {
+                        return yield* new AiError({
+                          module: "AnthropicLanguageModel",
+                          method,
+                          description: "AnthropicLanguageModel only supports PDF file inputs"
+                        })
+                      }
+                      content.push({
+                        type: "document",
+                        source: {
+                          type: "base64",
+                          media_type: "application/pdf",
+                          data: Encoding.encodeBase64(part.data)
+                        }
+                      })
+                      break
+                    }
+                    case "FileUrlPart": {
+                      content.push({
+                        type: "document",
+                        source: {
+                          type: "url",
+                          url: part.url.toString()
+                        }
+                      })
+                      break
+                    }
+                    case "TextPart": {
+                      content.push({
+                        type: "text",
+                        text: part.text
+                      })
+                      break
+                    }
+                    case "ImagePart": {
+                      content.push({
+                        type: "image",
+                        source: {
+                          type: "base64",
+                          media_type: part.mediaType ?? "image/jpeg" as any,
+                          data: Encoding.encodeBase64(part.data)
+                        }
+                      })
+                      break
+                    }
+                    case "ImageUrlPart": {
+                      content.push({
+                        type: "image",
+                        source: {
+                          type: "url",
+                          url: part.url.toString()
+                        }
+                      })
+                      break
+                    }
+                  }
+                }
+                break
+              }
+            }
+          }
+          messages.push({ role: "user", content })
+          break
+        }
+      }
+    }
+    if (Arr.isNonEmptyReadonlyArray(messages)) {
+      return messages
+    }
+    return yield* new AiError({
+      module: "AnthropicLanguageModel",
+      method,
+      description: "Prompt contained no messages"
+    })
+  }
+)
+
+const makeResponse = Effect.fnUntraced(
+  function*(response: Generated.Message) {
+    const parts: Array<AiResponse.Part> = []
+    parts.push(
+      new AiResponse.MetadataPart({
+        id: response.id,
+        model: response.model
+      }, constDisableValidation)
+    )
+    for (const part of response.content) {
+      switch (part.type) {
+        case "text": {
+          parts.push(
+            new AiResponse.TextPart({
+              text: part.text
+            }, constDisableValidation)
+          )
+          break
+        }
+        case "tool_use": {
+          parts.push(
+            AiResponse.ToolCallPart.fromUnknown({
+              id: part.id,
+              name: part.name,
+              params: part.input
+            })
+          )
+          break
+        }
+        case "thinking": {
+          parts.push(
+            new AiResponse.ReasoningPart({
+              reasoningText: part.thinking,
+              signature: part.signature
+            }, constDisableValidation)
+          )
+          break
+        }
+        case "redacted_thinking": {
+          parts.push(
+            new AiResponse.RedactedReasoningPart({
+              redactedText: part.data
+            }, constDisableValidation)
+          )
+          break
+        }
+      }
+    }
+    const metadata: Mutable<ProviderMetadata.Service> = {}
+    if (response.stop_sequence !== null) {
+      metadata.stopSequence = response.stop_sequence
+    }
+    parts.push(
+      new AiResponse.FinishPart({
+        // Anthropic always returns a non-null `stop_reason` for non-streaming responses
+        reason: InternalUtilities.resolveFinishReason(response.stop_reason!),
+        usage: new AiResponse.Usage({
+          inputTokens: response.usage.input_tokens,
+          outputTokens: response.usage.output_tokens,
+          totalTokens: response.usage.input_tokens + response.usage.output_tokens,
+          reasoningTokens: 0,
+          cacheReadInputTokens: response.usage.cache_read_input_tokens ?? 0,
+          cacheWriteInputTokens: response.usage.cache_creation_input_tokens ?? 0
+        }),
+        providerMetadata: { [InternalUtilities.ProviderMetadataKey]: metadata }
+      }, constDisableValidation)
+    )
+    return new AiResponse.AiResponse({
+      parts
+    }, constDisableValidation)
+  }
+)
+
+const annotateRequest = (
+  span: Span,
+  request: typeof Generated.CreateMessageParams.Encoded
+): void => {
+  addGenAIAnnotations(span, {
+    system: "anthropic",
+    operation: { name: "chat" },
+    request: {
+      model: request.model,
+      temperature: request.temperature,
+      topK: request.top_k,
+      topP: request.top_p,
+      maxTokens: request.max_tokens,
+      stopSequences: Arr.ensure(request.stop_sequences).filter(
+        Predicate.isNotNullable
+      )
+    }
+  })
+}
+
+const annotateChatResponse = (
+  span: Span,
+  response: typeof Generated.Message.Encoded
+): void => {
+  addGenAIAnnotations(span, {
+    response: {
+      id: response.id,
+      model: response.model,
+      finishReasons: response.stop_reason ? [response.stop_reason] : undefined
+    },
+    usage: {
+      inputTokens: response.usage.input_tokens,
+      outputTokens: response.usage.output_tokens
+    }
+  })
+}
+
+const annotateStreamResponse = (
+  span: Span,
+  response: AiResponse.AiResponse
+) => {
+  const metadataPart = response.parts.find((part) => part._tag === "MetadataPart")
+  const finishPart = response.parts.find((part) => part._tag === "FinishPart")
+  addGenAIAnnotations(span, {
+    response: {
+      id: metadataPart?.id,
+      model: metadataPart?.model,
+      finishReasons: finishPart?.reason ? [finishPart.reason] : undefined
+    },
+    usage: {
+      inputTokens: finishPart?.usage.inputTokens,
+      outputTokens: finishPart?.usage.outputTokens
+    }
+  })
+}
diff --git a/dist/src/AnthropicTokenizer.ts b/dist/src/AnthropicTokenizer.ts
new file mode 100644
index 0000000000000000000000000000000000000000..d0f415d2b9200d9d4f25c290916dcfae9e1af5ba
--- /dev/null
+++ b/dist/src/AnthropicTokenizer.ts
@@ -0,0 +1,68 @@
+/**
+ * @since 1.0.0
+ */
+import { getTokenizer } from "@anthropic-ai/tokenizer"
+import { AiError } from "@effect/ai/AiError"
+import type * as AiInput from "@effect/ai/AiInput"
+import * as Tokenizer from "@effect/ai/Tokenizer"
+import * as Arr from "effect/Array"
+import * as Effect from "effect/Effect"
+import * as Layer from "effect/Layer"
+import * as Option from "effect/Option"
+
+/**
+ * @since 1.0.0
+ * @category Constructors
+ */
+export const make = Tokenizer.make({
+  tokenize(input) {
+    return Effect.try({
+      try: () => {
+        const tokenizer = getTokenizer()
+        const text = Arr.flatMap(input.messages, (message) =>
+          Arr.filterMap(
+            message.parts as Array<
+              | AiInput.AssistantMessagePart
+              | AiInput.ToolMessagePart
+              | AiInput.UserMessagePart
+            >,
+            (part) => {
+              if (
+                part._tag === "FilePart" ||
+                part._tag === "FileUrlPart" ||
+                part._tag === "ImagePart" ||
+                part._tag === "ImageUrlPart" ||
+                part._tag === "ReasoningPart" ||
+                part._tag === "RedactedReasoningPart"
+              ) return Option.none()
+              return Option.some(
+                part._tag === "TextPart"
+                  ? part.text
+                  : JSON.stringify(
+                    part._tag === "ToolCallPart"
+                      ? part.params :
+                      part.result
+                  )
+              )
+            }
+          )).join("")
+        const encoded = tokenizer.encode(text.normalize("NFKC"), "all")
+        tokenizer.free()
+        return Array.from(encoded)
+      },
+      catch: (cause) =>
+        new AiError({
+          module: "AnthropicTokenizer",
+          method: "tokenize",
+          description: "Could not tokenize",
+          cause
+        })
+    })
+  }
+})
+
+/**
+ * @since 1.0.0
+ * @category Layers
+ */
+export const layer: Layer.Layer<Tokenizer.Tokenizer> = Layer.succeed(Tokenizer.Tokenizer, make)
diff --git a/dist/src/Generated.ts b/dist/src/Generated.ts
new file mode 100644
index 0000000000000000000000000000000000000000..644ad429aedf47d4fb1a4b845c2e1e2f311fef59
--- /dev/null
+++ b/dist/src/Generated.ts
@@ -0,0 +1,2884 @@
+/**
+ * @since 1.0.0
+ */
+import type * as HttpClient from "@effect/platform/HttpClient"
+import * as HttpClientError from "@effect/platform/HttpClientError"
+import * as HttpClientRequest from "@effect/platform/HttpClientRequest"
+import * as HttpClientResponse from "@effect/platform/HttpClientResponse"
+import type * as UrlParams from "@effect/platform/UrlParams"
+import * as Effect from "effect/Effect"
+import type { ParseError } from "effect/ParseResult"
+import * as S from "effect/Schema"
+
+export class MessagesPostParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class Model extends S.Literal(
+  "claude-3-7-sonnet-latest",
+  "claude-3-7-sonnet-20250219",
+  "claude-3-5-haiku-latest",
+  "claude-3-5-haiku-20241022",
+  "claude-sonnet-4-20250514",
+  "claude-sonnet-4-0",
+  "claude-4-sonnet-20250514",
+  "claude-3-5-sonnet-latest",
+  "claude-3-5-sonnet-20241022",
+  "claude-3-5-sonnet-20240620",
+  "claude-opus-4-0",
+  "claude-opus-4-20250514",
+  "claude-4-opus-20250514",
+  "claude-3-opus-latest",
+  "claude-3-opus-20240229",
+  "claude-3-sonnet-20240229",
+  "claude-3-haiku-20240307",
+  "claude-2.1",
+  "claude-2.0"
+) {}
+
+export class CacheControlEphemeralType extends S.Literal("ephemeral") {}
+
+export class CacheControlEphemeral extends S.Struct({
+  "type": CacheControlEphemeralType
+}) {}
+
+export class RequestServerToolUseBlockName extends S.Literal("web_search") {}
+
+export class RequestServerToolUseBlockType extends S.Literal("server_tool_use") {}
+
+export class RequestServerToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": RequestServerToolUseBlockName,
+  "type": RequestServerToolUseBlockType
+}) {}
+
+export class RequestWebSearchResultBlockType extends S.Literal("web_search_result") {}
+
+export class RequestWebSearchResultBlock extends S.Struct({
+  "encrypted_content": S.String,
+  "page_age": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "title": S.String,
+  "type": RequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+
+export class WebSearchToolResultErrorCode
+  extends S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long")
+{}
+
+export class RequestWebSearchToolResultErrorType extends S.Literal("web_search_tool_result_error") {}
+
+export class RequestWebSearchToolResultError extends S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": RequestWebSearchToolResultErrorType
+}) {}
+
+export class RequestWebSearchToolResultBlockType extends S.Literal("web_search_tool_result") {}
+
+export class RequestWebSearchToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.Union(S.Array(RequestWebSearchResultBlock), RequestWebSearchToolResultError),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": RequestWebSearchToolResultBlockType
+}) {}
+
+export class RequestCharLocationCitationType extends S.Literal("char_location") {}
+
+export class RequestCharLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": RequestCharLocationCitationType
+}) {}
+
+export class RequestPageLocationCitationType extends S.Literal("page_location") {}
+
+export class RequestPageLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "type": RequestPageLocationCitationType
+}) {}
+
+export class RequestContentBlockLocationCitationType extends S.Literal("content_block_location") {}
+
+export class RequestContentBlockLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": RequestContentBlockLocationCitationType
+}) {}
+
+export class RequestWebSearchResultLocationCitationType extends S.Literal("web_search_result_location") {}
+
+export class RequestWebSearchResultLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "type": RequestWebSearchResultLocationCitationType,
+  "url": S.String.pipe(S.minLength(1), S.maxLength(2048))
+}) {}
+
+export class RequestTextBlockType extends S.Literal("text") {}
+
+export class RequestTextBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "citations": S.optionalWith(
+    S.Union(
+      S.Array(
+        S.Union(
+          RequestCharLocationCitation,
+          RequestPageLocationCitation,
+          RequestContentBlockLocationCitation,
+          RequestWebSearchResultLocationCitation
+        )
+      ),
+      S.Null
+    ),
+    { nullable: true }
+  ),
+  "text": S.String.pipe(S.minLength(1)),
+  "type": RequestTextBlockType
+}) {}
+
+export class Base64ImageSourceMediaType extends S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+
+export class Base64ImageSourceType extends S.Literal("base64") {}
+
+export class Base64ImageSource extends S.Struct({
+  "data": S.String,
+  "media_type": Base64ImageSourceMediaType,
+  "type": Base64ImageSourceType
+}) {}
+
+export class URLImageSourceType extends S.Literal("url") {}
+
+export class URLImageSource extends S.Struct({
+  "type": URLImageSourceType,
+  "url": S.String
+}) {}
+
+export class RequestImageBlockType extends S.Literal("image") {}
+
+export class RequestImageBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "source": S.Union(Base64ImageSource, URLImageSource),
+  "type": RequestImageBlockType
+}) {}
+
+export class RequestToolUseBlockType extends S.Literal("tool_use") {}
+
+export class RequestToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String.pipe(S.minLength(1), S.maxLength(200)),
+  "type": RequestToolUseBlockType
+}) {}
+
+export class RequestToolResultBlockType extends S.Literal("tool_result") {}
+
+export class RequestToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.optionalWith(S.Union(S.String, S.Array(S.Union(RequestTextBlock, RequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": S.optionalWith(S.Boolean, { nullable: true }),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": RequestToolResultBlockType
+}) {}
+
+export class RequestCitationsConfig extends S.Struct({
+  "enabled": S.optionalWith(S.Boolean, { nullable: true })
+}) {}
+
+export class Base64PDFSourceMediaType extends S.Literal("application/pdf") {}
+
+export class Base64PDFSourceType extends S.Literal("base64") {}
+
+export class Base64PDFSource extends S.Struct({
+  "data": S.String,
+  "media_type": Base64PDFSourceMediaType,
+  "type": Base64PDFSourceType
+}) {}
+
+export class PlainTextSourceMediaType extends S.Literal("text/plain") {}
+
+export class PlainTextSourceType extends S.Literal("text") {}
+
+export class PlainTextSource extends S.Struct({
+  "data": S.String,
+  "media_type": PlainTextSourceMediaType,
+  "type": PlainTextSourceType
+}) {}
+
+export class ContentBlockSourceType extends S.Literal("content") {}
+
+export class ContentBlockSource extends S.Struct({
+  "content": S.Union(S.String, S.Array(S.Union(RequestTextBlock, RequestImageBlock))),
+  "type": ContentBlockSourceType
+}) {}
+
+export class URLPDFSourceType extends S.Literal("url") {}
+
+export class URLPDFSource extends S.Struct({
+  "type": URLPDFSourceType,
+  "url": S.String
+}) {}
+
+export class RequestDocumentBlockType extends S.Literal("document") {}
+
+export class RequestDocumentBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "citations": S.optionalWith(RequestCitationsConfig, { nullable: true }),
+  "context": S.optionalWith(S.Union(S.String.pipe(S.minLength(1)), S.Null), { nullable: true }),
+  "source": S.Union(Base64PDFSource, PlainTextSource, ContentBlockSource, URLPDFSource),
+  "title": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(500)), S.Null), { nullable: true }),
+  "type": RequestDocumentBlockType
+}) {}
+
+export class RequestThinkingBlockType extends S.Literal("thinking") {}
+
+export class RequestThinkingBlock extends S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": RequestThinkingBlockType
+}) {}
+
+export class RequestRedactedThinkingBlockType extends S.Literal("redacted_thinking") {}
+
+export class RequestRedactedThinkingBlock extends S.Struct({
+  "data": S.String,
+  "type": RequestRedactedThinkingBlockType
+}) {}
+
+export class InputContentBlock extends S.Union(
+  RequestServerToolUseBlock,
+  RequestWebSearchToolResultBlock,
+  RequestTextBlock,
+  RequestImageBlock,
+  RequestToolUseBlock,
+  RequestToolResultBlock,
+  RequestDocumentBlock,
+  RequestThinkingBlock,
+  RequestRedactedThinkingBlock
+) {}
+
+export class InputMessageRole extends S.Literal("user", "assistant") {}
+
+export class InputMessage extends S.Struct({
+  "content": S.Union(S.String, S.Array(InputContentBlock)),
+  "role": InputMessageRole
+}) {}
+
+export class Metadata extends S.Struct({
+  "user_id": S.optionalWith(S.Union(S.String.pipe(S.maxLength(256)), S.Null), { nullable: true })
+}) {}
+
+export class CreateMessageParamsServiceTier extends S.Literal("auto", "standard_only") {}
+
+export class ThinkingConfigEnabledType extends S.Literal("enabled") {}
+
+export class ThinkingConfigEnabled extends S.Struct({
+  "budget_tokens": S.Int.pipe(S.greaterThanOrEqualTo(1024)),
+  "type": ThinkingConfigEnabledType
+}) {}
+
+export class ThinkingConfigDisabledType extends S.Literal("disabled") {}
+
+export class ThinkingConfigDisabled extends S.Struct({
+  "type": ThinkingConfigDisabledType
+}) {}
+
+export class ThinkingConfigParam extends S.Union(ThinkingConfigEnabled, ThinkingConfigDisabled) {}
+
+export class ToolChoiceAutoType extends S.Literal("auto") {}
+
+export class ToolChoiceAuto extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "type": ToolChoiceAutoType
+}) {}
+
+export class ToolChoiceAnyType extends S.Literal("any") {}
+
+export class ToolChoiceAny extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "type": ToolChoiceAnyType
+}) {}
+
+export class ToolChoiceToolType extends S.Literal("tool") {}
+
+export class ToolChoiceTool extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "name": S.String,
+  "type": ToolChoiceToolType
+}) {}
+
+export class ToolChoiceNoneType extends S.Literal("none") {}
+
+export class ToolChoiceNone extends S.Struct({
+  "type": ToolChoiceNoneType
+}) {}
+
+export class ToolChoice extends S.Union(ToolChoiceAuto, ToolChoiceAny, ToolChoiceTool, ToolChoiceNone) {}
+
+export class ToolTypeEnum extends S.Literal("custom") {}
+
+export class InputSchemaType extends S.Literal("object") {}
+
+export class InputSchema extends S.Struct({
+  "properties": S.optionalWith(S.Union(S.Record({ key: S.String, value: S.Unknown }), S.Null), { nullable: true }),
+  "required": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "type": InputSchemaType
+}) {}
+
+export class Tool extends S.Struct({
+  "type": S.optionalWith(S.Union(S.Null, ToolTypeEnum), { nullable: true }),
+  "description": S.optionalWith(S.String, { nullable: true }),
+  "name": S.String.pipe(S.minLength(1), S.maxLength(64), S.pattern(new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": InputSchema,
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true })
+}) {}
+
+export class BashTool20250124Name extends S.Literal("bash") {}
+
+export class BashTool20250124Type extends S.Literal("bash_20250124") {}
+
+export class BashTool20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BashTool20250124Name,
+  "type": BashTool20250124Type
+}) {}
+
+export class TextEditor20250124Name extends S.Literal("str_replace_editor") {}
+
+export class TextEditor20250124Type extends S.Literal("text_editor_20250124") {}
+
+export class TextEditor20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "name": TextEditor20250124Name,
+  "type": TextEditor20250124Type
+}) {}
+
+export class TextEditor20250429Name extends S.Literal("str_replace_based_edit_tool") {}
+
+export class TextEditor20250429Type extends S.Literal("text_editor_20250429") {}
+
+export class TextEditor20250429 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "name": TextEditor20250429Name,
+  "type": TextEditor20250429Type
+}) {}
+
+export class WebSearchTool20250305Name extends S.Literal("web_search") {}
+
+export class WebSearchTool20250305Type extends S.Literal("web_search_20250305") {}
+
+export class UserLocationType extends S.Literal("approximate") {}
+
+export class UserLocation extends S.Struct({
+  "city": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "country": S.optionalWith(S.Union(S.String.pipe(S.minLength(2), S.maxLength(2)), S.Null), { nullable: true }),
+  "region": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "timezone": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "type": UserLocationType
+}) {}
+
+export class WebSearchTool20250305 extends S.Struct({
+  "allowed_domains": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "blocked_domains": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "cache_control": S.optionalWith(S.Union(CacheControlEphemeral, S.Null), { nullable: true }),
+  "max_uses": S.optionalWith(S.Union(S.Int.pipe(S.greaterThan(0)), S.Null), { nullable: true }),
+  "name": WebSearchTool20250305Name,
+  "type": WebSearchTool20250305Type,
+  "user_location": S.optionalWith(S.Union(UserLocation, S.Null), { nullable: true })
+}) {}
+
+export class CreateMessageParams extends S.Class<CreateMessageParams>("CreateMessageParams")({
+  "model": S.Union(S.String, Model),
+  "messages": S.Array(InputMessage),
+  "max_tokens": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "metadata": S.optionalWith(Metadata, { nullable: true }),
+  "service_tier": S.optionalWith(CreateMessageParamsServiceTier, { nullable: true }),
+  "stop_sequences": S.optionalWith(S.Array(S.String), { nullable: true }),
+  "stream": S.optionalWith(S.Boolean, { nullable: true }),
+  "system": S.optionalWith(S.Union(S.String, S.Array(RequestTextBlock)), { nullable: true }),
+  "temperature": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true }),
+  "thinking": S.optionalWith(ThinkingConfigParam, { nullable: true }),
+  "tool_choice": S.optionalWith(ToolChoice, { nullable: true }),
+  "tools": S.optionalWith(
+    S.Array(S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)),
+    { nullable: true }
+  ),
+  "top_k": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(0)), { nullable: true }),
+  "top_p": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true })
+}) {}
+
+export class MessageType extends S.Literal("message") {}
+
+export class MessageRole extends S.Literal("assistant") {}
+
+export class ResponseCharLocationCitationType extends S.Literal("char_location") {}
+
+export class ResponseCharLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": ResponseCharLocationCitationType
+}) {}
+
+export class ResponsePageLocationCitationType extends S.Literal("page_location") {}
+
+export class ResponsePageLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "type": ResponsePageLocationCitationType
+}) {}
+
+export class ResponseContentBlockLocationCitationType extends S.Literal("content_block_location") {}
+
+export class ResponseContentBlockLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": ResponseContentBlockLocationCitationType
+}) {}
+
+export class ResponseWebSearchResultLocationCitationType extends S.Literal("web_search_result_location") {}
+
+export class ResponseWebSearchResultLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": S.Union(S.String, S.Null),
+  "type": ResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+
+export class ResponseTextBlockType extends S.Literal("text") {}
+
+export class ResponseTextBlock extends S.Struct({
+  "citations": S.optional(S.NullOr(
+    S.Array(
+      S.Union(
+        ResponseCharLocationCitation,
+        ResponsePageLocationCitation,
+        ResponseContentBlockLocationCitation,
+        ResponseWebSearchResultLocationCitation
+      )
+    )
+  )),
+  "text": S.String.pipe(S.minLength(0), S.maxLength(5000000)),
+  "type": ResponseTextBlockType
+}) {}
+
+export class ResponseToolUseBlockType extends S.Literal("tool_use") {}
+
+export class ResponseToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String.pipe(S.minLength(1)),
+  "type": ResponseToolUseBlockType
+}) {}
+
+export class ResponseServerToolUseBlockName extends S.Literal("web_search") {}
+
+export class ResponseServerToolUseBlockType extends S.Literal("server_tool_use") {}
+
+export class ResponseServerToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": ResponseServerToolUseBlockName,
+  "type": ResponseServerToolUseBlockType
+}) {}
+
+export class ResponseWebSearchToolResultErrorType extends S.Literal("web_search_tool_result_error") {}
+
+export class ResponseWebSearchToolResultError extends S.Struct({
+  "error_code": WebSearchToolResultErrorCode,
+  "type": ResponseWebSearchToolResultErrorType
+}) {}
+
+export class ResponseWebSearchResultBlockType extends S.Literal("web_search_result") {}
+
+export class ResponseWebSearchResultBlock extends S.Struct({
+  "encrypted_content": S.String,
+  "page_age": S.NullOr(S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": ResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+
+export class ResponseWebSearchToolResultBlockType extends S.Literal("web_search_tool_result") {}
+
+export class ResponseWebSearchToolResultBlock extends S.Struct({
+  "content": S.Union(ResponseWebSearchToolResultError, S.Array(ResponseWebSearchResultBlock)),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": ResponseWebSearchToolResultBlockType
+}) {}
+
+export class ResponseThinkingBlockType extends S.Literal("thinking") {}
+
+export class ResponseThinkingBlock extends S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": ResponseThinkingBlockType
+}) {}
+
+export class ResponseRedactedThinkingBlockType extends S.Literal("redacted_thinking") {}
+
+export class ResponseRedactedThinkingBlock extends S.Struct({
+  "data": S.String,
+  "type": ResponseRedactedThinkingBlockType
+}) {}
+
+export class ContentBlock extends S.Union(
+  ResponseTextBlock,
+  ResponseToolUseBlock,
+  ResponseServerToolUseBlock,
+  ResponseWebSearchToolResultBlock,
+  ResponseThinkingBlock,
+  ResponseRedactedThinkingBlock
+) {}
+
+export class StopReason
+  extends S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal")
+{}
+
+export class ServerToolUsage extends S.Struct({
+  "web_search_requests": S.Int.pipe(S.greaterThanOrEqualTo(0))
+}) {}
+
+export class UsageServiceTierEnum extends S.Literal("standard", "priority", "batch") {}
+
+export class Usage extends S.Struct({
+  "cache_creation_input_tokens": S.NullOr(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": S.NullOr(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "output_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "server_tool_use": S.optional(S.NullOr(ServerToolUsage)),
+  "service_tier": S.NullOr(S.Union(UsageServiceTierEnum, S.Null))
+}) {}
+
+export class Message extends S.Class<Message>("Message")({
+  "id": S.String,
+  "type": MessageType,
+  "role": MessageRole,
+  "content": S.Array(ContentBlock),
+  "model": S.Union(S.String, Model),
+  "stop_reason": S.Union(StopReason, S.Null),
+  "stop_sequence": S.NullOr(S.Union(S.String, S.Null)),
+  "usage": Usage
+}) {}
+
+export class InvalidRequestErrorType extends S.Literal("invalid_request_error") {}
+
+export class InvalidRequestError extends S.Struct({
+  "message": S.String,
+  "type": InvalidRequestErrorType
+}) {}
+
+export class AuthenticationErrorType extends S.Literal("authentication_error") {}
+
+export class AuthenticationError extends S.Struct({
+  "message": S.String,
+  "type": AuthenticationErrorType
+}) {}
+
+export class BillingErrorType extends S.Literal("billing_error") {}
+
+export class BillingError extends S.Struct({
+  "message": S.String,
+  "type": BillingErrorType
+}) {}
+
+export class PermissionErrorType extends S.Literal("permission_error") {}
+
+export class PermissionError extends S.Struct({
+  "message": S.String,
+  "type": PermissionErrorType
+}) {}
+
+export class NotFoundErrorType extends S.Literal("not_found_error") {}
+
+export class NotFoundError extends S.Struct({
+  "message": S.String,
+  "type": NotFoundErrorType
+}) {}
+
+export class RateLimitErrorType extends S.Literal("rate_limit_error") {}
+
+export class RateLimitError extends S.Struct({
+  "message": S.String,
+  "type": RateLimitErrorType
+}) {}
+
+export class GatewayTimeoutErrorType extends S.Literal("timeout_error") {}
+
+export class GatewayTimeoutError extends S.Struct({
+  "message": S.String,
+  "type": GatewayTimeoutErrorType
+}) {}
+
+export class APIErrorType extends S.Literal("api_error") {}
+
+export class APIError extends S.Struct({
+  "message": S.String,
+  "type": APIErrorType
+}) {}
+
+export class OverloadedErrorType extends S.Literal("overloaded_error") {}
+
+export class OverloadedError extends S.Struct({
+  "message": S.String,
+  "type": OverloadedErrorType
+}) {}
+
+export class ErrorResponseType extends S.Literal("error") {}
+
+export class ErrorResponse extends S.Class<ErrorResponse>("ErrorResponse")({
+  "error": S.Union(
+    InvalidRequestError,
+    AuthenticationError,
+    BillingError,
+    PermissionError,
+    NotFoundError,
+    RateLimitError,
+    GatewayTimeoutError,
+    APIError,
+    OverloadedError
+  ),
+  "type": ErrorResponseType
+}) {}
+
+export class CompletePostParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class CompletionRequest extends S.Class<CompletionRequest>("CompletionRequest")({
+  "model": S.Union(S.String, Model),
+  "prompt": S.String.pipe(S.minLength(1)),
+  "max_tokens_to_sample": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "stop_sequences": S.optionalWith(S.Array(S.String), { nullable: true }),
+  "temperature": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true }),
+  "top_p": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true }),
+  "top_k": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(0)), { nullable: true }),
+  "metadata": S.optionalWith(Metadata, { nullable: true }),
+  "stream": S.optionalWith(S.Boolean, { nullable: true })
+}) {}
+
+export class CompletionResponseType extends S.Literal("completion") {}
+
+export class CompletionResponse extends S.Class<CompletionResponse>("CompletionResponse")({
+  "completion": S.String,
+  "id": S.String,
+  "model": S.Union(S.String, Model),
+  "stop_reason": S.Union(S.String, S.Null),
+  "type": CompletionResponseType
+}) {}
+
+export class ModelsListParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class ModelInfoType extends S.Literal("model") {}
+
+export class ModelInfo extends S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": ModelInfoType
+}) {}
+
+export class ListResponseModelInfo extends S.Class<ListResponseModelInfo>("ListResponseModelInfo")({
+  "data": S.Array(ModelInfo),
+  "first_id": S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": S.Union(S.String, S.Null)
+}) {}
+
+export class ModelsGetParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchesListParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchProcessingStatus extends S.Literal("in_progress", "canceling", "ended") {}
+
+export class RequestCounts extends S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+
+export class MessageBatchType extends S.Literal("message_batch") {}
+
+export class MessageBatch extends S.Struct({
+  "archived_at": S.Union(S.String, S.Null),
+  "cancel_initiated_at": S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": MessageBatchProcessingStatus,
+  "request_counts": RequestCounts,
+  "results_url": S.Union(S.String, S.Null),
+  "type": MessageBatchType
+}) {}
+
+export class ListResponseMessageBatch extends S.Class<ListResponseMessageBatch>("ListResponseMessageBatch")({
+  "data": S.Array(MessageBatch),
+  "first_id": S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": S.Union(S.String, S.Null)
+}) {}
+
+export class MessageBatchesPostParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchIndividualRequestParams extends S.Struct({
+  "custom_id": S.String.pipe(S.minLength(1), S.maxLength(64), S.pattern(new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": CreateMessageParams
+}) {}
+
+export class CreateMessageBatchParams extends S.Class<CreateMessageBatchParams>("CreateMessageBatchParams")({
+  "requests": S.Array(MessageBatchIndividualRequestParams).pipe(S.minItems(1), S.maxItems(10000))
+}) {}
+
+export class MessageBatchesRetrieveParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchesDeleteParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class DeleteMessageBatchResponseType extends S.Literal("message_batch_deleted") {}
+
+export class DeleteMessageBatchResponse extends S.Class<DeleteMessageBatchResponse>("DeleteMessageBatchResponse")({
+  "id": S.String,
+  "type": DeleteMessageBatchResponseType
+}) {}
+
+export class MessageBatchesCancelParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessageBatchesResultsParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class MessagesCountTokensPostParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class CountMessageTokensParams extends S.Class<CountMessageTokensParams>("CountMessageTokensParams")({
+  "messages": S.Array(InputMessage),
+  "model": S.Union(S.String, Model),
+  "system": S.optionalWith(S.Union(S.String, S.Array(RequestTextBlock)), { nullable: true }),
+  "thinking": S.optionalWith(ThinkingConfigParam, { nullable: true }),
+  "tool_choice": S.optionalWith(ToolChoice, { nullable: true }),
+  "tools": S.optionalWith(
+    S.Array(S.Union(Tool, BashTool20250124, TextEditor20250124, TextEditor20250429, WebSearchTool20250305)),
+    { nullable: true }
+  )
+}) {}
+
+export class CountMessageTokensResponse extends S.Class<CountMessageTokensResponse>("CountMessageTokensResponse")({
+  "input_tokens": S.Int
+}) {}
+
+export class ListFilesV1FilesGetParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class FileMetadataSchemaType extends S.Literal("file") {}
+
+export class FileMetadataSchema extends S.Struct({
+  "created_at": S.String,
+  "downloadable": S.optionalWith(S.Boolean, { nullable: true }),
+  "filename": S.String.pipe(S.minLength(1), S.maxLength(500)),
+  "id": S.String,
+  "mime_type": S.String.pipe(S.minLength(1), S.maxLength(255)),
+  "size_bytes": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": FileMetadataSchemaType
+}) {}
+
+export class FileListResponse extends S.Class<FileListResponse>("FileListResponse")({
+  "data": S.Array(FileMetadataSchema),
+  "first_id": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "has_more": S.optionalWith(S.Boolean, { nullable: true }),
+  "last_id": S.optionalWith(S.Union(S.String, S.Null), { nullable: true })
+}) {}
+
+export class UploadFileV1FilesPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class GetFileMetadataV1FilesFileIdGetParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class DeleteFileV1FilesFileIdDeleteParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class FileDeleteResponseType extends S.Literal("file_deleted") {}
+
+export class FileDeleteResponse extends S.Class<FileDeleteResponse>("FileDeleteResponse")({
+  "id": S.String,
+  "type": S.optionalWith(FileDeleteResponseType, { nullable: true })
+}) {}
+
+export class DownloadFileV1FilesFileIdContentGetParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessagesPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaCacheControlEphemeralTtl extends S.Literal("5m", "1h") {}
+
+export class BetaCacheControlEphemeralType extends S.Literal("ephemeral") {}
+
+export class BetaCacheControlEphemeral extends S.Struct({
+  "ttl": S.optionalWith(BetaCacheControlEphemeralTtl, { nullable: true }),
+  "type": BetaCacheControlEphemeralType
+}) {}
+
+export class BetaRequestServerToolUseBlockName extends S.Literal("web_search", "code_execution") {}
+
+export class BetaRequestServerToolUseBlockType extends S.Literal("server_tool_use") {}
+
+export class BetaRequestServerToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": BetaRequestServerToolUseBlockName,
+  "type": BetaRequestServerToolUseBlockType
+}) {}
+
+export class BetaRequestWebSearchResultBlockType extends S.Literal("web_search_result") {}
+
+export class BetaRequestWebSearchResultBlock extends S.Struct({
+  "encrypted_content": S.String,
+  "page_age": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "title": S.String,
+  "type": BetaRequestWebSearchResultBlockType,
+  "url": S.String
+}) {}
+
+export class BetaWebSearchToolResultErrorCode
+  extends S.Literal("invalid_tool_input", "unavailable", "max_uses_exceeded", "too_many_requests", "query_too_long")
+{}
+
+export class BetaRequestWebSearchToolResultErrorType extends S.Literal("web_search_tool_result_error") {}
+
+export class BetaRequestWebSearchToolResultError extends S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaRequestWebSearchToolResultErrorType
+}) {}
+
+export class BetaRequestWebSearchToolResultBlockType extends S.Literal("web_search_tool_result") {}
+
+export class BetaRequestWebSearchToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.Union(S.Array(BetaRequestWebSearchResultBlock), BetaRequestWebSearchToolResultError),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestWebSearchToolResultBlockType
+}) {}
+
+export class BetaCodeExecutionToolResultErrorCode
+  extends S.Literal("invalid_tool_input", "unavailable", "too_many_requests", "execution_time_exceeded")
+{}
+
+export class BetaRequestCodeExecutionToolResultErrorType extends S.Literal("code_execution_tool_result_error") {}
+
+export class BetaRequestCodeExecutionToolResultError extends S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaRequestCodeExecutionToolResultErrorType
+}) {}
+
+export class BetaRequestCodeExecutionOutputBlockType extends S.Literal("code_execution_output") {}
+
+export class BetaRequestCodeExecutionOutputBlock extends S.Struct({
+  "file_id": S.String,
+  "type": BetaRequestCodeExecutionOutputBlockType
+}) {}
+
+export class BetaRequestCodeExecutionResultBlockType extends S.Literal("code_execution_result") {}
+
+export class BetaRequestCodeExecutionResultBlock extends S.Struct({
+  "content": S.Array(BetaRequestCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaRequestCodeExecutionResultBlockType
+}) {}
+
+export class BetaRequestCodeExecutionToolResultBlockType extends S.Literal("code_execution_tool_result") {}
+
+export class BetaRequestCodeExecutionToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.Union(BetaRequestCodeExecutionToolResultError, BetaRequestCodeExecutionResultBlock),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaRequestCodeExecutionToolResultBlockType
+}) {}
+
+export class BetaRequestMCPToolUseBlockType extends S.Literal("mcp_tool_use") {}
+
+export class BetaRequestMCPToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaRequestMCPToolUseBlockType
+}) {}
+
+export class BetaRequestCharLocationCitationType extends S.Literal("char_location") {}
+
+export class BetaRequestCharLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestCharLocationCitationType
+}) {}
+
+export class BetaRequestPageLocationCitationType extends S.Literal("page_location") {}
+
+export class BetaRequestPageLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "type": BetaRequestPageLocationCitationType
+}) {}
+
+export class BetaRequestContentBlockLocationCitationType extends S.Literal("content_block_location") {}
+
+export class BetaRequestContentBlockLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaRequestContentBlockLocationCitationType
+}) {}
+
+export class BetaRequestWebSearchResultLocationCitationType extends S.Literal("web_search_result_location") {}
+
+export class BetaRequestWebSearchResultLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null),
+  "type": BetaRequestWebSearchResultLocationCitationType,
+  "url": S.String.pipe(S.minLength(1), S.maxLength(2048))
+}) {}
+
+export class BetaRequestTextBlockType extends S.Literal("text") {}
+
+export class BetaRequestTextBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "citations": S.optionalWith(
+    S.Union(
+      S.Array(
+        S.Union(
+          BetaRequestCharLocationCitation,
+          BetaRequestPageLocationCitation,
+          BetaRequestContentBlockLocationCitation,
+          BetaRequestWebSearchResultLocationCitation
+        )
+      ),
+      S.Null
+    ),
+    { nullable: true }
+  ),
+  "text": S.String.pipe(S.minLength(1)),
+  "type": BetaRequestTextBlockType
+}) {}
+
+export class BetaRequestMCPToolResultBlockType extends S.Literal("mcp_tool_result") {}
+
+export class BetaRequestMCPToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.optionalWith(S.Union(S.String, S.Array(BetaRequestTextBlock)), { nullable: true }),
+  "is_error": S.optionalWith(S.Boolean, { nullable: true }),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestMCPToolResultBlockType
+}) {}
+
+export class BetaBase64ImageSourceMediaType extends S.Literal("image/jpeg", "image/png", "image/gif", "image/webp") {}
+
+export class BetaBase64ImageSourceType extends S.Literal("base64") {}
+
+export class BetaBase64ImageSource extends S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64ImageSourceMediaType,
+  "type": BetaBase64ImageSourceType
+}) {}
+
+export class BetaURLImageSourceType extends S.Literal("url") {}
+
+export class BetaURLImageSource extends S.Struct({
+  "type": BetaURLImageSourceType,
+  "url": S.String
+}) {}
+
+export class BetaFileImageSourceType extends S.Literal("file") {}
+
+export class BetaFileImageSource extends S.Struct({
+  "file_id": S.String,
+  "type": BetaFileImageSourceType
+}) {}
+
+export class BetaRequestImageBlockType extends S.Literal("image") {}
+
+export class BetaRequestImageBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "source": S.Union(BetaBase64ImageSource, BetaURLImageSource, BetaFileImageSource),
+  "type": BetaRequestImageBlockType
+}) {}
+
+export class BetaRequestToolUseBlockType extends S.Literal("tool_use") {}
+
+export class BetaRequestToolUseBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String.pipe(S.minLength(1), S.maxLength(200)),
+  "type": BetaRequestToolUseBlockType
+}) {}
+
+export class BetaRequestToolResultBlockType extends S.Literal("tool_result") {}
+
+export class BetaRequestToolResultBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "content": S.optionalWith(S.Union(S.String, S.Array(S.Union(BetaRequestTextBlock, BetaRequestImageBlock))), {
+    nullable: true
+  }),
+  "is_error": S.optionalWith(S.Boolean, { nullable: true }),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaRequestToolResultBlockType
+}) {}
+
+export class BetaRequestCitationsConfig extends S.Struct({
+  "enabled": S.optionalWith(S.Boolean, { nullable: true })
+}) {}
+
+export class BetaBase64PDFSourceMediaType extends S.Literal("application/pdf") {}
+
+export class BetaBase64PDFSourceType extends S.Literal("base64") {}
+
+export class BetaBase64PDFSource extends S.Struct({
+  "data": S.String,
+  "media_type": BetaBase64PDFSourceMediaType,
+  "type": BetaBase64PDFSourceType
+}) {}
+
+export class BetaPlainTextSourceMediaType extends S.Literal("text/plain") {}
+
+export class BetaPlainTextSourceType extends S.Literal("text") {}
+
+export class BetaPlainTextSource extends S.Struct({
+  "data": S.String,
+  "media_type": BetaPlainTextSourceMediaType,
+  "type": BetaPlainTextSourceType
+}) {}
+
+export class BetaContentBlockSourceType extends S.Literal("content") {}
+
+export class BetaContentBlockSource extends S.Struct({
+  "content": S.Union(S.String, S.Array(S.Union(BetaRequestTextBlock, BetaRequestImageBlock))),
+  "type": BetaContentBlockSourceType
+}) {}
+
+export class BetaURLPDFSourceType extends S.Literal("url") {}
+
+export class BetaURLPDFSource extends S.Struct({
+  "type": BetaURLPDFSourceType,
+  "url": S.String
+}) {}
+
+export class BetaFileDocumentSourceType extends S.Literal("file") {}
+
+export class BetaFileDocumentSource extends S.Struct({
+  "file_id": S.String,
+  "type": BetaFileDocumentSourceType
+}) {}
+
+export class BetaRequestDocumentBlockType extends S.Literal("document") {}
+
+export class BetaRequestDocumentBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "citations": S.optionalWith(BetaRequestCitationsConfig, { nullable: true }),
+  "context": S.optionalWith(S.Union(S.String.pipe(S.minLength(1)), S.Null), { nullable: true }),
+  "source": S.Union(
+    BetaBase64PDFSource,
+    BetaPlainTextSource,
+    BetaContentBlockSource,
+    BetaURLPDFSource,
+    BetaFileDocumentSource
+  ),
+  "title": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(500)), S.Null), { nullable: true }),
+  "type": BetaRequestDocumentBlockType
+}) {}
+
+export class BetaRequestThinkingBlockType extends S.Literal("thinking") {}
+
+export class BetaRequestThinkingBlock extends S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaRequestThinkingBlockType
+}) {}
+
+export class BetaRequestRedactedThinkingBlockType extends S.Literal("redacted_thinking") {}
+
+export class BetaRequestRedactedThinkingBlock extends S.Struct({
+  "data": S.String,
+  "type": BetaRequestRedactedThinkingBlockType
+}) {}
+
+export class BetaRequestContainerUploadBlockType extends S.Literal("container_upload") {}
+
+export class BetaRequestContainerUploadBlock extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "file_id": S.String,
+  "type": BetaRequestContainerUploadBlockType
+}) {}
+
+export class BetaInputContentBlock extends S.Union(
+  BetaRequestServerToolUseBlock,
+  BetaRequestWebSearchToolResultBlock,
+  BetaRequestCodeExecutionToolResultBlock,
+  BetaRequestMCPToolUseBlock,
+  BetaRequestMCPToolResultBlock,
+  BetaRequestTextBlock,
+  BetaRequestImageBlock,
+  BetaRequestToolUseBlock,
+  BetaRequestToolResultBlock,
+  BetaRequestDocumentBlock,
+  BetaRequestThinkingBlock,
+  BetaRequestRedactedThinkingBlock,
+  BetaRequestContainerUploadBlock
+) {}
+
+export class BetaInputMessageRole extends S.Literal("user", "assistant") {}
+
+export class BetaInputMessage extends S.Struct({
+  "content": S.Union(S.String, S.Array(BetaInputContentBlock)),
+  "role": BetaInputMessageRole
+}) {}
+
+export class BetaRequestMCPServerToolConfiguration extends S.Struct({
+  "allowed_tools": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "enabled": S.optionalWith(S.Union(S.Boolean, S.Null), { nullable: true })
+}) {}
+
+export class BetaRequestMCPServerURLDefinitionType extends S.Literal("url") {}
+
+export class BetaRequestMCPServerURLDefinition extends S.Struct({
+  "authorization_token": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "name": S.String,
+  "tool_configuration": S.optionalWith(S.Union(BetaRequestMCPServerToolConfiguration, S.Null), { nullable: true }),
+  "type": BetaRequestMCPServerURLDefinitionType,
+  "url": S.String
+}) {}
+
+export class BetaMetadata extends S.Struct({
+  "user_id": S.optionalWith(S.Union(S.String.pipe(S.maxLength(256)), S.Null), { nullable: true })
+}) {}
+
+export class BetaCreateMessageParamsServiceTier extends S.Literal("auto", "standard_only") {}
+
+export class BetaThinkingConfigEnabledType extends S.Literal("enabled") {}
+
+export class BetaThinkingConfigEnabled extends S.Struct({
+  "budget_tokens": S.Int.pipe(S.greaterThanOrEqualTo(1024)),
+  "type": BetaThinkingConfigEnabledType
+}) {}
+
+export class BetaThinkingConfigDisabledType extends S.Literal("disabled") {}
+
+export class BetaThinkingConfigDisabled extends S.Struct({
+  "type": BetaThinkingConfigDisabledType
+}) {}
+
+export class BetaThinkingConfigParam extends S.Union(BetaThinkingConfigEnabled, BetaThinkingConfigDisabled) {}
+
+export class BetaToolChoiceAutoType extends S.Literal("auto") {}
+
+export class BetaToolChoiceAuto extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "type": BetaToolChoiceAutoType
+}) {}
+
+export class BetaToolChoiceAnyType extends S.Literal("any") {}
+
+export class BetaToolChoiceAny extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "type": BetaToolChoiceAnyType
+}) {}
+
+export class BetaToolChoiceToolType extends S.Literal("tool") {}
+
+export class BetaToolChoiceTool extends S.Struct({
+  "disable_parallel_tool_use": S.optionalWith(S.Boolean, { nullable: true }),
+  "name": S.String,
+  "type": BetaToolChoiceToolType
+}) {}
+
+export class BetaToolChoiceNoneType extends S.Literal("none") {}
+
+export class BetaToolChoiceNone extends S.Struct({
+  "type": BetaToolChoiceNoneType
+}) {}
+
+export class BetaToolChoice
+  extends S.Union(BetaToolChoiceAuto, BetaToolChoiceAny, BetaToolChoiceTool, BetaToolChoiceNone)
+{}
+
+export class BetaToolTypeEnum extends S.Literal("custom") {}
+
+export class BetaInputSchemaType extends S.Literal("object") {}
+
+export class BetaInputSchema extends S.Struct({
+  "properties": S.optionalWith(S.Union(S.Record({ key: S.String, value: S.Unknown }), S.Null), { nullable: true }),
+  "required": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "type": BetaInputSchemaType
+}) {}
+
+export class BetaTool extends S.Struct({
+  "type": S.optionalWith(S.Union(S.Null, BetaToolTypeEnum), { nullable: true }),
+  "description": S.optionalWith(S.String, { nullable: true }),
+  "name": S.String.pipe(S.minLength(1), S.maxLength(64), S.pattern(new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "input_schema": BetaInputSchema,
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true })
+}) {}
+
+export class BetaComputerUseTool20241022Name extends S.Literal("computer") {}
+
+export class BetaComputerUseTool20241022Type extends S.Literal("computer_20241022") {}
+
+export class BetaComputerUseTool20241022 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "display_height_px": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "display_number": S.optionalWith(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null), { nullable: true }),
+  "display_width_px": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20241022Name,
+  "type": BetaComputerUseTool20241022Type
+}) {}
+
+export class BetaBashTool20241022Name extends S.Literal("bash") {}
+
+export class BetaBashTool20241022Type extends S.Literal("bash_20241022") {}
+
+export class BetaBashTool20241022 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaBashTool20241022Name,
+  "type": BetaBashTool20241022Type
+}) {}
+
+export class BetaTextEditor20241022Name extends S.Literal("str_replace_editor") {}
+
+export class BetaTextEditor20241022Type extends S.Literal("text_editor_20241022") {}
+
+export class BetaTextEditor20241022 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaTextEditor20241022Name,
+  "type": BetaTextEditor20241022Type
+}) {}
+
+export class BetaComputerUseTool20250124Name extends S.Literal("computer") {}
+
+export class BetaComputerUseTool20250124Type extends S.Literal("computer_20250124") {}
+
+export class BetaComputerUseTool20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "display_height_px": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "display_number": S.optionalWith(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null), { nullable: true }),
+  "display_width_px": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "name": BetaComputerUseTool20250124Name,
+  "type": BetaComputerUseTool20250124Type
+}) {}
+
+export class BetaBashTool20250124Name extends S.Literal("bash") {}
+
+export class BetaBashTool20250124Type extends S.Literal("bash_20250124") {}
+
+export class BetaBashTool20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaBashTool20250124Name,
+  "type": BetaBashTool20250124Type
+}) {}
+
+export class BetaTextEditor20250124Name extends S.Literal("str_replace_editor") {}
+
+export class BetaTextEditor20250124Type extends S.Literal("text_editor_20250124") {}
+
+export class BetaTextEditor20250124 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaTextEditor20250124Name,
+  "type": BetaTextEditor20250124Type
+}) {}
+
+export class BetaTextEditor20250429Name extends S.Literal("str_replace_based_edit_tool") {}
+
+export class BetaTextEditor20250429Type extends S.Literal("text_editor_20250429") {}
+
+export class BetaTextEditor20250429 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaTextEditor20250429Name,
+  "type": BetaTextEditor20250429Type
+}) {}
+
+export class BetaWebSearchTool20250305Name extends S.Literal("web_search") {}
+
+export class BetaWebSearchTool20250305Type extends S.Literal("web_search_20250305") {}
+
+export class BetaUserLocationType extends S.Literal("approximate") {}
+
+export class BetaUserLocation extends S.Struct({
+  "city": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "country": S.optionalWith(S.Union(S.String.pipe(S.minLength(2), S.maxLength(2)), S.Null), { nullable: true }),
+  "region": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "timezone": S.optionalWith(S.Union(S.String.pipe(S.minLength(1), S.maxLength(255)), S.Null), { nullable: true }),
+  "type": BetaUserLocationType
+}) {}
+
+export class BetaWebSearchTool20250305 extends S.Struct({
+  "allowed_domains": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "blocked_domains": S.optionalWith(S.Union(S.Array(S.String), S.Null), { nullable: true }),
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "max_uses": S.optionalWith(S.Union(S.Int.pipe(S.greaterThan(0)), S.Null), { nullable: true }),
+  "name": BetaWebSearchTool20250305Name,
+  "type": BetaWebSearchTool20250305Type,
+  "user_location": S.optionalWith(S.Union(BetaUserLocation, S.Null), { nullable: true })
+}) {}
+
+export class BetaCodeExecutionTool20250522Name extends S.Literal("code_execution") {}
+
+export class BetaCodeExecutionTool20250522Type extends S.Literal("code_execution_20250522") {}
+
+export class BetaCodeExecutionTool20250522 extends S.Struct({
+  "cache_control": S.optionalWith(S.Union(BetaCacheControlEphemeral, S.Null), { nullable: true }),
+  "name": BetaCodeExecutionTool20250522Name,
+  "type": BetaCodeExecutionTool20250522Type
+}) {}
+
+export class BetaCreateMessageParams extends S.Class<BetaCreateMessageParams>("BetaCreateMessageParams")({
+  "model": S.Union(S.String, Model),
+  "messages": S.Array(BetaInputMessage),
+  "container": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "max_tokens": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "mcp_servers": S.optionalWith(S.Array(BetaRequestMCPServerURLDefinition).pipe(S.maxItems(20)), { nullable: true }),
+  "metadata": S.optionalWith(BetaMetadata, { nullable: true }),
+  "service_tier": S.optionalWith(BetaCreateMessageParamsServiceTier, { nullable: true }),
+  "stop_sequences": S.optionalWith(S.Array(S.String), { nullable: true }),
+  "stream": S.optionalWith(S.Boolean, { nullable: true }),
+  "system": S.optionalWith(S.Union(S.String, S.Array(BetaRequestTextBlock)), { nullable: true }),
+  "temperature": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true }),
+  "thinking": S.optionalWith(BetaThinkingConfigParam, { nullable: true }),
+  "tool_choice": S.optionalWith(BetaToolChoice, { nullable: true }),
+  "tools": S.optionalWith(
+    S.Array(
+      S.Union(
+        BetaTool,
+        BetaComputerUseTool20241022,
+        BetaBashTool20241022,
+        BetaTextEditor20241022,
+        BetaComputerUseTool20250124,
+        BetaBashTool20250124,
+        BetaTextEditor20250124,
+        BetaTextEditor20250429,
+        BetaWebSearchTool20250305,
+        BetaCodeExecutionTool20250522
+      )
+    ),
+    { nullable: true }
+  ),
+  "top_k": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(0)), { nullable: true }),
+  "top_p": S.optionalWith(S.Number.pipe(S.greaterThanOrEqualTo(0), S.lessThanOrEqualTo(1)), { nullable: true })
+}) {}
+
+export class BetaMessageType extends S.Literal("message") {}
+
+export class BetaMessageRole extends S.Literal("assistant") {}
+
+export class BetaResponseCharLocationCitationType extends S.Literal("char_location") {}
+
+export class BetaResponseCharLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_char_index": S.Int,
+  "start_char_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseCharLocationCitationType
+}) {}
+
+export class BetaResponsePageLocationCitationType extends S.Literal("page_location") {}
+
+export class BetaResponsePageLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_page_number": S.Int,
+  "start_page_number": S.Int.pipe(S.greaterThanOrEqualTo(1)),
+  "type": BetaResponsePageLocationCitationType
+}) {}
+
+export class BetaResponseContentBlockLocationCitationType extends S.Literal("content_block_location") {}
+
+export class BetaResponseContentBlockLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "document_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "document_title": S.Union(S.String, S.Null),
+  "end_block_index": S.Int,
+  "start_block_index": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaResponseContentBlockLocationCitationType
+}) {}
+
+export class BetaResponseWebSearchResultLocationCitationType extends S.Literal("web_search_result_location") {}
+
+export class BetaResponseWebSearchResultLocationCitation extends S.Struct({
+  "cited_text": S.String,
+  "encrypted_index": S.String,
+  "title": S.Union(S.String, S.Null),
+  "type": BetaResponseWebSearchResultLocationCitationType,
+  "url": S.String
+}) {}
+
+export class BetaResponseTextBlockType extends S.Literal("text") {}
+
+export class BetaResponseTextBlock extends S.Struct({
+  "citations": S.optional(S.NullOr(
+    S.Array(
+      S.Union(
+        BetaResponseCharLocationCitation,
+        BetaResponsePageLocationCitation,
+        BetaResponseContentBlockLocationCitation,
+        BetaResponseWebSearchResultLocationCitation
+      )
+    )
+  )),
+  "text": S.String.pipe(S.minLength(0), S.maxLength(5000000)),
+  "type": BetaResponseTextBlockType
+}) {}
+
+export class BetaResponseToolUseBlockType extends S.Literal("tool_use") {}
+
+export class BetaResponseToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String.pipe(S.minLength(1)),
+  "type": BetaResponseToolUseBlockType
+}) {}
+
+export class BetaResponseServerToolUseBlockName extends S.Literal("web_search", "code_execution") {}
+
+export class BetaResponseServerToolUseBlockType extends S.Literal("server_tool_use") {}
+
+export class BetaResponseServerToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": BetaResponseServerToolUseBlockName,
+  "type": BetaResponseServerToolUseBlockType
+}) {}
+
+export class BetaResponseWebSearchToolResultErrorType extends S.Literal("web_search_tool_result_error") {}
+
+export class BetaResponseWebSearchToolResultError extends S.Struct({
+  "error_code": BetaWebSearchToolResultErrorCode,
+  "type": BetaResponseWebSearchToolResultErrorType
+}) {}
+
+export class BetaResponseWebSearchResultBlockType extends S.Literal("web_search_result") {}
+
+export class BetaResponseWebSearchResultBlock extends S.Struct({
+  "encrypted_content": S.String,
+  "page_age": S.NullOr(S.Union(S.String, S.Null)),
+  "title": S.String,
+  "type": BetaResponseWebSearchResultBlockType,
+  "url": S.String
+}) {}
+
+export class BetaResponseWebSearchToolResultBlockType extends S.Literal("web_search_tool_result") {}
+
+export class BetaResponseWebSearchToolResultBlock extends S.Struct({
+  "content": S.Union(BetaResponseWebSearchToolResultError, S.Array(BetaResponseWebSearchResultBlock)),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseWebSearchToolResultBlockType
+}) {}
+
+export class BetaResponseCodeExecutionToolResultErrorType extends S.Literal("code_execution_tool_result_error") {}
+
+export class BetaResponseCodeExecutionToolResultError extends S.Struct({
+  "error_code": BetaCodeExecutionToolResultErrorCode,
+  "type": BetaResponseCodeExecutionToolResultErrorType
+}) {}
+
+export class BetaResponseCodeExecutionOutputBlockType extends S.Literal("code_execution_output") {}
+
+export class BetaResponseCodeExecutionOutputBlock extends S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseCodeExecutionOutputBlockType
+}) {}
+
+export class BetaResponseCodeExecutionResultBlockType extends S.Literal("code_execution_result") {}
+
+export class BetaResponseCodeExecutionResultBlock extends S.Struct({
+  "content": S.Array(BetaResponseCodeExecutionOutputBlock),
+  "return_code": S.Int,
+  "stderr": S.String,
+  "stdout": S.String,
+  "type": BetaResponseCodeExecutionResultBlockType
+}) {}
+
+export class BetaResponseCodeExecutionToolResultBlockType extends S.Literal("code_execution_tool_result") {}
+
+export class BetaResponseCodeExecutionToolResultBlock extends S.Struct({
+  "content": S.Union(BetaResponseCodeExecutionToolResultError, BetaResponseCodeExecutionResultBlock),
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^srvtoolu_[a-zA-Z0-9_]+$"))),
+  "type": BetaResponseCodeExecutionToolResultBlockType
+}) {}
+
+export class BetaResponseMCPToolUseBlockType extends S.Literal("mcp_tool_use") {}
+
+export class BetaResponseMCPToolUseBlock extends S.Struct({
+  "id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "input": S.Record({ key: S.String, value: S.Unknown }),
+  "name": S.String,
+  "server_name": S.String,
+  "type": BetaResponseMCPToolUseBlockType
+}) {}
+
+export class BetaResponseMCPToolResultBlockType extends S.Literal("mcp_tool_result") {}
+
+export class BetaResponseMCPToolResultBlock extends S.Struct({
+  "content": S.Union(S.String, S.Array(BetaResponseTextBlock)),
+  "is_error": S.Boolean,
+  "tool_use_id": S.String.pipe(S.pattern(new RegExp("^[a-zA-Z0-9_-]+$"))),
+  "type": BetaResponseMCPToolResultBlockType
+}) {}
+
+export class BetaResponseContainerUploadBlockType extends S.Literal("container_upload") {}
+
+export class BetaResponseContainerUploadBlock extends S.Struct({
+  "file_id": S.String,
+  "type": BetaResponseContainerUploadBlockType
+}) {}
+
+export class BetaResponseThinkingBlockType extends S.Literal("thinking") {}
+
+export class BetaResponseThinkingBlock extends S.Struct({
+  "signature": S.String,
+  "thinking": S.String,
+  "type": BetaResponseThinkingBlockType
+}) {}
+
+export class BetaResponseRedactedThinkingBlockType extends S.Literal("redacted_thinking") {}
+
+export class BetaResponseRedactedThinkingBlock extends S.Struct({
+  "data": S.String,
+  "type": BetaResponseRedactedThinkingBlockType
+}) {}
+
+export class BetaContentBlock extends S.Union(
+  BetaResponseTextBlock,
+  BetaResponseToolUseBlock,
+  BetaResponseServerToolUseBlock,
+  BetaResponseWebSearchToolResultBlock,
+  BetaResponseCodeExecutionToolResultBlock,
+  BetaResponseMCPToolUseBlock,
+  BetaResponseMCPToolResultBlock,
+  BetaResponseContainerUploadBlock,
+  BetaResponseThinkingBlock,
+  BetaResponseRedactedThinkingBlock
+) {}
+
+export class BetaStopReason
+  extends S.Literal("end_turn", "max_tokens", "stop_sequence", "tool_use", "pause_turn", "refusal")
+{}
+
+export class BetaCacheCreation extends S.Struct({
+  "ephemeral_1h_input_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "ephemeral_5m_input_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0))
+}) {}
+
+export class BetaServerToolUsage extends S.Struct({
+  "web_search_requests": S.Int.pipe(S.greaterThanOrEqualTo(0))
+}) {}
+
+export class BetaUsageServiceTierEnum extends S.Literal("standard", "priority", "batch") {}
+
+export class BetaUsage extends S.Struct({
+  "cache_creation": S.NullOr(S.Union(BetaCacheCreation, S.Null)),
+  "cache_creation_input_tokens": S.NullOr(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null)),
+  "cache_read_input_tokens": S.NullOr(S.Union(S.Int.pipe(S.greaterThanOrEqualTo(0)), S.Null)),
+  "input_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "output_tokens": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "server_tool_use": S.optional(S.NullOr(BetaServerToolUsage)),
+  "service_tier": S.NullOr(S.Union(BetaUsageServiceTierEnum, S.Null))
+}) {}
+
+export class BetaContainer extends S.Struct({
+  "expires_at": S.String,
+  "id": S.String
+}) {}
+
+export class BetaMessage extends S.Class<BetaMessage>("BetaMessage")({
+  "id": S.String,
+  "type": BetaMessageType,
+  "role": BetaMessageRole,
+  "content": S.Array(BetaContentBlock),
+  "model": S.Union(S.String, Model),
+  "stop_reason": S.Union(BetaStopReason, S.Null),
+  "stop_sequence": S.NullOr(S.Union(S.String, S.Null)),
+  "usage": BetaUsage,
+  "container": S.NullOr(S.Union(BetaContainer, S.Null))
+}) {}
+
+export class BetaInvalidRequestErrorType extends S.Literal("invalid_request_error") {}
+
+export class BetaInvalidRequestError extends S.Struct({
+  "message": S.String,
+  "type": BetaInvalidRequestErrorType
+}) {}
+
+export class BetaAuthenticationErrorType extends S.Literal("authentication_error") {}
+
+export class BetaAuthenticationError extends S.Struct({
+  "message": S.String,
+  "type": BetaAuthenticationErrorType
+}) {}
+
+export class BetaBillingErrorType extends S.Literal("billing_error") {}
+
+export class BetaBillingError extends S.Struct({
+  "message": S.String,
+  "type": BetaBillingErrorType
+}) {}
+
+export class BetaPermissionErrorType extends S.Literal("permission_error") {}
+
+export class BetaPermissionError extends S.Struct({
+  "message": S.String,
+  "type": BetaPermissionErrorType
+}) {}
+
+export class BetaNotFoundErrorType extends S.Literal("not_found_error") {}
+
+export class BetaNotFoundError extends S.Struct({
+  "message": S.String,
+  "type": BetaNotFoundErrorType
+}) {}
+
+export class BetaRateLimitErrorType extends S.Literal("rate_limit_error") {}
+
+export class BetaRateLimitError extends S.Struct({
+  "message": S.String,
+  "type": BetaRateLimitErrorType
+}) {}
+
+export class BetaGatewayTimeoutErrorType extends S.Literal("timeout_error") {}
+
+export class BetaGatewayTimeoutError extends S.Struct({
+  "message": S.String,
+  "type": BetaGatewayTimeoutErrorType
+}) {}
+
+export class BetaAPIErrorType extends S.Literal("api_error") {}
+
+export class BetaAPIError extends S.Struct({
+  "message": S.String,
+  "type": BetaAPIErrorType
+}) {}
+
+export class BetaOverloadedErrorType extends S.Literal("overloaded_error") {}
+
+export class BetaOverloadedError extends S.Struct({
+  "message": S.String,
+  "type": BetaOverloadedErrorType
+}) {}
+
+export class BetaErrorResponseType extends S.Literal("error") {}
+
+export class BetaErrorResponse extends S.Class<BetaErrorResponse>("BetaErrorResponse")({
+  "error": S.Union(
+    BetaInvalidRequestError,
+    BetaAuthenticationError,
+    BetaBillingError,
+    BetaPermissionError,
+    BetaNotFoundError,
+    BetaRateLimitError,
+    BetaGatewayTimeoutError,
+    BetaAPIError,
+    BetaOverloadedError
+  ),
+  "type": BetaErrorResponseType
+}) {}
+
+export class BetaModelsListParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaModelInfoType extends S.Literal("model") {}
+
+export class BetaModelInfo extends S.Struct({
+  "created_at": S.String,
+  "display_name": S.String,
+  "id": S.String,
+  "type": BetaModelInfoType
+}) {}
+
+export class BetaListResponseModelInfo extends S.Class<BetaListResponseModelInfo>("BetaListResponseModelInfo")({
+  "data": S.Array(BetaModelInfo),
+  "first_id": S.Union(S.String, S.Null),
+  "has_more": S.Boolean,
+  "last_id": S.Union(S.String, S.Null)
+}) {}
+
+export class BetaModelsGetParams extends S.Struct({
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchesListParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchProcessingStatus extends S.Literal("in_progress", "canceling", "ended") {}
+
+export class BetaRequestCounts extends S.Struct({
+  "canceled": S.Int,
+  "errored": S.Int,
+  "expired": S.Int,
+  "processing": S.Int,
+  "succeeded": S.Int
+}) {}
+
+export class BetaMessageBatchType extends S.Literal("message_batch") {}
+
+export class BetaMessageBatch extends S.Struct({
+  "archived_at": S.Union(S.String, S.Null),
+  "cancel_initiated_at": S.Union(S.String, S.Null),
+  "created_at": S.String,
+  "ended_at": S.Union(S.String, S.Null),
+  "expires_at": S.String,
+  "id": S.String,
+  "processing_status": BetaMessageBatchProcessingStatus,
+  "request_counts": BetaRequestCounts,
+  "results_url": S.Union(S.String, S.Null),
+  "type": BetaMessageBatchType
+}) {}
+
+export class BetaListResponseMessageBatch
+  extends S.Class<BetaListResponseMessageBatch>("BetaListResponseMessageBatch")({
+    "data": S.Array(BetaMessageBatch),
+    "first_id": S.Union(S.String, S.Null),
+    "has_more": S.Boolean,
+    "last_id": S.Union(S.String, S.Null)
+  })
+{}
+
+export class BetaMessageBatchesPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchIndividualRequestParams extends S.Struct({
+  "custom_id": S.String.pipe(S.minLength(1), S.maxLength(64), S.pattern(new RegExp("^[a-zA-Z0-9_-]{1,64}$"))),
+  "params": BetaCreateMessageParams
+}) {}
+
+export class BetaCreateMessageBatchParams
+  extends S.Class<BetaCreateMessageBatchParams>("BetaCreateMessageBatchParams")({
+    "requests": S.Array(BetaMessageBatchIndividualRequestParams).pipe(S.minItems(1), S.maxItems(10000))
+  })
+{}
+
+export class BetaMessageBatchesRetrieveParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchesDeleteParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaDeleteMessageBatchResponseType extends S.Literal("message_batch_deleted") {}
+
+export class BetaDeleteMessageBatchResponse
+  extends S.Class<BetaDeleteMessageBatchResponse>("BetaDeleteMessageBatchResponse")({
+    "id": S.String,
+    "type": BetaDeleteMessageBatchResponseType
+  })
+{}
+
+export class BetaMessageBatchesCancelParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessageBatchesResultsParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaMessagesCountTokensPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaCountMessageTokensParams
+  extends S.Class<BetaCountMessageTokensParams>("BetaCountMessageTokensParams")({
+    "mcp_servers": S.optionalWith(S.Array(BetaRequestMCPServerURLDefinition).pipe(S.maxItems(20)), { nullable: true }),
+    "messages": S.Array(BetaInputMessage),
+    "model": S.Union(S.String, Model),
+    "system": S.optionalWith(S.Union(S.String, S.Array(BetaRequestTextBlock)), { nullable: true }),
+    "thinking": S.optionalWith(BetaThinkingConfigParam, { nullable: true }),
+    "tool_choice": S.optionalWith(BetaToolChoice, { nullable: true }),
+    "tools": S.optionalWith(
+      S.Array(
+        S.Union(
+          BetaTool,
+          BetaComputerUseTool20241022,
+          BetaBashTool20241022,
+          BetaTextEditor20241022,
+          BetaComputerUseTool20250124,
+          BetaBashTool20250124,
+          BetaTextEditor20250124,
+          BetaTextEditor20250429,
+          BetaWebSearchTool20250305,
+          BetaCodeExecutionTool20250522
+        )
+      ),
+      { nullable: true }
+    )
+  })
+{}
+
+export class BetaCountMessageTokensResponse
+  extends S.Class<BetaCountMessageTokensResponse>("BetaCountMessageTokensResponse")({
+    "input_tokens": S.Int
+  })
+{}
+
+export class BetaListFilesV1FilesGetParams extends S.Struct({
+  "before_id": S.optionalWith(S.String, { nullable: true }),
+  "after_id": S.optionalWith(S.String, { nullable: true }),
+  "limit": S.optionalWith(S.Int.pipe(S.greaterThanOrEqualTo(1), S.lessThanOrEqualTo(1000)), { nullable: true }),
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaFileMetadataSchemaType extends S.Literal("file") {}
+
+export class BetaFileMetadataSchema extends S.Struct({
+  "created_at": S.String,
+  "downloadable": S.optionalWith(S.Boolean, { nullable: true }),
+  "filename": S.String.pipe(S.minLength(1), S.maxLength(500)),
+  "id": S.String,
+  "mime_type": S.String.pipe(S.minLength(1), S.maxLength(255)),
+  "size_bytes": S.Int.pipe(S.greaterThanOrEqualTo(0)),
+  "type": BetaFileMetadataSchemaType
+}) {}
+
+export class BetaFileListResponse extends S.Class<BetaFileListResponse>("BetaFileListResponse")({
+  "data": S.Array(BetaFileMetadataSchema),
+  "first_id": S.optionalWith(S.Union(S.String, S.Null), { nullable: true }),
+  "has_more": S.optionalWith(S.Boolean, { nullable: true }),
+  "last_id": S.optionalWith(S.Union(S.String, S.Null), { nullable: true })
+}) {}
+
+export class BetaUploadFileV1FilesPostParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaGetFileMetadataV1FilesFileIdGetParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaDeleteFileV1FilesFileIdDeleteParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export class BetaFileDeleteResponseType extends S.Literal("file_deleted") {}
+
+export class BetaFileDeleteResponse extends S.Class<BetaFileDeleteResponse>("BetaFileDeleteResponse")({
+  "id": S.String,
+  "type": S.optionalWith(BetaFileDeleteResponseType, { nullable: true })
+}) {}
+
+export class BetaDownloadFileV1FilesFileIdContentGetParams extends S.Struct({
+  "anthropic-beta": S.optionalWith(S.String, { nullable: true }),
+  "anthropic-version": S.optionalWith(S.String, { nullable: true }),
+  "x-api-key": S.optionalWith(S.String, { nullable: true })
+}) {}
+
+export const make = (
+  httpClient: HttpClient.HttpClient,
+  options: {
+    readonly transformClient?: ((client: HttpClient.HttpClient) => Effect.Effect<HttpClient.HttpClient>) | undefined
+  } = {}
+): Client => {
+  const unexpectedStatus = (
+    request: HttpClientRequest.HttpClientRequest,
+    response: HttpClientResponse.HttpClientResponse
+  ) =>
+    Effect.flatMap(
+      Effect.orElseSucceed(response.text, () => "Unexpected status code"),
+      (description) =>
+        Effect.fail(
+          new HttpClientError.ResponseError({
+            request,
+            response,
+            reason: "StatusCode",
+            description
+          })
+        )
+    )
+  const applyClientTransform = (client: HttpClient.HttpClient): Effect.Effect<HttpClient.HttpClient> =>
+    options.transformClient ? options.transformClient(client) : Effect.succeed(client)
+  const decodeError = <A, I, R>(response: HttpClientResponse.HttpClientResponse, schema: S.Schema<A, I, R>) =>
+    Effect.flatMap(HttpClientResponse.schemaBodyJson(schema)(response), Effect.fail)
+  return {
+    httpClient,
+    "messagesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages`).pipe(
+        HttpClientRequest.setHeaders({ "anthropic-version": options.params?.["anthropic-version"] ?? undefined }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(Message)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "completePost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/complete`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined,
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined
+        }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(CompletionResponse)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "modelsList": (options) =>
+      HttpClientRequest.make("GET")(`/v1/models`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined,
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(ListResponseModelInfo)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "modelsGet": (modelId, options) =>
+      HttpClientRequest.make("GET")(`/v1/models/${modelId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined,
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(ModelInfo)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "messageBatchesList": (options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(ListResponseMessageBatch)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "messageBatchesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/batches`).pipe(
+        HttpClientRequest.setHeaders({ "anthropic-version": options.params?.["anthropic-version"] ?? undefined }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "messageBatchesRetrieve": (messageBatchId, options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+                  "4xx": (r) => decodeError(r, ErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "messageBatchesDelete": (messageBatchId, options) =>
+      HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(DeleteMessageBatchResponse)(r),
+                  "4xx": (r) => decodeError(r, ErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "messageBatchesCancel": (messageBatchId, options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel`).pipe(
+        HttpClientRequest.setHeaders({ "anthropic-version": options?.["anthropic-version"] ?? undefined }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(MessageBatch)(r),
+                  "4xx": (r) => decodeError(r, ErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "messageBatchesResults": (messageBatchId, options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "4xx": (r) => decodeError(r, ErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "messagesCountTokensPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/count_tokens`).pipe(
+        HttpClientRequest.setHeaders({ "anthropic-version": options.params?.["anthropic-version"] ?? undefined }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(CountMessageTokensResponse)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "listFilesV1FilesGet": (options) =>
+      HttpClientRequest.make("GET")(`/v1/files`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(FileListResponse)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "uploadFileV1FilesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/files`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        HttpClientRequest.bodyFormData(options.payload),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "getFileMetadataV1FilesFileIdGet": (fileId, options) =>
+      HttpClientRequest.make("GET")(`/v1/files/${fileId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(FileMetadataSchema)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "deleteFileV1FilesFileIdDelete": (fileId, options) =>
+      HttpClientRequest.make("DELETE")(`/v1/files/${fileId}`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(FileDeleteResponse)(r),
+                "4xx": (r) => decodeError(r, ErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "downloadFileV1FilesFileIdContentGet": (fileId, options) =>
+      HttpClientRequest.make("GET")(`/v1/files/${fileId}/content`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessagesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaMessage)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaModelsList": (options) =>
+      HttpClientRequest.make("GET")(`/v1/models?beta=true`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined,
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaListResponseModelInfo)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaModelsGet": (modelId, options) =>
+      HttpClientRequest.make("GET")(`/v1/models/${modelId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined,
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaModelInfo)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaMessageBatchesList": (options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches?beta=true`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaListResponseMessageBatch)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaMessageBatchesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/batches?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaMessageBatchesRetrieve": (messageBatchId, options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessageBatchesDelete": (messageBatchId, options) =>
+      HttpClientRequest.make("DELETE")(`/v1/messages/batches/${messageBatchId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaDeleteMessageBatchResponse)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessageBatchesCancel": (messageBatchId, options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/batches/${messageBatchId}/cancel?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaMessageBatch)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessageBatchesResults": (messageBatchId, options) =>
+      HttpClientRequest.make("GET")(`/v1/messages/batches/${messageBatchId}/results?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaMessagesCountTokensPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/messages/count_tokens?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        (req) => Effect.orDie(HttpClientRequest.bodyJson(req, options.payload)),
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaCountMessageTokensResponse)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaListFilesV1FilesGet": (options) =>
+      HttpClientRequest.make("GET")(`/v1/files?beta=true`).pipe(
+        HttpClientRequest.setUrlParams({
+          "before_id": options?.["before_id"] as UrlParams.Coercible,
+          "after_id": options?.["after_id"] as UrlParams.Coercible,
+          "limit": options?.["limit"] as UrlParams.Coercible
+        }),
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaFileListResponse)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaUploadFileV1FilesPost": (options) =>
+      HttpClientRequest.make("POST")(`/v1/files?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options.params?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options.params?.["anthropic-version"] ?? undefined
+        }),
+        HttpClientRequest.bodyFormData(options.payload),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(applyClientTransform(httpClient), (httpClient) =>
+            Effect.flatMap(
+              httpClient.execute(request),
+              HttpClientResponse.matchStatus({
+                "200": (r) => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+                "4xx": (r) => decodeError(r, BetaErrorResponse),
+                orElse: (response) => unexpectedStatus(request, response)
+              })
+            ))
+        )
+      ),
+    "betaGetFileMetadataV1FilesFileIdGet": (fileId, options) =>
+      HttpClientRequest.make("GET")(`/v1/files/${fileId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaFileMetadataSchema)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaDeleteFileV1FilesFileIdDelete": (fileId, options) =>
+      HttpClientRequest.make("DELETE")(`/v1/files/${fileId}?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  "200": (r) => HttpClientResponse.schemaBodyJson(BetaFileDeleteResponse)(r),
+                  "4xx": (r) => decodeError(r, BetaErrorResponse),
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      ),
+    "betaDownloadFileV1FilesFileIdContentGet": (fileId, options) =>
+      HttpClientRequest.make("GET")(`/v1/files/${fileId}/content?beta=true`).pipe(
+        HttpClientRequest.setHeaders({
+          "anthropic-beta": options?.["anthropic-beta"] ?? undefined,
+          "anthropic-version": options?.["anthropic-version"] ?? undefined,
+          "x-api-key": options?.["x-api-key"] ?? undefined
+        }),
+        Effect.succeed,
+        Effect.flatMap((request) =>
+          Effect.flatMap(
+            applyClientTransform(httpClient),
+            (httpClient) =>
+              Effect.flatMap(
+                httpClient.execute(request),
+                HttpClientResponse.matchStatus({
+                  orElse: (response) => unexpectedStatus(request, response)
+                })
+              )
+          )
+        )
+      )
+  }
+}
+
+export interface Client {
+  readonly httpClient: HttpClient.HttpClient
+  readonly "messagesPost": (
+    options: {
+      readonly params?: typeof MessagesPostParams.Encoded | undefined
+      readonly payload: typeof CreateMessageParams.Encoded
+    }
+  ) => Effect.Effect<typeof Message.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "completePost": (
+    options: {
+      readonly params?: typeof CompletePostParams.Encoded | undefined
+      readonly payload: typeof CompletionRequest.Encoded
+    }
+  ) => Effect.Effect<
+    typeof CompletionResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "modelsList": (
+    options?: typeof ModelsListParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof ListResponseModelInfo.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "modelsGet": (
+    modelId: string,
+    options?: typeof ModelsGetParams.Encoded | undefined
+  ) => Effect.Effect<typeof ModelInfo.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messageBatchesList": (
+    options?: typeof MessageBatchesListParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof ListResponseMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "messageBatchesPost": (
+    options: {
+      readonly params?: typeof MessageBatchesPostParams.Encoded | undefined
+      readonly payload: typeof CreateMessageBatchParams.Encoded
+    }
+  ) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messageBatchesRetrieve": (
+    messageBatchId: string,
+    options?: typeof MessageBatchesRetrieveParams.Encoded | undefined
+  ) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messageBatchesDelete": (
+    messageBatchId: string,
+    options?: typeof MessageBatchesDeleteParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof DeleteMessageBatchResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "messageBatchesCancel": (
+    messageBatchId: string,
+    options?: typeof MessageBatchesCancelParams.Encoded | undefined
+  ) => Effect.Effect<typeof MessageBatch.Type, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messageBatchesResults": (
+    messageBatchId: string,
+    options?: typeof MessageBatchesResultsParams.Encoded | undefined
+  ) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type>
+  readonly "messagesCountTokensPost": (
+    options: {
+      readonly params?: typeof MessagesCountTokensPostParams.Encoded | undefined
+      readonly payload: typeof CountMessageTokensParams.Encoded
+    }
+  ) => Effect.Effect<
+    typeof CountMessageTokensResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "listFilesV1FilesGet": (
+    options?: typeof ListFilesV1FilesGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof FileListResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "uploadFileV1FilesPost": (
+    options: {
+      readonly params?: typeof UploadFileV1FilesPostParams.Encoded | undefined
+      readonly payload: globalThis.FormData
+    }
+  ) => Effect.Effect<
+    typeof FileMetadataSchema.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "getFileMetadataV1FilesFileIdGet": (
+    fileId: string,
+    options?: typeof GetFileMetadataV1FilesFileIdGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof FileMetadataSchema.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "deleteFileV1FilesFileIdDelete": (
+    fileId: string,
+    options?: typeof DeleteFileV1FilesFileIdDeleteParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof FileDeleteResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof ErrorResponse.Type
+  >
+  readonly "downloadFileV1FilesFileIdContentGet": (
+    fileId: string,
+    options?: typeof DownloadFileV1FilesFileIdContentGetParams.Encoded | undefined
+  ) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError>
+  readonly "betaMessagesPost": (
+    options: {
+      readonly params?: typeof BetaMessagesPostParams.Encoded | undefined
+      readonly payload: typeof BetaCreateMessageParams.Encoded
+    }
+  ) => Effect.Effect<
+    typeof BetaMessage.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaModelsList": (
+    options?: typeof BetaModelsListParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaListResponseModelInfo.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaModelsGet": (
+    modelId: string,
+    options?: typeof BetaModelsGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaModelInfo.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesList": (
+    options?: typeof BetaMessageBatchesListParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaListResponseMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesPost": (
+    options: {
+      readonly params?: typeof BetaMessageBatchesPostParams.Encoded | undefined
+      readonly payload: typeof BetaCreateMessageBatchParams.Encoded
+    }
+  ) => Effect.Effect<
+    typeof BetaMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesRetrieve": (
+    messageBatchId: string,
+    options?: typeof BetaMessageBatchesRetrieveParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesDelete": (
+    messageBatchId: string,
+    options?: typeof BetaMessageBatchesDeleteParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaDeleteMessageBatchResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesCancel": (
+    messageBatchId: string,
+    options?: typeof BetaMessageBatchesCancelParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaMessageBatch.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaMessageBatchesResults": (
+    messageBatchId: string,
+    options?: typeof BetaMessageBatchesResultsParams.Encoded | undefined
+  ) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type>
+  readonly "betaMessagesCountTokensPost": (
+    options: {
+      readonly params?: typeof BetaMessagesCountTokensPostParams.Encoded | undefined
+      readonly payload: typeof BetaCountMessageTokensParams.Encoded
+    }
+  ) => Effect.Effect<
+    typeof BetaCountMessageTokensResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaListFilesV1FilesGet": (
+    options?: typeof BetaListFilesV1FilesGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaFileListResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaUploadFileV1FilesPost": (
+    options: {
+      readonly params?: typeof BetaUploadFileV1FilesPostParams.Encoded | undefined
+      readonly payload: globalThis.FormData
+    }
+  ) => Effect.Effect<
+    typeof BetaFileMetadataSchema.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaGetFileMetadataV1FilesFileIdGet": (
+    fileId: string,
+    options?: typeof BetaGetFileMetadataV1FilesFileIdGetParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaFileMetadataSchema.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaDeleteFileV1FilesFileIdDelete": (
+    fileId: string,
+    options?: typeof BetaDeleteFileV1FilesFileIdDeleteParams.Encoded | undefined
+  ) => Effect.Effect<
+    typeof BetaFileDeleteResponse.Type,
+    HttpClientError.HttpClientError | ParseError | typeof BetaErrorResponse.Type
+  >
+  readonly "betaDownloadFileV1FilesFileIdContentGet": (
+    fileId: string,
+    options?: typeof BetaDownloadFileV1FilesFileIdContentGetParams.Encoded | undefined
+  ) => Effect.Effect<void, HttpClientError.HttpClientError | ParseError>
+}
diff --git a/dist/src/index.ts b/dist/src/index.ts
new file mode 100644
index 0000000000000000000000000000000000000000..8f7f6ce43abad7dbe3530bd17ba2d360cce11c5f
--- /dev/null
+++ b/dist/src/index.ts
@@ -0,0 +1,24 @@
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicClient from "./AnthropicClient.js"
+
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicConfig from "./AnthropicConfig.js"
+
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicLanguageModel from "./AnthropicLanguageModel.js"
+
+/**
+ * @since 1.0.0
+ */
+export * as AnthropicTokenizer from "./AnthropicTokenizer.js"
+
+/**
+ * @since 1.0.0
+ */
+export * as Generated from "./Generated.js"
diff --git a/dist/src/internal/utilities.ts b/dist/src/internal/utilities.ts
new file mode 100644
index 0000000000000000000000000000000000000000..dfe7e425e999732f1bdbfcce34e2605be3ed77f0
--- /dev/null
+++ b/dist/src/internal/utilities.ts
@@ -0,0 +1,18 @@
+import type * as AiResponse from "@effect/ai/AiResponse"
+import * as Predicate from "effect/Predicate"
+
+/** @internal */
+export const ProviderMetadataKey = "@effect/ai-anthropic/AnthropicLanguageModel/ProviderMetadata"
+
+const finishReasonMap: Record<string, AiResponse.FinishReason> = {
+  end_turn: "stop",
+  max_tokens: "length",
+  stop_sequence: "stop",
+  tool_use: "tool-calls"
+}
+
+/** @internal */
+export const resolveFinishReason = (finishReason: string): AiResponse.FinishReason => {
+  const reason = finishReasonMap[finishReason]
+  return Predicate.isUndefined(reason) ? "unknown" : reason
+}
diff --git a/package.json b/package.json
index 112633e4c70e57ae624fcaafd9a9b5d617a6b179..df43766d5f0d805c927fef895cf7fdd324062b13 100644
--- a/package.json
+++ b/package.json
@@ -14,10 +14,10 @@
     "@anthropic-ai/tokenizer": "^0.0.4"
   },
   "peerDependencies": {
-    "@effect/ai": "^0.26.1",
-    "@effect/platform": "^0.90.7",
-    "@effect/experimental": "^0.54.6",
-    "effect": "^3.17.13"
+    "@effect/ai": "workspace:^",
+    "@effect/experimental": "workspace:^",
+    "@effect/platform": "workspace:^",
+    "effect": "workspace:^"
   },
   "publishConfig": {
     "provenance": true
diff --git a/src/AnthropicClient.ts b/src/AnthropicClient.ts
index 2613ea787be5582292ef14e38c7b3099928cb5e8..d557589303804b721e2c50af9c4c3f83c911bba9 100644
--- a/src/AnthropicClient.ts
+++ b/src/AnthropicClient.ts
@@ -155,7 +155,8 @@ export const make = (options: {
               case "message_delta": {
                 usage = {
                   ...usage,
-                  outputTokens: chunk.usage.output_tokens
+                  outputTokens: chunk.usage.output_tokens,
+                  totalTokens: usage.inputTokens + chunk.usage.output_tokens
                 }
                 if (Predicate.isNotNullable(chunk.delta.stop_sequence)) {
                   metadata.stopSequence = chunk.delta.stop_sequence
diff --git a/src/AnthropicConfig.ts b/src/AnthropicConfig.ts
index 05a8a3825ffc49d6c253b32b3c9d4320af9b9b88..b6fde44ea8ef4148a7b634de5b67989acb1b17ae 100644
--- a/src/AnthropicConfig.ts
+++ b/src/AnthropicConfig.ts
@@ -41,33 +41,11 @@ export declare namespace AnthropicConfig {
  * @category Configuration
  */
 export const withClientTransform: {
-  /**
-   * @since 1.0.0
-   * @category Configuration
-   */
   (transform: (client: HttpClient) => HttpClient): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>
-  /**
-   * @since 1.0.0
-   * @category Configuration
-   */
-  <A, E, R>(
-    self: Effect.Effect<A, E, R>,
-    transform: (client: HttpClient) => HttpClient
-  ): Effect.Effect<A, E, R>
+  <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient): Effect.Effect<A, E, R>
 } = dual<
-  /**
-   * @since 1.0.0
-   * @category Configuration
-   */
   (transform: (client: HttpClient) => HttpClient) => <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,
-  /**
-   * @since 1.0.0
-   * @category Configuration
-   */
-  <A, E, R>(
-    self: Effect.Effect<A, E, R>,
-    transform: (client: HttpClient) => HttpClient
-  ) => Effect.Effect<A, E, R>
+  <A, E, R>(self: Effect.Effect<A, E, R>, transform: (client: HttpClient) => HttpClient) => Effect.Effect<A, E, R>
 >(
   2,
   (self, transformClient) =>
diff --git a/src/AnthropicLanguageModel.ts b/src/AnthropicLanguageModel.ts
index 0dd9fd77a12a0e10b517fd0c0abcc3b96ae7ad1f..872b3fbf38521ee070d091e525e461c03040b6d6 100644
--- a/src/AnthropicLanguageModel.ts
+++ b/src/AnthropicLanguageModel.ts
@@ -241,26 +241,10 @@ export const layerWithTokenizer = (options: {
  * @category Configuration
  */
 export const withConfigOverride: {
-  /**
-   * @since 1.0.0
-   * @category Configuration
-   */
   (config: Config.Service): <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>
-  /**
-   * @since 1.0.0
-   * @category Configuration
-   */
   <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service): Effect.Effect<A, E, R>
 } = dual<
-  /**
-   * @since 1.0.0
-   * @category Configuration
-   */
   (config: Config.Service) => <A, E, R>(self: Effect.Effect<A, E, R>) => Effect.Effect<A, E, R>,
-  /**
-   * @since 1.0.0
-   * @category Configuration
-   */
   <A, E, R>(self: Effect.Effect<A, E, R>, config: Config.Service) => Effect.Effect<A, E, R>
 >(2, (self, overrides) =>
   Effect.flatMap(
