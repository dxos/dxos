diff --git a/src/executors/tsc/tsc.impl.js b/src/executors/tsc/tsc.impl.js
index 824e8e4e0338c5c51c086a40085b02d24e6490eb..39df4c6f6470d37f7b64eac7b400ab3e1f965ca2 100644
--- a/src/executors/tsc/tsc.impl.js
+++ b/src/executors/tsc/tsc.impl.js
@@ -6,9 +6,9 @@ const copy_assets_handler_1 = require("../../utils/assets/copy-assets-handler");
 const check_dependencies_1 = require("../../utils/check-dependencies");
 const compiler_helper_dependency_1 = require("../../utils/compiler-helper-dependency");
 const inline_1 = require("../../utils/inline");
-const update_package_json_1 = require("../../utils/package-json/update-package-json");
+// const update_package_json_1 = require("../../utils/package-json/update-package-json");
 const compile_typescript_files_1 = require("../../utils/typescript/compile-typescript-files");
-const watch_for_single_file_changes_1 = require("../../utils/watch-for-single-file-changes");
+// const watch_for_single_file_changes_1 = require("../../utils/watch-for-single-file-changes");
 const lib_1 = require("./lib");
 function createTypeScriptCompilationOptions(normalizedOptions, context) {
     return {
@@ -48,16 +48,16 @@ function tscExecutor(_options, context) {
         }
         const typescriptCompilation = (0, compile_typescript_files_1.compileTypeScriptFiles)(options, tsCompilationOptions, () => tslib_1.__awaiter(this, void 0, void 0, function* () {
             yield assetHandler.processAllAssetsOnce();
-            (0, update_package_json_1.updatePackageJson)(options, context, target, dependencies);
+            // (0, update_package_json_1.updatePackageJson)(options, context, target, dependencies);
             (0, inline_1.postProcessInlinedDependencies)(tsCompilationOptions.outputPath, tsCompilationOptions.projectRoot, inlineProjectGraph);
         }));
         if (options.watch) {
             const disposeWatchAssetChanges = yield tslib_1.__await(assetHandler.watchAndProcessOnAssetChange());
-            const disposePackageJsonChanges = yield tslib_1.__await((0, watch_for_single_file_changes_1.watchForSingleFileChanges)(context.projectName, options.projectRoot, 'package.json', () => (0, update_package_json_1.updatePackageJson)(options, context, target, dependencies)));
+            // const disposePackageJsonChanges = yield tslib_1.__await((0, watch_for_single_file_changes_1.watchForSingleFileChanges)(context.projectName, options.projectRoot, 'package.json', () => (0, update_package_json_1.updatePackageJson)(options, context, target, dependencies)));
             const handleTermination = (exitCode) => tslib_1.__awaiter(this, void 0, void 0, function* () {
                 yield typescriptCompilation.close();
                 disposeWatchAssetChanges();
-                disposePackageJsonChanges();
+                // disposePackageJsonChanges();
                 process.exit(exitCode);
             });
             process.on('SIGINT', () => handleTermination(128 + 2));